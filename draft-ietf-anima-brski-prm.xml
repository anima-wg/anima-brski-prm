<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.4 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-12" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by Registrar-Agent.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the Registrar-Agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the Registrar-Agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The Registrar-Agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The Registrar-Agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the registrar.
The trust assumption between the Registrar-Agent and the registrar is based on the LDevID of the Registrar-Agent, provided by the PKI responsible for the domain.
This allows the Registrar-Agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a Registrar-Agent during the TLS session establishment and also to verify that this Registrar-Agent is authorized to perform the bootstrapping of the distinct pledge.
The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.
Contrary, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the Registrar-Agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the Registrar-Agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from Registrar-Agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-Agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="448" viewBox="0 0 448 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The Registrar-Agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The Registrar-Agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the Registrar-Agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.
Due to the use of the Registrar-Agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the Registrar-Agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the Registrar-Agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref target="?RFC9110, section 7.2"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The Registrar-Agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the Registrar-Agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the Registrar-Agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the Registrar-Agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the Registrar-Agent uses its EE (RegAgt) certificate.
The provisioning of the Registrar-Agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The Registrar-Agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a Registrar-Agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a Registrar-Agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing Registrar-Agent LDevID certificates.
This allows the registrar to detect Registrar-Agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge-voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discovery of specific pledges based on the product-serial-number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge-enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the Registrar-Agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the Registrar-Agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The Registrar-Agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar.
In addition, the Registrar-Agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="164" y="52">Registrar-</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar-|   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the Registrar-Agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the Registrar-Agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the Registrar-Agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the Registrar-Agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-Agent:
  <list style="symbols">
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.</t>
      <t><bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.
In addition, the Registrar-Agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The Registrar-Agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the product-serial-number(s) are not known in advance, the Registrar-Agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (Registrar-Agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="576" viewBox="0 0 576 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 424,104 L 424,336" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 376,32 L 472,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 376,96 L 472,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 352,144 L 416,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 416,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 416,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 376,272 L 416,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 416,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="424,320 412,314.4 412,325.6" fill="black" transform="rotate(0,416,320)"/>
<polygon class="arrowhead" points="424,240 412,234.4 412,245.6" fill="black" transform="rotate(0,416,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="428" y="52">Registrar-</text>
<text x="408" y="68">Agent</text>
<text x="420" y="84">(RegAgt)</text>
<text x="456" y="116">-create</text>
<text x="504" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="112" y="180">trigger</text>
<text x="236" y="180">pledge-voucher-request</text>
<text x="244" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="156" y="212">-agent-signed-data</text>
<text x="180" y="244">pledge-voucher-request</text>
<text x="452" y="244">-store</text>
<text x="496" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="264" y="276">pledge-enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="200" y="324">pledge-enrollment-request</text>
<text x="452" y="324">-store</text>
<text x="504" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                                    +-----------+
| Pledge |                                    | Registrar-|
|        |                                    | Agent     |
|        |                                    | (RegAgt)  |
+--------+                                    +-----------+
    |                                               |-create
    |                                               | agent-signed-data
    |<-- optional establish TLS connection ---------|
    |                                               |
    |<--- trigger pledge-voucher-request -----------|
    |     -agent-provided-proximity-registrar-cert  |
    |     -agent-signed-data                        |
    |                                               |
    |----- pledge-voucher-request ----------------->|-store PVR
    |                                               |
    |<----- trigger pledge-enrollment-request ------|
    |       (empty)                                 |
    |                                               |
    |------ pledge-enrollment-request ------------->|-store (PER)
    |                                               |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The Registrar-Agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The Registrar-Agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher-request:agent-signed-data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request:agent-signed-data"

{
  "ietf-voucher-request:agent-signed-data": {
    "created-on": "2021-04-16T00:00:01.000Z",
    "serial-number": "callee4711"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the Registrar-Agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the Registrar-Agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request:voucher as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the Registrar-Agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the Registrar-Agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher-request:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The Registrar-Agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge-enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The Registrar-Agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge-enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge-enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/></t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-ztp-types),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
{
  "ietf-ztp-types": {
    "p10-csr": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between Registrar-Agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The Registrar-Agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between Registrar-Agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| Agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher-request:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
{
  "ietf-voucher:voucher": {
    "assertion": "agent-proximity",
    "serial-number": "callee4711",
    "nonce": "base64encodedvalue==",
    "created-on": "2022-01-04T00:00:02.000Z",
    "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref target="?I-D.richardson-anima-registrar-considerations, section 1.3.1"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Reg))),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
{
  "ietf-voucher:voucher": {
     "assertion": "agent-proximity",
     "serial-number": "callee4711",
     "nonce": "base64encodedvalue==",
     "created-on": "2022-01-04T00:00:02.000Z",
     "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": BASE64URL(certs),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and Registrar-Agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher-Status Telemetry</name>

<t>After voucher processing the pledge <bcp14>MUST</bcp14> reply with a voucher status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The voucher-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here. 
It <bcp14>SHALL</bcp14> be signed with pledge's IDevID credentials.
BRSKI <xref target="RFC8995"/> section 5.7 specifies the voucher status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
This distinction is intended for better error handling on registrar side, as a status object could be send to a wrong status endpoint.
The following CDDL <xref target="RFC8610"/> defines the pledge voucher-status response structure. 
It is similar as defined in <xref target="?RFC8995, section 5.7"/> with the optional fields set as mandatory as described above.</t>

<figure title="CDDL for pledge-voucher-status response" anchor="v_stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
voucherstatus-post = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.
The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": BASE64URL(pledge-voucher-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Registrar-Agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="exchanges_uc2_3e"><name>Pledge: Enrollment-Status Telemetry</name>

<t>After enrollment processing the pledge <bcp14>MUST</bcp14> reply with a enrollment status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
The enroll-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the enroll-status using its new LDevID credentials as shown in <xref target="estat"/>.
In failure case, the pledge <bcp14>SHALL</bcp14> use its IDevID credentials.
BRSKI <xref target="RFC8995"/> section 5.9.4 specifies the enrollment status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
This distinction is intended for better error handling on registrar side, as a status object could be send to a wrong status endpoint.</t>

<t>The following CDDL <xref target="RFC8610"/> explains enroll-status response structure. 
It is similar as defined in <xref target="?RFC8995, section 5.9.4"/> with the optional fields set to mandatory as described above.</t>

<figure title="CDDL for pledge-enrollment-status response" anchor="e_stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
enrollstatus-post = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": BASE64URL(pledge-enroll-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar-|        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| (RegAgt)  |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses LDevID (RegAgt), may have a list of product-serial-number(s) of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between Registrar-Agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The Registrar-Agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The Registrar-Agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by Registrar-Agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a Registrar-Agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of Registrar-Agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The Registrar-Agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": BASE64URL(status-request),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": BASE64URL(status-response),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved Registrar-Agent, which allows the registrar to verify the Registrar-Agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the Registrar-Agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the Registrar-Agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge-voucher-request     [THISRFC]
 tper               create pledge-enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="19" month="December" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

   This offers the following advantages.  The origin of requests and
   responses can be authenticated independently of message transfer.
   This supports end-to-end authentication (proof of origin) also over
   multiple hops, as well as asynchronous operation of certificate
   enrollment.  This in turn provides architectural flexibility where
   and when to ultimately authenticate and authorize certification
   requests while retaining full-strength integrity and authenticity of
   certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-09"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>




    </references>


<?line 2294?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge-Voucher-Request - PVR (from Pledge to Registrar-Agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar-Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref target="?I-D.irtf-t2trg-taxonomy-manufacturer-anchors, section 4.1"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref target="?RFC9110, section 7.2"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Reworked examples to fit JSON syntax</t>
  <t>Update references to for voucher context to I-D.ietf-anima-rfc8366bis</t>
  <t>Renamed ietf-voucher-request-prm to ietf-voucher to refelct move of YANG module to RFC8366bis</t>
  <t>Updated status response member usage in <xref target="exchanges_uc2_3b"/> and <xref target="exchanges_uc2_3e"/> to always use all field in the BRSKI defined status messages</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an pledge-enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y963YbR5Yu+J9PkU2ftUzaAERSF9s8dWmaosuskiU1SdvT
41XjTgJJMksAEpWZoMyS1Ou8xvybZ5lHmSeZfY3YERkJgLLcZZ9z1NVVBJAZ
99j3/e3hcLjVlu20OMy+PDv/y2n2umxvspfTYnJdZOU8OyuaRTWfFHX2TTUp
sh16aPjy7Jvdrfzysi5u5T38amtSjef5DJqa1PlVOyyL9mqYz8tZPrysm1fl
cFHPhvsHW3ld5IfZi0VR521ZzZssn0+yb/J5fl3Minm79fr6MDt6fvrNUfb9
n7YmeQsNHuwdPNpqWnjwx3xazeGbtl4WW+Wipr+a9mBv74u9g61meTkrmwZa
vbhbwFOnJxdfhe2t63yct4dZ0062FuXhVpa11fgw+/iuaD6GD+NqtsjHrf+i
uZvVxVVjvqjqNvwGhjiv2vKqLCbw5byip9q69M3ky/amqg+3hrDe8OL5KPuq
LosGnuPFPG+Lq6ti7r6tapjPeYnDbbKjP8E3uhPyJfdQFNDDi7athl/nN/Ph
WTm/zp7gJMr27jD7Zjkvxzc0pwn08fHn+589/ILnuJy3NTzxp6Ke5fM7+KqY
5eUUF4XGMbrCcfxrw32NYE3gkWVdHmY3bbtoDh88eP369cj8/EBndjHKvi/q
eVG7qV3cVLO88d/+s6bW0jiGr2kc7zO1k1H2rMj9xE6mZdXqVzSr47IZV9n5
HazizE7jDMbalvApb5oi+8zN4vt8Oi2bYjot5m4qx18PP3+498hO5Rzu6z+K
egqnGL5e3NDd2P700X726FH2+WefZ1/Azdj2M53CkP51jGOh6cnwvxnROPJ6
0lRzN4lv8Ktimh1Hv/IuQY/FFJYxO6+u2tdwrbLvq/pV47uajetPkQT8a6OP
jsa5XVBdT/Pzg61xBRMrL5etuRKwuk/Lv73yq9u8qvQbGsxpdQHvNcspUIjx
3Wg+9aMo4NnRBJ79V9iR6KGhHsMKVrBomuxk/KqoW231q2W7rIvXRWkOSlv8
67gZXeXL0aRw73+Tt+1NCQf5L9Vt3jZ0+OQFWoBX8vVoXrRbt8V8WSBpua6r
5UIoE550JJQZv/WGPvwrvjyCobzDp4EuLy8P+bHh6+sHEWHdmldwqNvylto+
++r4yWdPDvyfD+XPz/Ye7umfj/cfy5+f7z3Sbz9/+OSJ/vlkf8//6Z794gv9
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
LDC4GSDccIPfY3t/ofa+PTtttj0T86Nx1YjUvo2PxtFBT03ie/rfmUaOb2Xt
4raOfmVHVF/hEvz3w8XXp+dwZv6K7xer3w/sGtKEeb/pdB+VHPPWEP/Pvt/p
flVprv+fvXddblTb0kT/+ykcq370yorMLECWM72iu06nJEDCBllcJoLOjhUI
SCMBEpawdamo1+oXOC92vjFBCPmSK3ftOh3R5+yK2pHLNkzmHHOMb3xjzMt4
4/0wCN9+/yWak5FWwN9+/7HYvPx+tU3zGChWDvP8/1rvn5WOP/t+XZv+BAZv
vn9eHJn/tVk5evOCwM3Z+w2ZfnfLF/TJsJrT9UaQU71LruZJ4yWJVr7Q1OOe
3SW9QGj9z+0m/vjnf77ku7I+VWL6r7P1v+IRm05Y8lrU9/UNc79vPtCzZVjU
j3zbcLznLYxkS738r4huH/47ub7Pq/XDv9aP9at9T3/xVMtS6EkiFOdHmc04
p3MFFu1Djy9v4z0I9dltdvft7jdmRY21ZPxPGM78OQj3L+CInyuu18s/nnZR
hfvmPGcNW+dnDDhs7l/s9KC7zD5fKM2VElU7Ab/KeNPsID47KkotcD9aecOq
2k6bdLd8MzmX1ZJw8gXU4/UmT5XRTtPqmCyfxCzYx61N/H+985CIzGtvf0wE
btoOqBbCX1aJ+/UKnC+ra1RnbesYpvZULef6Ol1IuzboL9SnukOntZrWCtFx
f8pbXWpfiMoZzYuTBDXRNcZ2k0QNltWl1S8zXHw8Vff57hjulajX1R1llCIl
/rV8e8f/ZhXOT8m044Dnm+M92PXBplbVp19v6S/381eN1wt2wfNqHlHfn+Mg
O8uL0p15x71vb0mAxni6M6S6dd36dpyQd9XkGAvX2vEq9G7v4ObFcvmCNY+X
3pD55qm6042udZ5v6EYAwg1eGW6wyuLnT16wugxKoFVKxcsgi99WBWVcNpQG
XM2q8wu/ffi3f1sti6BMiN4MXt4S30Q37X18dYTc0ujzfHXdHR5LVSBwWgd7
6yDaGzdCH6uYHXOfR23lRK2qzhfwqsTHLOerG3QuL1+dW6hmuj6v/uK0fKUZ
tEPyPNw47tavODsU4oRkFZuvx8TD30rZVuvqCupTpDKn847P8/VqmfNMxOXl
t81fQMpf6EqdZF6T5h6O6rIFzeQBL7Q5re+Yb4+/yuHHwWZe3TEfB8/xJlqv
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
WGqJbY+u/Gz7zM+KK7diIgZDtjUQbscIuKGBxiwVBye4ff8ccDyE/FQABEG6
pSs9kAl8+0QqoMPK89mxMn4nhryFKzVMxgaWk4xvO6w3o8WoLGJJForb59id
7CJRF/RsJZhKcmvIRam78to/GF4gFkt/kTiBunuaIBqdTHsssv2Dv8wWJiUt
nuMBwqAsKf15eTcehkI48A9OFu2DXN45TNu69re9sZjsLCW9aVx3Y6FsyZ3b
KxudpO8cS3zfQv836+5PLZSfQ35lo79sofUoYdO/iEQ/GyVa+UUk+tkoQcHf
QaL3bgB46/w/ues0e5p0GC10HXzJGBsH5Rl6cNAdf0g2hqB4abPecyCIWz/T
9/h7CFLZtVwD/4Jo0+0ahpkmAy9nkrUAy7QfdmObjT1W3NmZ8Wwp3w6wGz2e
sn4wSCQdkh6zQgwyzZmkJpx01pBnhp5p4V0nMuEVgET8LhkKKJSX5B19wyxQ
6IjQ8nRzDcJq2KTJBK3vTIureBltnWVPj4Ef77nsN2gpkUQ6jFgfRfRVbeRI
ouS5N4/BoFf4bhkgwBmzQ2Lq6s6eqSPxVjAxWshG6N554qgTuTsExJEaab5k
buOFP3dSb2/Kfhmq2e0MBF9Poy7L5SuPRWkk7UahAPRike8JqeDI0a2Xh3QU
sboZZuO/eRTx7CDi9Zeys/x62CPQuxrp0i1ilT+dZ1lMDsWXm6uJYtiP6qfh
wV73JqV89efVp72FGGyvRJ30/trrLztdz9O+7G873aizKferP/er+f2P22/v
HkRszqD9ylnEvzhA+EvHEU9v1lUPq1OHdPSNjsFVxx0/8qsXz6tj/W0Xor2q
z/jGV/76I792GO/y3TNz9WCrc3M34vX/+8fm3jox97MTcsfzcd8v/p5L0Y5X
on2/+HsuRTteifb94nQp2uLhyTiMJJ6zWvaKWV5dqjSTxCRwr15ce6Zt6az2
hLES7plizebis3DrOzvR6pfti89+5dqz7xd/dfHZr1x7dua8knsmy6INR0Fx
pm0bRpwWlfNybpyJTccgGOWZDF0Qr/m1Zwqja88A9X9x8dnPrz07j57p3He+
q67rSk3zbzxTj7jXlkopEM1RZCfmTJkc4EBudbqDyg7XrGOMbGm0ZQytC4oe
ySFiGXYHWvUYuOxKH3jPDl054Rusdxu4muQLiTOZl+qdqDhBHmUzORnGIKlW
p9eh3JvXMezYVR6dzOybsti3qmg75WtxymROZ9MzA04csvGuJgKcwDSS/ZoA
OjIc+9vu5uhsKJJXQWUd8dpxzYPZv3m825dLt/8V39duYUujOzEpQSzeyH1G
YyulK8jQl15AUfkQbmVfarYc9R05ExzpQfAW2dRVE89eslXIjImRPqy9+Y0+
2d/kLMvkIJOlGb84xqRc+ZJZEwFx/VI+xG7SN+zEccE3vGUxGvfL+5maTNnU
v58pmqyLvhI6ZuqJSocujvmPx3l5eU0skqnZWZwHZtMPUmPtvh/n/S2XW8ic
E/69l1vQNQ50uQXdDki3Bd5zs8lMTZdFdSaSofL0jkJmBWUY4+etzbdQm9em
swMUlE2KmDgyCH0KM8nMY0qPm5kps7M+OPaoGyPOMac9mKBxTLYCbiIpOl5W
Ub9hznWhAAz5QZSbUwT1iLGyJaVrZ7nGr8uIHU0H16ejK86EYUR9MLgmSWhV
N/U1P9PNfWC8g4mj2JODPweo9WYu2+nM7xh5ZoaZdhjTEaatm4VrQx0B5qKu
r4rT8KANIVGVdaJ5APeg513NlR8OdkcZWaIvjof63ln6BVR4HECtLLqfrG/J
iTDJzcJMWeAu/bkh3VwRV/6L2wLbiZDvF2/eAWPZ5sR1tatoaBzALvdo6Qp8
UIgz9uyA6Tkdo+vL2wOiSkihCxOPVGM8dhHXKcmkipt8zVsYz7eCf68LmgMX
pJtLI7GywsLMpkanuI+mxhNaDe9E8FgJc6RYknaAyRcMZjK14Irc3ZKcmsnA
i21v/mPyFi0T7F43W38KN+LiMQ2kZ2M2yTuznuf+uNOir4eI3Y5WrNuJV5L3
YI3s5e2t9/3Cfh7qzlbY7m620f7JYAtj9e3hbr8xRg/ycxZmZe/9+yEaNlax
l7fp2Csq1XCc/xAT+1jRo/lm8xRHDXWpCricSvCd+NKpGsL/+RTu/WsP2hSu
Iwj/f6BwjqPNram+M2ztAFR+ZofIipmiu7Lx7B/+isKlJb/BDBROv9YPISic
96QfHvb/oHD/oHD/oHD/oHD/oHD/oHD/qRQuGmZbcmonFyk+Rh19HSwNck1v
pd6+X7zF8qzk0f36pJjp07fp6LD4lvSuZqtM15dR6H1RvcfO7Wx1c7V/VstF
P9jJ084QornGIBxb1v5Mn7KJqH4ZLAPnav4wuI8ctQzZzV26/e3fP/7SGpv5
yDP47rnhukra0XNt7qbvGm7lW37Vs5CCvu9b3vEsSlZ5t+ZedhhL62Z2NTr0
ritDpa0xUMDUEeAfb+lCF2OYKHGqWEePOxPEAW1bcWjh26WtzoYLHyuIV4CC
ni23Fr5Tfxyq5pBNkyEUdnpswUaruqJJXhapMNPvFxsr37XvE6cN/dU1d8vs
yBPAI1ibN0Ch2Whi97QJTBL9+X4hWXRpXnVv+6tb2+nKufCgpI7CCjdNjEi9
WTuSubPEUPTz7jQUtPS2o9Ctq4No6uR+7rNoHbtR5uU3t36abQAWe09K98Y0
egpUgF1qDIMcnGXBjttPqiv56BZwY5Ip1aV8pyv5+txrYY5M/ExrbXQbqi0c
l6sT7jfNSiv6BuXAO/Dc9dqW1kfDHWdgar5qlCzvJrTe50miGjs7r2I5ishv
21a1KVuyBXx34cv69wuR7op1BGM0S5vb8au78W15y+9dlruFMYWmib4A2BLj
dDe1Fj19ZrON39oS8/KywIzy8yrl52N1l07yJAjpXtkFu7UH2iTMogGM2zby
RHZZuIsdaN095sHypmweyjoYlqLB92sB+JwjFHNf2D35UjL3YDu6ai7g9BjL
AR785vYe/i06MW0XDXTF2Oj5gxDLmYe5/48ACfTlnSy+cbWasquv7Pop3wz1
2zSJLCvXPKVks+vgYTHoSE/TYpSpu+tHJn8ZJMKnGTA2Mc39Yrkrvgoj9qey
F81v4+lodNh0Jl/7S/2h9/Dwq+Gii5gNYZCFLv2tkePHXwn43g0v/+lyaNv3
n6gs2ycqzVfX8qKaLj8rl94UQK8uAUzKsqjLsBxLJJ03+9el10/X/815JVNe
9CrYVPXF6oHlMZXknm/yzxcX98fyMc2Vemm8/xQ8rOOq2lJ9j97TMorX2Z5C
OurHsQZTq4L48fY9KnZDj57X0azuPqzHVLdA36X6NfPnINw31XTq4LdViZb3
4w2BtmrZHmvuvCogSpJsOkIVmeoCWq0y3C8+NK+qvEVxQXWJ8Iunoq5829Qt
q9ugYZzG//kn01a3meNTQVOReU6FpsIn/tGqhuup/mBVmmrzx8WF+Pny28ty
og9VTF9XkeZVSDFNq3UU8wsVoxV17fPlpcsLPJdVyTwqZ8erJFHZMF6/tjVB
VRG6MHviErm3bj82Fafkb/dQmDJZRXWNv2B7WTzNsnlImvKxKknPK2ZdJnFW
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
43NXZ18T8bV6OoAGK6sOGYujwP7t30CJ/4Q0N5+i1eYc0IRWR5sS8tSZOhd3
zGFSTFcTzZpgNl07t92mZenjkTbMszpH92a0fTbxq2VLEEGVLmgU+Q1BiOff
xDz3m8cr90pBE4KSNVHU51Mys/ok11w0un5ef6Jhnbd2RQZegViD6cV8SW41
At7Pz0PBiGLdgLfI99fc3HTbyv2q69Kfzy++1z36PcwE0OQBsTRFJhjPpvp4
k4mlwulV6rXyJw/ln8V69zZpOPsGuQ6eKI+jOv9by4gDNi/xXo2sTNarpwce
PfMIpc6LEobypiNyMKQCPDd6nLG2PDia3XGm+zsQ9dtD+YFXa5cvmx/PkoZ/
8cHLXXdG7+Of4OGN4uc3nWuBD/WpJl2cMjY8EnDZXhe57H2z5Osrx7z7nfZh
Wce/fHgDa7++wFrhpo21X4WW8b0JRFVWpFbjsNHzqljOWwbR1Ksn7dnUisfB
rvVZsfXZIxlokh6AlZKSSPM6HuKW9GdVaOdPiCdoNSS1EKBZkDguKdShdE1m
yFM9LY9jADilv7L+UXuds07C5OLHT0B18qJvMd0zw/7aOZPxvWw2O/HeIcoQ
fbw+in65qpLS6/jTieq1Wv/S9pZNqHPukN5OZb6JSK2Wv7Za/nha0OEV6zl0
Pq/X9QgwqOp3L0ZH2UZy2MHReb/MPn2+HP2o8jvVU6QPZRXiz1qR23EIjbG2
/bD4iuK33DnlRNpZNepRkG14iHpMbdaLR9XojiN5c0o4SdxUSS2gHTpMVhzz
6JRy0bxLm4Zo0Ixwku6qd/3L3yvB1CFybURog/tJnqQm9I1p/UCsd2DSf0sf
6txU7bO40yV/iDdoGlv+ctOSivTHZUohcCMJBOfFal5nMRqmYJnnbuv1wLfh
GR+5ufqjLe4TS778HeR/Q0mi583ny9Wsms4PrTe77Tcba63zCeechaKdVwr7
irec9ev6jwY9Ww/+mD8cn60S7jxzSP+5oEwmub2fsKVW81/+aAhzZVlVDm8Z
nIjKq97VmUbSOahbPt9kICHnzd78cYS7l+yO/BotwEStDcL49dGNvv3FNo0T
2uEeOBGnEMdNwfz1ZyJNlMNsvSW23jqxuB9vh/lNagGSyeOSs/QT7lCGtcow
/azWXDW57S5AdSlE2nEja7JvVc6/nqzN30xqu38pjbiWRuulL62Xjs9SL9r6
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
qlkEFXGflF1rslzWoBaPbuKP7GDJq9sXXp0aq4OQXQ4Mg8FAN5Rq5qTfJ/vp
7z23vFWBpFvi42tOqwi+sepw5nxlrPU7ruxWRFw5PMXR390tA4+YKGVDiVOS
gAa2wJTIBeMEJaYhssGXQgx6bXqsNEwc+F1UAxj8jvUdyPpM9aYYXCBYRI3o
e3l08tGsfviereVcZLgf2NTok3Di59W6Xn2ZMWfZcs0p2g8qOW4JXZi+9yJ8
bFNOrjLbrMSrlwfkw7gGIV08mgtX+zEtNQRRSgbi/kEh6gZIemlxr6KT0Pxi
w124KJS2rsQuiGdWMmBJCwPjmn75VrsqHcoDB2+8vB/HH457n+8yxP+A6zhw
cca8QX8xbeIh6z2thfIz+4YSEjnIQeNlfMDZvDE+XCRCDUi8b5IKwg4zYdoF
DdhhK8DLr47fHp1sH+xjeQ08IBlqFzN/NZs2nTIhLFvO7/KVdHO66TTl8NLM
Ul8eDZFpgizluquXXfFOQhig64MZGvPsd18OUh5TRqRSP3V208zP5QNgz0ff
yeq/VCBu1p3lye2apjlt2pnntjMmZLmi2KQPEI9yg3P3osqLLZPKV5JfYo71
gaoa1Nr206DZypsAJvW/1svR+nY56zTbQzOU58h1qNBCiavm2vZiRP9MlYMe
b8h2qWIxld9a0kBX5M7Qh1+kMOKcXaPbEB+KaRDADqdNi+I5b6QqZrzVA1dS
SXad81hQhif/qXbDGAqrEZd18jC/NpyGfZQFTR95sAUBvc8fH3/8/HHL4Rep
h3Y1Er5OzxJZhYHHBwsgTn9JW+myP/T+gJ7BilEXIfB5+Cm2nd3NGaF8CeSy
3k/EFvos8hrYAVlbSMV1GgpdeoFz66p27MbbFPu8uW7WWeas2jFPfE4HLfbR
gwxcLlFfQYhulmMr4+YuXvzHKD3tkXcUABhDZrfaMYOzL0rqpfHsILJOnEPQ
IpAIEuc/MoKRjKTpBJEb+xee7GZoJeVXUm6l5FYKmXu2XsNeRY8/Q1BOnpSy
KcVJNNXpFUYod0GUB4O7dycAI90lb9g9VokUKlt+zz6LC7lVDfFGJsbDWmvp
d5oW6P30O397zgVrWM3rDTntH14czSdTfymtQNcKaYSHrJJGKdb5H6ySBWGx
CVumpVtGIpspwqscqiV7uFrVtxK25SyQBA/NjVZFzbcwixumO4jMN2wPiSG/
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
/zdqxv8NJL442prbAgA=

-->

</rfc>

