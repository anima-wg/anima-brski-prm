<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain. 
This document refers to the approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of credentials different from the pledge's IDevID for the registrar-agent when establishing a TLS connection to the domain registrar.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Extended Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additionally wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required. 
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and or network technologies).
For this document the usage of HTTP is targeted as in BRSKI.
Alternatives may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
This transport independence is enabled by the independence of the exchanged data objects from a specific transport security.
These transport means may differ from, and are independent from, the ones used between the registrar-agent and the registrar.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied in the data exchange between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included into the "agent-provided-proximity-registrar-certificate" leaf of the PVR.
This enables the registrar to verify that it is the target registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection establishment with the domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the product-serial-number in the body, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data of the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVRs contains the assertion of "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR (prior-signed-voucher-request) in the "agent-provided-proximity-registrar-certificate" leaf and may assert in the voucher "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can provide the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" component of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher can then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 48,104 L 48,208" fill="none" stroke="black"/>
<path d="M 48,256 L 48,320" fill="none" stroke="black"/>
<path d="M 48,384 L 48,576" fill="none" stroke="black"/>
<path d="M 48,624 L 48,688" fill="none" stroke="black"/>
<path d="M 48,720 L 48,736" fill="none" stroke="black"/>
<path d="M 48,800 L 48,864" fill="none" stroke="black"/>
<path d="M 48,928 L 48,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,576" fill="none" stroke="black"/>
<path d="M 168,624 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 200,32 L 200,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 320,104 L 320,208" fill="none" stroke="black"/>
<path d="M 320,256 L 320,320" fill="none" stroke="black"/>
<path d="M 320,496 L 320,576" fill="none" stroke="black"/>
<path d="M 320,624 L 320,688" fill="none" stroke="black"/>
<path d="M 320,720 L 320,736" fill="none" stroke="black"/>
<path d="M 320,800 L 320,864" fill="none" stroke="black"/>
<path d="M 320,928 L 320,976" fill="none" stroke="black"/>
<path d="M 320,1008 L 320,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 368,32 L 368,96" fill="none" stroke="black"/>
<path d="M 440,32 L 440,208" fill="none" stroke="black"/>
<path d="M 440,256 L 440,320" fill="none" stroke="black"/>
<path d="M 440,384 L 440,480" fill="none" stroke="black"/>
<path d="M 440,560 L 440,576" fill="none" stroke="black"/>
<path d="M 440,624 L 440,688" fill="none" stroke="black"/>
<path d="M 440,720 L 440,736" fill="none" stroke="black"/>
<path d="M 440,800 L 440,864" fill="none" stroke="black"/>
<path d="M 440,928 L 440,944" fill="none" stroke="black"/>
<path d="M 440,1008 L 440,1040" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 544,104 L 544,208" fill="none" stroke="black"/>
<path d="M 544,256 L 544,320" fill="none" stroke="black"/>
<path d="M 544,384 L 544,496" fill="none" stroke="black"/>
<path d="M 544,544 L 544,576" fill="none" stroke="black"/>
<path d="M 544,624 L 544,688" fill="none" stroke="black"/>
<path d="M 544,720 L 544,736" fill="none" stroke="black"/>
<path d="M 544,800 L 544,864" fill="none" stroke="black"/>
<path d="M 544,928 L 544,976" fill="none" stroke="black"/>
<path d="M 544,1008 L 544,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 104,32 L 200,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 368,32 L 440,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 104,96 L 200,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 368,96 L 440,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 56,176 L 160,176" fill="none" stroke="black"/>
<path d="M 56,192 L 160,192" fill="none" stroke="black"/>
<path d="M 176,384 L 224,384" fill="none" stroke="black"/>
<path d="M 272,384 L 312,384" fill="none" stroke="black"/>
<path d="M 296,432 L 312,432" fill="none" stroke="black"/>
<path d="M 328,496 L 376,496" fill="none" stroke="black"/>
<path d="M 488,496 L 536,496" fill="none" stroke="black"/>
<path d="M 328,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 536,544" fill="none" stroke="black"/>
<path d="M 176,560 L 208,560" fill="none" stroke="black"/>
<path d="M 288,560 L 312,560" fill="none" stroke="black"/>
<path d="M 288,624 L 312,624" fill="none" stroke="black"/>
<path d="M 416,640 L 432,640" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 296,720 L 312,720" fill="none" stroke="black"/>
<path d="M 56,800 L 72,800" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 56,832 L 72,832" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 312,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 312,944" fill="none" stroke="black"/>
<path d="M 328,960 L 344,960" fill="none" stroke="black"/>
<path d="M 328,976 L 360,976" fill="none" stroke="black"/>
<path d="M 512,976 L 536,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 312,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="544,496 532,490.4 532,501.6" fill="black" transform="rotate(0,536,496)"/>
<polygon class="arrowhead" points="440,640 428,634.4 428,645.6" fill="black" transform="rotate(0,432,640)"/>
<polygon class="arrowhead" points="336,976 324,970.4 324,981.6" fill="black" transform="rotate(180,328,976)"/>
<polygon class="arrowhead" points="336,544 324,538.4 324,549.6" fill="black" transform="rotate(180,328,544)"/>
<polygon class="arrowhead" points="320,1024 308,1018.4 308,1029.6" fill="black" transform="rotate(0,312,1024)"/>
<polygon class="arrowhead" points="320,944 308,938.4 308,949.6" fill="black" transform="rotate(0,312,944)"/>
<polygon class="arrowhead" points="320,928 308,922.4 308,933.6" fill="black" transform="rotate(0,312,928)"/>
<polygon class="arrowhead" points="320,720 308,714.4 308,725.6" fill="black" transform="rotate(0,312,720)"/>
<polygon class="arrowhead" points="320,624 308,618.4 308,629.6" fill="black" transform="rotate(0,312,624)"/>
<polygon class="arrowhead" points="320,432 308,426.4 308,437.6" fill="black" transform="rotate(0,312,432)"/>
<polygon class="arrowhead" points="320,384 308,378.4 308,389.6" fill="black" transform="rotate(0,312,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="64,832 52,826.4 52,837.6" fill="black" transform="rotate(180,56,832)"/>
<polygon class="arrowhead" points="64,800 52,794.4 52,805.6" fill="black" transform="rotate(180,56,800)"/>
<polygon class="arrowhead" points="64,176 52,170.4 52,181.6" fill="black" transform="rotate(180,56,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="152" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="404" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="136" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="388" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="148" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="500" y="116">Internet</text>
<text x="108" y="132">discover</text>
<text x="108" y="148">pledge</text>
<text x="76" y="164">mDNS</text>
<text x="120" y="164">query</text>
<text x="72" y="244">trigger</text>
<text x="120" y="244">PVR</text>
<text x="152" y="244">and</text>
<text x="184" y="244">PER</text>
<text x="244" y="244">generation</text>
<text x="60" y="260">&lt;-</text>
<text x="108" y="260">vTrigger</text>
<text x="156" y="260">--</text>
<text x="108" y="276">-Voucher-Req-&gt;</text>
<text x="60" y="308">&lt;-</text>
<text x="108" y="308">eTrigger</text>
<text x="156" y="308">--</text>
<text x="56" y="324">-</text>
<text x="116" y="324">Enroll-Req-&gt;</text>
<text x="48" y="340">~</text>
<text x="168" y="340">~</text>
<text x="320" y="340">~</text>
<text x="440" y="340">~</text>
<text x="544" y="340">~</text>
<text x="72" y="372">provide</text>
<text x="120" y="372">PVR</text>
<text x="148" y="372">to</text>
<text x="220" y="372">infrastructure</text>
<text x="248" y="388">TLS</text>
<text x="320" y="388">|</text>
<text x="284" y="404">[Reg-Agt</text>
<text x="376" y="404">authenticated</text>
<text x="272" y="420">and</text>
<text x="340" y="420">authorized?]</text>
<text x="180" y="436">--</text>
<text x="240" y="436">Voucher-Req</text>
<text x="320" y="436">|</text>
<text x="284" y="452">[Reg-Agt</text>
<text x="372" y="452">authorized?]</text>
<text x="280" y="468">[accept</text>
<text x="348" y="468">device?]</text>
<text x="284" y="484">[contact</text>
<text x="352" y="484">vendor]</text>
<text x="432" y="500">Voucher-Req</text>
<text x="444" y="516">[extract</text>
<text x="520" y="516">DomainID]</text>
<text x="440" y="532">[update</text>
<text x="496" y="532">audit</text>
<text x="540" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="248" y="564">Voucher</text>
<text x="72" y="612">provide</text>
<text x="120" y="612">PER</text>
<text x="148" y="612">to</text>
<text x="220" y="612">infrastructure</text>
<text x="180" y="628">--</text>
<text x="236" y="628">Enroll-Req</text>
<text x="328" y="644">-</text>
<text x="372" y="644">Cert-Req</text>
<text x="380" y="660">&lt;-Certificate-</text>
<text x="248" y="676">Enroll-Resp</text>
<text x="308" y="676">--</text>
<text x="64" y="708">query</text>
<text x="120" y="708">cACerts</text>
<text x="172" y="708">from</text>
<text x="252" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="240" y="724">cACerts-Req</text>
<text x="180" y="740">&lt;-</text>
<text x="244" y="740">cACerts-Resp</text>
<text x="308" y="740">--</text>
<text x="48" y="756">~</text>
<text x="168" y="756">~</text>
<text x="320" y="756">~</text>
<text x="440" y="756">~</text>
<text x="544" y="756">~</text>
<text x="72" y="788">provide</text>
<text x="136" y="788">voucher</text>
<text x="184" y="788">and</text>
<text x="248" y="788">certificate</text>
<text x="312" y="788">and</text>
<text x="360" y="788">collect</text>
<text x="420" y="788">status</text>
<text x="468" y="788">info</text>
<text x="112" y="804">Voucher</text>
<text x="156" y="804">--</text>
<text x="60" y="820">--</text>
<text x="104" y="820">vStatus</text>
<text x="112" y="836">cACerts</text>
<text x="156" y="836">--</text>
<text x="108" y="852">&lt;-Enroll-Resp-</text>
<text x="60" y="868">--</text>
<text x="104" y="868">eStatus</text>
<text x="48" y="884">~</text>
<text x="168" y="884">~</text>
<text x="320" y="884">~</text>
<text x="440" y="884">~</text>
<text x="544" y="884">~</text>
<text x="72" y="916">provide</text>
<text x="136" y="916">voucher</text>
<text x="196" y="916">status</text>
<text x="240" y="916">and</text>
<text x="284" y="916">enroll</text>
<text x="340" y="916">status</text>
<text x="380" y="916">to</text>
<text x="432" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="368" y="964">req</text>
<text x="412" y="964">device</text>
<text x="464" y="964">audit</text>
<text x="504" y="964">log</text>
<text x="532" y="964">-&gt;</text>
<text x="396" y="980">device</text>
<text x="448" y="980">audit</text>
<text x="488" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="248" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+  +-----------+    +-----------+   +--------+   +---------+
| Pledge |  | Registrar |    | Domain    |   | Domain |   | Vendor  |
|        |  | Agent     |    | Registrar |   | CA     |   | Service |
|        |  | (RegAgt)  |    |  (JRC)    |   |        |   | (MASA)  |
+--------+  +-----------+    +-----------+   +--------+   +---------+
     |              |                  |              |   Internet |
     |   discover   |                  |              |            |
     |    pledge    |                  |              |            |
     | mDNS query   |                  |              |            |
     |<-------------|                  |              |            |
     |------------->|                  |              |            |
     |              |                  |              |            |

     trigger PVR and PER generation
     |<- vTrigger --|                  |              |            |
     |-Voucher-Req->|                  |              |            |
     |              |                  |              |            |
     |<- eTrigger --|                  |              |            |
     |- Enroll-Req->|                  |              |            |
     ~              ~                  ~              ~            ~

     provide PVR to infrastructure
     |              |<------ TLS ----->|              |            |
     |              |          [Reg-Agt authenticated |            |
     |              |           and authorized?]      |            |
     |              |-- Voucher-Req -->|              |            |
     |              |          [Reg-Agt authorized?]  |            |
     |              |          [accept device?]       |            |
     |              |          [contact vendor]       |            |
     |              |                  |------- Voucher-Req ------>|
     |              |                  |           [extract DomainID]
     |              |                  |           [update audit log]
     |              |                  |<-------- Voucher ---------|
     |              |<---- Voucher ----|              |            |
     |              |                  |              |            |

     provide PER to infrastructure
     |              |-- Enroll-Req --->|              |            |
     |              |                  |- Cert-Req -->|            |
     |              |                  |<-Certificate-|            |
     |              |<-- Enroll-Resp --|              |            |
     |              |                  |              |            |
     query cACerts from infrastructure
     |              |-- cACerts-Req -->|              |            |
     |              |<- cACerts-Resp --|              |            |
     ~              ~                  ~              ~            ~

     provide voucher and certificate and collect status info
     |<-- Voucher --|                  |              |            |
     |-- vStatus -->|                  |              |            |
     |<-- cACerts --|                  |              |            |
     |<-Enroll-Resp-|                  |              |            |
     |-- eStatus -->|                  |              |            |
     ~              ~                  ~              ~            ~
         
     provide voucher status and enroll status to registrar
     |              |<------ TLS ----->|              |            |
     |              |----  vStatus --->|              |            |
     |              |                  |--- req device audit log ->|
     |              |                  |<---- device audit log ----|
     |              |           [verify audit log]
     |              |                  |              |            |
     |              |----  eStatus --->|              |            |
     |              |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA.</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_4"/> describes the status handling addresses the exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and an own LDevID(RegAgt) credential for the registrar domain.
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have a synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and an own registrar EE credential.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note that the registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="voucher-request-trigger-and-response"><name>Voucher Request trigger and response</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-voucher-request".</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Three parameters are provided in the JSON document that is posted:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JWS-object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, as it can only verify it once it has received the voucher.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It can be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JOSE object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an ietf-voucher-request-prm:agent-signed-data element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in general JWS serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data" 
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error status code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation 
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="enrollment-request-trigger-and-response"><name>Enrollment Request trigger and response</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-enrollment-request".</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type: "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note that the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge is already implementing an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note also that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credential to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx status code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for its operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-ztp-types" representation in JSON syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible, allowing a bulk bootstrapping of multiple pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Processing by the Registrar-Agent</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or multiple PVR and PER.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and an it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only a necessary precondition if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope of this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and infrastructure bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection with the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation 
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in 
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. 
This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as is transferred in the PVR in the agent-provided-proximity-registrar-cert component. Figure <xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in 
  general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in 
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in 
  general JWS serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Response and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<t>After verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS 
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON 
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in general JWS serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in 
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry status handling (registrar-agent - domain registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
<section anchor="exchanges_uc2_5"><name>Request pledge status</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in general JWS serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge. 
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain. 
The information about this is provided here as a feature to support the comissioning of devices. 
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization></organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1obV7Yv+r+eojbZ32dIJBnwJTEr6W4MOMFtAwFs59J9
sgqpgAqSSquqBCax97OcZzlPdsZtzjnmrFmSsJ3V6b03X3cMUtW8z3Efv9Hr
9Tp1Xo+yreTp8cnf95ObvL5MjkbZ8CJL8klynFXTYjLMyuRlMcySVXqod3T8
cq2Tnp2V2bW8hx91hsVgko6hqWGZnte9PKvPe+kkH6e9s7K6ynvTctxbf9RJ
yyzdSg6nWZnWeTGpknQyTF6mk/QiG2eTunNzsZVsH+y/3E7efNsZpjU0uLm+
udmpanjwl3RUTOCTupxlnXxa0m9Vvbm+/mR9szNI662kqoedab7VSZK6GGwl
926z6h78MSjG03RQuw+q23GZnVfqg6Ks/U+gg0lR5+d5NoQPJwU9VZe5ayad
1ZdFudXpwWrBiyf95FmZZxU8x0txUmfn59nEflqUMLuTHGdaJdvfwidmHeVD
7iHLoIfDui5636WXk95xPrlIHuMk8vp2K3k5m+SDS5rTEPq499XGlw+e8Bxn
k7qEJ77NynE6uYWPsnGaj3BRaBz9cxzH3yruqw9rAo/MynwruazrabV1//7N
zU1ffX3fzOy0n7zJyklW2qmdXhbjtHKf/qumVtM4ejc0jg+Z2l4/eZGlbmJ7
o7yozUc0q528GhTJyS2s4lhP4xjGWufwV1pVWfKlncWbdDTKq2w0yiZ2Kjvf
9b56sP5QT+UEbttvWTmCcw0fTy/pZK988XAjefgw+erLr5IncK5X3ExHMKS/
DXAsND0Z/ss+jSMth1UxsZN4iR9lo2Qn+JZ3CXrMRrCMyUlxXt/AjUzeFOVV
5boaD8ov8AL/rTKP9gepXlCznurr+51BARPLz2Y1Xgm7nNVVkezmv1651jP4
qD+Ej/4GKw0vVbMRXO7BbX8y6lxnk1mGb1+UxWwqpAAPE1KShN//nf74Gw6w
DxN6j08D4ZqdbfFjvZuL+wHl6UwKODd1fk1tHz/bebT51br8+vjLx5vu1wfy
65frD8wDXz7aeCS/frX+0Hz61YPHj82vjzfsp0+e0LP7vd2+IoG/3lS962I2
uMxK79tJhgtw3qt+q6e9QVVGXi3PB9jVWV5tdfLJeTCPzSdfmVE83ny4YUa8
+WjTDtON+OH6l+bXL5+YB56s22efbNh5PNl88FVkMLygKfW+v7e31/tqfbO/
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
0AcUnUroygzsN3QL5yXQ+O19oW3ul4jSlBlZUtYIbVF5I2i4I1jRMTG6iukm
9pSyQxY/3uve3Ll986rdEx78tNTXD8+dVbpNvn5Y3z8NC1P7vc8/fPE/ay8P
1t12zh97Y2Px+0Hvl3eTl0XXf+LhZrpI58+glPvQ+s0/blJzMPhcPc0f/7F4
THbjua2Pm2t7rwrCNCnBOkXXJASbfODn+Re1unR95eyPcoffvXX2MvcYr5PV
nHL3503k3z6MnRKR509tV2qneZOApBs9KCfcPEydUVM52c+rVXpxdxNljWO6
LnG6WuWz9ON7Km17taSzbZ92fkb8qnzAaSXpZ/Tyl+bpWbx5l9SbKZtyyq/P
+J/OUi7VZjv14fPd/a8//f7nn+o2/vRL/UVVq3fXbMv+vFrv4nVznGDbHM/8
pobMdTL2/Ohv+sGoH+ck7XVDLt7wJ9Oz1yWf2517Kp/crJVvqPPt3Z/NNdEY
k59+dL3f/9u877+a84WXt1nffyPn++ldm/Ut8mgSVdFAr6YdT0cb6KmDsVKh
t30hon7KtWPg/94LBtsgDiJEWO8JMZkng0/vNi/jZbaaHhWjf06M3iLyKRMs
XsAe9Ufd6cSL8Toy9QdPc9iDLr6m9vT2id687B9ieXt4nKBHbUbJSDpiEdsC
v3WK6UQU086Y2lPMeNWRAtrIgOq4zoXYU6sQCZDY8oQW7dyisiPzdu5O+hHX
Mz8uHSkXjLJOk0jqPuVrIruaC9M8yHy6A5uRcQfstZN9DUF9xRpPoMxVxjTo
ZFvv4gnQR2kU5/kuFLw3tbxtbFteYq32MhfezB4fgiV7EpazgkK3U8S5yoqH
TiYmmcmNHr6VWtNhOhHl+BiZ6UMqomdeqMyXzvV0l5aWcLnwpb0fRXJvzSy2
ndp4ygislDd5Jy4WDmW+nsJcbKZQX9Br4EF7U8pqJEq2EUsR+2b0xAPPnxaR
LZaR54JFREdeZA9CD49gDJOkBDfR8QS0OrEqD2zmKPRoxQ3HnprMk1ZVhYJG
wZtMzSp376w9V2nEoHCG0B+QTM4jiB3lzrjMb31muAdh731ZEqsSEznsh3jC
ZoYnuDydJ/g5KNggEMSu/IXASPayEHMFJbNNTX3C+EqnXiSGN/SLbI74uhGT
Cho43UT2dqFmQvY2skit5A5RZiLMahKJ1IemRRuqbJZHjyKwpI+4z5YOj3XH
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
Cv29sgb0oroIlbp/+89fGN2+pEfvGBRxczn4dbnBc+UtVSDouXyuL4Q9f73z
Xg1PuXpRN9Je1TNuDlw3Rb7ogtnz9zR6q5rSVB1JnzeFVKk/5xvRr69DvypO
eF0bRBUSnm/PdWMuavedasid3n5zcxpXutf2fKVuNotTuuQ+XsfljO6s/7m+
9j39sFr+QoS6qZHY3vz8GQOULelieXUlenw1fzed01tm+6qIl6cbshWXrwsJ
qLJ39T3dTbnEy5ubex97H/XaVi5+Y5xe0bm5GP1T8Vpq4eCP/ntrtX4uaWDa
AWmq5J6rQrVGEqur4Nt29/BQs71herZer+jO5rS+V/yqZed23P6K73Uvv/c9
g60rtNeFFq//dHpa71b1ilDhlXVg7H66KL9Ze9dPv77/6WwKaohPv7+q1Vnr
vdMfZ9vpx9M7jd8u30lX4bZF6dazpiZ90wG6NIGgqr5j/lTw97+9v6cCyPVs
X5Se3VDNK6ol1RRhuLqX+3T/7X/h+3dNaWUyybZuq3pEWxjlqkpD46HzJVnR
efI6vddvuKxvq26BUCVn35iV85fqF/5jVql2Pa2e6mbQrG1VSbdrV7yqeNEO
AsyuxFOpUF7bug2aZ6hX/a1LU3zfTLd2XfJE2fG6ue+XQLSugTJLLyuvtrdF
nx/T/a32q7rOwbnI8qv6Cs0zN1Q04HtocvbI8+M7sPbpCSbVBRB1wYETaNZ1
mYD26Pq0mKOVf29K19HoNRWx3/+8nv1y7sdF841vnn/W92+VNfoGouvaMqpa
j6oR2V5ScagrLNW1kJ4ROd/Dl15lF86XYKiCXbs5/jDfNu+lyoGvyxWuZy+r
fPa6WsZFdzrfdOfiCZuMPEwVC8tmp9IaVBLk4lrx69qQTdUC9aGswTR1zcjm
sJxm69WSLOTX94fZ9uMbcb3zOq53VVy/b+6wZvUd1jC+8z3XBZUgpWpJjeka
xoe/3cAI6itRKB7SdSWYhllVD1dTsmmW4sH+HH5d911dhq5uQq/LyNDl8c/q
bvC2aNyramb1GKg0y+1t77IaKhUioudQymj78c3ooojHBWL+1CLJTxfVRC5u
wj8Bh36Oic28NS6k5u6tWhzwvoLIDV19grdSaKSKd1R8ZL5UddfWz+doqP92
en58vma+fvqS6JkqL9kOxamoD9E2VWGyecrv14N7omXXqIf4/GG2fCG0a794
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
4HU6/tQn1YGzlxObXDYJyzYDrzZ7wJeJnKhC8q9W7eGNyzcNQhUsajKgakJc
AKbaC9lg7yk9ehr9Vzr4EipPXto47wldGmD59f3s45ePNVekLQEluILa5kWD
OU+eW89s8kBX6f3WgAbu07nxKuVNbwEPzoAg9L/qExdqDz/+2qJFbQttIr7p
W4tOyxmVSYphDle+dZrNBjov1t/JgJ43ypzqFL9KwFMqfDs7Tawalot1+Y/v
/dN+49fbVmipgXJz0KhqNQeBM5nXyWu11t8srdI62b5R0e0GvLZ5aAhtNoBq
XFXzS1myucxEnCnjVXynXMvJKdSkKgl7Ubyq1i+6IgAvqzntwn5O6iXjdbPx
Y62s+LRPZDqfbS6ijtpgQi+b1uD+egEjmdXQi3HZVGd21sxRvYpMm0JWhTKX
j6dNDu2WCtopcp2Tu8gHnbeKN0Kh3TGudoSdGMV5jn89GTGNzXm66npZbSuu
vWLzjRFsCHjbTfQnU6ElTUzu/odApqT71YYVBfCXW7Xpq5tZoVaoaMWwefqZ
n6rM/6tPtDFPjfh5U087Zrtmv46Kv+SvZ1HXrN9vZyemerHDvtn8eLJPQqTT
0uTHV8FnGZdNIkhp1OYRzZ6zxrkIl94TfMUFOr2s0YuSUqe9aZjHzfZyw3FN
65rNaecVP5UKX0+zObWc8uYn1ddiW7sGekZSspZ6GPCEzxt89f3Tw/2bdL1e
6T5BXp01Ut/9wUScKDgJv2WygrGfMrcNs4/Vvpz5ptktoYx4VbSrw/UnrpnX
ZdLzKpA2fnGOMnW0PkP4hkQaKY5a6yk7unYm9d3LQxJqVCsMdTPQDTb/Wqcn
TqJS0ZiaSZy3vZ9e/PEHDqDSLk2u5ewA17BBuKM2k7WJ06I5p6C2LaulXQWs
9/VKM7WtXlv4eP3UV3h8ZS2z4rzr6pQEUBNXj6Liz5ffaPTFSW1dSb6agDYY
/sZ+6ovxpplWwPr5HACU6rqIRJcRoQWlzbeh50dAo+TKNxqlXWf49eqMQr36
R/sMGgNfNUs6Ksl34ue7lfKJS/No/WPzSvc0gq+Ynca+3U+8et5cZtBqhGlP
YdcEGQ5Sv2HWTHj9jtdw803sm6o0RksHklm9/6mWiLS8ddmEkmTLuq2SSDka
tR2H+N1qe5pbIkr1utfJDYm7149cn4NzPbOXkFbFzWqd6ho+bdWLe/pJXp0z
Rteh6J9ZXss0/18Y9+BfsenWomum85dt+pVF/7f33gXBRiRYq2+0q594yVu0
6c3mJafN1DXQJitEPSKEU9pB0ATy/wM+AmsNGVcCAA==

-->

</rfc>

