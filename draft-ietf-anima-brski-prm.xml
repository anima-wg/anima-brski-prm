<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA). 
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevID do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additional signature wrapping the pledge enrollment request.
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher signed by the Pledge to the Registrar.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of PER send to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf 
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:<br />
TODO: final check and rework section overview</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge. - TODO</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA. - TODO</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information. - TODO</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition from Pledge by Registrar-Agent - Overview</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

</section>
<section anchor="pledge-voucher-request-pvr-trigger-and-response"><name>Pledge Voucher Request (PVR) - Trigger and Response</name>

<section anchor="voucher-request-trigger-pvr"><name>Voucher Request Trigger (PVR)</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-voucher-request"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="voucher-request-response-pvr"><name>Voucher Request Response (PVR)</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="plegde-enrollment-request-per-trigger-and-response"><name>Plegde Enrollment Request (PER) - Trigger and Response</name>

<section anchor="enrollment-request-trigger-per"><name>Enrollment Request Trigger (PER)</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-enrollment-request"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="enrollment-request-response-per"><name>Enrollment Request Response (PER)</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent to Registrar</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope in this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="todo-connection-establishment-and-pledge-voucher-request-processing-registrar-agent-registrar"><name>TODO - Connection Establishment and Pledge Voucher Request Processing (Registrar Agent -Registrar)</name>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="tdod-registrar-voucher-request-processing-registrar-masa"><name>TDOD - Registrar Voucher Request Processing (Registrar - MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="todo-voucher-creation-by-masa"><name>TODO: Voucher Creation by MASA</name>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="todo-registrar-processing-of-masa-issued-voucher"><name>TODO: Registrar Processing of MASA issued Voucher</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="todo-pledge-enrollment-request-processing-registrar-agent-to-registrar"><name>TODO: Pledge Enrollment Request Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="todo-provisioning-of-protected-ca-certificates-to-registrar-agent"><name>TODO: Provisioning of protected CA certificates to Registrar-Agent</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the voucher and enrollment responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<section anchor="todo-pledge-voucher-status-telemetry"><name>TODO: Pledge Voucher Status Telemetry</name>

<t>After voucher verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-protected-ca-certificate-provisioning-to-pledge"><name>TODO: Protected CA certificate Provisioning to Pledge</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="todo-pledge-enrollment-response-processing"><name>TODO: Pledge Enrollment Response processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Telemetry Status: Pledge Status by Registrar-Agent - Trigger and Response</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="todo-pledge-status-request-processing-registrar-agent-pledge"><name>TODO: Pledge-Status Request Processing (Registrar-Agent - Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-pledge-status-response-processing-pledge-registrar-agent"><name>TODO: Pledge Status Response Processing (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Status Handling Registrar-Agent to Domain Registrar</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+XrbRrYv+j+fAoc532cxIWlJHhJrJ90tS0qitAe1JNsZ
dt9siIQkxCTBBkDJiu39LOdZ7pPdNVXVqkKBpBynO3321dcdSyRQc615/dZg
MOjUeT3JdpLHxyd/PUyu8/oyOZpk44ssyWfJcVbNi9k4K5OnxThLNuihwdHx
014nPTsrsyt5Dz/qjIvRLJ1CU+MyPa8HeVafD9JZPk0HZ2X1Oh/My+lg80En
LbN0J3k+z8q0zotZlaSzcfI0naUX2TSb1Z3ri51k99nh093k1TedcVpDg9ub
29udqoYHf04nxQw+qctF1snnJf1W1dubm482tzujtN5Jqnrcmec7nSSpi9FO
cucmq+7AH6NiOk9HtfugupmW2XmlPijK2v8EOpgVdX6eZ2P4cFbQU3WZu2bS
RX1ZlDudAawWvHgyTL4u86yC53gpTurs/Dyb2U+LEmZ3kuNMq2T3G/jErKN8
yD1kGfTwvK6Lwbfp5WxwnM8ukoc4iby+2UmeLmb56JLmNIY+7nyx9fm9RzzH
xawu4YlvsnKazm7go2ya5hNcFBrH8BzH8ZeK+xrCmsAjizLfSS7rel7t3L17
fX09VF/fNTM7HSavsnKWlXZqp5fFNK3cp/+qqdU0jsE1jeNDpnYwTJ5kqZvY
wSQvavMRzWovr0ZFcnIDqzjV0ziGsdY5/JVWVZZ8bmfxKp1M8iqbTLKZncre
t4Mv7m3e11M5gdv2a1ZO4FzDx/NLOtndz+5vJffvJ198/kXyCM511810AkP6
ywjHQtOT4T8d0jjSclwVMzuJp/hRNkn2gm95l6DHbALLmJwU5/U13MjkVVG+
rlxX01H5GV7gv1Tm0eEo1Qtq1lN9fbczKmBi+dmiVlcCVnc//+W1W93qdWE+
ocEcFqfwXrWYwP0e3QxnEzeKDJ4djuHZv8COBA9dZbNFhrf8oiwWcyEZeOiQ
4iT8/lv64y84kSH09R6fBgK3ONvhxwbXF3cDCtWZFXC+6vyK2j7+eu/B9heb
8uvDzx9uu1/vya+fb94zD3z+YOuB/PrF5n3z6Rf3Hj40vz7csp8+ekTPHg72
h4pU/nJdDa6KxegyK71vZxkuwPmg+rWeD0ZVGXm1PB9hV2d5tdPJZ+fBPLYf
fWFG8XD7/pYZ8faDbTtMN+L7m5+bXz9/ZB54tGmffbRl5/Fo+94XkcHwgqbU
++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
DQdXEU5GLmKVwFoMmJsaVWNfFuXGhgbqscZG0ScziV1qX+20RgTYT+LBkgG2
mI1YbcPrSIYmwa8SOuQ/YDKDMmMkUkYWXU3n3NpYHD33sx5pmWO6dO6XtyQd
NKW024zPIqopPEhDS53p0HWMlVO8GmC4ACZ7U7eAc8zMPRaF2QxegdJxnK4p
bUmRJ/httJ2Ukj77xHqRjBPSo8KcZkYjdskrtySdIIOlxTrAlkfxDo0bvt4W
HNfWnMn3uN42SNpLHERYMTHnWE+s8+Bb6e/t28PBPkVzDig0fvDLdWVcMFLA
yOY4T3OMjguksmY+fDNzGIS0z5ONliXpsbWDT5UOEnUBDY2AZR1qXsFQp2wR
55hJAgshs6stJIQTT+eV+N9JvqDYOh19Z/AAKG6jOavly7SL/Y0u+RoLJcG5
UKboJBvz0PhyiPJmBDcdNcyLIOSY1gK1QJost2C9t1zDixQ1G17adYGnfRZ0
JiJuddAIQZAE5GPW6U1A0az1J94xnPfdo0NJrOHlMzZEuKVADL36ybwQuIDP
Djhlhk7Ew+37WwKLYHNp+Khscg7p16Zai2DJ1lhGL7lYwEGZ0F6P+dayNZuH
bqJjvexSbvX+5ufqAN5bcv5MUExPEplH6OBFOszRz51XGKaKwtAkfy051+ns
tchCJSr9FIScXRNAMZwV5Cb5iCJJH5cotx4Mk720nGNQHBD659Vr+GYPWN4M
tAKpO/ZtNhuX+Wt4oRi9vkwX1umdo9l0vqjN7o0WVSXmHdwtRrNkkEk4eedo
/R52KEyB7KcwUpIaD6rXBbClX15bORZrSmbZXMbuKltPiXxzIhDQT6rO2+kg
RtZZOnoNC2Td8ogayL9yNl5lES4qKcE1oSr1TVyBzx9tw+acsAHnMdqSJ2l1
SUEWTEkNaqn4I8LEvQFp7Rt0ho+sISAA7uuFKYK5B9trSC7ljVFLqWpL+e2V
vgOyoobmJcRXD5+3axL3vvJ/MGnjYCe585930OafsX9VnFYcsQZLkgQvfdUJ
cH4pkqKb3Xw3//H74+mT73+8Gr96Vvz4/WE9mr58M3718tfx3tb1aLr5cDx9
tPXD9uVklB8+hOcvR/eeTUaz4/nZ9v3/7OTP8+8uf9x+ueCnH91PX23Nx9++
zp/sfffrj99/N//h1XV9NntZ/zB9eXP4S5E/3T+4efrr37ae/TK6//zksDqc
PvjPztXZ9NkEv3326tHe2b0XVy9m438826tfn74o7v1tclC+fDXf/PHXzUeH
+XX+w73vJj98fzz5cW/r6gzGdPjL4fXTXw7/s1M/3R/VT0+/e/F0/28Pn+1f
PHx2+sMC/v/rqxz7+Xr246sHm0++f3xzdu/H+Y/fvHzNv1/Oz15NNrOTrZsf
X43/szMf3Tu++QHW4YftlzfjPWj/9dZ3Jy8ON/+/4r61uVEs2/J7/oqM6i9V
E5XZgCRX+U7MRJRkQMYGWQfOOYLJiQ4QykQCJFKSrceN+99n7QPo4XRmV3XP
xER0d7ZtCc5j77XX2uex49y7G4uiijSr43OnH2nFcCyyyDs687CovLG8HY41
b89079M7z7srBmOu3wWciZkpbsbCGURaT45z6yXg3toNBEuK6CYUUz2x3WMw
yUxhWu64TEcid/qhpn96N2B5bxeZKZ7Absa81z7BC7iz4eV+4eqOyQXrRzzq
uMPCY6bo4Y2LVOt9ZQHzhFl9epex5XQ3y3WTTfAJ2+sEZWV5ps790vLYHeuy
SdXnubMMMKbohTc2NntPWM9iWWXiKDbhkXqENvAx37dtWKANdrDs50wXXaax
vtCaJ3AdT+37aelM2LI/T8xqIxfOZlayT+/u/TJbxLkT49se05zelKdBEIx7
Y5laTPPuTj9PUss3zZ3PrcG4RHvyzUscTHuJ7nx6t/aPIoJFjaNjJrh+333s
iKMr2VjIIvZNXUuMbRANrUe0vkyK9Dgux+upcFxPT/2ojAphbD+968Fu54lW
lb7cb9KJs4iDez01equY38qxln6NJtXA4/rANdO+K0TuFxYTmj7gPL0bdzzM
vvXpnWC500FvBpGRHjB7Fn5mocbumWk91bOZsZEJe1lkFs3dWLvX0LsAtmSK
4n6Hkf/0zmKTdOyZRR4aukxKKwwW/UXCo15gZT7ZB5+IhVvuN2GRSnhqz5VF
Pj4KXRZZMNayZ7/cf3oX4xM3kZk9xLZXuUE/lmZ3F5S5PiutiViyGONxE1jp
g2vut57c52jjI9q4nMpsHee3Y049MjEXI4y7Oc6jfsydbmKzQWxVe9cUhscr
1y36B6F52ky4RmyySByt3lj7/YWXlh4u+3ce2W7mc7b0ZdYPLO8hLFM3KdNV
WGIcjv081FNbiOjl0UiHweKPF0SMGx/Qyo3dIYZF+iJbuz58+sJvvSoyeuT1
Obw/I7SIJsVDqhdhMvTmbh6tfVm9xKIKE3O7gOVFQmr7QMCn7emdE7OSPYUL
ayeFF/Kymotipck8yoUhtjxnnrTZ17BgfRcjHNnbOdMqXYjMj3N9OxuKT++i
JLAmYdDvSktsY3vru1a0E3f3NLoy7lRBMslioUUPUz1dw5/zhFc7rrMYfrZO
7jwuOv1P7x4ik++ZECHPe1ky7EthCV/kvbXLRTQrqieeC+kKtuaFM0Kb8YRs
5JfO2pt4kbuwjiFHjx6YqYei3MpZjjYY+xXeIUaTfoBewOLExivoCZEXH7kh
l5XEE4AIwoknaRUenU1Swuq2bNHPJfwz7BQOUP04NYqFb1YGMEfGJRviDU5c
3lawso1veFtWZAJvG4dC7GCAu3iItixc4cjIZH4sPMvPPZ5M+i+h3MeY4XVk
RVKYUSzK/SqUTAZFKoBKUmip5wlvgnHJBNluGPGpjl5s0QuRWNUogmcLkU4S
WxdcK46+7I2m1urgySz3ragnC8/x8mIddirpGtmQa2iLdK3UHgdszjpZIMp8
50k28ZcFZ+V+z41ezIuCSyAAP1oMbbRl3rPoia78XQ8xd7ENqzvMzNsgCQor
KHUfbZmkQxGIRWGj1fGsFFIWLEpKVxNBf4SRllNTnwPVVlxkMjEsEVnAXY7f
+L7s7iM7Yk+BRjGxjZXHWKbPj5Ii6Xg+KjbzANM9XsDnNK8vh9YSCOEALT69
W/qwiwR4FOis7wNjo461ig3YiWUx+O/Xsb/1eK53mLAihv9wvjXHkz7GTzy4
0j0kZLtAgt5NIMxdqnkdyZmEpxNC+cK24A17j5dph5Vp8wRmjoMCYJqNXEvc
UxxgAdpiyDyVU93cAa3ugTGjQFYOYg1IONDcMnf42ZsV8HOt583yohPkzHER
eXjQ9+BHN8LAuPRHXPcD4DtXCGgxH9FjavYKwVd7ss0UPhwsKw/f6ow7bZsy
EzGUh/DIxAS++GEntdsnMJP1YU2xMNgO0cqfiSL0EWXcItJhmQOZ64OAp4PZ
xIKdaNqIW0tGfgQcP/2mw3jWd82iP87TbjJ0RlG5OsbCmXuH2wGXt7k4bHRM
/UvQqVYPBno+LPapgB85weF2MlukUaJPj/AwE22wZ7boBFZUznLv4PGewe7M
oywtO1yk5bS0nh86417SYZEnUjc2VxjduKhuxpgL2O9wHMCKTIY23b+kumWR
Pfh2CmyOVAT2Lc9DDzAm6XJcOEaij8HaEGELtwyNwBQstnjHN7OvD53o4dEY
d3xE+chUMfqeB8zCbAOGst0Mb/Q72WZqmsbIxijy6NM7QEUm0rLniLuIpZ3U
As6qaJUgkuHnu0gvHB9zM0a0Exi3VCs6YyONfL59kXlxEy+AdarVzPL6+Nfn
vFhidnveMsMIshcODuMvvWVi3rquiLq+mb5MddabmmLPy+jGtSzDIz+y+DDU
YLcO556cyfsDWxQ3YuE9jwK+Toz9Msqjh0ivuNDEjWezIOThMR5WPpf3R7kU
A3dRoEeNB3o+LwaznN2NNStkRkotB+tBO0UWxnm2eyMmYtSrvsvJ6v5Nu2Uj
Qkzz0m5lIVScxresVMuU7wh724G/WzOwNIzdEzO1gzCyRZDrX+NO+iRM+HQX
FBKtvzWDwJnEubkGvHupJljj34/oCaK/EP7CIu5AXGEEHsjcYXpXzyd8mvlo
Ay9YJi1ngycsUy1aNk8wmWn2BPVq0RfA3JuQ831aVEOx9BjYQEcAk4QJD1iG
Z1QCbl2hlDcmhpTDCgTbsGO/TPXx0TVui1mx2qfl9p5LpwAfgJpI5Go9Lm/l
g17ZU6NaRIXVcQv2FGvVODZv14ER9cMl74WFu5+KqhoNi4yJsJuAq/vG7sUr
YC9hWEbdwNAH8dLxp6UXJkcnSvUK8+A1vuOgTVY5MsUdxoh43P2jRohgtb4H
Xvfa+8aa8x3vY2TxwD0rn2rjl3j++zrSv7x4BljzwF+KhT+4DRP5hvfJe4MF
xTwpMi2ZbyvoBEfkt93Z3fhluixK1wCbnxBKKW8zbmP48FeMO9msyXWrn+qO
4ljc7g3c4XSPUdanZQauXnVSI/oKTFoyu6hmNviukHwPcr7qRbzbi43bFQKc
iHOrQr87npV3kiHrCqMYp9pWc/mql5RVL8rZKLkTXsqFOS7hR9uZdQ/9lqHP
2yGfOOLJd9LPE+3b4jBKYv6v/7yqCnPe6U/as+tJ9xz95ltO0S/kXhv9EPvS
vrR7Ml4SLun9RCPmDUhoMNvpQ0uR2uiOO1XfbzWMKPhYbm1ERV9MWuyq/XVm
bknTPHPj0zsdHrvaBctokeRWly2rvsgvNIy93U1tZxs13xCIfdAwVpDDegg7
LObMTDzFlJN0BE/B6LNoZvbsBO+blRsdHryGB38FF0T0AxfVmQDafx0Xnscn
XmestxH70zu0UqsGQjBL1LGKFIcFRO0EwtsihsfusL8LSz1n9v3RX6avYn5k
pejRLT6NVuU9UwTOaFZOdXg01GDELjxa9w1r4slekEhgwqIPfcG2iV3F8GTo
MoSzP6/MjlBkdpHx0hsgei0YF2F6TA9Cwtwy2N7Qzy3dv2O7+Mgc784xQui+
qc730C8uM727wN7KeIhAtLjfJ5Mo8zXPCCZfDtLfBgGekrKRHZWptju4ndVR
mIUcF1BmFgOG63dT7aTElA5jMh2MF9nEt6b72HYPbMKgT0HdoYrc76sg+3cd
c8fwxMGo1XqTFAOmD0Ju2ayw3DiHYLzh1u6F67sXeI8eA5tijDBCJaJFupCS
UEVvIjecCjbU5ASOTINy5NEg1WAvdwE3NaaZeyGZCbweTAa3Hc6VV99H2pss
bxnkWZ+ZjjWWxSANIMc70I3uVEO0uRPHIPij45pf1njHYcZ7wivTx1m+f8K8
2DPh+IGx3095VkVasZSmt/XzPZ+hR2KT5uPD1L599ErW9crdHm3RZ1Ln0AcU
nUroygzsN3QL5yXQ+O19oW3ul4jSlBlZUtYIbVF5I2i4I1jRMTG6iukm9pSy
QxY/3uve3Ll9s9LTCQ9+Wurrh+fOKt0mXz+s75+Ghan93ucfvviftZcH6247
54+9sbH4/aD3y7vJy6LrP/FwM12k82dQyn1o/eYfN6k5GHyunuaP/1g8Jrvx
3NbHTdWoq8LGTUqwTtE1CcEmH/h5/kUtLl1XPPpR7vAHZYzPucd4nazmlLs/
7yD/9mHslIg8f2q7UtvMmwQkXedBOeHmYeqAmsrJfl6t0ouLmyhrHNNdidPV
Kp+lH6mgxfWSzrZ92vkZ8avilaeVpJ/Ry1+ap2fx5l1S76RsLrR9fcD/dJBy
qXbaqQ+fK0e+/vT7n3+q2/jTL/UX1W2pu2ZP9ufVehevm7ME2+Zs5jcVjK+T
sedHf9MPRv04J2mvG3Lxhj+Znr2+dLfdtqfyyc1C+YY631782VQpw5j89KO7
/f7f5n3/1ZwvvLzN+v4bOd9P79qsb5FHk6iKBno17Xg62kBPHYyVCr3tCxH1
U64dA//3XjDYBnEQIcJ6T4jJPBl8erd5GS+z1fSoGP1zYvQWkU+ZYPEC9qg/
6k4nXozXkak/eJrDHnTxNbWnt0/05mX/EMvbw+MEPWozSkbSEYvYFvitU0wn
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
B+fqyq8KKzTP3FC1gO+hydkjz4/vwNqnJ5RUlz/UlQZOmFkXZALSo+vTYo5W
/r2pWUej15TCfv/zevbLuR8XzTe+ef5Z279Vz+gbhK6LyqgyPao4ZHtBxaEu
rVQXQXpG1HwPX3qVWThfgKEqde3m+MN827yXSga+rlO4nr2s8tnrMhkX3el8
052LJ2wy8jBVJSybnWpqUC2QiyvFr4tCNvUK1IeyBtPUFSObw3KarVdLspBf
3x9m249vxPTO65jeVTH9vrm/mtX3V8P4zndcF1R7lMokNaZrGB/+dgMjqK9D
oXBIV5VgGmZVPVxNraZZigf7c/h13Xd1Ebq6Bb2uH0MXxz+re8HbanGvypjV
Y6BSLLe3vcsyqFSBiJ5D6aLtxzejiyIdF4j5U4skP12UEbm4Bf8EHPo5Jjbz
1riQmru3inDA+woiNnTtCd5KoZFK3VHVkflSFVxbP5+jof7b6fnx+Yr5+ulL
omaqrmQ7FKdqPkTZVGnJ5im/Xw/uiZJdox7i84fZ8oXQrv3i7UWkBLtWV9Ps
D/W1/IDGmqk2l8vHV8NK5HM725+HytBOXUkvamWfqpx8GPxRV0U+oXhV0GXs
DQKc+B99QZW5qGtLvKqXfHbtFrMa5/kBvnf+67/+e11bJj6xm1OlojPandr1
8/ceZDQj8Uas+OXbWk5NrT8q2PGjfpwHUMcAnlA9beJenCR0k04TkU7VQhqi
rRpBhau3F1TFMK6Zwp4K/Z3KyRyur41vv9NRdXyUjR/e45PV7IqWXxDuOnJf
ucPmXPWiufS+LntMl/x/gzrGa9TpKNThVV0P6cQTToUXf6KH33QVqZil4JTP
s//xP35SA77vTd+vpnWZ0elsc+YbqgAsPcIX9nsAUAV8ohDUlAxV1WKpoVcS
pjG/E5tTV0kVVE1w+T6b43vraXa4pHONFamequEqV6eSqsqH8IEPm1WhGIPf
jNxMSTQqIlBXBGi+/v0R/HYI9ddDaNTA3Xh174JwnAuQXlVmaiFFoepFDbnv
e1Fr/Oe/x1+2/6jWe3SOiijOvuEYkEXbOUnbc4JL1UZ+uxLLNz777pI9XvNN
Nfc/zuCrj7S2dPWomru/qpvcosjnppIZBVJVn+eijlgLZK8jE1WVW75/g1T/
oH963b8We+Fuy8YVMRlN0c1LSDyN5cBnl2UHm/e1fUlrI/62rmncliOaq4ro
23j9ZbalvjZ1oF7mF8WC4tpN4DHf1hf/qKa6RacTZl7XRFWcjwA3aep00WRc
VDTBO1rcvyzF9fEtW9de27r+ytZbSlL3D5O8aexPVRM62UK8/I4zvKpB1Xbl
PMvNzW5XlBA9U6V7mivZLnj5WwXmG2H82kGeRk/fvH5zpSj+hD++4Tmq6Hi/
xZM21oOlxdcyaqdq8dQz+Wb4mi2VD1CdGBU5msa2sewNk39VhPz9z6r22BIP
3KihqMu5Pz0M/L/pmureXGW/6kf9olp+B/ndVmJpGv97W1nqFFC/N5v15J1b
9uHEF5qMU3Pl3rmSY1uJ/A2HgnqgokNLdXXgsi50i0/+2DuoDuepKub75Hle
pPULCOGvVA+eqRhWYxDP242qw3Xhp+c2fW9kfntdc+saKb4HCCo1dFWo9Pud
eu3ZdaOue3LtxZQ6W22uce1vvQtoe+0JqvzTcVupElFUOZ7EDRXTa+ryIcLQ
ui5V0FytPn/Af6ZN4vLSQ/72GmNVU4YrQFAOQYMX/8c5K1dQSevDhcg+t3VT
E49TecEaeOra21RO6xt6NW8qaF6VACfHb1rWBI7arMAZVe0qeow13+MZP13l
IH861xIjVxHs70ywdycC9qPLEs+XK7apuldUHH/EUJ4h6o3vv4Ezqsfqesea
QL/9KQqem+cEPL/OixLw/3oSuXgtWGczAnXfzlXu5psmK3kqcHd9wWUTvVtg
V3Wv62+2I/xzq6ELTHQdIE/pATx3RyVz0YTn6mO7T4C2FtCvVTm3N8oCKwbQ
JsR/ef9zG3C0GqT+gM2s6dVNVbNCTUidbmhDB8aJ7hjt3NwkVFmzTsanbe14
NOfC5D6e3tD95YqubBUEKzbT4PamnoCLfJT6czLbblW8itM4mVNhwo+vKNRp
U0RT3bQeQjR1Whevej0KNXgQu7uqr/lPohIAlUL/qRJfLSLxlIvP4ncnszmV
o7xuFqUQCJvo3QWoc6F6c6Lerwz7L3cO7bmCv28qlf6pXuIpr/r5L/SSDGH5
ilyePPLc9XZh4KqlKjdOyVfEw/U6PtSJWFpUqZOTrZBugJq88CovefbBugYb
xR6YIX2lzby3zOA6ZfjNk1TBtNcFXZvSZ68NSy0OnWon4lHnd25eocvlGP7c
UhkDPtgUblc086Tmmy+1OHhZ83D+o3KPH+oP1aT8j1NIUN8Hv1PE+PT2X74B
pKvcdnzK0n1fO7QNQC9UamV5zVjU377N2H24qJKYrDf5/ENMeb4PTQXyi3ze
5Weoj5qmSLOrQh8fGC0GqbuRGxLY8oRzQuUUr2gM6ywkGvwnm6IQ/CKn1k7Y
N3NV55bianvOcbRJhsb/NnVmnQI3nqIi8oX314nXZpVHfZQP9I/XE/kZsYCK
7L1Vxb314FqGqzheZydXU+h08vB4XRxaWf5DMyJKvnlPN46plbdlE/i+t+rz
M3nfjB5OZXrTmgXV4/jqDb80pOOffY56Twbw+vfUQvyNRq/FhyZcFGqBVsm+
s+IpmkzMdrYkE9/896v4pkL5kvyZRET7rZ//ZmjKM3ibwlLNfN0Q1ezL9O1b
n3qnYkz75BMWUOObBFnD2N8u9nod99ovq5m9MN7lbEsE/MOGeOd0s/6g3Vww
1HrmXqep0V76ZM1S0fvVt8qhsammzW+l3b+TALvkqWey8GZmQDXrzTF7I8+g
ePQrM4Hyuwxd9SLJWU9BUn++HsRLcozXtMA6K065Yrzo3MC4ZUdE3Clh10Qt
Si8TeTvUhTU364vysXNVeJO+7UfBE1HJBrp/eWsQv5MCa5cLTzU71YvaZUby
flqRWMfTE9YADT++HzW7EVQ0vKQG9cPpexdVbU+WSRfLf1bFsBWINT7Skmxa
LVOu1by9oQAUtCoMRDzN3pgxDKMa+eBiuaL+83+ccrVtMKmDKcbh25wD9aF2
8GcCcLVZtf5bXbqWCuL++C2d90/88fHvT9wf0iuaV9bCFLhYS5g6fL0pb2rm
rZpwLjB/ii5NmeemGYNVWT4vWz14Gh18fafuy79cYXvN4qYNLVJrpGVdYBWc
8cOT/9AC7InHEZeE+YNRzzdZqTYcNwF4s1lN5/F29jqUqIW/2gqUtXyOX1br
mnAWBzW5ZOLZ/At9rIgPF3ClUsm1RSg+2ZiBSqBtZle/o1asL5eJidTML1Nq
3wA9tbrNfMXUhhNaXxZJbslPy+G+qQFwyaiU+2yheOra7uvnzdlaNtm8Os3H
a3NDWy5V5emp3V+h+vHf21/OXTvDRRPS6jx3vUvkAkHUFqAPhcq8XWYXqCtX
ErZpwjOVWNieludWlJXbvNGm36gtDYv4TlxukO9Cyqv5vthHUr+TJpeaesmD
GwB7uL+r8fj8ydYM2oZ0fvvlWtFc7IU4R7w/5QKnmP5NAq9ZGX8NvldLZ3jA
mdq+iUj/tmmckoFNJuj79uBXEK403m0J5vfGBZariEuB4UQMv9PcP51Grled
lKuqNa/51UKpWiBrFpSU1dTL3Jer/gr8qRR8vauhSQDON2qpV+2XOK8J4QH1
vrS2axeppFd9voiqpCIa+2xCC8Z3uVHJvnbYX+1DuMANNQ0fL6jwfNNYP4Eh
jdsSQfwKFN946nk2mya0Lzuz3ZoINZnlS8p0+ZyPddJrvdm+FvDtHLZ+8L7m
WD/XWZyScu00TL+8O+/Lm54W2s5rm3XCf9PkS0607Jw6UeG9XkNVs3N2l1PM
px59oFLly4vv1TXSFfKArahM2QVh+vvHiy9xdg+UP1uWEtUF1OJ2rbYJtnKR
NOx10ZQmcGDG/65E1WvcPlPztl0UfNqyMts4x//SOLSxQ+1pq62wlWEfL9da
z7Humu0FGQZn817O1ksK35vLrtb5i1PLLp5bO918mc5f5ukzPoqWqID07UYT
7T++0dDfziFZxf/NKVQeTAsgLR2IKUBURTw9rUqdN/LpHzs1gtfp+FOfVAfO
Xk5sctkkLNsMvNrsAV8mcqKKyL9atYc3Lt80CFWsqMmAqglxAZhqL2SDvaf0
6Gn0X+ngS6g8eWnjvCd0aYDl1/ezj18+1lyRtgSU4ApqmxcN5jx5bj2zyQNd
pfdbAxq4T+fGq5Q3vQU8OAOC0P+qT1yoPfz4a4sWtS20ifimby06LWdUIimG
OVz51mk2G+i8WH8nA3reKHOqU/wqAU+p8O3sNLFqWC7W5T++9097jV9vW6Gl
BsrNQaOq1RwEzmReJ6/VWn+ztErrZPtGRbcb8NrmoSG02QCqcVXNL2XJ5jIT
caaMV/Gdci0np1CTqiTsReGqWr/oigC8rOa0A/s5qZeM183Gj7Wy4tM+kel8
trmIOmqDCb1sWoP76wWMZFZDL8ZlU53ZWTNH9SoybQpZFcpcPp42ObRbKmin
yHVO7iIfdN4m3giFdre42hF2YhTnOf71ZMQ0Nufpqmtlta249orNN0awIeBt
N9CfTIWWNDG5+x8CmZLuVxtWFMBfbtWmr25mhVqhohXD5ulnfqoy/68+0cY8
NeLnTT3tmO2a/Toq/pK/nkVds36/nZ2Y6sXu+mbz48k+CZFOS5MfXwWfZVw2
iSClUZtHNHvOGuciXHpP8BUX6PSyRi9KSp32pmEeN9vLDcc1rWs2p51X/FQq
fD3N5tRyypufVF+Lbe0a6BlJyVrqYcATPm/w1fdPD/dv0vV6pfsEeXXWSH33
BxNxouAk/JbJCsZ+ytw2zD5W+3Lmm2a3hDLiVdGuDtefuGZel0nPq0Da+MU5
ytTR+gzhGxJppDhqrafs6NqZ1HcvD0ioUa0w1M1AN9j8a52eOIlKRWNqJnHe
9n568ccfOIBKuzS5lrMDXMMG4Y7aTNYmTovmnILatqyWdhWw3tcrzdS2em3h
4/VTX+HxlbXMivOuq1MSQE1cPYqKP19+o9EXJ7V1JflqAtpg+Bv7qS/Gm2Za
AevncwBQqusiEl1GhBaUNt+Gnh8BjZIr32iUdp3h16szCvXqH+0zaAx81Szp
qCTfiZ/vVsonLs2j9Y/NK93TCL5idhr7dj/x6nlzmUGrEaY9gV0TZDhI/YZZ
M+H1O17DzTexb6rSGC0dSGb1/qdaItLy1mUTSpIt67ZCIuVo1HYc4ner7Wlu
iSjV614nNyTuXj9yfQ7O9cxeQloVN6t1qmv4tFUv7ukneXXOGF2Hon9meS3T
/H9h3IN/xaZbi66Zzl+26VcW/d/eexcEG5Fgrb7Rrn7iJW/Rpjebl5w2U9dA
m6wQ9YgQTmkHQRPI/w8kkR3jFV0CAA==

-->

</rfc>

