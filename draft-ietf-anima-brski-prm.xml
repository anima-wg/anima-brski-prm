<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 3.0.1) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain.
This document refers to the approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of credentials different from the pledge's IDevID for the registrar-agent when establishing a TLS connection to the domain registrar.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Extended Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additionally wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to a specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied in the data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included into the "agent-provided-proximity-registrar-certificate" leaf of the PVR.
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data of the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVRs contains the assertion of "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" component of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA.</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition from Pledge by Registrar-Agent - Overview</name>

<t>The following description assumes that the registrar-agent already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and an own LDevID(RegAgt) credential for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have a synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and an own registrar EE credential.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note that the registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

</section>
<section anchor="pledge-voucher-request-pvr-trigger-and-response"><name>Pledge Voucher Request (PVR) - Trigger and Response</name>

<section anchor="voucher-request-trigger-pvr"><name>Voucher Request Trigger (PVR)</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-voucher-request".</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Three parameters are provided in the JSON document that is posted:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JWS-object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, as it can only verify it once it has received the voucher.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It can be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JOSE object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an ietf-voucher-request-prm:agent-signed-data element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="voucher-request-response-pvr"><name>Voucher Request Response (PVR)</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error status code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="plegde-enrollment-request-per-trigger-and-response"><name>Plegde Enrollment Request (PER) - Trigger and Response</name>

<section anchor="enrollment-request-trigger-per"><name>Enrollment Request Trigger (PER)</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-enrollment-request".</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type: "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="enrollment-request-response-per"><name>Enrollment Request Response (PER)</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note that the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge is already implementing an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note also that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credential to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx status code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for its operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible, allowing a bulk bootstrapping of multiple pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent to Registrar</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or multiple PVR and PER.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and an it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only a necessary precondition if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope of this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection with the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="todo-pvr-"><name>TODO - PVR ...</name>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="tdod-rvr-"><name>TDOD - RVR ...</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="todo-masa-issued-voucher"><name>TODO: MASA Issued Voucher</name>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="todo-masa-issued-voucher-with-additional-registrar-signature"><name>TODO: MASA Issued Voucher with Additional Registrar Signature</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="todo-per-to-registrar-"><name>TODO: PER To Registrar ...</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="todo-signature-wrapped-ca-certificates-"><name>TODO: signature wrapped CA certificates ....</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the voucher and enrollment responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<section anchor="todo-pledge-voucher-status-telemetry-"><name>TODO: pledge voucher status telemetry ...</name>

<t>After voucher verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-provide-ca-certificates-"><name>TODO: Provide CA certificates ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="todo-supply-enroll-response-and-generate-enroll-status-"><name>TODO: Supply enroll-response AND generate enroll status ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Telemetry Status: Pledge Status by Registrar-Agent - Trigger and Response</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="todo-registrar-agent-requests-the-pledge-status-trigger"><name>TODO: registrar-agent requests the pledge-status - Trigger</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-pledge-status-response"><name>TODO: pledge-status response</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Status: Handling Registrar-Agent to Domain Registrar</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+3rbRpYv+j+fApvZ32exQ9KSfEmsSV9kSUmUtmVFku1c
pk8GIiEJMUlwAFCyEnueZT/LebKzblW1qlAgKceZTu85+rpjiQTqXuu+fmsw
GHTqvJ5kO8nTk9O/HyY3eX2VHE+y8WWW5LPkJKvmxWyclcnzYpwlG/TQ4Pjk
ea+Tnp+X2bW8hx91xsVolk6hqXGZXtSDPKsvBuksn6aD87J6kw/m5XSw+aiT
llm6k7yYZ2Va58WsStLZOHmeztLLbJrN6s7N5U6ye3T4fDd5/VVnnNbQ4Pbm
9nanquHBn9JJMYNP6nKRdfJ5Sb9V9fbm5pPN7c4orXeSqh535vlOJ0nqYrST
3LvNqnvwx6iYztNR7T6obqdldlGpD4qy9j+BDmZFnV/k2Rg+nBX0VF3mrpl0
UV8V5U5nAKsFL54Oky/LPKvgOV6K0zq7uMhm9tOihNmd5jjTKtn9Cj4x6ygf
cg9ZBj28qOti8HV6NRuc5LPL5DFOIq9vd5Lni1k+uqI5jaGPe59vffbgCc9x
MatLeOKrrJyms1v4KJum+QQXhcYxvMBx/K3ivoawJvDIosx3kqu6nlc79+/f
3NwM1df3zczOhsnrrJxlpZ3a2VUxTSv36T9rajWNY3BD4/iQqR0Mk2dZ6iZ2
MMmL2nxEs9rLq1GRnN7CKk71NE5grHUOf6VVlSWf2Vm8TieTvMomk2xmp7L3
9eDzB5sP9VRO4bb9kpUTONfw8fyKTnb304dbycOHyeeffZ48gXPddTOdwJD+
NsKx0PRk+M+HNI60HFfFzE7iOX6UTZK94FveJegxm8AyJqfFRX0DNzJ5XZRv
KtfVdFR+ihf4b5V5dDhK9YKa9VRf3++MCphYfr6o1ZWA1d3Pf37jVrd6U5hP
aDCHxRm8Vy0mcL9Ht8PZxI0ig2eHY3j2b7AjwUPX2WyR4S2/LIvFXEgGHjqk
OAm//yv98TecyBD6eo9PA4FbnO/wY4Oby/sBherMCjhfdX5NbZ98ufdo+/NN
+fXxZ4+33a8P5NfPNh+YBz57tPVIfv1886H59PMHjx+bXx9v2U+fPKFnDwf7
Q0Uqf76pBtfFYnSVld63swwX4GJQ/VLPB6OqjLxaXoywq/O82unks4tgHttP
PjejeLz9cMuMePvRth2mG/HDzc/Mr589MQ882bTPPtmy83iy/eDzyGB4QVPq
/fDg4GDw+eb2cGv3BP8Gysw8B79I5IvkNBst4CDuZ9f5KEsOx8ALkPKW9IKh
s/j7QM7NrIJmFnWWFBdwZ7MREuZ0QuyE/yyAllTJwewyn2VZWdHLhqFsfT7Y
fEyfVBnSRFwwbp7Hi7RHBobkx3K5QXqO9x04gJ7IvV351D2YHJcFMKBikry4
zsrrPLu5pwawOy/zCfM1/JA3y/R/fPSVo1plejPkQ7uAkeINg4Uh+tV2hO/D
4Z/dn8Pc79NnP8FnPxUyiOF8dok3bzZP6yuZQ1peIjXrmi7x8qTl6AoOz9Dc
nfv4wf1pdXm/StPL+9Ot8smiePj2+19mL0YXnz86uH2zeXK1qB89+fx+V69M
dwRUBv5XzAbYY5LWdTp6AwLFuCzmwLzTi4t89Fd+hbf14OzLTmcwGCRmpTud
s6u8SkC8WKCAkIyzC9jQKslmV0AMSGiogNcn50VR4xvzOfKUNCmzaQGno+Jz
9Sa7BYJ0AaQaJIZRjR+xONM3t7GHjVyko3yS17BJQXsgDY0LXNkquchSeB8/
nBUwaJjb5BbmO82SST7N62wMJH42gxOYXwM7SM6z+iYDGSBN5ixY4QmtrzJp
D8Z5STykHHYO66SaZyM493CSsVHamiqp4KCztNTHgdxcAUmnJnI4DrhG8FUy
BT4zSYDWzy5hdS7KYmq7HOSzvM5hUuMBPtVPgHHDcRpjY7IIMHf7dMliH8yQ
Hsenx1k1AtLOr9R6P4adsyKpFvM5iE+wZvVVX10CGF9ZjBcjGFCazLIbEsOA
z83qPo3fzn0A4h9+yFNzu1DRY/DWFCUDWgO7oGo5bTvJmHcG3/I3cH6VVhkN
NgNR8hwY9BUdJ3yShEhoZNLaQbhXepLwHlAQOAbUVvaWtwDJEpItpGMjXHo4
iZOLAd5gaAn+LM5/hjNSJXjW+Xc+q3hmQDYGDgDtwdWB7mYVra75eohXAsY1
n5dFCsvFN2KcwCtwJGCpL2cFEMcRi/O4m9g47DCOb4Hy/OQWlySblcVkQqsw
N9SKN0AOMK8+L0M/ug6m1X3+fG8Xxka3d5qPx5Os0/kECDWfAVzaTof1DDpR
PGh469df5Qq+f2/OPx2YqpgsaEOAPpp7DAJTMaiRQyYbsLzQLSxtL9hrWPox
8ZEq2eDRVz3sKE02RrDTxTQre3ipzB0cMonJZ6PJYixnboyCFlDNW2wN2O8N
SEhJNhF6k/Nmm9aosfuyOOZ+65Ngd9ZyZpgWLHFWVSl0UatTKadxBdmAdT6N
tZmeF4u6dWz9gL60TWGUlTU9VcO+w8qYqYwT2JBJ/gsusogpcBb+cwGDZ0XO
fYgkpMJtjGw1iCnv3+OiZyA3yyvwJGxvlV+qu9HHc3mdj+GT6zyNEk1zANUi
FWUOLB9JuBBB0C4XQFKQ6Jf3QDkhYSL/BVo9he5wLvIRrOXG893T3R6s7pdF
ybvoLok7VnL91dU/OD3jyaE8COcYhiULw/cGR4uiccuCm22RDvQGVMMONo4n
blHOVJdpcp4TlcaB0Vbal/AkmO6Rss/0tT97dmo5lKJ22AJ2NIL2Z7U9bvgR
SB5wE4b29o7HsL+4udUom6VlXlQ+WzKbgRQE9l9avJAVDRg19JNXws2ISyFL
vYg8ueHxHZjfBZ4a2X9LDKE/n+kVJXEx2NPDGXQxXuBOgKCYza5zkBFFfnCj
nqbIs6/Sa2J8qUxe1mOBA4CJz0BFNEw1MlQivC08XvinWrqarxhS6Qw7SWs9
npt8MoEBAVnILy+Bwo9xysAt0YCSuduHq+sGYRh1/LgNA5Fq5VKWxhAkAgFo
rJ0/ae4eYeb4usfyA/mqnbEH99lrm2QX9QCR7cSOLxH5Bl4zp88cXnOhtczU
uk/RCdFOgNwEewWf4z7zfdD8K5uN5wV0AbcWVshxs7DnDVAEUsciiEbgJ0L5
ehH6P6Iu7Yx4ks1Vb5UuUWZwfKiy13hMxGQ+n5h9mKS3mRFrgTHNgC+B3FCl
ItSU5zk2eKskk2kGvy3bv8b6GnoeDH/Y2YvJzstOhMybry21e3g8OE9xXsK2
QQq4yfHiwAnAXyYwa1hg4JPppCrolaeTRVbD7bnCZ46+3KPdAx5Z3FTmTtjl
gTUYQWso2MH7QNov4PYQgUN244YKrOYQ1NnDfUv5GgcKpEPH+FltCaiz3Mnm
btJ2wnma2iNnRXq+WXDY3tZMSfVdR9IDasqEWSccgGJR4g1G6a3YPRYmtv1o
Gw4znTBcIvjy67Mz+RK1f2Tfh9QYUkLqGFozWgJMg/kYsC5zH4i9pyOUeHI8
T7jqw5tsMhm8mRU3s+TlySHeGZDPWcTIAu7jbpaRtHlNBoo0xNZYCR/+QtBt
Rp3dcai6uEFL2bIVb1w3XB5DalLTEG2sIm6GJdjL3KBZw87XcIj6tP30KM96
UOVIz5Q4IEdbqRZ4TGQjxnC6RzXcWzmvsNAhwaRrPS+QfZN4NjOHVPXBtEI+
t/xOVBd4BdqfjUBgooPNbB8/fJOj9HUBp+SvaGba2kaCeJ1O8jEPEm0B57iy
M+gBpFeYfXzP8C5jj9k1LCNzYtCtKzrNUyXMiajMg6mYc94Ui8kYuyGqBYdS
BsDniecEzAAERJCA+2aSeDixx/p2LrLxZY6dH7yt4dzBev89u01eEgncOPj7
yx7t0+vXr5NTocX+dhCxlBMDPZ0jz2NiCrQCiVsGPYwLaqVxFHAzYYng07QS
5QdoFoluSH18VRE62U0uFmXNUje9kUdo1kzRKUu3QY51O4hjMQuPy3eNZiA6
QNWChQFHJJEwMJU8LdAkUdVZSlu/qIyECZMV4d2obo5drE/W43o22pTG4xxn
Rnt1IyIPag8p2XZEgFTCuxGHz29VtywVNGR3PQ78C1W1bEwCEmya6xpmmA1g
lkTUYN7QNhyG/OKWTRBEamVExrQhFxVerIgak+aASvMnyRkQ83xWTIrLWz45
aLMC/gUdd5+/PD3r9vnf5OgF/X5y8O3Lw5ODffz99OvdZ8/sLx154vTrFy+f
7bvf3Jt7L54/Pzja55fh08T7qNN9vvt9l8Wo7ovjs8MXR7vPuk0SircGLW8i
2sCkUIBNq45nLnq6d/z//p+th7DE/wsN0VtbT2CN+Y/Ptz57CH8gueTeiDrx
n7Dutx3cV9gDpDpArUfpHGTHSUU0rbpCtoE2D2TWP+LK/GMn+eJ8NN96+Bf5
ACfsfWjWzPuQ1qz5SeNlXsTIR5Fu7Gp6nwcr7Y9393vvb7Pu6sPQFOpbnmp3
flqsK328ikQPtobbTOQvChRy6LzC68ylzcv6ju10OmtYs3Y6O8m+7D3xFv5Y
Hf5ReTuvi0u4sFdCaM+LxWxs5Bwgtgn2gZr4wUFPM6Vko8moUFp7tn/wyv8U
VL0kwckZ/RiF3aqCNRvLcbVmhfqqLBaXyJjH+SWerSYNQV4DnwvdZQLHElbp
DKXQYn6NA8I7Ky8eHPg8tbO3i+uz52npqbE8oJ2lAgoVqP4gD0+n8A08Sx0X
xQQbOYN/cS5GpWCZwRi9FO1Fr1F+uWBnO6kY0OTpiT+QzBpCTphKdg4O8IkD
uxudzhSIOn72fEHL4R+GM0van5HucOq4UzEboOYZnAylFZJtrySrB0oUi9mI
zxyeAcuElmuzneLi4jf0ggTZ9YQrubS3Q6tsgLgBfUDzJR0cPo/pjHcFlA9k
7DkqCkl3NCkW464ZA989JeZjgyRKkvBcZzBsVLF21LiINKJpIJ/C3EjCROXG
WM4MRyHDEDpLyc+BbbMIiYweGTX6TGDFjg/oDHCsx8DxyYHhkznZPuxlMCwW
zk7fWOk8VsrSlzVHkOKIjbLdldcOun1xTN2WBVwS+J8IoqQRo26p71EPHz/0
HqfFJOJQZRlQNuhuUBWT9+/x2Vd6Rq/Yqjg40dMJTJZrzgPpRVqS8OkmckJ3
+USkhPAqI+Wbi4xQUdyAbwYRmTnZ24U7O8kuydOh6drUBsTYs1pZOUw6+kWk
6qts9AYpxQlv6YmVoOK7ilOF3Yej6MgujEMWwco90N6roL3omsbX8sQpZSiQ
1qAL36S3pju0sdI9Ih3M6BU0sFc0sIaYFjA+a6nHWJAke5tO4UFPATCN0gOT
AkhbhQOdIXmEjUQl6vFDOKIYneF8MURFZ0UiflanT+HulRncubFRK9LkaoEh
FCBzjzO264GolpFW/SbL5jj8KX3Lb5BDQMaJNiTi2MUbuMVdHoyMBdSVRfbn
P3fphmeoW/C2o+iFGsAIKGslBjx+n01gqBOxriOTE/6+gBW2HSOhyMnYAzPJ
35p1td6fxSy9LnIc8S3oXbi90/wtrRdK/cGikb1qA54imbacwllHIkMr/s3p
iyP7oGm+6vWdSeHp7unB44cvT5557bFkJ1YzOk3fvD7lmUzgXpQ82TFckjF/
nWI0Dm7vJH+TJV3b6sbZ14dHX/W6KFifjoo5sfNTcSjBh/Ap+yyhmQNtCcYB
voT92YPJgvonC/frJ9ViDhfq+r0Ywdm9WSlFm0meaumG/HHifyIKT6qs08PI
ypwX5U7czNpHbtJ4HU4nn8q1rEQHOSmGePdMS3gGnLGZyBtTG3t5q3SaBYYP
lNxYe58WNVFoetq0Oc7mk+KW5U1vDZC13mZ2rJmlOIUJAIRTE/WIiO2un2TD
y2FfWK3P1oBO8hqnyfkinxhR77LAXxZzVI2h/yuyHdkxsZs3c9ZuYEBTPO9o
1gNNHfqtjLwqfBWoP08thdsJFMTqPMBNJxOxn7aJJrtEcdkxu2zvnMIZCj1o
cA59FdY16u6KslaabanJNMUcWKxowBHwbdKuzJY6z4LvRCAfMa0+XbRRQxLl
6bER/AJoc+WUEWfnskYx7LpvvCZxJ/1GNF6hp60AJvzDHmdrFrdz3Ihep16i
xHVYGWQ1eNmRF+K/FGA2nRsTL+8JhpxVYshxqpKlp+Yy2AAIeNENtXaBEc3R
GiM+0IkMDZFuRsSEoqEk4VGBgb2+ymFDm8tjOr5QNCTiKOGjKeKsPGdOP4Xu
sH2UyL9yz5WuIfFo4SkdpXgA3FjkeMG5OScdkSa2KgAA2uYWdg/g85awMnaw
0olnnlOU4VG6mGRvcza8kY3MeNPs1MwZ6yeixKOFMWN7Gw9yit75S+PDFtO2
Hm4fFR06MA+HW+/fD5Pk5ZwsbSp0AETaomZfgZaK8tp069yIBQswJ257d2tH
kCnCaAOtzXyxkVHTt6ewChOQB6sBR1f5wTpqbXu6W2LCsou+Ez309jlatTwO
qPMCaWPq/JZoxV5QNIkcAF/tQgHjHM2A2m1JQyRtyLPM46ZoTzwewIHvmjdG
UK0/k90OG2Uy5pT3WOgLMoCrgrSzwwscRlWLi0D5Edlgbc6u80nIWTeeECGp
sBqijxw4WdyIzxtAeXo0s9jQySYIYspTw9l2OdqFxBe4cpbjpfZzFBLZfk0S
Jl5HdlVWlk+OMzghV8i8zesbqLIaztdLjI8e3jUL63NXGHxOmqB4KWZVUaJB
Dq0kNVrhhZbWON8Mv0JHGz1MGqwhbNARC9oBHzTqtO1TqUKsSonwG6WQeHJo
yiYQTJg0rw9dIZwvnn15wAoi9C2s+r6LINMv+xp03xgkzEL1hf2ggaHORlez
fJSn6AOaTGwglcR22FgPHbdjfYd25U3MEa6nWHMqVirWXyk0g6HoZnwi6HqR
W5CCQD2vi3mf+DrFD54jK+FBkuwJN0fsO03Wz4fcWH14sexsjK+5sRy4Pdc5
CEjo2gH6iPEBVwUeVpZRFufjHL8v7Mphf8vW7Ty7QNpvDgGzdk8DJerf8D8b
lieK/XrrKdoLKnX0thZi5Tx45022UKw9q5tHIkLuBmO90x3AUIEN1GjvMf7k
IGqoCg+l3JSWVnAJSK/NMQoL1U6+vFVW40JWpNrnpfMpe+1gOKVZOaEC9y0R
gNswLfgSTclE5iwbZOW0qgY3WZDWrE2KSXqJsbawN0wYjfHEjJBOVmVCyFom
SO4JtZyWz7Usl4pOcbpQ4xDfq+TmGAp96IcVH4Jsztt/XIBqeCvqk4uxQf2Y
aLMXM2WuexCkbHXrCcZsYMvIRw2xODSGRtbVgf9nJZvVsOc+3GlYQtSM4W0b
REkBpuQprEh4E/sCDqlvqSp76tnQ0XZ5SP7i4zGCtUZTw60j/WP00KDom5V5
MSarC1JYpqMiQbMZExhMWsMYKNDyxu4OuyJYsWQuAvt4BTIdjc8cDTKHmq14
hmN+oU6DipGkBTujiOrBvljxtEfft+ElGye7PRw7khrDD3zDG7FGfbQ90ymI
STWx4mOQJJ3xT/ycJZMtuWFVcpVf4mT0QbZ7RVHAjXvgAjGJ7PCt8mSfYWdv
t3KWZenLdFUFK+MtA/k0gUHKFXMqgotE909vVIW3kQMFWjxAWCJXi5tXIfNF
weRk9/7ebrA67EGVC4jmLuQ30JLEwOGxGb0hKyaKzdQJrrxMcAIshoS62KLy
gUme4Wnn+fBhmGYYkJVX0yWSLpnaF1M24Ymyzg5+IYfGkFyoEJDMxZo1Qp6I
PijXOxrFc9H/2eSRirQZWpdIDEEelo8WE1Qr5nAh4X5yADG9jFLrWClpXi4B
n1Wkufk89YIPaa1HWY46qolApMbRUIeOVyItMmGWnMSUSG4ItgyDDvHLNbB3
PE8wn+lOELmH5kZj60CqgMcXD06DZLQFfblgJgxq4W0xRq01G2ff+wlfDl7a
fdDfFuyU4ORU1iihWWNAHByYQPBfPzE+iE7naSrBdLUE+1HkCCdxeCaoQEEz
psX3dp46dMMaG1rfqj3jRKmnwjS0hG0ca3NEI1y+1USQbIQmix7Fxp2tGcvZ
HvHkJ270dViFryfmRo1LMrZmFj7FInsE238wR3hAOcKOVLIzOOdg1EbL1tdd
RSMpbWQXzORS9KEgPMQpe/7dj4foGhdUSq5VoxMOExZkXCw9kb9UiS4ijzRG
2bQJyXQtb7EKa27YlgzSaa/WmBINjm0QLNz/pdG7bUGp0rEJzaC4JtpOq0lw
7KnlERtnz04xFnaUGp+JNGF5CxnFNRdOmYihLA1CTj7hsFAMyxGPAllEJDoN
JMUrIAYmmJEYJRmT0EqPRJUWGPvGmCY06hixA+VBjrWo0OhSJRtsY3h69uyg
Z5doUa2fCGSVvDRhxa+kyAi2ycpWUHToFVqdZ2SpMwsbDsc9REN5KnIZCJbx
iDsxX/jjDF2CEuLoUriENNDmQ38XjduBh/HQBWsFzRk2ZSP1KHbKmB8bwbIp
kSdnQK9t3IPnKfxTcqiiAPNZih4zygYRrSn0AsfyVsyu472vKjxd5kKQopR0
YbPeovBw2zUClDQRxlvisDlboHXobkUa9neJZBGBiHPourQeAzUCN0QeHRE7
k1uEbY45Xn1hoozN85V1x9IJqGoOVNmtMdm8qgPOAj3O8T2Rza16GC6sT9sS
FyC3g7tjnfmH1pl//OKwt+POPzoCB5zFEwZWsg/eBcpb91BjVzkSoxkA2FeS
Mz5gQvlNZGjixcUs5mOSpVE603HJmuAQuclNqAC/MR56Uz1WYQ7HL45lssZj
TeOkldBxudaKJsdJBRj5oUfGeLs4B5lBvje0Rc5mPDWor8Jd0cMzZnuiivpw
BlPdvbU/RdqkkFDxTVnJ5dwIRna1Fb1iJ5twOXsnyJ3kvYKZwZirW9EpehXL
PvOyzkw0vHYuGNuNsa9wvirsCHuCXmAi7JKIMI6rqimbUkS8y1IJ/pYE3JBX
pm5EiVUSZqWPj2yWpIiYO2EsKxhVUdJh2ostt0h4eCGszaAyTTozZmBntFEb
GZMcCkRBdQVWhzioF7fGsXTx5DJu2OYR4zU4/vve6Sdbm7zuCDuAuQLEBuQb
5kCeiUOCR8iDXtFndmllwY0wPo9EDhm1qxmC56bJMoHdDOv+dVfF3R8Zbpsg
3md1kE4NiZoS01stUGTIReTcbSN0Vs5o0M/4Evs6sQ1ERr6pY6D9MEpzaVyi
SqCcSjBlz4qLJlZSVIQqYvAYZyO2zS4fsLtB82bcFq5AGJ6JeZVE0uMkv8SL
uZToWGuuISM2bgfImiUpLfQqSZQPNSEfdq0GV1OUvvZApznGydZ+FHozbtTc
AyGikS0JneV2T3hHtEOfWagNPBhnGMCj9BEQKSW8wkjSrNfuIo4D3p8Fmp4N
FAVoran7InvP2a4KAqpNZ+tbe6m1iKt2tEu3mRmXW8iGcSQTEAUb47Rio1Nb
7iGvigmbGwe6rHFuNCwFLkchjQRh3CF1bYgxDxyDRN3TvexHVGAGZDAtx1Qi
0xPFJldJmPnpex4Vh2MKYFgA7PSRlfZCVAyj8a+lgRgziWFNSnpKCUNjXnMg
zhSYy3QxVemBZWZUHWGxVrHWB8Tmz1PWr9M1K5VwvdZIibkvJUPtCA1mZOLe
59BWcsgY418VyR+xQWwsJYtoYQNQMfH+2qT8WPWVhqkCiq0JsRloo7RATKkl
BymHpDQiVM9TCbT55sXpgWSuPNp6hAEIh8piWPsGQ/GrO4OCEcr2bCsI8YPc
urM7s/AriYGOMWviltV6zkV7vCAWBFOF1pqIOdQwGl3FI27B5QYMLoewcjra
dJeuyZ53pRQ+HZreFqPt9x2NPzLl4HROC/NxPvQNbzg03GUM8ugacWtxVAXf
Puxn/d4ZEGQjoqTet4op0ANOmCRJTqJpDOJEQ9vx3rP52nSgHJifY5FX2WTO
JDJupBbi6xjQSEAWlJQWWqxEbVKsyR6clpxK4eY5Sls4GTbPSVz9ZckuMM+Q
x66YppMabxmS5cGk4CWP6Nx5jftgggqAdnHwOib+VaQiy7kHZYX8OcoHI7da
NkETOpufRFQCziklYWR4B44KozPiu98U8ARIim/FznkpfFya5tcSsSGIGTS0
y7gtiljIhchWoaXEOvAvMpOcLOKozkNvEiodG1mT9w5lWQcQso4ZMJ6bbq1E
oRXJTuViIhHcLPKoeG5q1cuov0syeghwpMQWRgwKeBxvuOEjQcpKBVRIwBPE
j6NYEemuJGNaedBZYdG74m9Fw1xtLhe0IpxetcTR60CpKxvaDMwjp6ggVFvY
VII7+s3rU0NhoCUTM4ivBqNZZpQ3o9QNmzSRuJiOMT84PGCgi8oPGOl0/gt+
kjStri8FB63l59NBy8+nHfNtso/oYqdX+TxxX79LXsHkipJSdtGjaH7e4Xvv
PrC/9vfeJaAquFxl9+CK/t6B6ugQapJ3L25mWVnBXFa+d5qIeYH+PCsZaW39
/mBb9YN3W5dP110X/+f/ucvD7wwSn33JCSPLXiILZ9DRcNnPO/sbvvVKvbVs
eNf2qY5ZjU/NW3q1PpXHgs+GHTO8d+YtvTDvgn/ld3hLAHvVW1aKgt+ZWL0z
EF32rWZfLHHJh5gUHbSk3/qCh/0XbzRfmM82MOgBAyha+8KfZ6Tuts8rfKt9
DT9VayhZovat9h/bY6Qvr/nIQf80usu2FYQLCOKC7Lz8Qei3xIWEi6eN0Cve
4h8LYdXTa9j2VjtRi7y13k8b1e7ywesqwYlofefXneQTKxkxYOSf7+1qKcqq
HqzVBwLBPZBBKGZqACzpcvbn7iS7qLvvw2B9Ao4Y26RQ0dOVCNeGCsfeCrpb
O4kzSPhgTS6G2spXzvWyXJJquG6NHMfWMZeUVQVi1QoknEa2M0G3rMCFwV5f
kGfTKboih1P/lF6FADF9BwPRF7AcDs5CgRCx5xDtziRcNbrYVbaNMG1DAnL9
NbICeQX7Y3OnJMmZSBtsU5L8iYI2bNC9VpajwrL1PRoZbcit7MahrEJPpRFo
VmywN5K+HhU1yGFRvodA40fhgNr0I+PBUAIaDcaHw4ttutMtJW7BBI2wR6iA
5mGrWSuiYF2Zc1xwp0G+oMRHaN1I3w4gEWEbLjCyQA6Ty35L40ttI6bFN+Oy
dCgJrKAcg7aQaM/xLIZtC2eWO5+QzdR0KSTni8mb5vZVGKeMa+siRtE/NgM1
LZmnaJG1xm6SbJF6yInz1dE5yHBoS5ioffVOj1WTjVVrbXVG6TFlFhoVfIuD
NTFYa/XASOwGeAxF8T8pMwztyo4OTvCtnATrWzsN0J/VneyqSfS0n5cFJbnn
s9bow4ZCF8IhlRkcALq8QV6xDb3Do7mQxF6FlBOGVaAvnR+jvUVzvko/aJuC
XLTKRUM5Z1uAhohcn9R1k+ytLuwgcAklkQRvwvqhJIfpYlLnGGNrc8/w1nBA
K45kA098iJx6rkPY5CqKSaBtcgE7FL9cCyhpuFM7wQn2MTP6IiJu7O32/M8P
jw18Xd9EhZ3fBmAXBX3mXNguLUtHecaS0GzUhSRtCsxUZfMD78CN00qQG9Yx
/aUls1vPyGLMZtm4DTVPE8SxWg81vBCBzuzm0qm12W+8i+YdGd6vFgtOv2Eb
PCYMVbJQ5iZO0x0T65tUnrBI+JuXN6Ah3FRwIQvWRL0xhAp2f1xdAZ/DLlTY
Zl71mxM0TF8F0biLbP3pAeqcSyIyXmrfHG3z4G3ck7MJxgQ6ZxHAO8a3mJ1x
MYmDhzqqdVSUsjRukLsa7ZO9HU4ubNiw2uxhSX4hZkhcOmfLbC4Bhcyg4Tn5
GXueU89Nx18c71BtnUgSNEzCkODuWK01QVYU7hX2Jn5U5vsXiwknKlSZSYeL
rbUfV0joCUBrvByzAIrYJqqjw0a1nteU4YgY8XQfGSMT5se26OCcyf2xGUOw
YaKwnzhaeTiTqNJJnO3BcC/yiQQMRfYVnoTLEU+99qXmJWoR3l27hw4MScsE
fltWMaI4MxPPH4gBSAksOE4ifiwKWMQl8zCsolNXqLwaEcneUxcRsHARCku0
L9VyVhNtzmOYxGiS5cvY8NLZHouy1WIvUaIepqGlkU5LvW8SnhiemtbOmgWR
QaChr2e5R3t2NePdYbIIe8ltwJLdHtIthLwo3YJBZhjoIJBGSGeg/BMVhSf+
cerFj1bUnvgNtyA9+8CQnIRkixoc27d2bYjjr5+kl/VP8/ItaPqd7m4YC5lL
IHgtaZnOqW7bcnurnd0YqNmAG49wc29lrcLzE/oiOYDfkzw9fWzYNt6bLH1D
YABmkuRZUUGmJkBZhaur3VHv3c4lRb21OgwjrztADx0aHagThkfJN3RAFGcL
xVIX6Km9XCahhHJvL1jsbWnBU5FheLiSljmqkd2rfJHRj/+GUQvhpfijAfyv
GSzWjt7WjCrIdDwKfmfCcUejbF4HskYgwvKRqkyU1gLklAmyBjgemFzjyfcN
vhsesJ8e4OadZhlvi2bL3eOTF68OTwkxUAbG+iuZVnBAXfS2krSH0g+Fsvta
PQryRkZRV6ALhA6O3EDgdtXcwtDnISWma7qNX1JgRN+LmFbKZPSmusjptaKm
ccfxYT+OfNnu6/2O20gCKVEMcmoneY2zcfvOh/crvagzP1DaIiDIzQl5yLBj
7VGI/Z+NFX0VAKy2ILTwModXS6Cv2yRPFYm89LYwsX4qQEYU6mwFiHicx6+f
8CB+yubvG+eFhTqtVQUg7h0j0TnMmhYDn87AIVVDw7040BVz2xWKqwN/McHE
IqpIe3KOYl7M/YU1lS1cenRDDcIP14OhRzItjnU/pMDSBVB4iTRs+b7qdRJ5
vDNh76TzADvV2Xd4uyc83a97X+F5c+2pLsJ6J1gur4mh4wGDW1+6bMefeFR/
isCMYDPYKhmezmFGM4lt6KrCdBKrS4WyIqPiYWSCIIYtDSh69y1fBRPd52D7
KZPPJpIi1olfwBKey0NTLiKa73Q671xCctM58s59R/Pxv0z2szrNQZ5/13m3
0+axgZ81v4RWkjPJVZPgypCFM3cuUOtAilPhtXmX3G95msYY8ig4iOg7ftc2
nuYgImYs2z3cVtd/5MF4/8u7PxbbubWDF+YSmG6D+cpVbyxEbPoPcPprDsCL
13KJR/HBqMk3xqMacofnt4xsb5dYWaWG43rb292j77yjGutteV/fLtAW5+tT
MjOXo2iaN33bx80ixPp+xH3/2f8hh2M2n/sOx4OwrIAUb0jedxq8LQhOjEev
5Y1aZ36cmAgaJNFbohutGLeG0VyCgm3UuiqScBF/oSKvkQTpOvS4UE88rBtV
2HQgIxn57zDOIGqsNbyxH9i1Iw8o5s1QftAjxRXX5S2jg0QYswkuHjXDSdXo
Y3KE+GWq4FW30KFN07kWNOS94WO2/pYp22BZKHlp0TqhsYAVYI/knaqaKyZa
WfQ5/8wZR5wTXCaeUHDH+Li2aEZa2SBjo8VZGM88paObwzqKqR/u2O5l3QtE
bk8u8xsQkzPi3GjvM0sSSnLo28U166oQHU3aQIVgjygySn2vhXEjaBse+cI9
X4NRz0FTgVMief+cQcogKBPKwI8P3TpLS3e7bisqVpNlb0j8hZlNnNGhykY/
YZT3T9AetMSR1TFSZAsW0UL4CxwpPmP0HqMstYuluLhkuJVaYd7+89YFvWnF
iNK/RYOBNT9dkPfj79mtq/qabMDy7/cUcLwxbBGODgUeNxU3k6U/4HyygXJF
LrfcsPSsI3NZy/C1K4WswGBgYkcLrAVEon79VZe9RVzDGfkhVU4+ztBm9NBi
jAVjDKH4MXCztozYocJtuFFq/R+d9ozYzbV91Fh7qGXZQLm+61s5xC/Sa2Zx
PqINrNcl1nXIxdNCmIPaLAjkZiEAKnAGX1aSVfvM1T1qPSatYb6VlA9SCYue
/TdvlppzpZZUwpuZnnKYrDizSmcLjq/yQMUqECrXUB8NxQ0jsQU09QuzEhZ9
3INExrdxMa+VO5px5WFqaJmY0FqPQOdAbWNyS6iFqh1ruHYY3YyTY8ojVm1d
CyyMWFMqIAOy2BpJh5KxVA6C0d7xjPl+dReNzHjNBrRslk4ZoY9P5O5RslEt
5LJOaKJYKIfqhvc0kn90gzxr3a57HWv8qF3DIXH93oyzXr16mPpSt7AZ/zK2
eie5GhZlCgcNBUqz6Y4qp+5q9FRijEu9xh8aaSFZfH7xSOP4MZma1hEnecZ5
U9LR5NVZnrIpQnbZvHH/fvI9M2OOZw2skkaWlTnzxCs2LVCSlPTIFkoHR1FE
jlJcTNHTd2IjF7YdYA3xdDKYLabnGOXhrahJ2tQgp0NrxvJKwHIwEs1ZB7OZ
dloMXSy6TPePTk1VBPs2sbb5PMX6CLjuFAoZ5spS5j8m9GGjdONYygkjBhLn
1kU8I7aMuBgPNBeb0heh3UkXW3IImpxytv3gc2BfLj6zQru/nMs0+fYkGdm8
0+hya6gPpLESRGUQ8ra2j5Knm5uPULPFlzH6H5nDEb2Md85Q0MDPaEvlPBo+
aPE52mAafWq9jOlmSKAkA7Jgyu5UTQ6kldDQwse3YUPT609Cla7blcSjCSiq
1T/xOwnK9pq4o118nuYMPOBCwH0D945fiSeub1ILp3rDNiqGv2huJXzjzjv+
Ebs5DPTnRXu6AcJZDhMIf/3Evw4wMgkRHocRo204h6QseHUJgpgIc9A7Tmxh
OyL77PD1D0uLijCylmQ5o45o8iQRUq3TM/2ut43NdT+2EbarFh1pUMuiuzDd
cGagOWnYWhvLBZROiiCaTB43KsZ2+uwxWp/IxfUco+BG6F5AAmm+3mYAcTMY
TaR0pLetN4BCFIZtgOSFsHcokrh7K/C0/L2+khvRU95zAEeELo+HqRt9cvgT
453LyH6qR/Mh9dJt0fee736P3BGv3F1b7HvroaQ0E7zMEVRS2FIlxZqFsZEr
0HdrL+yVqVU5x2VMsrPrR0awYcTwSBdJidGdFPlITNCdMLwIaBOQEicR3mFl
KR9yIZpLqtenfdRGMJEINj+8wwBpolQvxgqSWhrRVy36Ps6Plf1CR6OLoKkW
xckEfQss65kYVfqe1EBE+wYiyeZ1KOpVmIhrU6GNYGebTSl6Htt4nX+Z25q7
fb9DcYbqdo3NBYsoppdlhhf6VLTGAAQLV5HimWwwt8Zbh7YePyteH+8e3Z9m
1VWsYfguQenzazw8cAZV4FZjYVYkMSCsxlOPp++jHPzChHACUd3z/EAHNij+
10/8eBFTINSJTC2RUy1EH7U/2Bv21/OsI1U+RZ7bcIkdMMb7lIvJC2CjnPOs
6ols6tspUTyz2TO2EjRZLNlJ34D78HiXGgtOf5a55JIgpSR5Bht0MMvKy9tk
4+mzgx7nmGRpCXx3Mg7gADaOvtzrGRDocL7YAa8GSYNSeqgM4VOYqxazrGom
2qyMf4W+w5n5yfF0z0QmPQ8SgpxFnHBfDX6Por1uSg639syEn/TXRBPA53eS
9oB/LsyMOEeKeuncg6W6pZYQYixJp2k0Kjb75R3bAil6QVJLYDKD68NfO1w8
IjEuyMp16EevTLLUQhYevzqRk88O9Ig+r4MlcltKDeZGqdq+cdQaaJQOHa5Q
UPAtFONagoELK5ZeZDWXcojrhVY+oaJ6xhLnIm2FuDhFRG2lUpLjUqeL4GnY
WwPwMRde0OS/tpKgJXRNJ8AaO4JnEajXCuDIFsRIkWl03V45DcFukYJFa77C
/uRrdEus2+a2XVEJOVtvtGnB9o6oF51uwoBWjEhLpfa+nLw6MUGt0LRFjRPk
LxtSCL03ECdlcSggECexKGcmzmlFOBzZQu3NNZ0nG106o2bagf7bJS3v1Yld
sQ+76nhOSIakudm+4Xh0TZBWF+9XFw7TJf6uQlVV+JpB+FxS02tNgtm4Zj4S
Z7ARMdxPMQZUO24/8HUVNNmsZ9t2Y92OLNuLfmCwMALd0tOnNw2bpc3pNo26
J3jED6XcYBg/Vy2oJgGVGQiWS3a0uUJBgCKnuN7k6Ec2dYbk1egJGHb2iZcL
yq3tkx82GXBSbCFXrlsvKRgLm+Q1SesP377F9h/BP+KmHhGoWRD46WxPj3Fp
fDySKxW5QuoYrxOa2YmHN2KXWxONO5E4MlCBQDl29H3WAIBycsGYwpMUWo21
TFWLczOJKgD3sKnnn4aJ6Cs++FR/+SkGqyjcgwCpIAkBD9QH7/B3wQLBMBEX
w5I0UBCiDe/tmq/fWRNEsx17FcwHycY3J3s99YR7/h0H9uOzH219dBcqTmfV
R/inLStiIUCs5nuHVtwfdixBUM+HtEI6/n9S6NCHt/JFGI70Qa2Ejfzlg9dl
2SurW8FmDAY9MdP6GHmliXaFP7HQmI5enclOqMVI8KXkty5GYhv5Zy1Gomd0
8DFmdPBbZvRfjVean4QfeX/+F22vSffH5cV0Gw9apGXl5JCT3B+dwB3X/0cg
aAOgaIHeedddJDXcpjP+9R93GEt4xj7qjNx47tqKpFuwHdhM6M6tGP3kmjjT
B7ZiP9J0iSR9RaU+6Kb9mL2tKa+Ouejh/j8+rBnGR4cVB7kXtbY7NOOotoX/
tvR72R3wnv7vIsj2xh6sf2PN7FpJzm85DcneKbf6lw9t5QtqBaXlxkIuWf+E
S19SHsh/0/rDf1hCGEmkMrmD190CeQvrdCYfuAVf6FbWm/ZajOIOnEIXYwjT
4wTYQUfKWr657LI0Rt7KN5PrU277gyWBL9xOVB8+Fmhl6fFbe0ZJ5ib0h5AE
zP7KHrqaG+YTcoyJ5vK7SgjUxLIN/w1UC22nxsFqWcbdeBizgLCNZBnXUL//
aGyMH8Cvlvy5fC2zj7+WS1uxcGwxa4BJlLDg8XFcdvvqmrBs2kKQVPNJ7mpq
GFBwH7PZOrY89La6oICWWBKQiyny3BnruXgUcEbY9vZvbTuSYR1MvVlmzAdR
CCJGKHiwOdAHH2cRxGBr8Uxi6K3Nzh96neOL0SwNF8lK8a4UsBLkm1R39clF
RvOoMRqTE/F7jgPzhxJT7ts4iHdH/7nAEsg2uLk9jGagKzaEBzy8UDw9BvFp
VBRojNag9ItdJ/NPvQeLJdFPASJMJMjQWYbJSIP1Zjka3QauYU2f3GZa6YSi
Vv+kKZ9h823CVFGHWPLrry61GKMkjjEdY8b29cpDc3TZzRyWGoc8Mw/dJ5Ak
G2Luh+TzgZlRCF1oA3ex6BeNaEq5uhuIrNIL6qTFfW7kgMI01vZgSImgc8vS
FkUXh/LC+CEdpLE80BXbpvx8Q5hv0ltYZkS3c25MW6CrWivoh4zXEvRpQ0Gp
SXVSbewI1XtMy7ENC8kkOYfO31pntrXtVBRx5403nZgpnXwJo08xMKdlOU+/
fvHy2T4jCaVJdTsbXZXFjEGcuPLonzS6z93Pm+9ls6dtqcG99cczLAfW9dYf
zzoemMCXvKRs7Ou/pAzqHzan1Z3o/gYM0HfHt5ruNW6A1Jl6efK1FUmh8zUd
nP7j2qkXH94dZyOtk1S6ZNDGsDSoasRFOX518kH9GLOtrFIzCzRRxh7b+kY2
nTvU4487aTvrSOZ5MOkNNLLftad2wXvLiN1GfBCdncKeQkJjhtlrlb39ohOx
cLJIEVvDtNDean49oF/RPztMDgPwR5s5ZwpG0yAy5wUVXxnFm+WjHKgYjhXh
YfuENFsbAYySBCYkjyFyp5PGbfkYa6Yw67NBPo+BxRbAZk4kaZhjl8M3zJP0
JmLjWDRcP9hIgDrNSpiIbmYTFAN3/AI4c1BdaO7X2I2hY7TAKrRF95LtX8a8
h3kvcBjPEO9J4kfyaif5D1Ww7v7PVTH7DxTmygzRassUpG9CIdUVF8V1+83p
iyNXwcaUtASWBDtLotOaBGmHhMDHD+HGIA8P4HEoBElnatmGFelqNPHN69OB
lwFhViEQAXUFQ7NT2Tz36qlYcZnlk52O3EG4uesGlXR3ki6PUAZIRVf//Odu
3zWiptP6eOe9u//z9BojUsyVlyrqLk/SXE47Q5jfUkVbo7oEmEWVCgNZOVmS
3HIuEEwprGIPyQWKWVAOBc5q7EVb6IEYkrCYBShN8ZAUgZ/mvi22n8GWXRHt
FGjHtYBecRuEt6RxrgzR4mtq4cFUnClld0uUBV79/jIoJ7MSclQjU0NJWCWl
2VKvNvYqmuCzw+2tihUzDfGdnVzu4H+wLsDV1BVN8zDYwgQ+upRv8vEOKxzS
ID0a3Mvz29pV34nHuVHcj/dZN3mxd3ZwlpyenRwefcUFi3t91AWVjWH39Gi4
lVA/kgrW1W9110kC5fU6L8a3q1eLMtcQLC8gxXAtpjvN16SMXbLhZZRH3h3c
AlN//75Hu8E3dzyAvWwurQXeGdsTjIB58C02sYOfDrC4PX3Kh4I2ytPIIu3G
8x4wgA05B9xzQeGP40X2bSTS9vDBcMvojWEShauqulxjbEaaffdoe5Ozwzgh
L+Ewb9mww0bOra/dDoV6f5K0XLVZ8pWYebDiEXdkcvNAH6vTt0z55+ntpEjH
SKqf7p4ePH748uTZxvoHosek316hChr6kWTBX6UqRlcKpGVBHy/Pvvx8A8d2
bL5PvqYb3uM26V3bbjsrwedQl/0HMBVYjv2Mb6jMK+muPxdsq/QZECwjiQey
Yp27tLZDS9B1Zx/nsL25vTXYfDjYeny2ubmD/9sabm5u/iDLqI8MPo7J2Vn2
8LOtra4/vW5s5borhs+sfnKJLR+cbj96zL0CxVuLU6fVuJ1Pf9ARbOXjJLU2
xFYj1Bq59eW8MFynDZhTxAcP7+30691nz1yGG9N3RSwlMrYNR/ZQ0EUMrVGg
EDrYOEwZj+CpelmVHvsTOySO5ByBVQjgArdykM8GuJot0B4B9OnPN5U5rDRy
P9+9UiKJvxokQlorThDRSXJ/VpZF6QVyxiMtOQBgrMvF16ZGge3b0zIaqb6C
WtHosTJGO2TuxGYebm4mT9OxOS87JsbbwBJncluw6jy1ZpedSnn7lbPZ1mWL
HRB17ic3ZYEGZ6o3IqXl6tEQFcO8vsfTgquTj/neZddkMreIy7iuri4dhedX
Ga1RTHuhGT1IvizK83wMUkTrfBjcQmofFKWqwqpUH5sXbiRqUwS2qedR/Ts7
FWP0c1IH2aNCmaMpomFT9q5Ztuw2VutlzevGdV1/ozD39tFox5cwA0FOlrLJ
bskuXZucRaNGeHKLBjy9wk8t8FJzZQw7UkvTEFjaVgb+soezlf94QLoxwtUQ
xJpbA4eGrNl3EcRglfxD6aHI+5bfK8ZC7jNtwd4ZoSlT4+I+7WFtsJW+U7hk
1E0NMRU68icYCGhq4VRB+C1v53VxWabzK8E/AZKFF3teZYtxMSgRJniazAxS
QkPYbK7dsmQf3JRQ3GMDgMlwiLUou6ugb5ckRBihP3Y+7NnQdciZmDvW5Y7c
3WweBnzBprY0dLplVhEvC85yzLRy9mIzrBY22mszpKzS4JryykZ4dUDeAQXG
rzASG5pcca/+uFzX73dB0ZvCkVAVPmJbZLWHiuvBY9KODw+7Qs+SMYjtR3LL
HIrtEqwoVTCpQnqpllwmQRo7k3Zf7aDefh9FQz77w6oXxyvVC/msm/iyMjQV
SOWrm2BNYrUqse1UiaRLpA+fy/arTz+9/+Vi/+uvXs5O3h49ONh6uPetGO2W
6xz8hCU7+G1IeOSRj2A/vKMBcbUydLJSGYqpQysUInkE5Dd8xOwaCNqfotTm
Wzavy3Z9aZUVE++WZ+rO7yDq41X2JMpwnP8x9GylIugbYEKSYWJ2djZRqAoX
HLwjlF9JtobWObBT1tyiSIMYBUT4SWNXNVlXa2HbbSpVkpSk3mydtCZ5SOdb
Ngs8NDzkjUgn63O5hCU5cB4553Y5WOF2ibzkPC/oM+u8QENyTG1qWJZFJUNb
bMRfpSHfU3RVEX6+RScw/itn9EuO/753+snWphSwtHIAikIrmAfvoUkFNdhT
2meZ5tNK14pMeXD5yMeKnBW+7bqGicFossBNE9QRWctbFXFafnznVbOTVv/V
wYf4r0RGmyXk5mUTBSIpZBfpYlLrqxTOScBc8BZ6r8tuS/GtlkKafal4enqi
t4S05VhdOwm9xWuPzIZDjmW/JdkV00rLLPYVO0rib2FFKRJmHP5umbIhQ3mu
5FXsvpu0DEATZWzCAmAzVH7czUTXaLmBKnK/lYkKqQMlOvu6nX88mawbQpRW
sevkHwO3y7ijw6gVTJ3MdQ1gUhxiDWAN3jM6HhJKhzF3CO1KZUcoymlp2RG/
VoBcb9fLfHEO94BLbHiRYV72dbT0h6NZTKr6bkgW3VFB/Aw7X2eEJuI5pRCZ
OiPDE4tbPuoq3UKLjB3K+MSQf6nndB6VT+CyLBYEmENmi6oceB/UZj3bWPws
qzGubFBh0/A63YFGfvYonafnOQEpBeV381oDegUnsPT4GdobJlyWjBjEMAig
kEhGwfRG/d3cU3htxPsjr2Jb5lfxIRKsCwiGsqwugE6Nx4H1iObmZ68wdTo4
Pesne8+P8T+nDHBzundwHLFxmkOKUE6knAlQb6RHm8g+odq3lzJtH6PKFkky
bitZa9hAWSsJayaY4iVbKIKPI9UkrZhL4zgjC0QGi1QvGpNjVzAV1gNp7d7z
vah4F73wdps1UjKuAynQeLXwD09AoFOd1zFlUnEVW4PI3jyL80PduzPi6N95
BouB6BBrG6oPVhmqH759ez/EHPg4puqDpqkaMQ7+SeZqqs9r3shny4zQB/88
I/QGvGyob29tkzSeVG2RllE9xiKcya7VDuzQZEnuVfKlFbNscRuZuwn2WcxI
vMOhL2YWtHmIs06knk7fvCPFCEBXCNarqLJP1aJtPUpeuraS57TiZyQlNYYZ
lQk/8mDvhZt7j2AGHbSIL3JMJoLSSLUCrADfxIKORKPjX2jF4igUA06kceuU
cnCxKGmQG2p8NvK4FwOf5kKsBj2YKCda3FyJopgI7tubXUx94IPz8e6W028k
RXCQS8flrHSNlJjg8J7vIYWLEnNjQk98BntjC8JYsSaXQsr+pD02TdCJtaor
YpkDC/N2PKcGlJw6c33Ybn2HQ15SuLXe72D4cY0nooBFDQqooSQm78HMpakO
2bsV8zNZla3R5Vrep//7nU/aub1ssYyUIF6SY9gKt0ob2IHsUE+vGV1AT+7d
mW9t4h1ZKcVyZsrW5vJlMsciDIA5u8pCwf0Ohm9LllQMj9FF1OLSliqgH98Y
7lnDDz6KNdyu4r+I7duOt9Xgeqrt3O5xiY+Rs/K7mHpPl8a9wP20S7rU2Nse
8gpya93d+VFb5v/Rj0b9bA82nwy2HgSmellcZzLOlpmMl9gjXhtNU4LlcZtc
2cd4VhUIp2XtCv2tLMkoVw45uz14vmVYT5vtrzX5Qw3Hv6Dc+wuY19VMwXOT
KE2SNNuXMQGvfAMv4fKig1YWGhvJZhWVMBP5fIoBrhRci4y4Lgp2QJKYmNba
8ku21JJBQaPT67mSIlT8Q8L/Hg63hltbFouMOQNFAbVVv1DhvejMnojFY5I2
APJIsiX3YnadF4sKHnVpqiIMV6CVDrNhX/vI+TAkf/lz+OGrlg9FwOZCG7Gz
wJtlyzepSvV+8a871dpIdeoGjMRqsST4k5JAoilqDU7XQ+NRfk5CrOHVKUhW
kzfNsu1ThDhHC55Jq3OEnzCTW3AJ10ehJxeAn8aafG3yZV1lGzlkYRIrLKTL
EQvTWA0GslO6/ek1c29jw24g2yPNmJK2atqOtKR2rtHAhli3ZXYFJ7n3mCxU
xTRzFYqqaKZpezYpx0gtTRe1NAGTQw2UeJgiKlYaHRMfTxj0ZR7OarzvAav7
19WA3zcRHK0vxkhL5naKqHYl3pBVhQfqq5IUca+GmhRaszmaJuIKcznvw/9P
99vSVrHbdMRo5lb5NpdCMYDWhMvftHiSj2l3tSUpM76nMCBM6I8ej1hnur0N
CwECTBAvy5sMFo0LuNmq3xZD2dZKLCydkBnjBNAqo08SDnJgM18tzEAonuNu
QLM1h9WQepYqBW2uroXR9wm/YJZlLGiGBailJwMHqusgpwOCJc0VWBezQvK8
pKSv5aMFFj8zFl/Sq9TnbA24sMIz3SiyG6L5tp9cSW41jZG0/+LcKhvRRVgD
L546Ya0Ue6mQI1AHbeUMZEaE04vYprNidjstFha2/TarB8b8IYMS2i1OAbNQ
TQdE6xzQqoSbQnkrsdxhm2rb/MSHoAwwOh0d5LTIBiyn/uwd/aGhOVMfjDNp
oHHSZw6QM/EROQMMTvyvD8Kp/pXXI0CcHzZ3r23104LOojA3fzQX+1OloYa4
dJHG4E2gdn0WqGwZoH+096nevONowzcldXdqkYRWYyQ1+2wBGFxntHFQwY8/
z4EDyGrBB1vRJ6ep3qlP9UkLYOE6b8ZBCtd5Mw5M2Bx6+9oO9I8+JHJS1ngz
WPXVb3p/bZy4VV852shncfDD9V+Pgh7GX1fQtA2UQ5f73sQ1XIls9lHOvgVT
+8+1kN28Ptm1erc+Y6Nt0JoIoGHrafJnsPabPIGTtgksH+0yBES3n/qp5L9r
P0cpAezdkZZ94b1Z/d6jbUdJ2A5REuZlgcInSsNtCmNQcJ6lheWoZQ27vk0f
Rr9UvK6GhwS16zzwhOzfzLPEF6T8LLa3NXyQbFCJnpus7HHM+qhYoDseq0fS
E9uJeQC/Pzn49uXhycG+iYNo2LnycWbe9NoWi7dXOjBsg0OmTLfKhXvXFlG4
WtIYBRSdvdh/kTDK73DIVRKQBWH0Q1ijsb24cOjdJg1idJVn1xrkJ1ykJRq5
qgUReCzcQ8POHoY9wVGc1aAKseGhzZSASoIrG8yBnbacLplCzJs+0l6vEccZ
VgWR9Q91q4i1K1ClzLEmm5U90I2lhP7bF54Xtn0hbXCK6oFqM0cCEbzdUzn7
fF38Upvs5dL1ItLLRnnNNWpf6EJAHNBlF1D23ab6iz2RDxRqam41m6UW/C1C
N7BYU1zsggCeRaNblqRinqoSxoGN27iwuaNm6mRlA2at+U5hv4TpGQ5j1HOZ
bairwUe+8SJG5ZzKurNToqUtF4vTa/Gp8j5X2cxFBJ/reMDGaTVe7p1oFKt0
bJIMuM/2qG9cFr2MnGqysyLO3BTmnV+jx9zGTnEvvK9kI+n175jL2rJCdP0r
KdIr0R8mal0HXQz8KItIqLm3EkE8+0BHnDc/XbKKjkHEYm6ay3fHRdkldA4X
DGoPCtHXYLnCG8PnyxSMp+nqYi/+UFSN4EadlnY8vwTIPVxLZXKNJj3awCAY
+gekoxkXtv0yap9UZiDtV/KLTCW2qwYwqeMlZF/KkKG52se15G+35af5RJGG
HXItr96Y1Dy3FHh5+TAdk2cCiewVoPwW7cjWqWzJOiOznYXYI30b3kORg7Qw
FFKOvvkaKbIEcNm00cAaZ2TF7O08Lw27C49omf1sqn7aAnNJ8gpblo2iURjj
sBc7JDOgLFMB37SXPwZY45cpvy5yiXRLk7K4XDSPg+EqsfpwhvNAS8XsvCD4
xvI8x7dvrWma2kaDdSm4PPlMsmaRklJ0kaqLCt1DxzXeuujOrVO1ra2u1bL6
bQ3hAc7UKoQeDtN19AVWVxMYnoErz1r1IwIciQ9rlaLjnE4H4Esubop7hC99
MzBFlGVvoQfMKA2K2P0dM16M5CZ+ZbrkIN+Hzt9YHCpHoW4+pGDFLykEdnUs
6rAjr4Uxjt67jpnQeRc3g581Zi+/CDlBRGRrOGFsyhQrmI2r5q2kcYidzbAc
mNnPhe9BWJ+F+EeZDPxLVU/ojOGhW8uJPQz6oFt4LqFOxuzsxzIarWz/xX7C
pURAK0uSUKKNpVME+f4nyyFFzuQRC/tkRXotcX2AgOTfyJN1ARk+ICTOD9n9
sHg4t6TNqM+Nqvf7QjKcrAnJECIyuCREK8evCcDgLcXdsRfsYcWR22wEC68r
0AejYp5zkJ6VqCJ4Bt5QlkEZrCkgROCrqoWcCY155fuYN0KQhB5sdk3YxuSZ
9TAVKA7LU12bUQIGnAC2hpMT2pppsDPNvBJTitSKcw62wVu4Jk6Dw3DwdcyN
II2611xXVT449zDnSRChjCsdvO2J6gaPSUmvy40BNK1ltS+DmSJ9XwFwJLeM
DidHflvsCXV7rfy6DhVqhz/Y8aVsUQa8IS8RFeQeLa3jqTH6GmRGzp5Vbd/W
DW+4JJOkYgMoy5QEVS+0sLVwLdIDgul3B5Tim26oiiehNhhKzyIms2+JSkCz
1CRTUbKN044NqOsSIc3L4AYPVSCWL2uXXrFq0xWLDxd5WX1wl67m66KKXRGy
4egbscwU6Gl5DSMK6jK2JK2furgcj+XsKlsWmaxDtqJhMx89QPnkfy5cx2o0
QAvXUf5+cB3bg01E7Djb3N558NnOgyfD7QeP/ilwHUsrTq+L0WEQPXiDl0ZQ
r/gSpGrauX/8fhiHvy3WGw8UNbMO7Ee5DPbjZAXsR6hVWGvvCWtUxpPkAAq0
CfgOht6TEF/Eh/i4G9jIKitwc24xO21TWQmssyANUaBjO9BIYJhVD+arEFHu
ql5Z6A7aDnE0VG7o9Vr21Kiq+qihIDZNqkpeco5fqzZKp5Kdg9Ja0+WDo1xR
e54Ow90MsJYxo3fTVwsQmoVOlyeXtRllxUZYFU6Sd5ywyaYDi27DDHnCGgLm
2u3AwbcNUToAR4g69ppWmbHyifDU2hEnwY9ZhoQ3nP+q7RWWi/Alw+FJTgKJ
3snSJN1JbasW43Fzke36YiIzNhepCm+Zg1reuO2ziae8RC3sN2XKgFP58MZU
q5ms/OucwJ6rFgaNL21YtvlsuThvTofFzKE11/mWubF42i1hq/kycDSj1Wl4
ZGXpXiItJmL1JFWx326O8MXPVcZPsxEhy46u2KGTxa0bWWZOJ80oz3gwXSxt
utYdXjYKicA1lKXvesSzzZJ3mgCpg/VFWIaJWkdizxwsD5xvUlxeglhJaDNm
Cl13508X5wPf7ItVnGjOdLLO8d6Xpcy7Mdw+LqcQhuWqYqXucopmD+wWDzDO
UxlD4VO2vCq2jsOVDJ0lC2bYFAb/kyK5AeJNr2/woVhTjOtkqBLAjoR2bLXs
USyFmQVTaMU3aJBkZsFxtGCmgW+MuZhOVZtx+HFguO0nX/yvwSD57rvvMG6L
4SanQEUMlCg2v4OgBX00u+N/HrPn4eHWIxVns8PTPeS9knhCQXI0dV0ajt3A
8havB4nffERZg8wG2Bpa5Q9VKgFDL6gojagcRczfgLKSOW2dAbaAatRmR/XG
R7wUqWdJpFAMrkBhkTSAkFbG3RrxpYs478MjYXhIBsRwgleLT8SDx49BPoI/
cEUGFGSAeFFU1iBT8E5XNuiAslFSV6lDa8i0rHJ7LWjqR9OY/zW15DbNGBYG
WmjVjANteLVWulKzdSrysnzcNpW7gZDZneczYtNEjZfDU/5foZfKDWnXTSOn
f6muKooPHDXf/u3IpcnT6kWYw3JCzORm14F8ueSXU3O+m+Eu2ggfdVFmuHLE
pYWIIx4VkCJYV67NikIEKVWLcl6gaTGlLKfJarYU+ixZshhThlwUrExr89aW
LqPvI4UzsQm5AfhDmBPlCXeRhT3u3JNgDXqZaog8c2UOE8SUakOvRKLnR70a
uwouc7zk4Mdsmp4lk4LAlBOxr5ZxW6IcPh8SBUZLtK1ybCh3S7/xWJ9QQYMN
RIsIue2K2sbELAkGWMwt5iSRCCOwacGWBtv6tY5kaShGsu5kIRbDMG+a9fik
vwlJrz3KyXHkNgx1XffORO5hfa7373vR823wdEiAa9t9C5kSxMtK3+jJR5G1
ukrf0K3QOVDw901ajqNJ68OkJVo1MhrtsfFxiFQsmtsKgvn2oOo0aVGuXsZ6
w0dB6y+9WFrflbjSdOKOPcxL5JmTg69YpiFgNHVAGsLNtSabQLHdXKrVIk6I
Ba/C9RxFQW7/xxeEJInxQ+Sh/m/tGYti/OEFsbX8A6udDKtlsTsJYx9bGpNj
8IcVylaPHw/TP234DbGRCdGdRMd1qEqreNnANnVgggVorTYYl0HfCoK39Xgp
Enlj1iFmDyNuhmGAog+t5XWQUBFG+jIyJNVltZoks3QusJjORvB2yCDRdePH
hbTF+ilRGBOYzzRsCOUBLZFzW6B9bN8EPd0QvvcZwgPxZ23ijX3cYF4mZXrj
8EGXAcdcFxMlTJhcNR6aA3WzOG8UcqeqWPmbgtKnjm4OIbxcsHYTYjSQ1kF6
EW8NS5+bDzaBmR4gsKmpn+6QADfuV4QRy7kZ/UT+LNUHBC4BghfMHP4cpUim
sO58kDOGp0/MHVb2sblNkmKDEnpK38rsGVPYHsAAmQ/JqEuSUY3BtuB8TMws
IxfNgt2zEoucBG+mdgn6QcTKFOQxljVcZRNKIKOR4uHBnjGjzdqGYOuzuU2d
IuUKoQbT5nTCodHtKbMLBAVKCWPKeji95Wsutm8QXeIA5ekuSXQRWKUl8ING
aKdIHouD4/IVYq0SYRUvkQ2m5JOIR51RNmlbdTke59Tz8UEUUE/KW8+nsmdg
+RuLY1G6b9JS4Uz6yaCIu2R9hnQ/47bN8cIqrpKzucoc7oR8G8A71aBLVvWV
snvNVC3ygh2GNNl6XAmonY9gZPlbt9K5FZUGEAHfdNqtP60gqcIPu/lTEMwn
/ohGRt09LzBVwMmYzvX61h+BTi9k6p6Pvs95nXjfWJFpBFsT09Ahgs7o72zD
ZnGxrrkJ8A4PkQd3HpKUhn6rCXtB6PBJ93hrM/CdsYxqoCB3EAGQLrqBg1UX
QAYbgSy/cah3WhG2DhZxbLEgiifFca9YNh8luXsETg4ooYM7t4BQbK+bs9gV
xVDlLKf5jIE6jzA1FiaJGm1w9uN0em8XvVmROg3NUgyqVENdeAW5ZLTQFuHq
8NaasNRmoLWZDFyEssAK9MiMRBiLhaJK22OS2CpDnuXI+CGN03QGQoMHue7h
sp0405O4zEKMIRvOrUB6vZvWkioZEYKiuZNrZUx6fGR58odxnG1vbiYv/m5j
N/lOsjsRzzy6NFSySBOy3MuClQ01fhiSY0Is52WAjnu7TXxnkb2ax8HEKHCa
28wc30jYbxusuiOgq8nz/M2o+mwwzafZf3hicVN8CI12QxaUm34nVbU9ADKO
YFnfXKk65sQhSIkQ0K4GoQkG4UQ7qjQDC3tANjIzfyMxKomLF1fFejfNkQgJ
JwkvDnbTpb4MO042slJgTOAKoK+Mkb4fJLap9RNLmaVSfKRtxlojiWoWpILf
pLesFEXt3w0ti7YrBgumGLSvqCm9rLEVu/HVbC8t1Cxt7xVNMQh/LiEwIIQG
c9RRdjTbEgMzYsxZoeYXzfpn8r/yuPc/uowsHckJDYmbR1YtjCf2gSccBqcV
YYo+OaeqIGqFNnJBO4B9D2bT84jlafLVwZnBVxwuldZr5T62wW//msJ7cE1U
E7nBJQwuTghlp9Z6tUeGB855kUItDD6BnFYSApbeHkxFJgtSYkL23z46963N
4fsUl7SGYaj8zfZmVs3/8J52vm3r2PlgbX+jVU94KVC20RvocYZeEmoWSQ+h
8aI9DGS0ugDqRtWvu6OUbLHVAJ/7a4cqX/1BHeHaaHm8t7vXbq380FN5J6Qk
5BdAXxNEuEDkFs80VrWjbHMB3XRGdRomty2OdSJaZHUFMubMhb1+jOn1rVjt
aT2mrZjQR+3vha2HtfgOOeBsNCnED9jMyl06RaPZaDpe+Z1sGOe2wQwJyL5f
JffcWy8dI2SXQNNM+v7R9uebZCNkrGdZFQF7PuVNgHYdnKcFdz5mySBEdn7w
PqwLxCFMcwn7rkBzUZaA2MHhxGQ5NDat0AOOUStgOVgTwPrQ1nIZENw7PRZV
DsyenhWJgT10H1vMZavNMlSxJz41SmpaQGNalvk8hW3ANPMK09gL9paqnC0z
C84MM4NoDNCHnNaslzGyGoU8V6FS6/WN6AT4scpYbAiacdRYA5La+PGQVDvv
zCGK4cPRjwck2/EgW1ue33XIsWs9r6Bi7zz+pU0nyY/xs9sOAmneU9fbAKmt
fMlNSSFFItSfUFIzliam5PptOoRKG6jIWrrC9EwGfLzXbxv+b2C2vVb1PMws
QuaVfNA8vlAtRmhK8tvWRhwL4dL8xrXxWm1OY2+XlesNc1l7d16aJXiLD5w4
YU+mg/K4MjUBIgj7AX1vLykakyI8y4CmlsiYGUQPaGRQtJasRZb7rGcia4gY
vm58d2OZ+A9M9EHLKNaCzlojd2sWZBW5VPxGnjrF2Se7LoQmv0gucyySR0zL
BRJzcSoSsoyCpMmZe9qG6YRlry3vWssAQjY8CqyYoHXQNIJs9zxzpn4qEush
meBozFO46Sb3QOHnV7bAhimDKZg7yO+9FDXPSWBzCJwKFQRDRQrL6ubcbL3c
twa8RlGiMbADd3VryEhOyHpp7b2orJaMucfDrXBRnDF0cos27e1hcii2orj/
3tlsUnnlAQyFTU+xiKgPHg2jgNYU7ea7jT113iILmkPbqLoXoic9VEvX3nIY
+7dufJqXBhZmatkIQgWNKMIcFQZas5NuL1gpB7xwbeC9NOC5Nb5ZbyaPMSyI
wHgIFnrOlhmss3llcGnTc5BVgZLDfwhhzflD/SE1zjuGkiL0Gy969/jkxavD
08MXR7vP5NJ2JY/JkAcR073D14y5DVOpaAamFGgxGi1KOIALWwfdv1+1ywUN
AQLKLK1Q3NZJYFHpw7PAR5+AqSMxqctbHadingkAGGwv5HQts7mB/0ibrZlC
oG05QZ9Fg6+lfQfBpmmx9MHlloSp5hTDqWvIWYodK8No1k9YlapWGtHjLMOT
p4392GNwLZZK4/tqgEZICIy/a6lXI/0aJ4orYgN21HajP02kIxPfa9eQE8gE
lLhwka/spbowtyAAlegG9ICXuav2Epq4dHY8IFPV3Sx50Q7++Ja9lnWJG8dw
VdQ6wM2pOEBzi6fJL+8gycjoE95VHJ1JmNBEypiPYe7q6YFg05hIUKDKVizB
lnAgOK/3f+R0F23lo6PebuZbQbLaBXEVjicGqoi3cZlUre1aCHIQsTk6F7y1
ezQ8qb9V9haNqOsco4HPwPNSUc7IYoTeARpSqoIu4Txi7AOIDRIk5r3Jkya0
ofOMfJ99A0bYkO8dgGlwXiMeOVnjFsXXkN+PQliVa6Thl4ySWbQwW5i9D3GT
nIVihI4wtTJaxMeKWUBxd1sz4icABfPmdU/Fyw7DrGB5OMIFSVbhok72fLBL
QWUS+4Xn4ymkXllxHeygEofbq2gvAcLsR5Ewg3LpufFXx/EvbXVjNxS/Wvs6
/Xsl0iuW3Kz+ZLEeDTO3aUGO/JxqA427Q7tH+w66wLe1rCBMVt0Pm/xIFMeZ
ktoU/rDjiL7f5zAMvpzoJPW8rpW2V0XDiMIujWidzy6wkgJidMJB7jfMCjr4
RBXlxsiRmQOa1GhyS+qg9226fwQtrvNyXnCcydwhunjEQIU8WFoQi9VqUBEP
0sI/G0r0JTS6u4mzJgIzRlMiq+FjxcoInE7C4OckznCFuJucT+GXu89ODwxC
50fTF5404F9JPjZbxuRMAqz7kaXLqzAKpiWpkw8tahQ2V98WUBRUjRV76jNG
q8hZIBu7X455PVutFWRGKxCYQqTVnCdRZZHjZ/L6XBWTw3Gz5McKDWNtfeKD
9aQWXURoTFQVaQ0pCETwZaqI1/6/jCYSrMqqJLI7KyIHETfC/0ClJFtLKfHJ
y2qdxKKNxbzFruZ34CWwkDDik28L0UQ8Dq2y8KgaHnk/ez85s/fqlF7YMb5M
/jPmNB8kZ2InRGZkne2hB/1Rw4Puec3TxgTQ+o1BmjhSEM/KWz0Pwvuw7u0w
hFkM50DxUGLG9BlMZhJhTUQRRR9vUsmOEhyTYGXrtLwE3iYWPmWe89ItPL5N
BWhNiDewL5NYYGP7MD6TkV14Qsbmeufyy8InjL+3n0zyioOriRAmnO9ZuWNq
YslxSamuEJpe7Vt+LKxfVlnpJ6YRs2Ii2iiPgtULGnWlhjAhPlQ7UjSWc1lM
wV6Teq+qVTkv/ga/2aNquHRCEGhK3pRiyZT2wIwTEWju4su/kyP/Tl78O7nw
7+S/v5PzXtpXnlbhJJY+sCZ0F0+6chU3WnOu5yXVLYPW2h22jwwNPva6aXhq
Y9qCJOe0EWOnoIUve6Gx/vwc6YsrRkteRV+v08fEmG7k3MD3u1Q9E/YdH0AU
DdQHugo2fmmi3GHtNCZNb21ssrF/CVFDlE6WRAnjnmrTO0eWVdolqdyFtAke
YQDr7svCEkvExhglFWPXP0HjP8Fi+k6E5lSNzej8trFyoSQeqcIzDBkarPYI
VZ59jD3ct3WwkmdwiBeoymzs7e8/64nK8ngLdV8KzzQaqFVkzVzj2GT+PIaY
DqWCwd14FL908rKrz+XSTn0lSlf965shUGBEBgyhzkeKmwRjqQTVAo1l4s0k
nJMtAQKTP61aYROaavJYg0LBwDaoNsEmmMBKz5IRbqPEbDOhMR7KBVvAds1p
Ibd/Q0RCwUPlHMbbF/3UjH2C0gABg5JLDm9kJflaYjKaFGJ/NOBkjHSZUdLs
1QLW0ARUf7H3Yv8geXrw1eHR6V9QWfFkgeTPTt1wQvsCc0zMxx4cQ813iwoL
WVUjQH1Asdx96W6pfEVCOY/q4GgfxmRpsb5WhgrjaaZtji7c0sha1bU6uDrf
AU5H1wpYXSvkjcVoqiiBknRNxQ2j4isaBZufluOo6GYeN9BWXrB/I8o2oEM2
AQ9zN1h26ZEa3Up0zHzJrJOPbBymSS0HaiS2WFMKkW+rSiYxGZXNeTJ0Jl1b
U5BKcIRQhjXvNXMN/fkpBmBHIYSwwrvE43PV3VyWVDy1z5sJpe6b82SBcBoQ
f/gyyf2E3eUtJhNnfYbsfgbmgxaOTNmqPgP9zT5N//L+8U0I/njX0rND00EM
DebzwdZ2BA2/iT8jyx8iAvpESZGAfxVjgTnZhkoeOFSnJadx7QO+hgTbIoQn
ncB86QGcL2F+ehxqQ5whE47BqA4MuQ0btFetRtvvHCmKxl6F0d8PrIuuZZ7r
hBsGGWSeFIdc7U5iWTAAlV67s4rRy5ANp4/yeWuhM5cfVfKivB0AI0kXE7i6
962YYCIT2EYX+YZsIOpzY0FsvCBfhM+LbSTygvmG3+Ch/9XYEhMtevw1tBPC
t78m//t/2zTUwTSdE+1aLoxUawkjvMTtsEQW3B2N2JVqIi4kUKkyjNQy2+wc
hWV2ITY7pz3IWxnQPfThEPs78yBZhDeagliiHnKOosUIVwWIwnGJsMLxss7l
rU77sPOC+LXpkichCDDsE6A4OTVIFjZoOkuEjeX30Fx8p2cRhTDxTqYiXF9w
BgQZqrnomS9xEbpF4w5YQ+WVGPMoIME1llGB0t043IJIX9Yd5EfVFWXin1cD
pyDHBCdnvCbB1B3G56FnvkIbWOOy2ilYo7oX7GaoYCMK9g85KaYCdkoRydqG
WMq5oDf+cPMJ6KN3zPx9UhL0H3CrnrVOLdipWObIv9auiSWMOnAhuLoXQ7N1
HYa4RNIWEB4XSnyoCsxJJxcHmTcEPSUg4NnYL+vsekYTeDGdLmZGD6PlFsUr
y9CPob3VTYVX+7dVkXbK47yWsmhec8zOZMOussmcQUdgDdPJLUHnOLBdjlgm
jsn0OJQL7HkaFYuJH27tQKOSNMgsNVFIOKI/3H3xBRw1QTsDHw3rD3hVwlkt
Yd8c8QYCw2ICw7u2ODfZzBTSCbac0lBQjPFJpv04YHfaClC9fx8FwjXH1pMJ
BlE5RCv9siLdQMruLo0VuIOCz839C2n4Zv4foOLb6ICQE67r70/+VRz+Gt/V
qocRxb6KKPZ31DkOJWKmqckp9mELfBj3JnmImrjk2NtQf0mO2oEBMDXZ4kGt
jihEdhhOavBAZ+230EI9ypwqKwJi3R5kv3Jw8E8dyuR7fbPW6W2gpBWZWc8i
DtQWZNKD61k1rWE8PBbPpHv194h/vUsBeBt3GtR49xxuyix+l+DX3zMO9/cN
wuXFuB8x9AjXwigGxCpc1Mksg6MOL03MFQqcLA7XVd7CqCYsZDMW+IhmSMzX
xt8cwY/Y55PqwH7DOJiHS5EkHObrMigJPzgoIvvZ/AOF6hFJY2i+2EDUi+M3
/o6IDSqw1Q+oojlZE0AspkOHSIQffhr9g4I83F6psAzZx4QjFuzf/MerbDaG
daFADhXW4d72m3yHIf+uKRA7rvNRRm/bMA/9drLxzclez73gvsDIEEJB9+JC
Pmje3oj9n3fNPw8RXmSW1dCtxX/41GzQP5a86P7o/KjOm4KAWP3i3YYavmgh
I6aIZONQC36/HrEzk8J1avASfkOP2B4QhgHim40QLw8uGnqZVwXV8NST8LV2
CIUfRSpwjy4F6FhzKTiI1K3E77b47YFDD43M9jRm0jXxQ3fCgqIIdk1NHVFu
SVKL1NLLK0eEDQvPgzAXVJ+NjVfbAz2VGqgRcLGh9fDEQZsULiNyEYR4CoGB
TUqH0WQpMCJozco8Cv3JplznTePItvXYtGPax9cMe0KP8rQYq7TjxmQU0uAA
wYkGOGAKrIqh5tkgzFhUlQzgJ9F7BDIv7lGiWodpq2cpgp7UhCARqIdxNs9H
Cnra4lh46b/RctLLJPn4qmKHSlTmfBj0ws8uK7bCOGQKIR4wDnZaEBf0XHkO
eSGs4ipzOWzmQ4C8jj6XkZuwDwDZSFoHia+wkQweCIPLHw8hrv/J4L2x844m
HpOHofO0OJ/fjuO+zeUwJVpFZABN+WqWj3KYBpfJaJ5u0W1ew+ityQbxKJGc
V/pvYwNN51y6DPc3agSNnDt6k4iSMW4J9TMhM6bmWkTEpGA7kr3N4LlAGfKc
AfIcK7wyVIhMvR2a4/NGGtB6BFsiQqswcD9a87RBppfS6DAjbkMdflZcr4pJ
FH5YlQJbl2b6w//vJ5ncvyGYrdiu/40EM2shmGFpgDZ66a3osLM7MSW1G7TX
o6KqhY9ATaNFuc10Izlmq2hqMKnolebQRay/ds0WElUfOXralOXB0CzPWoJy
xmIWMToty5YTp40YdcR33JgCn2HnAPIic12qJ7GTIL8xbe583IGS+motmajs
AbVh5yvTEtdhX/DeH4yBPdXnUicXBsPEZJdxNmKyKmExNo2cLcShX4yybQTW
iiINKkpg1bUuENqJz2KsS04fvS4Eb6mRP/sHY7zxjV2L9XY+SXZxcumorsge
ZTRLYy8z3ya/fhIAOA3m5XRwC+SzYXLS1X+yt3VY1coax8Ka1u7gEkw7BW9r
NyQFdlcKTx3PgkvP8MvTeNhTfk0akzFfZlmyn6eXZToNp1Djd2P+Do/UtKjQ
dJcm4wXzlmiRaK/meAPKzcZ38TRctXasYpfWaagrOcgrD2iX4r3tuzjYxvkM
Rx+wPYK4fUgQtgdYr2NWqOvh3mLdz70r9/j73aOvkP8vmB+eWp912/kY8MNE
qkiJ5r93El10UL/V6SSXZbGgfYw1ar7skM3JPMKuLfzABY7+Na7o2x8c3g6y
2AGs6gBj210r2ds52kp/Yyu2duKqRnR8lHvdZ8/LfuDM8JLImzlKA+MBldgr
l3Z+ns/gMrk3m4UV214P31SvDJB+Mk8cENhH5TUCl3WSpWqihGK4co1inU7S
CnubZTewULgLra0s2yeQjIvS3Mbg0PkNNparBZmuOYzwzQYFaB15/M2V4Hh/
Xdbn0p11fRqz15K4YKIIz5kitLMJQwZCUqvpieYWmh+EXEnzByPCpYZTNeGR
hE1vNBa8p4s9r0F9jfDYWUKAIzG5QPJhct02evc3jm3/bLD5aIgr1e10DH1t
eYM84bSoLgdq698QDBMx+qt5CkJFd1HOdrCBHcqkqHbeTic7s2qHbkFbw91/
gzbmIBvnb5PrEj6gRvMpFeWjl4Ak1sDzLsQZL8+Wo3+jP5W3yYQacO4Gt0BW
PJILMJljRin+5Iw3KctVJa/RbtAMCWufDkbFUdxWYoDzkXy++XBz2OXOrY6S
dM1XO8nJwenZ3oujLykUAJFf6OH34bRC2cSb3fWoXD492S4eG58kFcWdhnWg
TRgG/thobl1U3ZZXwjhABGEX0UFuhHpdZeGIiaCxGmaktCbw9k7i26lPsinq
M6coVGfJ37NbkI017o1bsKK8TGcO/SLpHh6cfZnsHh0+301eA3HA1r5C5tyl
YyNJlPTk66+S19n5Dvz6xVVdz3fu36+BBVRDXPwhtHv/5vI+tD1N7/+FxgvP
P4ObCC98ATxlUhc79O3fzPP81C6hemKrp3V2cZHNki/LPKvU+uCPaaHiZ4YX
+MzfqhxPYjUcFdOwsYNJDirEsywtW1pKgHmVfxshWn3s/bMrYIQVTLicZa1N
1PTQ4IYeWjaa53BA0mySnOC/5biyZ6/R5HRUfooL9LcK6FQ2wVzAUfoX3ozg
6N7p3NpbYVB6+XKYFLXEitcJideYMnpO0RrFLCb4y1Xy7zEcTJXakCKGG5C2
rA6NtqCSZ5OLIbVxqOCuTbUHUa3IuoeTgM9R/VOClWAsNGY37NDXyJ3ewCUA
bgec6B4qg/f6/G9y9IJ+Pzn49uXhycE+/k6mGvsLtSBPsR7mfnNv7714/vzg
aJ8bgE8T7yNq4x7ovfdY2L/34viMwGHvsZCuw/tTViaDmsVppaiViP1P946T
rYfJBi729tbWkx7/+vnWZw97hFnBnRFRpj87QoVvMdg/S8k4RFjI6TyvU4xb
sanRaE2R1dsr5rdlfnkF3HbUS4CxbSVEJM4E30FSsGFrybFPJhUCOZIxM05v
5bQrPE+7WI8CG6XoJ9R7x9LdSYaQ5lTHMJeA3AUn6lbFohwxw2ZJhg5vJXpZ
wdcyZs7sS2lTwR+aL8pqkdLB4hWqFoT6xMvDhw00Qg5chLcqr74l63SnFKVI
03x6ug+EjR6nFvCEw8DQ1uR0qYfDkVkAt3j3KqBIl6AGHxskxUqWYCIGg4Kf
3jeJGPT1BpLbCuktNpJljuLKqAdoEejZww+TNzIFDQH+9jQ+x5Dw+LyFn39L
EBfWUAX8lO+oRHfA3k1o3LOihh6JP2FnoCDQLBIn/QjXbXDZ7iHmlKcTM7I4
hyMG9x387EjeOfZ/bInUiSVSIKoqpnb/fnJWzAeT7DqbOAEFBzjacQJITKq1
EicPGxqilaLnoZX5xIC8RUgNvrBQkSlRBZfHSC1/ZRRinc/MiejQDoij8Nha
SnPbGidd20Vtis6VGQzxvpW9KBBH+kRdwEgaPI9RuRP2q/qUTtLF5VSh+Ntg
Vm9ASfepMcrFZN/FnNmK4oIgthN2dzHLmNvxD3Dpi6aWpTqFG0zpj0Qg/k19
3FweWSTkDs0WGXLAolekjBD9I4IQPtp69A+fXwtwdFhlIBLuhR8fm5gkrw26
p/b8eVgTkbb8d73SBxgjP7/1PRSI86ntDmaf8ed9dHVXY8H/ljXfnSXfDR9t
PkmuH/i4dw6ZMbVZ4LQI/oSRLmDNpr4jsH0LreocUrunR8Mt/02ul3G54Hpc
FoCzBEpYJRv7Byc9v2v/bbgth2cvYeyPn2wOw/2zVYuapa+dKRfdZmzn9V9X
L/1E4EoMqQH8boM9GeNBxvXtoYXWV5lwkxTw8OHjntHF7DHyX1xZtlWhRaLd
3X/bna7GSsDpJeEKsxOKOSYEZF5F8XsNIum3QIBb6EsxR5FPoDO94f2w6DH6
MDeVJDlxdtt2UBeyPpsztNMXk+LyNhnwcbFnIlgrPCA7yakGJsA7BnQtHyUH
5hyd8Dl6iufIb2AvnRWYmzNpPLyHJadxqff12fTfDt/Bgxq/Ejsu9o6v2PHi
HOSCiBYYjC+wiei/T6zlj1Q4GPLJs6B7EGHQJNIcEx7EHbodZ2U6q0g/f5be
YkCB8flswJFuNsegrq+sNeRBO80a0I0JDGFr0KdpPhtkXAqlSrb+51Ku3C9B
LzV/DbiIu+j9JgWwJMOhMZGi1pIyEPDNCC838ETkORM3EajQICE02F4AcxSY
ZO5AlRQetv9SqC2vJEzBomsq5X/lYzDBvtERhlXL2PtNxlAjs0tAdSvZh9XC
8IHQtclQwxggODZJ6+H4qgXXsK5U0RPad7O2AUtoyh1+7Mv/T4qTPwop9sil
/peBEoCExrASWpwCkrvk4JKPX534EPetcZydT5LD3aNdjPFxZpuqE6AaqEQG
7UqgN7lMJdeiSUQTVGFFRja+7XTocX3r+EY54ALzaELCFNANTLSjBl9je3+n
9l6eHFZd5+3VbnAprmZwOvDRpOVnX6k/8Z8Tdz+CSiGG3uAP+z6XPfHj2deH
p3Do/mHb8Wq8yoN+O7Enmu0Ykqp/gkqKDi7G/iwbT6OdWP54aztSmjw2nrBK
AqJ8saUg0o4Etng/jBlrsmMjD+h2zAHjAKPYeI4PTjhUxcjY0Xb8kuteO5bn
xMu/e+2sur5wB48xUHB027iGhxbGSmDabUEH78EgGILgQm4DCLZ0UhXDzpc2
+4c7TKlsSGWxeSlziptmPkOZPtg13CyOYVOhFSpYxEoBDab0p2SGQPJGvJyQ
eGknshrlkx2YKrFeiz4RoGQLxM6mAk8MQQMqhndiyJLBC0hnt2Ig9VO4KbaD
w9YI1Y0oF2bxA6ERFAAs6TGLBr1VVTHKXbY421anU+DpOZdkscGDtorc+i2t
jGPixiUnIb0u8jGO/TpLKXInNlmcjstzwsWnKoyy9h50ga7kYNxmoahhck0r
VaSNyhETEBPFpkWWV0y9OBasTDwpKjR9kX9uv5hk14Pv0yJJ6zodvYGmNtKk
W8xRia5ykI6Kc9bcu71ffy1m87S+Qga3r9FoeIiCbamRJiUp1PGSIHJQRkNm
8D8pM1FbWKdvlKYXTPk9k8bvsWouVplSGehGzWinxjegsXlPpfboWEwQcjf5
DCCGpx+tZVCicaoo46orze4gmZMI+XisCpqSAA/QdHKMIr7Oy2I2pTi5JNmt
7CH/oKMieAklntFfzGm5AaGDUj3h3L6RwkZ6/hyrDa9lIF1ycaMMJOVqXBY4
UZtiatsBaQ8pME0HiNWovJ2T9H9A1UXbH7aPUpN5zTbY1DwyuMGIxzcZFx+c
MY0bbMtZBTF09+T4/tE+qH8FSH+zy56MHG4/GuuK2QDPqz3CDoYSPx7KkTvL
pxgKPZ0zYeMW+AQwMUYoELnMCNDrnQPTiORtUQveA357TUhJ2lwFyBm074d7
mnVhAdOaEnzulvz6CXCBn5DdvP8dOZ1tyLA6zim2PA6JEEybFc66+Bj8js83
Ok9ctSqbXaDvxzgvxc6wMV9UV+TO7VPTackshmbV+xg8lMAEGZClvsJ0/eqv
JLLvZzMpqmVSWTf2i9NesktnF8nmsTQBale5mFsmY4PjQTnNEamd6fSpnHq6
0fOSYs/peT9g1F8WdIEozFUqtKuaEjDCi/RN1ijXzJRjUsBjq3oZLzhMmI4v
Sdy5w7uWZzbU7zwDChNxPqW+cI6LRWXQavkBQbuBQ9Ebdl7M4HU4K5ceGkyY
WECoEBYaYoLmCgmOdyjZgeGEamKytoA0rM4nsEhoZ0PkyRlDWSEmNKrGfUZK
RrqNyBYudIVXgHDjKOpSCpOlJHkQNgMQEMmYf55XC64Hk45ICxxbnoVSdLOG
BO5dFJyZaCaeiLxYVJNbpQfqBvEuS2Djbp9rCtTo3SOxQObgEx4UF/iFp0Nj
MGMjGRf2ctKiUCeVOXOFkWLYvU6HP4s9ihJy5VnOZC+7rbVyDTT2zHJ6IKmj
K6prCpTsRjcfFpM9dMkK/fjYmwNy0qKiWe6GYaexLJW4ENOQYJSkQp7ypqzq
I/slGwZG+GeMRdBxVaKFiQVsVmeXTN57necgDiLrb5mz1GiyebURgdNUHmb6
SWEaqa4bK+tBgOa+uq5xCuxnfX+tQvx4NXvhys1Vg4sEl+g8n5lqcjbcjEgm
U7XGVEmIXODw2QTpR5eQVaSNR2oGuWGSUra2hg97w+BKh07QPVWnw7Hnn2BU
sMA1sGlExc/KGYUaTbEZlGVZeQn3wkCtY1ZVsG59Ww19PC4ZdA+WgkHViD7B
DtaDCaUUeWr1BuNhc5vs6h+ntz3iHwsUvWrei6i/7BI9sHX0YPGdX7K5tsa7
kEAOGsQgZtmLcjFrM8uSzAgLJDeGVDJTtatorBtmqKFdEnG6MlPOWhTD6Cgi
2qDVHWSex3hYboHUThkCzlssUCxTTE9UFMequ9KPpXVLViiv1LaIKgDHvG4g
nAKHClTTJpi/FezpjPFVFhOZxZU1NcuVe6JrSsRJCQKKn5PpCk1oyAfQebG4
dPoJ4vqjMAi6KiVJWm4IGk6sRzvUMRcpJ05KsRSmHrqWxtsXsG/EEzISUE7M
go2kVu4P/dW8WF6V0LPC3CnSllqS0BTH0FsYrLTnG8KTGpm+lbOnRRnmdaEc
7ij2iuNDfcsE0Q2PeUbVFZDGCECBKnhI5YEapV1tKb9mYfj2xTNCg9INUjnT
Idmc7h+dkjhyTtKSqbdkajIpyolPYgg+WzRIqU0dCL85c1GZ1pgYtcUHw80F
TBIdpj6AQ5yPc4ak36NX3orwviV2FO7klY2Njpg1NBM34xOLhoOrCCcjF7FK
YC0GzE2NqrEvi3JrQwP1WGOj6JOZxC61r3ZaIwLsJ/FgyQBbzEastuF1JEOT
AFgJHfIfMJlBmTESKSOLrpNzYW0sjp77WY+0zDFdOvcrVpIOmlLabcZnEdUU
HqShpc506DrGmiheWS9cAJO9qVvAOWbmHovCbAavUOk4TtdUq6TIE/w22k5K
SZ99Yr1IxgnqUWFOM6MRu+S1W5JOkMHSYh1gy6N4h8YNX28LjmtrzuR7XG8b
JO0lDiKumJhzrCfWefCt9Pfrr4eDfYrmHFBo/ODnm8q4YKQ0kc1xnuYYHRdI
Zc18+GbmMAhpnyUbLUvSY2sHnyodJOoCGhoByzrUvIKhTtkizjGTBBZCZldb
Iggnns4r8b+TfEGxdTr6zuABUNxGc1bLl2kX+xtd8TUWSoJzoUzRSTbmofHl
EOXNCG46apgXQcgxrQVqgTRZbsF6b7k6FylqNry06wJP+yzoTETc6qARgiAJ
yMes05uAolnrT7xjOO+7x4eSWMPLZ2yIcEuBGHolkXkhcAGPDjhlhk7E4+2H
WwKLYHNp+Khscg7pl6YOi2DJ1lgZL7lcwEGZ0F6P+dayNZuHbqJjvexSbvXh
5mfqAD5Ycv5MUExPEplH6OBFOszRz53XGKaKwtAkfyM51+nsjchCJSr9FISc
3RBAMZwV5Cb5iCJJn5Yotx4Mk720nGNQHBD6F9Ub+GYPWN4MtAKpKPZ1NhuX
+Rt4oRi9uUoX1umdo9l0vqjN7o0WVSXmHdwthrNklEk4eRdo/R52KEyB7Kcw
UpIaD6o3BbCln99YORbLRGbZXMbuilVPiXxzIhDQTyq42+kgRtZ5OnoDC2Td
8ogayL9yNl5lES4qKa41oTr0TVyBz55sw+acsgHnKdqSJ2l1RUEWTEkNbKn4
I8LEvQFp7Rt0ho+tISAA7uuFKYK5h9trSC7ljVFLqWpL+e2VvgOyosbmJchX
D6C3axL3/uz/YNLGwU5y79/voc1f1bef46wwYg2WJAle+nMnAPqlSIpudvvN
/IfvTqbPvvvhevz6qPjhu8N6NH31dvz61S/jva2b0XTz8Xj6ZOv77avJKD98
DM9fjR4cTUazk/n59sN/7+Qv8m+ufth+teCnnzxMX2/Nx1+/yZ/tffPLD999
M//+9U19PntVfz99dXv4c5E/3z+4ff7Lt1tHP48evjg9rA6nj/69c30+PZrg
t0evn+ydP3h5/XI2/s+jvfrN2cviwbeTg/LV6/nmD79sPjnMb/LvH3wz+f67
k8kPe1vX5zCmw58Pb57/fPjvnfr5/qh+fvbNy+f73z4+2r98fHT2/QL+/8vr
HPv5cvbD60ebz757env+4If5D1+9esO/X83PX082s9Ot2x9ej/+9Mx89OLn9
Htbh++1Xt+M9aP/N1jenLw830zdH+9++msx/2PzywenLb57+sDn5+ttXVz8c
/fJN/v1kfvTt6ydf/3/FfWtzo1i25ff8FRnVX6omKrMBSa7ynZiJKMmAjA2y
DpxzBJMTHSCUiQRIpCRbjxv3v8/aB9DD6cyu6p6JiejubNsSnMfea6+1z2OP
NW/PdO/TO8+7KwZjrt8FnImZKW7GwhlEWk+Oc+sl4N7aDQRLiugmFFM9sd1j
MMlMYVruuExHInf6oaZ/ejdgeW8XmSmewG7GvNc+wQu4s+HlfuHqjskF60c8
6rjDwmOm6OGNi1TrfWUB84RZfXqXseV0N8t1k03wCdvrBGVleabO/dLy2B3r
sknV57mzDDCm6IU3NjZ7T1jPYlll4ig24ZF6hDbwMd+3bVigDXaw7OdMF12m
sb7QmidwHU/t+2npTNiyP0/MaiMXzmZWsk/v7v0yW8S5E+PbHtOc3pSnQRCM
e2OZWkzz7k4/T1LLN82dz63BuER78s1LHEx7ie58erf2jyKCRY2jYya4ft99
7IijK9lYyCL2TV1LjG0QDa1HtL5MivQ4LsfrqXBcT0/9qIwKYWw/vevBbueJ
VpW+3G/SibOIg3s9NXqrmN/KsZZ+jSbVwOP6wDXTvitE7hcWE5o+4Dy9G3c8
zL716Z1gudNBbwaRkR4wexZ+ZqHG7plpPdWzmbGRCXtZZBbN3Vi719C7ALZk
iuJ+h5H/9M5ik3TsmUUeGrpMSisMFv1FwqNeYGU+2QefiIVb7jdhkUp4as+V
RT4+Cl0WWTDWsme/3H96F+MTN5GZPcS2V7lBP5ZmdxeUuT4rrYlYshjjcRNY
6YNr7ree3Odo4yPauJzKbB3nt2NOPTIxFyOMuznOo37MnW5is0FsVXvXFIbH
K9ct+gehedpMuEZsskgcrd5Y+/2Fl5YeLvt3Htlu5nO29GXWDyzvISxTNynT
VVhiHI79PNRTW4jo5dFIh8HijxdEjBsf0MqN3SGGRfoiW7s+fPrCb70qMnrk
9Tm8PyO0iCbFQ6oXYTL05m4erX1ZvcSiChNzu4DlRUJq+0DAp+3pnROzkj2F
C2snhRfyspqLYqXJPMqFIbY8Z5602dewYH0XIxzZ2znTKl2IzI9zfTsbik/v
oiSwJmHQ70pLbGN767tWtBN39zS6Mu5UQTLJYqFFD1M9XcOf84RXO66zGH62
Tu48Ljr9T+8eIpPvmRAhz3tZMuxLYQlf5L21y0U0K6onngvpCrbmhTNCm/GE
bOSXztqbeJG7sI4hR48emKmHotzKWY42GPsV3iFGk36AXsDixMYr6AmRFx+5
IZeVxBOACMKJJ2kVHp1NUsLqtmzRzyX8M+wUDlD9ODWKhW9WBjBHxiUb4g1O
XN5WsLKNb3hbVmQCbxuHQuxggLt4iLYsXOHIyGR+LDzLzz2eTPovodzHmOF1
ZEVSmFEsyv0qlEwGRSqASlJoqecJb4JxyQTZbhjxqY5ebNELkVjVKIJnC5FO
ElsXXCuOvuyNptbq4Mks962oJwvP8fJiHXYq6RrZkGtoi3St1B4HbM46WSDK
fOdJNvGXBWflfs+NXsyLgksgAD9aDG20Zd6z6Imu/F0PMXexDas7zMzbIAkK
Kyh1H22ZpEMRiEVho9XxrBRSFixKSlcTQX+EkZZTU58D1VZcZDIxLBFZwF2O
3/i+7O4jO2JPgUYxsY2Vx1imz4+SIul4Pio28wDTPV7A5zSvL4fWEgjhAC0+
vVv6sIsEeBTorO8DY6OOtYoN2IllMfjv17G/9Xiud5iwIob/cL41x5M+xk88
uNI9JGS7QILeTSDMXap5HcmZhKcTQvnCtuANe4+XaYeVafMEZo6DAmCajVxL
3FMcYAHaYsg8lVPd3AGt7oExo0BWDmINSDjQ3DJ3+NmbFfBzrefN8qIT5Mxx
EXl40PfgRzfCwLj0R1z3A+A7VwhoMR/RY2r2CsFXe7LNFD4cLCsP3+qMO22b
MhMxlIfwyMQEvvhhJ7XbJzCT9WFNsTDYDtHKn4ki9BFl3CLSYZkDmeuDgKeD
2cSCnWjaiFtLRn4EHD/9psN41nfNoj/O024ydEZRuTrGwpl7h9sBl7e5OGx0
TP1L0KlWDwZ6Piz2qYAfOcHhdjJbpFGiT4/wMBNtsGe26ARWVM5y7+DxnsHu
zKMsLTtcpOW0tJ4fOuNe0mGRJ1I3NlcY3biobsaYC9jvcBzAikyGNt2/pLpl
kT34dgpsjlQE9i3PQw8wJulyXDhGoo/B2hBhC7cMjcAULLZ4xzezrw+d6OHR
GHd8RPnIVDH6ngfMwmwDhrLdDG/0O9lmaprGyMYo8ujTO0BFJtKy54i7iKWd
1ALOqmiVIJLh57tILxwfczNGtBMYt1QrOmMjjXy+fZF5cRMvgHWq1czy+vjX
57xYYnZ73jLDCLIXDg7jL71lYt66roi6vpm+THXWm5piz8voxrUswyM/svgw
1GC3DueenMn7A1sUN2LhPY8Cvk6M/TLKo4dIr7jQxI1nsyDk4TEeVj6X90e5
FAN3UaBHjQd6Pi8Gs5zdjTUrZEZKLQfrQTtFFsZ5tnsjJmLUq77Lyer+Tbtl
I0JM89JuZSFUnMa3rFTLlO8Ie9uBv1szsDSM3RMztYMwskWQ61/jTvokTPh0
FxQSrb81g8CZxLm5Brx7qSZY49+P6AmivxD+wiLuQFxhBB7I3GF6V88nfJr5
aAMvWCYtZ4MnLFMtWjZPMJlp9gT1atEXwNybkPN9WlRDsfQY2EBHAJOECQ9Y
hmdUAm5doZQ3JoaUwwoE27Bjv0z18dE1botZsdqn5faeS6cAH4CaSORqPS5v
5YNe2VOjWkSF1XEL9hRr1Tg2b9eBEfXDJe+FhbufiqoaDYuMibCbgKv7xu7F
K2AvYVhG3cDQB/HS8aelFyZHJ0r1CvPgNb7joE1WOTLFHcaIeNz9o0aIYLW+
B1732vvGmvMd72Nk8cA9K59q45d4/vs60r+8eAZY88BfioU/uA0T+Yb3yXuD
BcU8KTItmW8r6ARH5Lfd2d34ZbosStcAm58QSilvM25j+PBXjDvZrMl1q5/q
juJY3O4N3OF0j1HWp2UGrl51UiP6CkxaMruoZjb4rpB8D3K+6kW824uN2xUC
nIhzq0K/O56Vd5Ih6wqjGKfaVnP5qpeUVS/K2Si5E17KhTku4UfbmXUP/Zah
z9shnzjiyXfSzxPt2+owSmL+r/+8Kgtz3ulP2rPrSfcc/eZbTtEv5F4b/RD7
0r60ezJeEi7p/UQj5g1IaDDb6UNLkdrojjtV3281jCj4WG5tREVfTFrsqv11
Zm5J0zxz49M7HR672gXLaJHkVpctq77ILzSMvd1NbWcbNd8QiH3QMFaQw3oI
OyzmzEw8xZSTdARPweizaGb27ATvm5UbHR68hgd/BRdE9AMX1ZkA2n8dF57H
J15nrLcR+9M7tFKrBkIwS9SxihSHBUTtBMLbIobH7rC/C0s9Z/b90V+mr2J+
ZKXo0S0+jVblPVMEzmhWTnV4NNRgxC48WvcNa+LJXpBIYMKiD33BtoldxfBk
6DKEsz+vzI5QZHaR8dIbIHotGBdhekwPQsLcMtje0M8t3b9ju/jIHO/OMULo
vqnO99AvLjO9u8DeyniIQLS43yeTKPM1zwgmXw7S3wYBnpKykR2VqbY7uJ3V
UZiFHBdQZhYDhut3U+2kxJQOYzIdjBfZxLem+9h2D2zCoE9B3aGK3O+rIPt3
HXPH8MTBqNV6kxQDpg9CbtmssNw4h2C84dbuheu7F3iPHgObYowwQiWiRbqQ
klBFbyI3nAo21OQEjkyDcuTRINVgL3cBNzWmmXshmQm8HkwGtx3OlVffR9qb
LG8Z5FmfmY41lsUgDSDHO9CN7lRDtLkTxyD4o+OaX9Z4x2HGe8Ir08dZvn/C
vNgz4fiBsd9PeVZFWrGUprf18z2foUdik+bjw9S+ffRK1vXK3R5t0WdS59AH
FJ1K6MoM7Dd0C+cl0PjtfaFt7peI0pQZWVLWCG1ReSNouCNY0TExuorpJvaU
skMWP97r3ty5fbPU0wkPflrq64fnzirdJl8/rO+fhoWp/d7nH774n7WXB+tu
O+ePvbGx+P2g98u7ycui6z/xcDNdpPNnUMp9aP3mHzepORh8rp7mj/9YPCa7
8dzWx03ZqKuSxU1KsE7RNQnBJh/4ef5FLS5dlzz6Ue7wBwWKz7nHeJ2s5pS7
P+8g//Zh7JSIPH9qu1LbzJsEJF3nQTnh5mHqgJrKyX5erdKLi5soaxzTXYnT
1SqfpR+poMX1ks62fdr5GfGr4pWnlaSf0ctfmqdn8eZdUu+kbC60fX3A/3SQ
cql22qkPnytHvv70+59/qtv40y/1F9VtqbtmT/bn1XoXr5uzBNvmbOY3FYyv
k7HnR3/TD0b9OCdprxty8YY/mZ69vnS33ban8snNQvmGOt9e/NmUKcOY/PSj
u/3+3+Z9/9WcL7y8zfr+GznfT+/arG+RR5OoigZ6Ne14OtpATx2MlQq97QsR
9VOuHQP/914w2AZxECHCek+IyTwZfHq3eRkvs9X0qBj9c2L0FpFPmWDxAvao
P+pOJ16M15GpP3iawx508TW1p7dP9OZl/xDL28PjBD1qM0pG0hGL2Bb4rVNM
J6KYdsbUnmLGq44U0EYGVMd1LsSeWoVIgMSWJ7Ro5xaVHZm3c3fSj7ie+XHp
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
Vv69qVlHo9eUwn7/83r2y7kfF803vnn+Wdu/Vc/oG4Sui8qoMj2qOGR7QcWh
Lq1UF0F6RtR8D196lVk4X4ChKnXt5vjDfNu8l0oGvq5TuJ69rPLZ6zIZF93p
fNOdiydsMvIwVSUsm51qalAtkIsrxa+LQjb1CtSHsgbT1BUjm8Nymq1XS7KQ
X98fZtuPb8T0zuuY3lUx/b65v5rV91fD+M53XBdUe5TKJDWmaxgf/nYDI6iv
Q6FwSFeVYBpmVT1cTa2mWYoH+3P4dd13dRG6ugW9rh9DF8c/q3vB22pxr8qY
1WOgUiy3t73LMqhUgYieQ+mi7cc3o4siHReI+VOLJD9dlBG5uAX/BBz6OSY2
89a4kJq7t4pwwPsKIjZ07QneSqGRSt1R1ZH5UhVcWz+fo6H+2+n58fmK+frp
S6Jmqq5kOxSnaj5E2VRpyeYpv18P7omSXaMe4vOH2fKF0K794u1FpAS7VlfT
7A/1tfyAxpqpNpfLx1fDSuRzO9ufh8rQTl1JL2pln6qcfBj8UVdFPqF4VdBl
7A0CnPgffUGVuahrS7yql3x27RazGuf5Ab53/uu//ntdWyY+sZtTpaIz2p3a
9fP3HmQ0I/FGrPjl21pOTa0/Ktjxo36cB1DHAJ5QPW3iXpwkdJNOE5FO1UIa
oq0aQYWrtxdUxTCumcKeCv2dyskcrq+Nb7/TUXV8lI0f3uOT1eyKll8Q7jpy
X7nD5lz1orn0vi57TJf8f4M6xmvU6SjU4VVdD+nEE06FF3+ih990FamYpeCU
z7P/8T9+UgO+703fr6Z1mdHpbHPmG6oALD3CF/Z7AFAFfKIQ1JQMVdViqaFX
EqYxvxObU1dJFVRNcPk+m+N762l2uKRzjRWpnqrhKlenkqrKh/CBD5tVoRiD
34zcTEk0KiJQVwRovv79Efx2CPXXQ2jUwN14de+CcJwLkF5VZmohRaHqRQ25
73tRa/znv8dftv+o1nt0jooozr7hGJBF2zlJ23OCS9VGfrsSyzc+++6SPV7z
TTX3P87gq4+0tnT1qJq7v6qb3KLI56aSGQVSVZ/noo5YC2SvIxNVlVu+f4NU
/6B/et2/FnvhbsvGFTEZTdHNS0g8jeXAZ5dlB5v3tX1JayP+tq5p3JYjmquK
6Nt4/WW2pb42daBe5hfFguLaTeAx39YX/6imukWnE2Ze10RVnI8AN2nqdNFk
XFQ0wTta3L8sxfXxLVvXXtu6/srWW0pS9w+TvGnsT1UTOtlCvPyOM7yqQdV2
5TzLzc1uV5QQPVOle5or2S54+VsF5hth/NpBnkZP37x+c6Uo/oQ/vuE5quh4
v8WTNtaDpcXXMmqnavHUM/lm+JotlQ9QnRgVOZrGtrHsDZN/VYT8/c+q9tgS
D9yooajLuT89DPy/6Zrq3lxlv+pH/aJafgf53VZiaRr/e1tZ6hRQvzeb9eSd
W/bhxBeajFNz5d65kmNbifwNh4J6oKJDS3V14LIudItP/tg7qA7nqSrm++R5
XqT1Cwjhr1QPnqkYVmMQz9uNqsN14afnNn1vZH57XXPrGim+BwgqNXRVqPT7
nXrt2XWjrnty7cWUOlttrnHtb70LaHvtCar803FbqRJRVDmexA0V02vq8iHC
0LouVdBcrT5/wH+mTeLy0kP+9hpjVVOGK0BQDkGDF//HOStXUEnrw4XIPrd1
UxOPU3nBGnjq2ttUTusbejVvKmhelQAnx29a1gSO2qzAGVXtKnqMNd/jGT9d
5SB/OtcSI1cR7O9MsHcnAvajyxLPlyu2qbpXVBx/xFCeIeqN77+BM6rH6nrH
mkC//SkKnpvnBDy/zosS8P96Erl4LVhnMwJ1385V7uabJit5KnB3fcFlE71b
YFd1r+tvtiP8c6uhC0x0HSBP6QE8d0clc9GE5+pju0+AthbQr1U5tzfKAisG
0CbEf3n/cxtwtBqk/oDNrOnVTVWzQk1InW5oQwfGie4Y7dzcJFRZs07Gp23t
eDTnwuQ+nt7Q/eWKrmwVBCs20+D2pp6Ai3yU+nMy225VvIrTOJlTYcKPryjU
aVNEU920HkI0dVoXr3o9CjV4ELu7qq/5T6ISAJVC/6kSXy0i8ZSLz+J3J7M5
laO8bhalEAib6N0FqHOhenOi3q8M+y93Du25gr9vKpX+qV7iKa/6+S/0kgxh
+Ypcnjzy3PV2YeCqpSo3TslXxMP1Oj7UiVhaVKmTk62QboCavPAqL3n2wboG
G8UemCF9pc28t8zgOmX4zZNUwbTXBV2b0mevDUstDp1qJ+JR53duXqHL5Rj+
3FIZAz7YFG5XNPOk5psvtTh4WfNw/qNyjx/qD9Wk/I9TSFDfB79TxPj09l++
AaSr3HZ8ytJ9Xzu0DUAvVGplec1Y1N++zdh9uKiSmKw3+fxDTHm+D00F8ot8
3uVnqI+apkizq0IfHxgtBqm7kRsS2PKEc0LlFK9oDOssJBr8J5uiEPwip9ZO
2DdzVeeW4mp7znG0SYbG/zZ1Zp0CN56iIvKF99eJ12aVR32UD/SP1xP5GbGA
iuy9VcW99eBahqs4XmcnV1PodPLweF0cWln+QzMiSr55TzeOqZW3ZRP4vrfq
8zN534weTmV605oF1eP46g2/NKTjn32Oek8G8Pr31EL8jUavxYcmXBRqgVbJ
vrPiKZpMzHa2JBPf/Per+KZC+ZL8mURE+62f/2ZoyjN4m8JSzXzdENXsy/Tt
W596p2JM++QTFlDjmwRZw9jfLvZ6HffaL6uZvTDe5WxLBPzDhnjndLP+oN1c
MNR65l6nqdFe+mTNUtH71bfKobGpps1vpd2/kwC75KlnsvBmZkA1680xeyPP
oHj0KzOB8rsMXfUiyVlPQVJ/vh7ES3KM17TAOitOuWK86NzAuGVHRNwpYddE
LUovE3k71IU1N+uL8rFzVXiTvu1HwRNRyQa6f3lrEL+TAmuXC081O9WL2mVG
8n5akVjH0xPWAA0/vh81uxFUNLykBvXD6XsXVW1PlkkXy39WxbAViDU+0pJs
Wi1TrtW8vaEAFLQqDEQ8zd6YMQyjGvngYrmi/vN/nHK1bTCpgynG4ducA/Wh
dvBnAnC1WbX+W126lgri/vgtnfdP/PHx70/cH9IrmlfWwhS4WEuYOny9KW9q
5q2acC4wf4ouTZnnphmDVVk+L1s9eBodfH2n7su/XGF7zeKmDS1Sa6RlXWAV
nPHDk//QAuyJxxGXhPmDUc83Wak2HDcBeLNZTefxdvY6lKiFv9oKlLV8jl9W
65pwFgc1uWTi2fwLfayIDxdwpVLJtUUoPtmYgUqgbWZXv6NWrC+XiYnUzC9T
at8APbW6zXzF1IYTWl8WSW7JT8vhvqkBcMmolPtsoXjq2u7r583ZWjbZvDrN
x2tzQ1suVeXpqd1fofrx39tfzl07w0UT0uo8d71L5AJB1BagD4XKvF1mF6gr
VxK2acIzlVjYnpbnVpSV27zRpt+oLQ2L+E5cbpDvQsqr+b7YR1K/kyaXmnrJ
gxsAe7i/q/H4/MnWDNqGdH775VrRXOyFOEe8P+UCp5j+TQKvWRl/Db5XS2d4
wJnavolI/7ZpnJKBTSbo+/bgVxCuNN5tCeb3xgWWq4hLgeFEDL/T3D+dRq5X
nZSrqjWv+dVCqVogaxaUlNXUy9yXq/4K/KkUfL2roUkAzjdqqVftlzivCeEB
9b60tmsXqaRXfb6IqqQiGvtsQgvGd7lRyb522F/tQ7jADTUNHy+o8HzTWD+B
IY3bEkH8ChTfeOp5NpsmtC87s92aCDWZ5UvKdPmcj3XSa73Zvhbw7Ry2fvC+
5lg/11mcknLtNEy/vDvvy5ueFtrOa5t1wn/T5EtOtOycOlHhvV5DVbNzdpdT
zKcefaBS5cuL79U10hXygK2oTNkFYfr7x4svcXYPlD9blhLVBdTidq22CbZy
kTTsddGUJnBgxv+uRNVr3D5T87ZdFHzasjLbOMf/0ji0sUPtaautsJVhHy/X
Ws+x7prtBRkGZ/NeztZLCt+by67W+YtTyy6eWzvdfJnOX+bpMz6KlqiA9O1G
E+0/vtHQ384hWcX/zSlUHkwLIC0diClAVEU8Pa1KnTfy6R87NYLX6fhTn1QH
zl5ObHLZJCzbDLza7AFfJnKiisi/WrWHNy7fNAhVrKjJgKoJcQGYai9kg72n
9Ohp9F/p4EuoPHlp47wndGmA5df3s49fPtZckbYElOAKapsXDeY8eW49s8kD
XaX3WwMauE/nxquUN70FPDgDgtD/qk9cqD38+GuLFrUttIn4pm8tOi1nVCIp
hjlc+dZpNhvovFh/JwN63ihzqlP8KgFPqfDt7DSxalgu1uU/vvdPe41fb1uh
pQbKzUGjqtUcBM5kXiev1Vp/s7RK62T7RkW3G/Da5qEhtNkAqnFVzS9lyeYy
E3GmjFfxnXItJ6dQk6ok7EXhqlq/6IoAvKzmtAP7OamXjNfNxo+1suLTPpHp
fLa5iDpqgwm9bFqD++sFjGRWQy/GZVOd2VkzR/UqMm0KWRXKXD6eNjm0Wypo
p8h1Tu4iH3TeJt4IhXa3uNoRdmIU5zn+9WTENDbn6aprZbWtuPaKzTdGsCHg
bTfQn0yFljQxufsfApmS7lcbVhTAX27Vpq9uZoVaoaIVw+bpZ36qMv+vPtHG
PDXi50097Zjtmv06Kv6Sv55FXbN+v52dmOrF7vpm8+PJPgmRTkuTH18Fn2Vc
NokgpVGbRzR7zhrnIlx6T/AVF+j0skYvSkqd9qZhHjfbyw3HNa1rNqedV/xU
Knw9zebUcsqbn1Rfi23tGugZScla6mHAEz5v8NX3Tw/3b9L1eqX7BHl11kh9
9wcTcaLgJPyWyQrGfsrcNsw+Vvty5ptmt4Qy4lXRrg7Xn7hmXpdJz6tA2vjF
OcrU0foM4RsSaaQ4aq2n7OjamdR3Lw9IqFGtMNTNQDfY/GudnjiJSkVjaiZx
3vZ+evHHHziASrs0uZazA1zDBuGO2kzWJk6L5pyC2raslnYVsN7XK83Utnpt
4eP1U1/h8ZW1zIrzrqtTEkBNXD2Kij9ffqPRFye1dSX5agLaYPgb+6kvxptm
WgHr53MAUKrrIhJdRoQWlDbfhp4fAY2SK99olHad4derMwr16h/tM2gMfNUs
6agk34mf71bKJy7No/WPzSvd0wi+YnYa+3Y/8ep5c5lBqxGmPYFdE2Q4SP2G
WTPh9Ttew803sW+q0hgtHUhm9f6nWiLS8tZlE0qSLeu2QiLlaNR2HOJ3q+1p
boko1eteJzck7l4/cn0OzvXMXkJaFTerdapr+LRVL+7pJ3l1zhhdh6J/Znkt
0/x/YdyDf8WmW4uumc5ftulXFv3f3nsXBBuRYK2+0a5+4iVv0aY3m5ecNlPX
QJusEPWIEE5pB0ETyP8P1MRJufZbAgA=

-->

</rfc>

