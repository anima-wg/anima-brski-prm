<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.3 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-11" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by Registrar-Agent.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the Registrar-Agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the Registrar-Agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The Registrar-Agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The Registrar-Agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the registrar.
The trust assumption between the Registrar-Agent and the registrar is based on the LDevID of the Registrar-Agent, provided by the PKI responsible for the domain.
This allows the Registrar-Agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a Registrar-Agent during the TLS session establishment and also to verify that this Registrar-Agent is authorized to perform the bootstrapping of the distinct pledge.
The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.
Contrary, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the Registrar-Agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the Registrar-Agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from Registrar-Agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-Agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The Registrar-Agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The Registrar-Agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the Registrar-Agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.
Due to the use of the Registrar-Agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the Registrar-Agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the Registrar-Agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The Registrar-Agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the Registrar-Agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the Registrar-Agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the Registrar-Agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the Registrar-Agent uses its EE (RegAgt) certificate.
The provisioning of the Registrar-Agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The Registrar-Agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a Registrar-Agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a Registrar-Agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing Registrar-Agent LDevID certificates.
This allows the registrar to detect Registrar-Agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge-voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discovery of specific pledges based on the product-serial-number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge-enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the Registrar-Agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the Registrar-Agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The Registrar-Agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar.
In addition, the Registrar-Agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="164" y="52">Registrar-</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar-|   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the Registrar-Agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the Registrar-Agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the Registrar-Agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the Registrar-Agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-Agent:
  <list style="symbols">
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.</t>
      <t><bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.
In addition, the Registrar-Agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The Registrar-Agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the product-serial-number(s) are not known in advance, the Registrar-Agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (Registrar-Agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="576" viewBox="0 0 576 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 424,104 L 424,336" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 376,32 L 472,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 376,96 L 472,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 352,144 L 416,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 416,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 416,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 376,272 L 416,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 416,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="424,320 412,314.4 412,325.6" fill="black" transform="rotate(0,416,320)"/>
<polygon class="arrowhead" points="424,240 412,234.4 412,245.6" fill="black" transform="rotate(0,416,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="428" y="52">Registrar-</text>
<text x="408" y="68">Agent</text>
<text x="420" y="84">(RegAgt)</text>
<text x="456" y="116">-create</text>
<text x="504" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="112" y="180">trigger</text>
<text x="236" y="180">pledge-voucher-request</text>
<text x="244" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="156" y="212">-agent-signed-data</text>
<text x="180" y="244">pledge-voucher-request</text>
<text x="452" y="244">-store</text>
<text x="496" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="264" y="276">pledge-enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="200" y="324">pledge-enrollment-request</text>
<text x="452" y="324">-store</text>
<text x="504" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                                    +-----------+
| Pledge |                                    | Registrar-|
|        |                                    | Agent     |
|        |                                    | (RegAgt)  |
+--------+                                    +-----------+
    |                                               |-create
    |                                               | agent-signed-data
    |<-- optional establish TLS connection ---------|
    |                                               |
    |<--- trigger pledge-voucher-request -----------|
    |     -agent-provided-proximity-registrar-cert  |
    |     -agent-signed-data                        |
    |                                               |
    |----- pledge-voucher-request ----------------->|-store PVR
    |                                               |
    |<----- trigger pledge-enrollment-request ------|
    |       (empty)                                 |
    |                                               |
    |------ pledge-enrollment-request ------------->|-store (PER)
    |                                               |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The Registrar-Agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The Registrar-Agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the Registrar-Agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the Registrar-Agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the Registrar-Agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the Registrar-Agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The Registrar-Agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge-enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The Registrar-Agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge-enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge-enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/></t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between Registrar-Agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The Registrar-Agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between Registrar-Agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| Agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and Registrar-Agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Registrar-Agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar-|        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| (RegAgt)  |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses LDevID (RegAgt), may have a list of product-serial-number(s) of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between Registrar-Agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The Registrar-Agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The Registrar-Agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by Registrar-Agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a Registrar-Agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of Registrar-Agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The Registrar-Agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved Registrar-Agent, which allows the registrar to verify the Registrar-Agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the Registrar-Agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the Registrar-Agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge-voucher-request     [THISRFC]
 tper               create pledge-enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="17" month="November" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-07"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2246?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge-Voucher-Request - PVR (from Pledge to Registrar-Agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar-Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an pledge-enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
F825cVrTixxmnSDZvk5XEX5Qsm6R8fIIr6rZf2guMpES5Pwy7dntnCdQN/fy
6xdDuuaHszGsQ3UQnb5w6reJRV4Wh+O3yjbn+64R5Y6gUqes73nnjr/t0JZp
fW7te5C+TsVU+Jmt6/fDfybu6CmuTry3TrBcQPTvrf+u1pEX36LD6ZcR7ofa
iX5/2p6OR1cfrHdMYR1/fLqarNAMZvh4saP48lZ4s2GQUfalDpLOFzZe9Fxl
JHn0TGBeLjIqaZ/BE5T8+hZ/CRtypYJb/KJqkNE7YtWm4csRtM4vV+Lg54/2
xYLYLH/gP+BEjWfw6dQ7OQFY4/mUc/1iTP0Ed0JedsXJwvh8Y/pCgfmFNb4L
f13fDijiCn4qmkBjIUg7pXHqLVServ3Od6jbIFJtfDek8fU+wareG31xb51u
H25p65Pnf0+mSn2S6S7WT1v8ZcubOF8ebz3Ryr9EcvtQbZrXjIeXTLwstXb+
4+tMZO03qNsd90Bh62JIxQmeKurFIUxfbJ+q7oOQ56GihkNRHuD1FRyyojev
ZHAn3prpORPVbpCWoX7R/Wt1axLmGOcFB4xadS7dIPHX6gv9TzVpq9/kqd7r
P8c0ryqag4FlpxU4P3lov/VRClS3F1nWWp1/e7dE4OlCzFngPOPO8/vwq7t2
82+9Q/1Km39hUOe4puVFz8BPHb/15sPbxPoVq26xZ/rxjed0Lg/nXf9+ukCw
pPuocLLNscU6l8Qf7+Ym/VgRDiCYDjdBfPSdSdevtDYvqL0RBrXe9OebBRVg
vKx8Xt1leol056shze8+XArrnYtjJ5b4WmawJZjRfLE6lYlo3ufifrzyMK/m
ycOap1WVw3p59KjKzL7H2dqE7ffTWwyi+Kn7x6eXVv3q6mHrINKZlfyJYX0M
HkswE7oOB2znxDCnZii84nN62dTpihXtmb4rtFPh1ijaNCVzqlNS3EFgGcuP
GX984CJV+Ht1H6Zqu3ryLAoOf7yq8PVmdqVVQ+Kl1Cvr/9lgz4UiG0Dkq1hs
FidSfL15WjUR56vtkAXPSNS2s2jVHyf9euVMvp496akI5V+J8mJYb6Q0mlC3
nvwDadIBSJxXR70uJBhd74LDpWttcjZ1Pw0Uvjewxba1UHXYCgMoXx1ehjt/
kVx55xGCKnaax5UGVmZeZ/ebc+OnWq4t5/fb6UX5+mYiL9BbT7jGi1dULrje
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
al4ZrHLi/BJKuF6ncfSJ6rpe7mWVp9bObTQPJb/cO/sd0/yjbj0Jtlf87EtT
EuTldaHmNfDqcCb/8PlprJefvv79t2qMv/3RFKpZrXf1LYrv6w1V9Iub+nWt
WzLvp2FPEn41D5PmcU7PXg6k1cMvJmYvC/ycDjbytGx9RGBLkz/dNa/fXYFM
fuNHhU6nI14M82cZX7PO+Iodqff5/7spX09Scj93yon92DGGDn3u29XTXOot
fQtIkusi6OzDXLo1bLmXGLLRvRedDZP362knvH2gJPGqfwjc20MrCSTNOyCM
y0Bl+K2WhTOWhZ0pjS2LnaIDJ7QNJYQKlwkMNVQyNrcVgwn+Ts8K1ZdvMSN9
1vcdMbGCXHPdpUmpopnvihYlWXy1WDBZPrhpuDMc0Q06oJyd5IfH2AYtULIp
MSnhdcNUsYsWENREfpCmO485vVAxykBVjLmy3rspM2J1erBX5gNTtDXCahW0
VAlGWsJmiexIvW9X+FakhKNoxvLp0Zeju4j5T07G01WiI0a7iCebMguzSLzM
d3VlinCpZ+hDuMIsAoWX0Uo4VGgMe8/d75hiOG6KFux+l1JGTGQja5Y9MJsx
EH93DrYC2jlBUN9lWXLHRM0LRsB5xuTeD1v0B2jBs3kLjsgk+E1BhCQThpCh
QMhvhcr0MJeLjNmKAjliDPDTS+aYmUYJL+YH4CuOnfWT4ChLbKjtpmlPiUeK
BRrz4KUh5ET8CpLMb3ssB+8TlRtzSQmvr6LtQroqJd1iVYGv9o6uPcZa9EZm
lhiurG0chIe6kh50Fi3mju8ztRhgJZhLY6C0XxpNIgZ9mc2VPmTdx9wVNxQ1
1UojFojwkw4LQsWXrbw050zpeCmbOJl3cNISFFkbMdFPXWY+YV6UZGLrA0t9
15TMLfiCgxZ+QPYWY75KaTv87eCABzqUdE+TwJR7zw6lTjJtEynaglESe8py
UbBEeFQFYxCKte34WCtfBbG2aQxYqztX8V0rS1xGQZfs30GiT3bGoA3FjKUh
eKTnKq4v+5SuCjysZswKxqAjGMOMueXEc0Rw4ISxjjny3b3FMrZx055rUguK
qXou+LU6H6KFtLe23TJwGSuNmbHAJ1SW7ylRC5ZmkBxU3/EDlvkbOy8NMAMN
Ywzmkg7dThAcz9W962XJGjpD7NvQnUJzU3/niNoWloBZ+CD8mKGqKBOMez7q
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
b4dZNoiAM5CIGamy5Fnl8o2LT1ijv7j69CsXn+iSOL/6pNzEo6ID9r6zR+kz
xQLurEiCoXbUbSNjdrai2zWvLz71jj4hgw7EO0b2VJyvzB5d75u6puM7Sj92
pt3gdM3w5cUngV98MunikzWjPCZi9cDqGD/MtDcMheLeZ/2tKYh9W2U7ljs9
09l17PxWMGxZjDpJyVbsDlIoprSPj7A8oOt0dijsZ86QdR1RYbqS7OPM30+U
DGvk7T2sXZxGN/GQ3dh5tAz5yeTzxae3rj39/NLTMqnu+ubK5aUnGSG4U8JV
gDy/felpFb176cmCQUxbtxPnlHDLmNOTQJwHIMrk8lQmK87J4YWCKMN24PAM
N6DbwmqZIETp+WSCstiv3z6gu5yrqIMAwZsrzV1BmKvZOV8wUtbcyfI3IfwX
71IoPbh5zIheppjOMgBFr3mXovpZoXcpsPAiQlrFsNTyvVmCgr8xz392lgDx
N+b5xix1IRL2/fMsDdcRi5k/6tPrGzzNm2i+6JcTWwExTraelA3wCc9cKvxe
p4VQjd9bn/UXc9dYOUfNBXipQXWrdgz1/nZVK7jRB+FpKbzZd1xDdkAYTUdD
97vnUNRye5htrRVT52z37EldSi6MQpLudDa43Uer/sY4lGvLHu8mcm/NUvMZ
YUh4f4zunUEpAY69GH51apU/nKW/MVZaYtvjrp/tnvldceVOTMRgxHYGwu0Y
ATc00Jin4vAMt+/fA45HkJ8KgCBIt3SlDzKBvs+kAjqsPF9cK+NvYsg7uFLD
ZGxoOcnkrsP6c9qMyiKWZKG4e47d6T4SdUHP1oKpJHeGXJS6K2/8o+EFYrHy
l4kTqPunKaLR6azPIts/+qtsaVLS4jkeIgzKktJflPeTUSiEQ//oZNEhyOW9
w7Sda389GMvp3lLS28Z1NxbKVty5vbLRafrOtcT3LfT/Yd39qYXye8ivbPSX
LbSeJWz6F5HoZ7NEK7+IRD+bJSj4O0j03gsAb93/J3edZk/TDqONrqMvGRPj
qDxDD46644/IxhAUr2zWfw4Ecedn+gF/D0Eqe5Zr4F8QbXpdwzDTZOjlTLKW
YJn2435is4nHins7M54t5esRdqPHMzYIhomkQ9ITVohBpjnT1ISTzhryzDAy
LbzvRCa8ApCIvyVDAYXykrxjbFgFCh0RWp5frkFYDZs0maANnFnRjVfRzln1
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
NUqOv2iVyhG/rhD4P3iJwE35/WMplZvHj2WwX6/W+eFju42PwSpM1lQa7lSM
rvtJPBVdrP9W4zsV0EJHfCwr0m2u7q06pTW0uPGcD6j+cm1UEDWV96tsJqoL
vNLCb3M0USTrVXxyFFTFmhdX5vU3X/lLGP0J9+qxVEKjZTiXmfz6MN5eQOti
BXLAyx2vOMS3HUBTFLWuoEpDqKdRlbw9lUPkUnk5gPrp3ue4RnCOdqTtbair
yra3W2sZ2rakEr8vzKaqUnySY10tOb7+uoo2VA4UeFGXoK6V6nmd0fPCtTYG
1yG+DTXbXNvUjs6LIW7+Vlltew5Q9Tgj0Te4ei5STHX71htgU0l1fmtXXTkI
0lE+Fyqv+LRNaPKbOF8/11peURbSy0UFchu4ZXKh3PdRebxKURvX/D1YZJQy
+gRVpCqSQTVRLgX62z/ArrqVqdRzJHGMoEN/u/4dGvq3uiY11aCtlvg/pT9o
pEDCrCkwX7mVW1EUzir/+ZMElb/mtWoJoKoSvJXLX2/qiRNWVWW4FzTlWoWy
RU08Htd1gT0saUxVAuEN+0/lh7q+LK/luW0S9HUvXH0C8huV86Aq5w+tKtMB
YWAet+qPN2V86xeiL2oM645lVwv0nfQJC3SqHF1J6dRr7QlOj0xvT5X4ts0S
X7RoTGzSDNKbdLHi8E0VknmF4etnIMwTPEOy3nLLfaoKbBN2NTP5T143sVVN
+cVT0A3jqF1xw6taI6E60BweajbBy8Z/fDD1pmozFpL380Wg0rr8P7vdDncy
VaHiVjdE0XgPzUSilzMBMPc+XZ/HSZUy91hFItx3cB4O33b5Xb5z/uAtEVl0
XZdXXCYOfMnQyDes+RpXfvlclLua35v8CDb/6ndVZcfFqh4JxDInNxXFMCuY
Bfc/tIgY15kLnQsMB7wi7yce9SwIdjglHoANUZHn/0n7PTKiqDWAAgOjBaZ6
sWX8fyLQAWj8mVRf+gePPvBN+vJ6FcZwsQP4vHOp5qsrhZR2LNvKdbQJvpfX
onD98f+4+IUIkvy/VXt31//x+fYDzCmoC4zzkfI1bul8LTFuTXvuds5aUPN0
cgYnQ2+++OdTKP25iR/JrzX9iQJ0owIsGHcZF9c31y8RmoqlZ/W76rxrvjmG
zw8uiT2PiE7lo4OaDtUYyxeEl61vRSp//3u8Dyuh88F1QqDbeWjSl7/VnB59
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

-->

</rfc>

