<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.39 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-10" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 128?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 136?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by the Registrar Agent.
The Join Proxy may still be present, and there <bcp14>MAY</bcp14> be some situations in which the Join Proxy can be used by the Registrar-Agent to connect to the Registrar.
For example, the Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that this registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to see the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The registrar-agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The registrar-agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path may begin with "http://pledge.example/.well-known/brski" followed by a path-suffix that indicates the intended operation.
According to RFC 9110 <xref section="7.2" sectionFormat="comma" target="RFC9110"/> the host header to be present. 
To ensure that the pledge can be involved in the bootstrapping, independent if it can resolve the host header, the pledge <bcp14>SHALL</bcp14> accept any host header.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is vendor dependent and may contain information regarding the vendor, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therfore needs to be sufficiently unique.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

<t>As an alternative discovery mechanism GRASP M_DISCOVERY multicast with M_RESPONSE, based on <xref target="RFC8990"/>, may be used.
The specification of this approach to discover a pledge from the registrar-agent is left for further study.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI.
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledges IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the registrar-agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a vendor specific approach, e.g., RF beacons.
If the serial numbers are not known in advance, the registrar-agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the registrar-agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the registrar-agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-agent and the pledge is established using TLS to enable the registrar-agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the registrar agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> re-sent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response. 
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), may have a list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context. 
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the registrar-agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent. 
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="22" month="February" year="2023"/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-06"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="7" month="February" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-07"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="28" month="June" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-05"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="22" month="January" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-00"/>
   
</reference>




    </references>


<?line 2115?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTPS between the Registrar-Agent and the Pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the registrar-agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTPS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which serial numbers, from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that serial number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A registrar-agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>,  and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the registrar-agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on registrar-agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the registrar-agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y963Ijx7Uu+B9PUUOdCJESgCb7KnHb26bYlES7L9wkJY1H
4dEuAkWy3AAKRhVI0d2947zG/JtnmUeZJ5l1zVyZlQWArda2NXE6fCGAqrzn
uq9vDQaDXlM2k2I/++r07M/H2W3ZXGcnk2J8VWTlLDst6nk1GxeL7GU1LrJt
emhwcvpyp5dfXCyKG3kPv+qNq9Esn0JT40V+2QzKorkc5LNymg8uFvWbcjBf
TAd7u718UeT72et5scibsprVWT4bZy/zWX5VTItZ07u92s8OXh2/PMh++KY3
zhto8OHuw0e9uoEHf8on1Qy+aRbLolfOF/RX3Tzc3f1y92GvXl5My7qGVs/v
5vDU8dH512F76zof5c1+Vjfj3rzc72VZU432s0/vivpT+DCqpvN81Pgv6rvp
oriszRfVogm/gSHOqqa8LIsxfDmr6KlmUfpm8mVzXS32ewNYb3jxbJh9vSiL
Gp7jxTxrisvLYua+rRYwn7MSh1tnB9/AN7oT8iX3UBTQw+umqQbf5tezwWk5
u8qe4iTK5m4/e7mclaNrmtMY+vj0i71nj77kOS5nzQKe+KZYTPPZHXxVTPNy
gotC4xhe4jj+WHNfQ1gTeGS5KPez66aZ1/sPHtze3g7Nzw90ZufD7IdiMSsW
bmrn19U0r/23/6ypNTSOwS2N40OmdjTMXhS5n9jRpKwa/YpmdVjWoyo7u4NV
nNppnMJYmxI+5XVdZM/cLH7IJ5OyLiaTYuamcvjt4ItHu4/tVM7gvv6jWEzg
FMPX82u6G1ufP97LHj/Ovnj2RfYl3IwtP9MJDOmPIxwLTU+G/3JI48gX47qa
uUm8xK+KSXYY/cq7BD0WE1jG7Ky6bG7hWmU/VIs3te9qOlp8jiTgj7U+Ohzl
dkF1Pc3PD3qjCiZWXiwbcyVgdZ+Xf3vjV7d+U+k3NJjj6hzeq5cToBCju+Fs
4kdRwLPDMTz7R9iR6KGBHsMKVrCo6+xo9KZYNNrq18tmuShui9IclKb446ge
XubL4bhw77/Mm+a6hIP85+omb2o6fPICLcAb+Xo4K5reTTFbFkharhbVci6U
CU86EsqM33pLH/6ILw9hKO/xaaDLy4t9fmxwe/UgIqy9WQWHuilvqO3Trw+f
PPxiV/58+uzpQ//nI/nz2e4jfeDZk70n8ucXu4/12y8ePX2qfz7d2/V/ume/
/JL+PB48Hxpi/7fbenBTLUfXxSL4FWYPG3A5qP/RzAejepF4dXE5wl4vynq/
V84uoyk9/PKLp252z9yU9h7qgJ4+fLynU3r4RB/44vHuM/3z2ZcP/eB1Sl/u
umfhT12fL/fcnL98+OiLxGh58fNCf1q4WzIopstBkc8H1eyigq+AQtFDR0dH
gy92Hw73Dk7xM/AX5r34QyY/ZGfFCM5d9ry4KUdFdjwGtoT8Y0EvKLfAvwdy
+mc1NLNsiqy6BMpTjJC95BPibPyxAooIp3t2Vc6KYlHTy8pY974Y7D6lb+oC
KTsuOzfP40UKKgNDIuq4/SC/QKoFfMxO5NMD+dY/mJ0sKmCj1SR7fVMsbsri
9lMzgJf5YnSN/P0hfclbrv2fPP/a0154Psem4YoO9WY8mAIRhcV9sLf36AG8
CDPIJ/WDelKOi3oAX8pOLefYG+yG7BlKOYM5STmDcjZYqJQzmAKhNdLK7i4S
g9k8b65lmvniCsn2lo4KLyxOAU6pHxV+8WBaXz2o8xzGuLf4clk9/vkv/5i9
Hl1+8eTo7s3u6fWyefLlFw+27OJtjYCcwn9gmNhjBmSFpgvyVDUHOSe/vCxH
f+BXeOdRvEHSAQ+U41k9DgfpVq64KSYViDxDeZJ4F7RXznDt4FLO4JQMxnTg
gA2WiwLJ4eQuGNwBv4vnklsDhsRvZvJm5t80g/ymqq4mRccJ25K1G8Nktwyf
LS6Guqq4oPD5AcqAu+7fZw8+xuzkDRIhL5H0fsj65YumHEGTD2q8uMC9B9B6
sHRn8gNL16+K5hZYpbsX9a+1WI8eAq1+9OWjZ5uuVXomvcFgkOlt7/XOr8s6
A1F/ifIybP0lEJU6K2bXwFZJhq5Bas6+qqoG35jPUTrLQZGYVkChhLb9ubgD
snUJQg8s/QjZrKgWfeUrO9hIMcsvJkV2EbQFWskYxDWQDLLLIod38ctZBesH
F2dyl03KadnAGsnGlze48Bew5gUI0XnGt56IY3NdSFPZorgiIWwx7B03WT0v
RkBygYhCe0DTZ1cwQ3y6nAGJgVUAzSFDUjHJLhfV1LUKtKRsyhx7x1/7GcgE
yxo+QQ8yPZiVe1rIDo6fH78FlllQRzJKWGl4FU4CUM5sUU2KYe9rmCdIG3X/
vgobDn5RjZd4UfNsVtySPgMC46zpU59uDQagDOGXt9fA0LLLfFROSqC9sgbw
1hRFbNKf3MKaZXXtZGPeHHwr3MP5dV7DXM5hi0GruwBJ95qeoosIDUzWN943
HAZegKsC259VF39DgqTnNwMtD9YU2gayCm/NYHEW/mcYAXQKY1pUOcyUz/I4
o12Apc+vZhWw1hFuGo6umMEWTOjYz5WnQcuNHrU6eaL0bfn+8GDIN2pajsdw
1XufwE3gjcE593q8rXBydDjw0tu3ci3ev9fDSbtYV5MlrRTwTZ5VkYE6UA0a
lL+ybZAWKmSL451oA0BSUKK9zatb4wGBJrdHsAXVtFjsZDXcIxn2kK99ORtN
lmM5CGNUI+Bg3mFr+AWP3E8c2qMDIw1Sew9kGfT+FT/z/cI23K450Q9mBgsL
1DqHXprgtNBJWXOtYaXPUm3mF9Wy6RxbP7z/nVMYga5ATzV40xd+LmMaBkpq
KLqNiB7ANk3Kf+DSi2gMt//vS5gPPeu/w9sLiiBSYrh4cKQ6D8Kw9z2/VVPn
dXmFz/AFqJku4dBf5rMltgRHY/EpaNUkP5b/gEfP4A0ckHwFa7T98uDsYIdv
Bf4Jl6Beym7LEGm4cPpvUMLKyia7KfOVx543ZtjjkYNwHxxhfIL3RQ+R60dX
AF/tVBOgscvlgu64cKCN2uQNmtSV/Vl3BE4NE9nCbrG9/f729N2hVwp0dHbO
u4T6FQwPlsHu9BhXB/XbjkOlR086sCOAlcDG8VYtFzPt8lKGao4bHXE5gbjX
/I2shW8Qv9ShVXJVFwWpG7A0zLgu+PwvkaNM7vC0nL84c9cOf8IhjWAks8Zd
PvyKedbQkbPxGM52DeOtR8DVF2VFnI05jGV4wkDrBNNAvov/V2t/24visljA
kImr1voyLAiyUx67kVXgYBuW6TrMnPTPr1mWaW5e0BScnUl1W9uR4xCA88Aw
eOpARSrmDnBJULC/QPZWXl0VMmDgsWiEjGcpO1Kvop5eCnDMqx8OcL/X+8wy
/AR/x6EGUgAOyjP7FbzezLpbjDpP9DjNURLLyim8jaNESol3keSqqwURysvl
jBhhPkGKBIc2p1GwVZekiQrYLkz/Aoc3mFRMX2lPg1nCutfF5FI2neSEejlH
/i+ynCjWo+B6xEOmHbyFUYLQjEQlLc/QccA/8DbmIzLP5RelTsEvGG4r8LAJ
Czgk8c2S/eLWmq3Ry0hrRQ0IKZ5VzeplGOJJCAmulWK3Ua32XJhIFH4jfGQn
wWLdNdSDnjxc0WXtrzgqMECW9Hl4yzpneSBfXJT4xJ0X3er7HELHm6LB/ZuR
NGpHmlCrYko6n0/0VEzyO5wh9nBRwdIenwwu8lo4/AwU9eOTUNGQm877tUJ8
5ZHQ3A0tsV3DAsSLaslzIA0hUdZhoFMjFDldM/+G35J0gdLbJRBPbNWJCseg
2h8/Dw/ssEc3GQ7MFDZpPK9KPY1Knyo4TT8Lq7UkEv4GUlbe5BOhLbDK1XIx
Ipr77fn5CbNJNLMBm8TFOawO5Eu03r1//29IOqEZPOPUJTQCUscI+CfMQTgk
MEUZFstBcPtgN0vUG3H7fygmk8GfZ9XtLPvu9LgWAQr0YhSglM3bC+FuULx4
6XN+W04mODi4QvA9HnnmMVZiL/wA6+wWBkRUbzwumc6Z37v4DalKLEIWEYs1
bwsTv8fAhWMJP22q23wxbpGPFCUn2Unl01wbIGpmeAasBi1n3slth71v4RD2
6QDTozypQV2iPmyEH712oZRT1qzzV3NeSvhTaHwxBk3+ktrFh/zvwc1MUi6h
Jjzk9OLNimJMt0yYyJ0lRzxSHB0sz5w1O7LmwFbPltMLVOWtWgpvXoOeib4E
XE3aeDn1ddGQVjbTu2lWRGUr4mx4VgpRAeiq4aK01WH4SdaHd5DY1QQO/4zs
7JbO4k8snuEaIufGAeHFu0GTJ9yvflYMr4YgAU+WBTBl2Dx45dXXh6orwsEY
XZcF2qua60W1vLrGiZhzj+PNyfhza/RSqxWGzAiW4qaa3CgLjjeFJGGdAJ5b
f2VioRwf9fJ8P809pqhhCtvn/V0UA9hPoi86VpilG7yfz0UBLxGrXMqhw99x
FAl1jsfEFw1eEiFJ5QXeA2QrunPEiPDygPbhRV7mLuHdOp4JwR/lKHr74yJc
Cq7qBQ2Frt46wwN0wi0cHGUtlUx9IazxEEujVZ7iOoTC0uUEaCULRzDp3ifZ
eYFyVTWpru6Y2rwp7rLbagFXbOvld2fnW33+/+zVa/r79Og/vjs+PXqOf599
e/DihfujJ0+cffv6uxfP/V/+zcPXL18evXrOL8O3WfBVb+vlwV+2mN9vvT45
P3796uDFVkL8X5DAfyGsAw4Gy7I9ZU9s8js8+X/+773HsFj/G3qv9va+hNXh
D1/sPXsMH5Bgcm9ExvgjbNldD9aqYBMKrCXs1xyE8klNFsX6GrkZnhUUH37E
lfnrfva7i9F87/G/yxc44eBLXbPgS1qz9jetl3kRE18lunGrGXwfrXQ43oO/
BJ913c2Xv/vDBE5kNtj74g//3otN0F73bkRSkcPUcZD7SA+JfewNH7Kiclmp
AI+vsyChL3uCNbkDtSo066CGMUARKC+99WW/t589l4NA6g1/rQZVGPtocTdv
KtB45tdiZboAlWHsDY3jDPtAk8zR0U5ghthucwK8mS+eH30ffgvqbpbh5OCK
k40ZCXJdw5qN5eyKGceQZ5AKr/CgGVImFJlJmTIUpmcs/i2MGXu+AHmv4Qvc
sjfgcT08wMU5DGwQzv7UV3tTaPToHbb0P2zkHPVAZMEivDERU6sm/CDTQwn1
srxacsAPMRRs8+w0HEnh7GGnzgx0dITPHKEflXYDvlJpC39gofiXybhrxNch
iouDN05+hRFMgR9j79Ml7ci5s2q/QF0lO3O27R6oJ2g0iI6j0SrJaLwgOxP8
GWrejs2vNkT0qsvLX9ALyhS+Jxkw+WCEDYJOBm1BMws6lXzYxWKwmBV4+2sS
wrKt0aRajre0L77Y0iJujQ7UKErUCQlCaJwpYMCkbcI+qWxDZNkPEDXEckpc
GaRH9OKp+RVYQE2TndHcZ+zYwj5YlEVeSJr7DIfWOzmi4yd+myMnigzk8LH+
HwlIcFPh2PbV1HsRSJ1kqHDGI2OsJI+T266T1yfU8aKqLgfwn5MKrXI1mQLI
2GKu8E4/JQ1g6AWJKyevj4OmOFIBr/HKt763MxcTdjhtNUqSdOqMt7VMptvc
BE1jA+HynKgae0qk51ReiSkPUum5yqUUpRUaxph059nhAUxtUlyRjdLS4KmL
IXRHHIaCXhjUkAJLLExn9KYm8cyLZCr2520LWFqpI4NnW9vEmfLhOnWSbPp8
YbNwntjGBgcyWGGYpyxgSy7ePkUfQe/0+6iX++xlsEVdrgN0QThaIEyW9xQ2
elGMCvKFO/OFMVgEdgj1WWHMH2gWOVofazHsVcvJ2DVND0wqlORx1ORMgMVB
fe7pY7hSGIXnPSzEbmYVG0DQE17CkBp0GMO5WRRAIJiM0/27XmKo3KLIx2gU
h40H6bagib4pijkGIJIJQcYGEt6CtRLSV1muqd4AydniwchYgO8si9//fouV
8PkkHxXX1QQbxuWWcTPDIylnCaKk+TbzHj1nzkEyA7xcph4ZIXhlne9zOctv
qnIMlPEuu6YhTMufacVQQ4mWjTrczkW1XUzhnpF+gGv+p7PXr9yD2ny90/du
mq8Ozo6ePv7u9EXQHovDYtuk4/SnH854rpO8AQbBMxyLsIb2Uwq+hR2elG+K
bMs1uy27OEAtfGeL9ZKzUTUnAehM3KzwJXyrBga4VjfloppxzAMO9TvYq0OY
dnakO/n2E9DaBsXs5n2krYulTw6Id4pwCIAqf3jwr3NQzOGc8fmy3KuDGPaD
13Bi5WxZLWvzah+5KF5NaBO+rjBCLTCDC1Nx/CQWGD1PiUxFKNyycjmtGuIk
tO46oXExn1R3fNwKu3woCNwVbnqFk4UrDdWGA5P0mM04nEY5NgkMF8tyQgJp
xInRU0uqv+m5pI1X8xA5tXUI3jIq0oZ2AlJOQzF2cLiWeKLwNLPrpESR9QCm
Qz5JPgdKbTHGd4q3BVa58IF6cAyAVza1KggiT8zzBS9UDhcdiJFaFdhi6b0I
IiOlxTM4sZ9kX+lyHHA8AB1lIEJumXL3PbTU3M1pWEsxHLBpU48m2l2bHKj4
2L8uZlS88db0SxKLWPVmdbVA9RXViIb/nDHlRdZU4BcXS5HhgzAeaJtPcXTq
VSZ0gzAMmBm42KGS8UB4Q2haGqMSLCjKeCRnIumRB9w5pF9hZZ/74JbQp2NF
vT5SHBF+m2J0PStHZY420snEB4yQyjJwnl8bqeBOoFtbOe6hHx6emN57YUbE
/C6QgMwKUelyIJygmc77ZMalKKeLcqJjpMsD91/oacIvh2NwCgkvjZsME+bE
auBmgKREis9NQRyUlmflymAYmHNhwFVpaqVdbuJyX3TjaYxpgYPY5XLyJrRU
wSYfJMyCYp+DLr2Ou27JhZOhAEBvW6omnDc4gbLLvGQbND9iQ/LMKb22Axgq
cLUGVRWNFojCDJy32R0zjKYjEuZuO2bO1DSgurN5FtRA/CnhGZJOmDHWRYPr
XyvPceJG0A4GhemSCsV4YAnGtOL7NiWV0IveZDVw0iQ3WZFwZY01WX6FQYON
zMtJ9zpCOpbrJpgz/Z0FrNBf4vY6eoe6G2D7Bnxay7VLus37nW6hvh7GxXLm
7V+tVttWEmHHyh+iUMzjupJjeFKBkHInfJ2iLUgUQJmNOEMQwqGUqQxbc/Le
BN2t2HKKs7IIO2WpDc7AnHqGCVawYyiswdsuyI0i++A0AnMnYZrVLBpS39F7
tqSkRRVnXUCzHy/sCLYWBeQ7z5TGLIijD6CsxkxfgPYzhVfWTpYAkDjyBsYA
T2BIhR4GNiOyxMP8DY7NdXnB49OTSBYF3YoXOObX5vCZADZasHMKTh48pxmF
zjnm3z6aC/S0OGyhFRIU3qSFVd2ckHMCGqZXhsU/tmDiKhe6zq7LK5yMvTfe
7YR+rta18yFxRP74Eoemv8OD2ttoVF6VnupoYYJVIDcNcG650N6tAtLRUjL/
gsObFC3HVcGSaYWMBsRGspLOr+9qWhfrVuN5o3h0evAAlOdwlejW6r1HYRB5
pIldguMzelPQK7n0hjsgM51g1DZuVmpx+eBkL/DU88T4UEwLdKGV9TQLfBKh
HwOtVsupxF2ImSsRteJ8oq3omMq4ewtx9rLsK0KGcRzOKzFs4m0juZyN5oE0
TkIm+rWIwZaj5QQVmjncUnHIkdtqRm7isfFw+X3tS9RAjnS/nBO5oWUl6ogL
T4aDBXvAaVy3FJM1RiMr0RuZPAt6ovOSeY8tGrNx8Y8bVKjglMF8pvt2qeBh
1IvVYoikAs80HqcWHelaVjJiTTGxBMiR7JEa7TdsnCIGMDoX9kfPny5RPwhI
oh0qvFNAVgMfK0q6syBusBsTpaQ7ZM2sNGg8G9spJ6w0n/It5d18DtrUkq2L
nGfLHkDoSVXqwdFEnn37CVzwATAIVJXVha7RGTNitUT67HkJz/bbt6psv+cp
erfOwo6KyfKCrEfGI96KkPYhW60YwTgIaocC7s43DKDrjodoH4m+9ZiHpkHk
rLBxeIV4o6ooooF0GDIkY+r0gFKnPQVm/1DJUYCtlp37q05GSLjYD5jNlcTE
hn2TKsDnw5qpTeCjsy7gObbxxd56LT6s2jzcFsFErkoQpyiURebreBYLbpfk
RGd2KKP0MTXOmZ2MEUqFc7GSI5wBmuyOoVwdecLkDmmnRnN0uXqy7fMXZzZh
JgojM4an0OrSj3jgh46UWAocLaQ3KtSgGIpeWHTNkrHtq/MXRxIhooYOZQ56
AzHSBM1/bH0JhoObd+yjRywJ82yabF6hRMP5GXBKQVwsJyQCwCCdvZAM55hB
+v49cEyQjca128QlayMbOHxrE9+Mtk8eHQXlXWOoJuUP6Zq5lbnDazl645+h
nr8SARQk6HTskZjXwmHFV0DCsnyCjxAs2lfo77J1X6MFjppT1qsGS1rDO93H
VmwZ+ya8xbJxmkdgqP8sO1YbPIVSgMi+JMqgaupGuRIwHNwqpESwAwt/Q0kB
zbbgRP2M0tHdloqK0kSfw63cOcJh4zFaMfTIZBBaC4hUscTXlxSrLVqQgRmC
HyMPj+ivprhgo2OOI1yW9TWzGHm+dj4RjgZq2KN+0GBSf91EDA96nON7ooU4
vTta2YjcZj68iRgauvi8lQlN7gPQHq7KWRyIR5qEidVy1tjWFrL71nepP/SN
PoAPaDglhzvg4lpfPSf0svBi4yJbV79U2zW/MR7ytE54WuoHohFRvMWc/aFy
X0UVlFNighvCsAdNdVleANmV35VCqPc8lXbRV1srEqY7unskV3m/L97gJeUP
uYgLOwxn8ks0jslPmh7mPEsuNtGtryFHbHcWpuqO/CUoC3XwCqYdY55mTWfk
+3CDeeHc7axtDqSNJlNjmBqsmG7CztD7cPD6K8NSOL4DOYWTEa8WRnFxVxwo
1ERlMbtntUR72BMju2bzA3yL5LPkaPXD1HqLXIl3wBk/am3SW4oj267zkIrT
jjzMqFbB6jQRM9OAnnQKj6Q8OZ8wnPyTPx+efbK3y+uO6AnoHiYyL78whwls
NT6ItJjV9J1bWllwleZxr1RNbMf9+GlJiqQuvotO93fEXxwZnnginRCj51ey
XOiUkDCrcbJLTI0vRWA8wONDKqAxG3jSl16+WGHves6F/iI3NKFhUQSX3hUf
sh+p1BLHteOkUg3TCpJUQnvNuBiVtaZ7rp6KWqn1OjvvtLvXHUQjy36gG8OH
aFlrKlbpSB3INTb5Ni8xYK7pjO2VaetZZEKWWB8XwRcvEC+PzbhiJuUiMMcF
+qyNElKTcw1PsQkHBt30ALPk8Qgv0ZyucBSgeeb+h+I9p/9tkCrWd6ZeZ+U3
7VirbTsnoHQp8+Mo7wrFhqWL2U0lyanupTl2bAMM1UheLQ1VGUfKrTp7WoaH
GUwjHws7bzmc75UA1nvlxJoYHMDFoG8iWquRI5GHiQT3TTFv2AM6BTI7XU6N
HrQoVIYXZuOUWrtPhVogcC5Gzas1NtSmkkZGAhkjR/mzt5JAhqat+KzSMN8/
vT47kiDAJ3tPJDJQ81h9PANxTA2Fr39ajh5KdDUrG47MOsNGzX4Gek+NKe8x
2/mGg8E7rW5l0yIYbrCHbrCIkyOD1c+PKODoYObwIUgHpFtlk8KJULi4EdFg
Lolgol8e4VqyL/CNt2/bADMcG+9PjQQ+cga4y4GiA2EPaMvmTx5TMekg0zAB
O1HMQTorPDSdhil1No19o1PtyPB1MZnzfWsbE9h/DSeX071+bjCmCDUBWVtU
rymAwBvVRdyUWH57zF3kOB0POEwUFFvQ6r6qVF7Gl/9UwSMnoLLcOf6qL5JA
SO/1UdtmL2uBq0zRR+7Q+6iwA57LedguuXwbNcCycbXveTCoOX8haz0aL7tM
9qa5IOsuGsHgwJuqGa5GdvnU06qvvUOnn3w7sKigAa+e5ouG8NZgMxpMeyK3
vusAEzInsMuXJW014g1clbReSwz3KspF9uL8yBLXt289jg8aMNFdRJEQI3KR
v4HtLmdvBtywSfbryNBSQlbHerfz0V+KZc4JSEGuTUu/tdEpZH8j6cpn6mxi
L0rHbTqbQ0cOLgjNEwnHY+5ugvOo1SCF9T4JopH52ARRnreZCN8pZSFRtDSo
ohLrqW4OIyORnkSilJN7vIXRg754STU2xipVHlKqrOAcpNqimEQgvi4LLgNO
VFJMD0rPrJTj1v7phzPVkbBRhfHBd+OhrbI/65Bt0xqr3KHygn5jnXwUU0JD
Bua1rMOAkV7vv+Bfluf1zZWAICX+fT7o/vd5zz2RPUcYrbPrcp7RT++y72Gq
FdpR2TFn/r2j195t0tvnrd6Sr73LQFT2UBzBQyt6ewfajIfswM+vb0ENrXEW
K187y0TBlc/nDJ22aW+wvdFDH39Jkv/+z3s+/06u2b1fQ0ta/NJw9b937i96
8Xvz4urebtxzPbc2n+uLwep9rk9+Hn457LlhvtMXg9m+a/3Bf+OLEmyvSwV/
eP5mv+WgAvOibwYFODofRJHjbz27j178HU/g38Oh+m+3MbYA4xTaPdo5vuCc
p1VzjF9ctaqf21U9tm2v2UfXTapH9y9Bj0yP7QNgmk8Ao7k5RmMJX9xm+ovL
eYjLaRdnxYudpPPz1Iub/usm1Vt8xLayQyeyEonvvd3PPnEyKQPn/f5TY2Sw
kqxTMViNjcSFTxHmBwORBsClrma/35oUl80WaPWB0EsirapQExEvrejgTekM
9uTGy4ZxulH7ZI7zCl7x89zpEaKQe+nLW/lXy1ktv6WqA2z889H3cSL7mliN
Vvof5aetQXEgc9rsTpx6LjQ/2+a8ARwuNnO2E4jgIAVRGgW7V1xOfktT6l4W
ZxVz2RuUOFf5MahZn7RU9DvGaehWRiajYAu/JFcIBQnxDbfB6V2khGis6Ugg
l+howlHIss8oyiEAQlMggLRfmvJzTTzMkFs5SKP06NPqeVMj35pDFIwk8JZS
gxzQFFrEA5iKIH+L3/ypmJOyiINNaRzUsJrzjdBIIw3QwJKnru3tk/CBftsC
Rl3J0UBNhxvHtKDW0G8WjbNZwIcFm8CzllExCFxQWIc+X9+0lzPyHHJUE7oL
zRpxmg+G+6sZJ9DQJRkf1OBLijGoTUwz5wSljIfOb0kTRkv80SmpZRI3LcGF
mDJgosTHLcJiFkLxd9pB0AzMB6cbd7KQGFk3v+AUiiPOW9o3VsyMkWZRxCaT
0J6inW07C/NAFQ7FLCIfzWm4W8aNif4ZQmeY0UgJ8yQMfSD03cYrt+E072UF
zZJX5WJRUeZoOeu0brR01TKyWi2KHEZH+KjW0Ogopxj0xktJQTMnK45AQK8z
P0bx/Jw345IluiYh17P24UzebxXBYzncPU2I7HLuE4do+YYJymRGKRnT5aQp
Me7WhTBnGETg498FryPPtvEsx7iXFzawzF8XzpFLTzPi6+Ig7sCTjHdtPzre
L1rJ+335bhvFtuD74xO19LpIvIu7KJudI/K8c9hjctr4zzR8pIQr8MEScypJ
CPN1xv4EkhwnSm8UKrNgrh3Yk9RPA891gHaFpMyvhxletWjTN9zRlVPrMlUF
Fy84Ni8CmKxWsH4clnZC8JDkDS81aNMfFXddU6zIB7IFiQyM0xQ9qxYYAnHF
0CPY/XF9nb8himACKsu6356gShcm+MRfa+eoDodl0H2xP00jDy3yHmhTg4bU
zly2AwtLnyktl82g7yTlGx7vqLExRcYuvO2M1zv7WY0ASy2zXZcJMCsvJboS
188byNvrQDEoGICU/Q17nlPPbSzFEKOtxYz7KhjQMG/zO+2O2b8KGhQsFfcm
LtKSIi0ulxPOZ6iL0LgY7V4QNEepwTGWXQTt6hIt0cllWi8byv5FCG66lNMi
Zwg6BiWMDptcIpfgBBsmZodTTzSPZxIlOunAZoLxXpYTCcxJbCw8yWUXuo+O
F0W7QI/xBrtN9IAnVlII23K6HkVpabx/JBwgPXAYFRTtoPF+uGaBmJe2WevG
hSk97rY6AeGCeBKH0HQolAemXWrFIUK1QAjEowRz8ZLruGgYlyvlGy0dZmbL
F+qGyFirdJp2hJelzuq2FZbx0YAeO7HTxFpQKE0YorYtPIPH8P/+z/+rdoCH
ji8TpYt630G8oIKJWOSO/YkhLVgUnlrrrmMC3m7wQFPMGGaZltLbchs2z+44
9rgK+Bk3TvCZHeVWHdu4x/H+tmH/2Bml2shyRpVvEKOWUCmsZEZ+B45b1Cx6
Cr11cirngGkIp0kisKENOjADdVEpfuAInffYYxQmKUktZGwcnLhBHLjYybef
5FfNT/PFz+97va2DOMaylJj3RtKRPWoEu/jtJPve7+nvgo03IPBX3c5O4STa
rNhrr1Ct7uRH6NjJOTQuHCnPboscrfc+epSkXRPbatClzEgU6eoxO9cdBDf0
2IpMDYP+jQJvOr2bFzzBFYjcwwAGwEZbR6qeigbyC51oI1TE+oGPTR32HHZK
YNqQvmobmtZGgw2EIxYrOeYPjoEJ4RQtxS/xwG86no8tb3jQYFoXRBVLdDQ1
vAuFlHdwR7qdZ2UkgoD55D78i+CuUf+N3bo4BWEY1e1MoEbMOkUyCCWBzxCg
aFGIcF3zli+Bbk5s6wK3EtAH3gYfrV4aPJtgX0Q86ESwCM8ExZo3uDdNwhMv
lNoMdnKXRpu+zi28CbApfrUfZQgksWho9fqhaUmzWaZor7wq0p26qNHg/hqU
FW0wwD9SzLFsGzpC+8XBm9KtjueRrUV1dMkfqAK/QNNPAKLzFZB8G60o0Szm
iHoXDpNwiv10pBHn79XljhALsYIhE1z/sMNUCjsv6yAch49Yrulw0DZwyyj9
g9lIbMWzWxwcFjnbZZM80wmVIGT5FPF0pgLBmRzkJ56+ClgmEOeT09ffH58R
lqHyOjKmkc2ZSIjwua8KjKWpyFDoS7nwXwNX0WVAFV3efuKtsRz54f0PHl++
OyXKZV9FBkQCWmJQYAVEc61dst09AD7VkMPapLZI2yIYtx36bJNMDeya0swE
0Sls3KWK+73FHHJXXkQGNuw9X7pDv/RAAi39HL/cCPCZzqIW9AiCp9yJuCyv
6FDshSEjtnmamMZmdiWOBefZGSq9Qd4beMIgFP9EIBFvPTC4gQ8ImnUL4QMz
LDop8ULev1UEAIQuvkXMFJ/xqD5LYVJfFx0vM+gLJc8joFJtRT7EFRnbJB8X
ldgQkeN2cbRkhmUzJqacUKNbUjlSBCcJ2krNlydYCOwTtjWgMPGfmaopLJSH
xKccU5diPewdwFgXGvQMNztDGEfY/T8IomPf3f5nQ4rMvGYg5+yaYL4cZhIF
tw0zPh8hWZUdF1GJ4Y19zkgUfmUDnUHjkrISiDg5uSni3oMTxaiuQoIQvME8
CMchqobbUHRa6BtC7Mn9Xu+dhyZo+3bfZQplmXD8vsueF01egsb+rvduv8vr
DP82/BFayc6FIav0F8mLZIrGkQ6Av2DJlBrp3bvsQTO/WbxrEXa4wxjk8q6r
73aHCUO16eroNKO+KNYn1dnqvhBmDJiVsiU0hnGvvoto3kJvodP6JtXno037
DOblk+y6+jePmyEkp41DWLfIMggJE6tNz9jsKB990NT+Y4lGcRmfT/SNJ6Mz
wL7+Pq/p4MadPeHOfh/+owiGYj7nAIM9DWE4itH5uZ9Ps/dt1h+JSB3I+63q
bdazJbIpkDtm1WqDupfP6rhpFX2zXntyht2jwShwNL6nD/SMMclqXyrzgKmf
QFEbKCxQ+H7DsK3pIEJXzSkw3bXCYhOLLaalOnrVM73Y2K/6PLsdNF1bWaer
K6bal+PaFIuBBjuLSGtwuSSp2rXovDsa/vvBudsSae3TrrlD1BTRrbNsJh1W
DRF6cMOFsuPZqPTlm3xSjsU9BhuvQQRUiZKsZmt2ZU35CpeYZMpfpJFSCYDX
ZYBE2RVeYN9WRAiSN6OCATti6q6XJTo3CkWJMpU7KrLvsKewDdw7EO+XvQsc
wONVZjEbBMXnKO7cVPlKsBy3n6rkiIgexdmSfGrFLyMnd7nSYxSNZM2SpNDo
Vv+z4UcTL1ZIF7+KeCGMCBk5xd3oefI8I8UogXFo6iP9mmAgD3+CWa6XNpxN
QDZlJ95SMxKHD31g06SJE8tPwDiJnaaGczvKN+BpD5WnHaSOQQwZQBzu67YZ
vhO0tPOWe9PNNnDIg6tGKhTGBz7VgFiLSqJkdNQJ0/VSy6d5JDUlvkp3De6m
ZsvVCMmJV0dq/i3V/279XoR1ETjpiaGStxMvn0DZMGYBq0gTojvpobt4oYVn
v3c19gsE/k3dptF1MfoJNaqfoD1oqdHKIglPgFQuaq8vg5o5Ry7P3vp4u3Vm
XFmyMkpJwGDzed+ivqyhJojryuEGEhn6c3Hnq6Bn27D2z3eMuVu9JYRPR6av
dniZwtQM2No3MAE9q233zOVsfpTAdAfZriYLj+E/a+AU6jAMyoRiBSpbBp5M
RRTNYzBpcIYuu1Ush4wqiiUHMKGjKdr03XIzzBeqjd3MDDDEHe/7DkufqH+Z
37BIyvKN8X0CF28KqTaR3MIm5DIkyxgNv4gxkxcFZk6CJDQb35ZjSl8pdL4r
BTaah8eDKRthVGoIlMtmcu352srV4ymbqYZWYTgPV1jYpZT4CwS6tjvOwAy5
ZmB9VwtuhToSV12DzjynWqqamTEH/uBEMvCnzotpvJ+6kyaCYs2dNAaz6Hoa
E3EKp90EjPTRKtHyAfuS2EGpbCoFkY4ryTmNPh9X88ZErXHFB5gd+m4mXBBU
DDToATgOUiida9oj0DO0HqGXEGvs6F3A49SrCodO1tuC71GOdXimYjFO8QZd
Ihajjyvu6iyfMuww37+DV9l2vRR6ZApyERy5raWR3KMAI+LAv852frdxOCQu
mV4wzkQgalq61cFGI3lyVQQtr3/cUGSn1O6oJvaBLVBFjH9lONmHhmRK0r7A
GUSxIOq8cX4prcXa1vQsB/HifjFFtE8H1RJeUSlJImNOZ06uy1hcVXoxUC9Z
MKdMcxdTbymmzjE8SmkxzE7fU2GubDfgynYDrmy3Xe+Ea4pfMCfzlAFDqjRg
KSjvzUhrNG8bUu9b6nBrsIA2ff7qDG5Rgcqme594+HwO8u0O1wWAF9u57oht
gkaYfIwgAtg03T6W6OKwwsyHfSEcIZuPvY8D3cxaoCZ2MSjn+jqACOdk+oeP
vgDGPXYldOpRPlPRNs/+A/1vCjmRXHoLpIUkV0Kx1Xuy9/BV9tXu7hOMjKOK
hGdckfAVvYz3z5q7g4Lz6uMaPuoISRImE4Bphcgl7QQFXBNohIVwjraypKHD
pstHWY7PhdrOSLjWaHEUOKwnuuXvsJvlsiuCEj+JI3ahjtxoV5WfUVZQeJf2
0YscsA0MK5jnoP1uI2tB/31LKI2C1xOUdz8s/dVh9NhuV2zwy8qdnEUXd3/l
lV51nam3v5OFVS+e53QKuRBsb1AOc0fBj4NEGr8GcD1j7/HbT8IbDhMXb+g4
Tsbpwn4mLS+oHxJZhHzsjN7fnhfOtLK3Qh9+WPZ7glenoksvvEZpKbDigHRN
VPvd4Lwkd+DEpTGtW34ksB3L73Oh4pmB8msLELg4diDjUu1VE7P9qBiv8dlT
NPjTMXuJ+QAjDJ5E6q8/C1CKO4yxaVb9blodBOVEBlYgzxiVYnXnlbNe5HdL
PLaT92XHoyLWMDhS4LeSTw5/4qqZMrKfmtF8SL1sOQNHgsyTMFiXakK+4Rx2
7xpU9CetamRHHIbF8qsBS6EIr36AR2Pfd5dayYm85SqbIQQuc3GNzA6AVetV
/At7IyJrIbY8shdFbpRAZTrsGWjIBukIKdt9l7sfHJY8pl0aWi/ljQ1YjJ4a
F80MfXf2wtEXGNJNQogBGE4JSL2DMKKUHQMqH/mYL0wDogQZEn/89dNAT6nY
lDxIIkuHCFt5R10Ptz7do1bBVFIb2mGxPhEU+muF4ncYsnBiZMU6sgYprTYQ
RKxH4nxk9WuVKEebXyiAksUXO2QZ7QjPJFYnKJtYB6jL6dxjB+mVcqNiLwG2
8UP5danf1/1ktXjbrhobsdhwfrXAmNqzM7EoRAEBArFJ4wKSoAuHoZkLIECY
I1LNBsV0OSjy+aCaXVR8+dVvQ3Hz0NiiyqXEsMHQefqi+uHk4NWDaVFfpwYF
v2Wo0nyLJxIOtskQCOe4bhdY9UN7mtF7U3lM35wenJ1kL396fnx2+Pr7o9O/
cDIYEX/iiS9/Oj06O3n96uyo76m3cvRdNKAIM8U5yhIEHjkdmluTkCzYdJgO
NQlzzWmrHJpXsxzfdYd50bgPNej+a3sjer0TuWhI2YLiz77qM5XxCos+91ym
MxF/fZJMFsJykf4ULJSDjlEtBZtNvcd1IghOQ10eD/dIOPPB6N/NkUdatg8r
VTViirL5LY0zBtXt+BYXv2rFI5bF6ZxSTaZtDCGqvUGObCdAtSagadSDvKFs
xq6Mnh0aghQuFmhIztEXbuYSGi9by7qiiAIG0FCqbZAF0pFIgXFuBJhlySaN
Czc5Z2u02OnCIuW4sHqoAicQ20uVGvhIsRDVl3PmEY78uqLMk2OKIGIMrhBQ
UJQ8MYl7m0wAiq7BsG7WCc/k9snRKaV1NL4Yb4z9K14zS3zs9YkqAffgEgWH
5jlaYV5rZiHV17V+xSOXdf32kzAkn2UIq851pPJ0yONk454jM3Iuc5Nga/z0
aEHY9sAJMMYHBHjElNLCpO/EDmAalgtBoBCBvLaYlkZ9MH3iNGfFxJkgETmh
b+ARXgDFPpoViyvMv3lxtEMJXa+KfAFK0ARX0Brdt199fbij7u54XtgBz5qI
otRrXMSYnHygKsSXaoFWrE2/hL7jmZnmuZwKyEBs7bgIUSSst52KkChEq5dj
XdsOsl/CSO486clHi0rgFkOPRFR6tDM7pJV4L0VpBCl8k6zZbXx+v9NTX3Pi
EIcL8BUKku9XmkitFpiSrG2ZubaWGRQnX5XpvBOBQEQOLpOlMynySwOdTrKR
z1SJ8jCk9S25PYpk0LJI2+zT0hXAhWkR5FrowXQuBmMFjhcnqv4ba+kddqTK
2R8ui4arKKZtmk6AycU2GeVuCIHy5jMbwBUXSujc0bZTNAKs9jHJbQ3CVaJ2
xDI2Jq8Lpt9z2ULrtg3PKpDJNRUHOkoNiOrGTenM4KC1tjSAMFntaFGMEJPa
tMJdradbQoOF17RX31EUqmU9I9/8Kfy5bVIQEcYEb8MIL4Jz73M+IPSyXMx8
IlS4nO07mSoBjF1vtwDst+gU6mAju+xWxrwDJcPvT91s73uF+eKrAYPTztyQ
YIe3NJlsC+/RFpyHK/g79GvwgXdlEqisGC+2y2JLFWVQ5/G+X0x83RGNoo1o
3Xl3/KKtWrN+ZPBWHXDVkQuWFZuVTDRaNxnWKZ7rYynCHCfhSZlNKnQXrZQs
dyIvMMiXVL9f+JQpWWVsQ/KbX3mb6UdXkiUnkjE1TIbg86vZVZTtCCPUDedg
HabhkhdJv0e77A6LJxoUS1dJepfPu+WUwuckU0iVFDdMbkWBYaQqYWkCNQOg
r9yFCGaPf/4ZT+kT+L9iscDShRybOiJ87ogweh/L0yiTaNj7ARfKb1zf7gZH
8aD8oM5m4v8tQaQTVKyXyGbJJwgb7XnErAXq7MUKjv30J967WerlhU4LRXcD
5Bkg4EU4h63PmX3a//i5hTVsQRDGWIbmi3f4twB/YsibjyAM4Q1TrcL/HB7o
r++cebrViru88jnb/tPp4Y4Zi3/6HWeD46MfaV1sB3ZYK7/Bj64U5zttw9k+
Nm7Df3DjEAniw9sgwyZ7lz60jd/FgZ4f0EbUxL9/6HqseGNtG9jI9t6O076J
VTeYM+pwwOAjat02FW8me6BLUc2bIYmTHzoNXs4MO85+2XJm2sQ/ZTmDuRz9
8rkcffhc/it+o/VF/E3w8b/4aDzccdIrZSyjJ9yCiaZXTZZATkR7/Pda+R+B
9g2A+EVq7f12j+wIDgnoD3/dfBzhqfqYc/FjuV8bknbHXkSdyj3bUL2GPXYf
1Ib7xhIx0i0MSfuAW/Vj8XNDKDTMX4+f//VDGuHqXLDOIMSjnrdxI56yu1x6
R+S7T3vw7H8T2bZ382jjuxmRll92noNWs8OzFLnauA1aR0w2aC9i98ofke2X
ctr/W1Y+44Vn6WF0cEgpEKRkb7b48g4M+O/Zhy3+72wjOOv/JlbwyB83W+vP
qpNc4Y5wGmzi3EcVE+xN+1DWmt2c8eh+yTh08z9wHPHZ/cC5ZIWbyj9RTHjc
Phuy/74cpH5jU59WiQ9efviQW0INrNjnDyZzaL3VCB7HXe7D6mh2rRayFQzG
/P2jWi/vzddWfFy1hCuO169AXR1ye8qEoNlirsyaZFg7x+qAHKvu1U7c9vNO
s0JWzyelLwCpdbtWQnWwcSMoFOX8dkEdpaba7/X2hsnUfR+laxwELp9o9Pdl
KQFaHcZ94kAOsvJhu5OH6zoxcCw+w2LDQtgGlDPtA41AAZ0tLApkPDzIPAw8
vyfu3PYgeWiUMgvnoiRv7qP2vB+15l1zFiaMLGq93siP6EIh7DiTWeKP26N5
0hqNoFJqCz4VZTY2NaAjXPWkD24DxycFjWgWqDq5D8LTFUdm0skSw1jk84aT
G18mntxcgGqwOIDgoKVGiLELrpCeWIYKu8ph5ovG10YOoERkvqCzd11VtZJj
XOgZoTWKpdlFdmOB2tKloFqsgk5/qdah9AncUQqzj6GJ8e9PMLdsxt6GsBqE
Lx7MCR8pHHKCTsdgDzo7xQMCJ65dUJ0kc4XJfeQH43z6wqV72aBe9P6h4wfj
skCjo+wCRmeENUC+vCRUCMJx0tDXqLi6BO82sFVLpQXJwdQdtuT14XamLqlG
/OYUH8gFzWzGLC6SX02k5rFbxNQNvWxlaAiB2kYw151k6fh48BIWhAhC3SGq
G2e3pJHEPdTCpqk05cxwp9v8rt4nyP7PjKPZhAFuElhKrgFJJnEpJtKoudQu
EBHjeseIkK8xcYWkOJNVdqPrvaL1XMOXXUCGdqPTOv0aZpCPyIcA26j1XU32
QO3COwj+ySRup3ca5wwPe6B4hyEtVlXJuXF5C0shzhodhoGy7lczKyqLkNp3
OVsEtFzfzUbXi2rGCNfltIjyPbY54qR2KSw7hqwosUgTCRwk0mhchLbP19+X
Fc6Y7n9hSa/A99L9L/CfxBWTul8yTpjNXzI+lw+b0/pObH8DLnRwz7faPmNu
AI0E1VwxFTTMOQ75EI3jHv251gfOZdCRWOX0GZjahl778HHrB181mHuOnVXL
FYNW0+WAi3oA+/vgNTKrlIL2Gpg1kpe3i+m8udvpbPyXTHqwIrIymjQFWt63
p27lzYFXqewpRiKKB4yJmw5zp1t/g1MsrE/P+OTOJ6iLIYJKyI/uHDO3asnm
gj5jdbfBhhDAYT9JnFEg0V03cp8OQ8Qp+vOI/sS4imF2HBUGcdgQt1LUlhah
8GEB4iumgM9yVOazDNcKy/70sxsS6EWNoFyaCWkVWOHFq4mYnyWYoGJUGwSw
sbAVClD39hOqewRr71laGHkndVpcqFFt0aYo1PTkNdaJmgXBwO5EstS8n0Ka
JHi9rXQkoYXRPcTsZTjT54gpLXFRZb2f/aeptfvgb3U1+0/Mo1CNBRFYpkWj
bN/JUhJ+8Kez169ExCfJfENStk9axtPHg2KGgpENBzw6YjJsU+xdw4botZrA
oQzK2QArrWraquCC8QJEmobflNxtSTEvR00quIKFv/2e3GK4+5vGWm3BpvFI
ZaCgWCyL3/9+q+8bMdPqfLz33lOQeX6DgVpKNATy0udU6PVyM4T5dZILU2qD
9VCK/Cf9H/FhTfieLxBmllHEOxO4tTL+TYWmGVGi6nIA/xF5yxhEQoWeSFVT
UDqvAzE158NWBWw8hnsSpjgxpI+OVmxTHgOE3+VMcS7McrXZedlgUDIJpaZu
iBZCWhMmGdmMuBYPr3jDqRBO3tGoWcy0IqAvt/qBrvq9jcgS2VpUSlCDLhsh
5LpELuVC8YVlQRLzRBWqfW3FT0KhfXV0D40JaZ+bXRfhqQ0xeZpc7eP/YMHd
66lPf2DoUjnpMcgE0Z835Xifw1U1zxMfjUjQxV3jq2Sno1MpnjD4bit7fXh+
dJ6dnZ8ev/omo/vu1N5VwCM0/YtqfLd+8hhTtkXlAyKRbr9NgDICeMQqIAFK
04oCBDu0tkxqxgPYmfZCOWzYsTujSGXg1zu4PPv4LTQ8HtC3vMW07IGGnmg3
nWmJWRvI5dC6wqUn05U9+i4O8OHw0XBP7Qhx2qbSonqNBaEdj/q/P3m4y2n/
DPvgw3bx15RlyVo7RHHsfZJ13J9Z9o3YR/H2cEeKAAGKb5P/zKxqnt9NqnyM
vOWrg7Ojp4+/O32xnToOwMWm7SOxw7zKXYgaGvqRxN+3Unl2y8FZhn18d/71
F9s4thMHd/kt3dcdbpPede128z58Du0afwUuCMtxxCjU+9nzgi+eTBBITsAL
YYFIQOG1gMXFaWw+bxCq7vP0Pi3Hlr8HOJ+Huw/3BruPB3tPz3d39/E/e8Pd
3d3/Q5bUHh98HKGBiuLxs729rY6pbqWWcyuaObQdzl1ElskVdnJ09vDJUx4A
kLWNJI68HnfLGx90MjvlkU3k7lN1TZDgvYC3KCsylFg6y5sa6YWRuh0uARN1
Q1JTJU5NqLBC+CtJMoBlNo0/xjJKYAwHqBgBzxMrP47kAkHWii6uGQ0zIth/
u631HNPI48xtL5uEq0GisbOpRcHXpLhwtDUZODss1RR7MxbTus8HQonEdRro
Ry0MGUnR5K58rQJRc5GPEw96vLubfQV0QM7LvlbK0jpYhdwazIqkptxi41Z5
d5wkDKBJ1JXoJNLdz24xVl5q7AKPwVqRzWhILoDgbZ0g+RH4KhY3pFO7AmG4
tIQuyNzqljJCabVSOhlN71H2dbW4KMcgPXROjoHXpHxnRfVdJdXOKHMu8SWq
spLQVW8LsffSVNRQ7KUTMgWmZJNQNMOm3HVzDPwyqWm2b9yzJ3tPGGREM7Px
6CPNMbBiVhH9YEnv5yej/VD8jKQ8We8295baqHgojeElEIMMqwe1oZx5ZNRA
oZHb2X681FJ0rszOBpBK1EmQV9EpgKjyIvzUbF1L9OraOfjkblIn9wz0qRRt
bYmU7aMDh5r8NPcRKZ1LQy9NUJWx5SyQDHbsGREbnSRLY+L+3EVqccG+04CU
zLQV81yo3WcwiNmoiKcJEvzibt5UV4t8fi24gZytk83rYjmuBguYIgxgpqhi
LZG5vW6rUgxxQ2Khle0vmueTalEBmMdGT+5O/tr2LjYSNcT7ghU/cO93huiJ
P+84Pe7kkDVQiogwN/K81x/I+xml9Cq569XSRDvNVgm7wrZj+3kdWOLc8Drk
gZ0ui9c6/bMtiG3HFwwEOYRXD4r7kivzPgMUKiFVBxlbVm78Xw5Ah53CyTKV
d1P76FSpuqDqCpMiR1uLBTdfp3bKKMR2J6mxHo9hBV6rqXVeI703E5ZpEI6j
K9hitDDJE/019C757l9f2zoR7tCtHMl32NRKlWyFfqVNsFa1Xq166NWqbIuI
KT5XPK8///zB18vn337z3ez051ePjvYeH/6HWF9X61/8hCNk+GtMyuSRj2AI
vqcl+CMrhinVEL6Dm+HOXrZq8J2/0o9/leZAyMUudLNBIfkcRdvQsn2z6NYz
V1mx9W6+RHmafRzlPRQiJASB0B2P8j9Ds24AnE7ym+lY5F629WghV6FKjrUY
wd/4voaWpLlnW6U8NVP98HStRZpL5lql+sj7N08D5BjnzxKEna6gtKBwnOiH
mNGccOvZAng5l7078LEWzs3n7ZTZyZ8Pzz7BYl8XUQnFtRSeYeP7WkhUUFkt
Lk9eTiXAWkp58ODKUQgaP6tCi3rDQVpF5AKLSspu5PtL+JY/riuw6HQFHn2I
K1BEq1lGjnc2jSDoS3GZLyeNBeqPhy/odox5ZV6XjZUS9Q6myAtvLDpTzBNm
zJjVr0JwxPyiWjZmVfkybfGHgeysJOwjfMGiGKR+4yuXfo0LLgcBzoucDSjG
EyivYvdb2X66KUvksAlXr4rJeNptRzdmBcmzwX5qQIqily/Th5z3FQ56tMRd
hxu0Jh8y5h9PqLV4RaT6wZisBHesWyn6DLJTT9IUkfz04AGCkn8r0YD+GFmg
KnNeomF31hsJsJ02p4PGvgjfONis94R8ESq/4a1mpqPkOK9TVCi8Un6qeDuG
SUsm3t2NzZf4cL4GzN3DOstSSpgxxiQvwnrO1vkaumXliPhWfTHnCBInAN7A
8XlsD0/Nj6Va8MnrY4v9CIeiINQmi61OtbwKMgyyWBiWaiAy5YC8YrWEZIB/
NHO6sManc7WolgRyRnaiejEIvmh0qbqkilnRYJTooMam4XUiEi2Mi1E+zy/K
SQs8kywNBh/XbHIn0hsaWyaoCgrPVAbIB5SCtAU7b0mQb0zL4JUR74a8Ruqp
/CnXjWC6QIaVlfUKewLkzlGBMMOPKfjR2Xk/O3x5gv9zxnhlZ4dHJ7H92Ya6
I84n6ZRip2336PBAJsUNiBZXwoFC5D8XKKCeR1lu2ENdp5WbJ/VTPRcjaUyD
FDzFY5hfrVtg14o5Ve0QPmEZkA8dvjxMyJLJO+z21VaQcTY/AjQvIyGJTnPZ
JLTeOoz+ktgLV4LBYbVR//5keGp2UcBaIPjPxq6Do3Wug8c///zAA7Z8RBfC
UduFgPgwgRsBu/uVXQhZtfBvlLNVvoCjf54vYLu8dOR2Z2PPAB5R6xiQUT3N
4HJlBxR8gzuzH/lFPq3lRyd4usLAMnfeXjxWHGAOQ1/OXF2XIc46kzrEfX1H
6jUiKlG4XlVdfG4Wbe9J9p1vi5W2DMXgxDCTUvJHHuyn8eZ+SoCyHn0oFBwm
E0E5p6h7J9gljI/ttBr8hJY2DgxSjKZIvtJzq3ig22Z8TpjaSdWnwfXz2M7Y
vSntnFJIQrO6TwyKPKEh8utqko3kBw7xwvMzp2sg8SW80peHBPmaot/OS2DL
j0lJSeNlCgUYyoMCwhvOPeDLhLVNyxl2JJkdfmhnBrC7iItaSiSLca+UC8o9
sNsezyS58gmBInXWSXVLZHTprNoao7tsKf9ftzSzkVew2yn4v/x9v8Tfd34d
Rjys2ibi4943dQKHwO/PNvYqZ2PH7hYJT4HMvT/f28Uru1aC5my/vd3VG6QH
Mg6eOr8uYqXhHl4CRyFN/JeqPGaf6DAZQLbQc/DDdTkpjOzW5IuroukyUKHH
cGAIvg+29Cwrtvf5moO3hOEYw1jHRJSqxoHirwTJ9uex33GpHBMz9FBbI2XC
OmFbaU+mvGHdFHkr6M0/GMoVLdhH3V0PC2vdMUcfxR3jTuZvzfniBr6VnXYZ
+s+sq8W/IOFqchU/krdh3SA6wtCsp2GVn6FzzcjHsAW3otna/9H6ivSHyHn0
cLD75WDvUeQ8CjwRxSpPxAqz3A9qT5AsHskRFry4dI5kDXTBUYVEHbNE+aBz
Eed8IfHA7WCnzL6Ehvz9KuZdEgrNJczremZqGpHiRHoTOy8wu3zxBl7CpcUA
BFlkbKSYobHIaWNTDDSnIHeUwJqqYve55lEbLwZ5DxYMsZ2c3o4vNUkRP74W
wnBvz+F1MvenILyuqogmzB6DNSZiwpq0q7aTOkNO8eKmrJY1POoLBmqdBqCd
w2LYtzEgfBiyf/99/OX3HV+KVhXJxCREqPhKyu7VjJIYZnckw4rwjmwYu3M6
GmWvhjK+I82+cTKvNNQYB/qXErxCKiEpIqgjqqkq6MFx04M6eXT5bLkqy5f5
CK1bJMEE2O33KhmZ2xQ4SkURAwsNKxq1s0NghkQp1eJ9fZ2L5eRNVPoC7cRk
OvJ5xV4ioCU1WaAfVmksgSWRfavoFS0EkRhVAro99avhsECeOxyQGGpCCyx4
SSOccRsTIzWVFtY8kr0pmVe07URLZjfbZfEEhMbVRSEQmh2mbHU1LXz93ToJ
9RDDORiUArRyrUEqEKqGsARaJCkGJ5BSIDa7Jp3uHcrHnEf/IKi2FBIczY9q
40k7/6lK1kpfRKG4Fg/munpzzfWC7EcBloOUSHe4ABqvifgBD+C/Z8+74BKI
SozYcxPYjAz7MrVNN86i/0VrShmazfok++RW9z7ju7N6eNp8qnvbw7bD7pKo
U3SJRBhvfSnbjnVdWmlZxpWykxEXEqdWiEWCj8ZHEqc1cB44jwcUhm6mYAZc
Vn77mxDTOAJ79hePc5xbCM/2u3f0waI85wGwcwRN4F736M5ZCO8cIjrT/4aY
zub/5fUErvOHzT1o2/xLfIdfGRjnH/WEfG40sBjANNEYvAl3rM9CiFPr/9rd
p3nznqON35Q8/KkDo03B5K3rswODdpPRppFnP/48Bx4asQNcck2fnHpyrz7N
Nx3Itpu8mcaz3eTNNIpte+jdazuw/+whkZOywZvRqq9/M/i0fepXfe1oE9+l
0XI3fz2Jk5t+3WCet6BxPZDF79q//+p3HHt0YJp/74DCXNEne5vv12dqtC1a
k0DC7TxN4Qw2fpMncNo1gdWjzVbA5/r9tE+l4U5/hf0c5QSvek9a9rvgzQ5w
1o832m7Ik4cx5ImFLlyhoYRajYB8rIaybHk/XPo7OvEiyJ9W5TCqlSmRCQhC
mMghxheWHvptb/go26aSc7fFYofyFGajaolxClgEk554mOkD+Pvp0X98d3x6
9FxjRFrWoRLrTCba9vZhLzXEbXC8nXZrvN33bRHFqxWNcWjVoV9KVz2Wk8lj
FRdW2n21Q3FVyK4wgAR/Yl3TVgenjWL3vZEyUntGuAKj67K4sdBn8aKu0BqN
xTry/VhQr0OMCIPDS5WSebxd2m5ZC+jZ1RLWgxaVDBleW9c3Q7DWnVbkb2w2
kv2ytdY6jDRe8CDbncO8ylcdf+y/e+F5YbsX0kX5mB5o3ongjmD3DEIFXy8d
fIxB4eos5VQP19dwW18qSoKt6Xpy0JtbPROUREAWYrLj04SVm/xSthNjyPzr
NjaI1tNI6DrQqKGXdjZv3cYnFZXqslrcYqVh/HGaoFfHCeqU7r9Gj7MsEhvp
zZCcT018es9CkywbYHcf7QqaaDkDcaYUi1aQIk01maP1iOdUFzOeEGc526BI
mSAp8P41jRZgnd5Zti/kIvrg6J6NjhZzi2aWMDGTcKSkA5xs4OhPMxsk4dUb
Py/B/Ptr0gu44hzVmoMldcFr3Au7UslgpUX+Nk70TvLAWn2QEoqjqQo2AmYQ
hryoeTR3kT3hGuiQfS4Px8wyxYq/XbF+ZTryqb1i91yH9bgCJwF8srdXEMiA
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
w3H+S0zsXUmPlrvd8yJqqEtZJ+Vc1O3Ml86FCP7fT+G+f+1Bm8J1BOH/DxTO
cbSlNdMPhq2dgMov7BRZC6bormy8+Ke/onBJwW8wA4XT7/VTCArnPeunr8d/
U7h/U7h/U7h/U7h/U7h/U7j/pRQuGqV7cmpnFyl+izr6Nlgb5JreSr19vnmL
5VnxN/f3Z8VMnj/NxqfVp7h/N9+kur6OQu+j6n3rPMw3vbvji1qsBsFBnnVG
EM09BuHYsvZn8pxORfXjcB04d8uvw6fIUYuQ9R6T/S//+e6n1tjMbzyD714a
rqskHT3Tlm7yXcMtfcvPehZS0O/7lu94FiUtvVtzLzuMpXUzuxqd+velodLW
GChg4gjwjw90oYsxipVFoli1x50L4pC2rTi08O3SVmfDhY8VxDtAQd+WWwvf
iT8JVXPEZvEICjurW7DRqq5okpdGKsz0883Oyg7t+8RpQ395zd06rXkCeARr
8wYoNBtP7b42hUmiP59vJIsuzSvvbX91aztdOReelMRRWO4msRGpva0jmQdL
DEU/685CQUseOgrdujqMZk7mZz6Ltgs3Sr2s9+An6Q5gcfSk5GjMoudABdgl
xijIwFlWrN5+Ul7JR7eAG9NUKS/lO1/JN+BeC3Nk4t+01ka3odpCvVwdc79p
lloxMCgH3oHnrta2tAEa7jhDU/NVo2BZN6b1Pk8S1YVz8EqWo4j8tm1Vm7E1
W8F3576sf74R6a5YRzDG86S5Hb+8G9+W9/zeZbmbGzNomugLgC1xkRxm1qqv
z22281tbYq4vC0wpP69Sfn6hHpJpFgch3Su7Yg/2UJuGaTSEcdtGFssuCw8L
B1r3hHmwvBlbhrIOhqVo8P1aAD7nCPnSFw7PvhQvPdiOrporOD3GMoAHv7m9
jz/zzoK2iwa6Yuz07KuwkFMPc/9fARLoy3ey+MbdZsbufmf3z9lupD8kcWRZ
meYpBZvfB19Xw470PMvHqXq4/8bkj8NYeD8HxsameVytD/nvwpj9qRxF89Nk
Nh6fdp3p74O1/rX/9evPhosuYjaEQRa69M9Gju9+JuD7bnj5t9uRbT+9p+po
76kqXlVSi2q61AW4r0t68uq6ZSz3j7+VFdLiosirMix1pSJq1mrauKxncm6H
VzQt22qu/1vygqG89lSwK8t8VQPLFlT9ernLPtzcPNXlY5or9ZLFEQHkdlEW
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
iCmFRsdWfqi9DMJpR7OZqgSeaFnuWPxw84pclbt7s8utLHxrdPnXiv/WexS2
72mDPTWjLGkh9peLpOkvTbKFJ/SY+XeTmTcN/QI8bLbvyy077689Ub37q8kP
XhFx/BKiPEPUG++/gTN8xHzPWkmf336KfOfueQ6WXyZyCffPW1vwWb6uwSVQ
jq21GLerUqF5c8Rk00Dth8Z518CeLrNlcbl29msdiaeY6NI/NkkG2soWJFyJ
nvMP9eEXukeBfswPAbzavlMRgHqPzG+3v9YORyhB6tOONmTi01xly1RZvQO5
tY0A4WqzyFRvcaiWI9Gdlsp9aL5w99sFWzmvr5zXVq53pfFfzxdFwf1VO+K/
YFDNDRDlltaKJ6GrYcJbuJZCCR5E7h4tTkZ2MQnsL7wSAJU8f7P+XIaQN7dv
7RyR6p1YRXX45twtSiAQNtG3U9pMzEcjf2dV+58eHPpzAX/nZQWYFV9G+JlR
opWrcf4XRkmK0GDEtUWeh16vSFz0lKdXKVULf7jdBscybUurQGXysA6jK6Am
K7zIG55tkK99c98DNaRX6uRtzQwus92vWuIHD64oxHfOWpWrWc2uejR1/ub1
dom2DH9tNnXCBm9LV8tZZhPL11mxCgd5jglY+1xvQ+GHF8jXBOtlFrzffgkr
6yzZ+KfGGfA3wew4I26++9srKLpIBAdNlu910HA9sTfl7saLuKH+3Wsa/L7V
6fl2lyzfB5QnrHYtvm/l8drP5NvsvVBuh9W503MGUrMZgs5YVPSvZgjnRErj
qfhRMO7c0OGf7ArH7lYurZ6qV7NU5pSCvDjnNurkQmV5u/P+f7TCffHVTovz
Rgl61BmIHy4n8gu8wDyoMODauC4Sp9yDl1nJDW2IIdtur/yWu7ouW+AiPmI0
5X60ep2/VD808L11rF/J7vjRx3K/UilTLserL/xW0Y2/eo5GTwpw/XPqIX5H
0quRoXIU6bLcWw8tPsc6aZWBKRZrUvHd/7jwbNyJNxsC6rd+/ZskcMtw6tQV
7+Z1R3i322nbt5664d6l2dFRowA/iVO2XnH1CnSvXr/0ePXLfGZbyrteFES9
3++IcYa77XvhvsVNy5m7Tk+jv/RkyU8x+s3rmKHSqarPb8Wy30l8tRnqmSa8
mRLg3XpTZm8kGDiDvlITxHxtp3V9kBnB9JdLIbZpMT5TQ+oiLT9KGbElrU6X
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
Vm78/wYXDDIrKpsCAA==

-->

</rfc>

