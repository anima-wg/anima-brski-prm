<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, <xref target="RFC8995"/>) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain. This document refers to the approach as pledge-responder-mode.
For this, an additional component is introduced to act as an agent for the domain registrar.
This new registrar-agent, initiates towards the pledge.
This may be included in the functionality of a commissioning or configuration tool or it may be even co-located with the registrar.</t>

<t>In contrast to BRSKI the registrar-agent facilitates the data exchange with the pledge and provides/retrieves data objects to/from the domain registrar.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>The goal is to enhance BRSKI to support pledges in responder mode.</t>

<t>This is accomplished by:</t>

<t><list style="symbols">
  <t>introducing the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.</t>
  <t>handling the security on application layer only to enable application of arbitrary transport means between the pledge and the domain registrar, by keeping the registrar-agent in the communication path.
Examples may be connectivity via IP based networks (wired or wireless) but also connectivity via Bluetooth or NFC between the pledge and the registrar-agent.</t>
  <t>having the registrar-agent utilize credentials different from the pledge's IDevID when establishing a TLS connection to the domain registrar.</t>
  <t>defining the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.</t>
</list></t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.
According to BRSKI the domain registrar, acting as an EST server, is therefore in the role of registration authority (RA) for its domain.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent  also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Exteded Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an addition wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar (if the registrar needs to interact with pledge in responder mode directly) or as a stand-alone component.
This new component, the registrar-agent, acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than to be provided by the  registrar-agent to the registrar.
This requires the definition of endpoints on the pledge to interact with.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with  value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher request and response processing as well as the enrollment:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated above, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-responder-mode (PRM): Registrar-agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.
The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>
"agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>The registrar-agent is expected to already possess an LDevID(RegAgt) to authenticate to the domain registrar.
The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information must therefore be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required. 
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and or network technologies).
For this document the usage of HTTP is targeted as in BRSKI.
Alternatives may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
This transport independence is enabled by the independence of the exchanged data objects from a specific transport security.
These transport means may differ from, and are independent from, the ones used between the registrar-agent and the registrar.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied in the data exchange between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included into the "agent-provided-proximity-registrar-certificate" leaf of the PVR.
This enables the registrar to verify that it is the target registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection establishment with the domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the product-serial-number in the body, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data of the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVRs contains the assertion of "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR (prior-signed-voucher-request) in the "agent-provided-proximity-registrar-certificate" leaf and may assert in the voucher "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can provide the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" component of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher can then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 48,104 L 48,208" fill="none" stroke="black"/>
<path d="M 48,256 L 48,320" fill="none" stroke="black"/>
<path d="M 48,384 L 48,576" fill="none" stroke="black"/>
<path d="M 48,624 L 48,688" fill="none" stroke="black"/>
<path d="M 48,720 L 48,736" fill="none" stroke="black"/>
<path d="M 48,800 L 48,864" fill="none" stroke="black"/>
<path d="M 48,928 L 48,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,576" fill="none" stroke="black"/>
<path d="M 168,624 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 200,32 L 200,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 320,104 L 320,208" fill="none" stroke="black"/>
<path d="M 320,256 L 320,320" fill="none" stroke="black"/>
<path d="M 320,496 L 320,576" fill="none" stroke="black"/>
<path d="M 320,624 L 320,688" fill="none" stroke="black"/>
<path d="M 320,720 L 320,736" fill="none" stroke="black"/>
<path d="M 320,800 L 320,864" fill="none" stroke="black"/>
<path d="M 320,928 L 320,976" fill="none" stroke="black"/>
<path d="M 320,1008 L 320,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 368,32 L 368,96" fill="none" stroke="black"/>
<path d="M 440,32 L 440,208" fill="none" stroke="black"/>
<path d="M 440,256 L 440,320" fill="none" stroke="black"/>
<path d="M 440,384 L 440,480" fill="none" stroke="black"/>
<path d="M 440,560 L 440,576" fill="none" stroke="black"/>
<path d="M 440,624 L 440,688" fill="none" stroke="black"/>
<path d="M 440,720 L 440,736" fill="none" stroke="black"/>
<path d="M 440,800 L 440,864" fill="none" stroke="black"/>
<path d="M 440,928 L 440,944" fill="none" stroke="black"/>
<path d="M 440,1008 L 440,1040" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 544,104 L 544,208" fill="none" stroke="black"/>
<path d="M 544,256 L 544,320" fill="none" stroke="black"/>
<path d="M 544,384 L 544,496" fill="none" stroke="black"/>
<path d="M 544,544 L 544,576" fill="none" stroke="black"/>
<path d="M 544,624 L 544,688" fill="none" stroke="black"/>
<path d="M 544,720 L 544,736" fill="none" stroke="black"/>
<path d="M 544,800 L 544,864" fill="none" stroke="black"/>
<path d="M 544,928 L 544,976" fill="none" stroke="black"/>
<path d="M 544,1008 L 544,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 104,32 L 200,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 368,32 L 440,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 104,96 L 200,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 368,96 L 440,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 56,176 L 160,176" fill="none" stroke="black"/>
<path d="M 56,192 L 160,192" fill="none" stroke="black"/>
<path d="M 176,384 L 224,384" fill="none" stroke="black"/>
<path d="M 272,384 L 312,384" fill="none" stroke="black"/>
<path d="M 296,432 L 312,432" fill="none" stroke="black"/>
<path d="M 328,496 L 376,496" fill="none" stroke="black"/>
<path d="M 488,496 L 536,496" fill="none" stroke="black"/>
<path d="M 328,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 536,544" fill="none" stroke="black"/>
<path d="M 176,560 L 208,560" fill="none" stroke="black"/>
<path d="M 288,560 L 312,560" fill="none" stroke="black"/>
<path d="M 288,624 L 312,624" fill="none" stroke="black"/>
<path d="M 416,640 L 432,640" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 296,720 L 312,720" fill="none" stroke="black"/>
<path d="M 56,800 L 72,800" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 56,832 L 72,832" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 312,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 312,944" fill="none" stroke="black"/>
<path d="M 328,976 L 360,976" fill="none" stroke="black"/>
<path d="M 512,976 L 536,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 312,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="544,496 532,490.4 532,501.6" fill="black" transform="rotate(0,536,496)"/>
<polygon class="arrowhead" points="440,640 428,634.4 428,645.6" fill="black" transform="rotate(0,432,640)"/>
<polygon class="arrowhead" points="336,976 324,970.4 324,981.6" fill="black" transform="rotate(180,328,976)"/>
<polygon class="arrowhead" points="336,544 324,538.4 324,549.6" fill="black" transform="rotate(180,328,544)"/>
<polygon class="arrowhead" points="320,1024 308,1018.4 308,1029.6" fill="black" transform="rotate(0,312,1024)"/>
<polygon class="arrowhead" points="320,944 308,938.4 308,949.6" fill="black" transform="rotate(0,312,944)"/>
<polygon class="arrowhead" points="320,928 308,922.4 308,933.6" fill="black" transform="rotate(0,312,928)"/>
<polygon class="arrowhead" points="320,720 308,714.4 308,725.6" fill="black" transform="rotate(0,312,720)"/>
<polygon class="arrowhead" points="320,624 308,618.4 308,629.6" fill="black" transform="rotate(0,312,624)"/>
<polygon class="arrowhead" points="320,432 308,426.4 308,437.6" fill="black" transform="rotate(0,312,432)"/>
<polygon class="arrowhead" points="320,384 308,378.4 308,389.6" fill="black" transform="rotate(0,312,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="64,832 52,826.4 52,837.6" fill="black" transform="rotate(180,56,832)"/>
<polygon class="arrowhead" points="64,800 52,794.4 52,805.6" fill="black" transform="rotate(180,56,800)"/>
<polygon class="arrowhead" points="64,176 52,170.4 52,181.6" fill="black" transform="rotate(180,56,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="152" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="404" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="136" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="388" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="148" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="500" y="116">Internet</text>
<text x="108" y="132">discover</text>
<text x="108" y="148">pledge</text>
<text x="76" y="164">mDNS</text>
<text x="120" y="164">query</text>
<text x="72" y="244">trigger</text>
<text x="120" y="244">PVR</text>
<text x="152" y="244">and</text>
<text x="184" y="244">PER</text>
<text x="244" y="244">generation</text>
<text x="60" y="260">&lt;-</text>
<text x="108" y="260">vTrigger</text>
<text x="156" y="260">--</text>
<text x="108" y="276">-Voucher-Req-&gt;</text>
<text x="60" y="308">&lt;-</text>
<text x="108" y="308">eTrigger</text>
<text x="156" y="308">--</text>
<text x="56" y="324">-</text>
<text x="116" y="324">Enroll-Req-&gt;</text>
<text x="48" y="340">~</text>
<text x="168" y="340">~</text>
<text x="320" y="340">~</text>
<text x="440" y="340">~</text>
<text x="544" y="340">~</text>
<text x="72" y="372">provide</text>
<text x="120" y="372">PVR</text>
<text x="148" y="372">to</text>
<text x="220" y="372">infrastructure</text>
<text x="248" y="388">TLS</text>
<text x="320" y="388">|</text>
<text x="284" y="404">[Reg-Agt</text>
<text x="376" y="404">authenticated</text>
<text x="272" y="420">and</text>
<text x="340" y="420">authorized?]</text>
<text x="180" y="436">--</text>
<text x="240" y="436">Voucher-Req</text>
<text x="320" y="436">|</text>
<text x="284" y="452">[Reg-Agt</text>
<text x="372" y="452">authorized?]</text>
<text x="280" y="468">[accept</text>
<text x="348" y="468">device?]</text>
<text x="284" y="484">[contact</text>
<text x="352" y="484">vendor]</text>
<text x="432" y="500">Voucher-Req</text>
<text x="444" y="516">[extract</text>
<text x="520" y="516">DomainID]</text>
<text x="440" y="532">[update</text>
<text x="496" y="532">audit</text>
<text x="540" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="248" y="564">Voucher</text>
<text x="72" y="612">provide</text>
<text x="120" y="612">PER</text>
<text x="148" y="612">to</text>
<text x="220" y="612">infrastructure</text>
<text x="180" y="628">--</text>
<text x="236" y="628">Enroll-Req</text>
<text x="328" y="644">-</text>
<text x="372" y="644">Cert-Req</text>
<text x="380" y="660">&lt;-Certificate-</text>
<text x="248" y="676">Enroll-Resp</text>
<text x="308" y="676">--</text>
<text x="64" y="708">query</text>
<text x="120" y="708">cACerts</text>
<text x="172" y="708">from</text>
<text x="252" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="240" y="724">cACerts-Req</text>
<text x="180" y="740">&lt;-</text>
<text x="244" y="740">cACerts-Resp</text>
<text x="308" y="740">--</text>
<text x="48" y="756">~</text>
<text x="168" y="756">~</text>
<text x="320" y="756">~</text>
<text x="440" y="756">~</text>
<text x="544" y="756">~</text>
<text x="72" y="788">provide</text>
<text x="136" y="788">voucher</text>
<text x="184" y="788">and</text>
<text x="248" y="788">certificate</text>
<text x="312" y="788">and</text>
<text x="360" y="788">collect</text>
<text x="420" y="788">status</text>
<text x="468" y="788">info</text>
<text x="112" y="804">Voucher</text>
<text x="156" y="804">--</text>
<text x="60" y="820">--</text>
<text x="104" y="820">vStatus</text>
<text x="112" y="836">cACerts</text>
<text x="156" y="836">--</text>
<text x="108" y="852">&lt;-Enroll-Resp-</text>
<text x="60" y="868">--</text>
<text x="104" y="868">eStatus</text>
<text x="48" y="884">~</text>
<text x="168" y="884">~</text>
<text x="320" y="884">~</text>
<text x="440" y="884">~</text>
<text x="544" y="884">~</text>
<text x="72" y="916">provide</text>
<text x="136" y="916">voucher</text>
<text x="196" y="916">status</text>
<text x="240" y="916">and</text>
<text x="284" y="916">enroll</text>
<text x="340" y="916">status</text>
<text x="380" y="916">to</text>
<text x="432" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="332" y="964">--</text>
<text x="364" y="964">req.</text>
<text x="412" y="964">device</text>
<text x="464" y="964">audit</text>
<text x="504" y="964">log</text>
<text x="532" y="964">-&gt;</text>
<text x="396" y="980">device</text>
<text x="448" y="980">audit</text>
<text x="488" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="248" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+  +-----------+    +-----------+   +--------+   +---------+
| Pledge |  | Registrar |    | Domain    |   | Domain |   | Vendor  |
|        |  | Agent     |    | Registrar |   | CA     |   | Service |
|        |  | (RegAgt)  |    |  (JRC)    |   |        |   | (MASA)  |
+--------+  +-----------+    +-----------+   +--------+   +---------+
     |              |                  |              |   Internet |
     |   discover   |                  |              |            |
     |    pledge    |                  |              |            |
     | mDNS query   |                  |              |            |
     |<-------------|                  |              |            |
     |------------->|                  |              |            |
     |              |                  |              |            |

     trigger PVR and PER generation
     |<- vTrigger --|                  |              |            |
     |-Voucher-Req->|                  |              |            |
     |              |                  |              |            |
     |<- eTrigger --|                  |              |            |
     |- Enroll-Req->|                  |              |            |
     ~              ~                  ~              ~            ~

     provide PVR to infrastructure
     |              |<------ TLS ----->|              |            |
     |              |          [Reg-Agt authenticated |            |
     |              |           and authorized?]      |            |
     |              |-- Voucher-Req -->|              |            |
     |              |          [Reg-Agt authorized?]  |            |
     |              |          [accept device?]       |            |
     |              |          [contact vendor]       |            |
     |              |                  |------- Voucher-Req ------>|
     |              |                  |           [extract DomainID]
     |              |                  |           [update audit log]
     |              |                  |<-------- Voucher ---------|
     |              |<---- Voucher ----|              |            |
     |              |                  |              |            |

     provide PER to infrastructure
     |              |-- Enroll-Req --->|              |            |
     |              |                  |- Cert-Req -->|            |
     |              |                  |<-Certificate-|            |
     |              |<-- Enroll-Resp --|              |            |
     |              |                  |              |            |
     query cACerts from infrastructure
     |              |-- cACerts-Req -->|              |            |
     |              |<- cACerts-Resp --|              |            |
     ~              ~                  ~              ~            ~

     provide voucher and certificate and collect status info
     |<-- Voucher --|                  |              |            |
     |-- vStatus -->|                  |              |            |
     |<-- cACerts --|                  |              |            |
     |<-Enroll-Resp-|                  |              |            |
     |-- eStatus -->|                  |              |            |
     ~              ~                  ~              ~            ~
         
     provide voucher status and enroll status to registrar
     |              |<------ TLS ----->|              |            |
     |              |----  vStatus --->|              |            |
     |              |                  |-- req. device audit log ->|
     |              |                  |<---- device audit log ----|
     |              |           [verify audit log]
     |              |                  |              |            |
     |              |----  eStatus --->|              |            |
     |              |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA.</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_4"/> describes the status handling addresses the exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and an own LDevID(RegAgt) credential for the registrar domain.
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have a synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and an own registrar EE credential.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note that the registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="voucher-request-trigger-and-response"><name>Voucher Request trigger and response</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-voucher-request".</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Three parameters are provided in the JSON document that is posted:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JWS-object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, as it can only verify it once it has received the voucher.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It can be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JOSE object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an ietf-voucher-request-prm:agent-signed-data element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in general JWS serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data" 
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error status code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation 
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="enrollment-request-trigger-and-response"><name>Enrollment Request trigger and response</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-enrollment-request".</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type: "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note that the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge is already implementing an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note also that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credential to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx status code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for its operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-ztp-types" representation in JSON syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible, allowing a bulk bootstrapping of multiple pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Processing by the Registrar-Agent</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or multiple PVR and PER.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and an it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only a necessary precondition if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope of this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and infrastructure bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection with the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation 
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in 
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
This signature is done over the same content as the MASA signature of the voucher and provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>). The registrar <bcp14>MUST</bcp14> use the same registrar EE credential that is used for authentication in the TLS handshake to authenticate towards the registrar-agent. This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as is transferred in the PVR in the agent-provided-proximity-registrar-cert component. Figure <xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="736" width="560" viewBox="0 0 560 736" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 496,128 L 512,128" fill="none" stroke="black"/>
<path d="M 488,192 L 504,192" fill="none" stroke="black"/>
<g class="text">
<text x="8" y="36">#</text>
<text x="32" y="36">The</text>
<text x="68" y="36">MASA</text>
<text x="116" y="36">issued</text>
<text x="176" y="36">voucher</text>
<text x="228" y="36">with</text>
<text x="292" y="36">additional</text>
<text x="376" y="36">registrar</text>
<text x="456" y="36">signature</text>
<text x="508" y="36">in</text>
<text x="48" y="52">general</text>
<text x="96" y="52">JWS</text>
<text x="168" y="52">serialization</text>
<text x="252" y="52">syntax</text>
<text x="8" y="68">{</text>
<text x="60" y="84">&quot;payload&quot;:</text>
<text x="244" y="84">&quot;BASE64URL(ietf-voucher:voucher)&quot;,</text>
<text x="72" y="100">&quot;signatures&quot;:</text>
<text x="136" y="100">[</text>
<text x="40" y="116">{</text>
<text x="100" y="132">&quot;protected&quot;:</text>
<text x="232" y="132">&quot;BASE64URL(UTF8(JWS</text>
<text x="352" y="132">Protected</text>
<text x="420" y="132">Header</text>
<text x="472" y="132">(MASA</text>
<text x="524" y="132">&quot;,</text>
<text x="100" y="148">&quot;signature&quot;:</text>
<text x="244" y="148">&quot;base64encodedvalue==&quot;</text>
<text x="44" y="164">},</text>
<text x="40" y="180">{</text>
<text x="100" y="196">&quot;protected&quot;:</text>
<text x="232" y="196">&quot;BASE64URL(UTF8(JWS</text>
<text x="352" y="196">Protected</text>
<text x="420" y="196">Header</text>
<text x="468" y="196">(Reg</text>
<text x="516" y="196">&quot;,</text>
<text x="100" y="212">&quot;signature&quot;:</text>
<text x="244" y="212">&quot;base64encodedvalue==&quot;</text>
<text x="40" y="228">}</text>
<text x="24" y="244">]</text>
<text x="8" y="260">}</text>
<text x="8" y="292">#</text>
<text x="48" y="292">Decoded</text>
<text x="112" y="292">payload</text>
<text x="236" y="292">&quot;ietf-voucher:voucher&quot;</text>
<text x="388" y="292">representation</text>
<text x="460" y="292">in</text>
<text x="36" y="308">JSON</text>
<text x="84" y="308">syntax</text>
<text x="96" y="324">&quot;ietf-voucher:voucher&quot;:</text>
<text x="200" y="324">{</text>
<text x="76" y="340">&quot;assertion&quot;:</text>
<text x="204" y="340">&quot;agent-proximity&quot;,</text>
<text x="92" y="356">&quot;serial-number&quot;:</text>
<text x="216" y="356">&quot;callee4711&quot;,</text>
<text x="60" y="372">&quot;nonce&quot;:</text>
<text x="192" y="372">&quot;base64encodedvalue==&quot;,</text>
<text x="80" y="388">&quot;created-on&quot;:</text>
<text x="248" y="388">&quot;2022-01-04T00:00:02.000Z&quot;,</text>
<text x="112" y="404">&quot;pinned-domain-cert&quot;:</text>
<text x="292" y="404">&quot;base64encodedvalue==&quot;</text>
<text x="8" y="420">}</text>
<text x="8" y="452">#</text>
<text x="48" y="452">Decoded</text>
<text x="100" y="452">&quot;JWS</text>
<text x="160" y="452">Protected</text>
<text x="228" y="452">Header</text>
<text x="288" y="452">(MASA)&quot;</text>
<text x="380" y="452">representation</text>
<text x="452" y="452">in</text>
<text x="484" y="452">JSON</text>
<text x="532" y="452">syntax</text>
<text x="8" y="468">{</text>
<text x="44" y="484">&quot;alg&quot;:</text>
<text x="108" y="484">&quot;ES256&quot;,</text>
<text x="44" y="500">&quot;x5c&quot;:</text>
<text x="80" y="500">[</text>
<text x="128" y="516">&quot;base64encodedvalue==&quot;,</text>
<text x="124" y="532">&quot;base64encodedvalue==&quot;</text>
<text x="28" y="548">],</text>
<text x="44" y="564">&quot;typ&quot;:</text>
<text x="148" y="564">&quot;voucher-jws+json&quot;</text>
<text x="8" y="580">}</text>
<text x="8" y="612">#</text>
<text x="48" y="612">Decoded</text>
<text x="100" y="612">&quot;JWS</text>
<text x="160" y="612">Protected</text>
<text x="228" y="612">Header</text>
<text x="284" y="612">(Reg)&quot;</text>
<text x="372" y="612">representation</text>
<text x="444" y="612">in</text>
<text x="476" y="612">JSON</text>
<text x="524" y="612">syntax</text>
<text x="8" y="628">{</text>
<text x="44" y="644">&quot;alg&quot;:</text>
<text x="108" y="644">&quot;ES256&quot;,</text>
<text x="44" y="660">&quot;x5c&quot;:</text>
<text x="80" y="660">[</text>
<text x="128" y="676">&quot;base64encodedvalue==&quot;,</text>
<text x="124" y="692">&quot;base64encodedvalue==&quot;</text>
<text x="24" y="708">]</text>
<text x="8" y="724">}</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in 
  general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in 
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></artset></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in 
  general JWS serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Response and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<t>After verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS 
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON 
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in general JWS serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in 
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry status handling (registrar-agent - domain registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
<section anchor="exchanges_uc2_5"><name>Request pledge status</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in general JWS serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge. 
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain. 
The information about this is provided here as a feature to support the comissioning of devices. 
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner'>
	 <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson'>
	 <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen'>
	 <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley'>
	 <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner'>
	 <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael C. Richardson'>
	 <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin'>
	 <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert'>
	 <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma'>
	 <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb'>
	 <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries'>
	 <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus'>
	 <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear'>
	 <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cummulative, issue #73</t>
  <t>Removed agend-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization></organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1obV7Yv+r+eojbZ32dIJBnwJTEr6W4MOCFtAwFs59J9
sgqpgAqSSquqBCa297OcZzlPdsZ13mqWJGxndXrvzdcdg1Q173Pcx2/0er1O
ndejbCt5enzy9/3kJq8vk6NRNrzIknySHGfVtJgMszJ5UQyzZJUe6h0dv1jr
pGdnZXYt7+FHnWExmKRjaGpYpud1L8/q8146ycdp76ysrvLetBz31h910jJL
t5LDaVamdV5MqiSdDJMX6SS9yMbZpO7cXGwl2wf7L7aT1992hmkNDW6ub252
qhoe/DUdFRP4pC5nWSeflvRbVW+urz9Z3+wM0norqephZ5pvdZKkLgZbyb3b
rLoHfwyK8TQd1PaD6nZcZueV80FR1v4n0MGkqPPzPBvCh5OCnqrL3DaTzurL
otzq9GC14MWTfvKszLMKnuOlOKmz8/NsYj4tSpjdSY4zrZLtb+ETXUf5kHvI
MujhsK6L3nfp5aR3nE8uksc4iby+3UpezCb54JLmNIQ+7n218eWDJzzH2aQu
4Ylvs3KcTm7ho2yc5iNcFBpH/xzH8beK++rDmsAjszLfSi7relpt3b9/c3PT
d76+rzM77Sevs3KSlWZqp5fFOK3sp/+qqdU0jt4NjeNDprbXT55nqZ3Y3igv
av2IZrWTV4MiObmFVRy70ziGsdY5/JVWVZZ8aWbxOh2N8iobjbKJmcrOd72v
Hqw/dKdyArft96wcwbmGj6eXdLJXvni4kTx8mHz15VfJEzjXK3amIxjS3wY4
FpqeDP9Fn8aRlsOqmJhJvMCPslGyE3zLuwQ9ZiNYxuSkOK9v4EYmr4vyqrJd
jQflF3iB/1bpo/1B6i6orqfz9f3OoICJ5WezGq+EWc7qqkh289+ubOsZfNQf
wkd/g5WGl6rZCC734LY/GXWus8ksw7cvymI2FVKAhwkpScLvv6U//oYD7MOE
3uPTQLhmZ1v8WO/m4n5AeTqTAs5NnV9T28fPdh5tfrUuvz7+8vGm/fWB/Prl
+gN94MtHG4/k16/WH+qnXz14/Fh/fbxhPn3yhJ7d7+32HRL4203Vuy5mg8us
9L6dZLgA573q93raG1Rl5NXyfIBdneXVViefnAfz2HzylY7i8ebDDR3x5qNN
M0w74ofrX+qvXz7RB56sm2efbJh5PNl88FVkMLygKfW+v7e31/tqfbO/sX2M
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
kx1itRYR5QZEU8zZ4uPWPP+tiqIhcY4Ib4VeUU4cxWTv5FSIyfoDoBdMbYib
8nCxXTTKtYiDKjRKB654CHQCG8eTNisnTpdpcpaTDqkSjn0JF027R3Y5cZWS
YEfcU4MdiYClS4Mf6f3cBhJTUo8eN2reGrv86cRpoSvCGYgIRZnp5YH1JQle
32cp28qLx9trxODzurKiOWiZekj9UVquofoiv9Nzhhc78o4I7bMQ4lQicMja
uAJD5OicRprnO6wEL9WW6MY41EPFPXOQIxT/O1i/Lu0iPcrT7lU5UlXn3PSY
uDgaMq6r8LAh0JdBDfRTqCYQ0JBsE3mdFiiak5Yx0Vvu9EEahn5uZFnRwOEV
aH8ygH2k/WORHj+8ylGJOIcL81e0mG5sIre/BnFqyINEs9YZLu0EegAlDGYf
3zQkrdgjSVMsZSdAeuiqjh2dRDQ+HkzFUvFNMRsNsRviHnCgZQB8oHhOIOmA
ngOKXFcniXwde6xvp6LiXeTY+d4bkOJguf+e3SYvKxhdsrr395drtE2vX79O
ToQM+bsxwyflxEBHZzlJlMjTgNYirc+gg2FBrTROAu4lrBB8mlaiwgNxoCuO
LNA3eEAn2yC4ljXrjvSGaEoe45w4dN4wTqB3dgNxLLruuHrXaNCk81PNWM63
jAmJCHAmVKULlLirOktp52eVUiKYrMiiaoCw/Hp5hha3Fjn6RHIjmgzqvylZ
KIVqOgReSebZracLICto0Hd3DPgXGhuyIYlxsGGOGjMtsx7MkERBmDO0DQch
P79lRkcCqoxIjXNyR+HFSmQM6B3NPp8lpyAC55NiVFzc8qlByysID9DxyouX
J6crXf43OTik34/3fni5f7y3i7+ffLf9/Ln5pSNPnHx3+PL5rv3Nvrlz+OLF
3sEuvwyfJt5HnZUX2z+tsBy3cnh0un94sP18pUk+8cKg/Vg4OkwK1Z206ngG
z6c7R//f/7vxEJb4f6A7ZWPjCawx//HVxpcP4Q+klNwbESb+E9b9toP7CnuA
BAco9SCdgvA6qoicVZcobCPDQQHjF1yZf24lX58NphsP/yIf4IS9D3XNvA9p
zZqfNF7mRYx8FOnGrKb3ebDS/ni3f/L+1nV3PgwN+r7ttLbnp8U+2MVrSDdm
o7/J9P0c7kdxQ+cVXmfdRl+2B32EKscS9titzlayK3tPbIU/dg7/oLyd1sUF
XNhLobFnxWwyVNkRGHyCfaBssLe35vKjZLXJo1A6fr6798r/dK3fSRKcnMpQ
qEFVFazZUI6rMYzVl2Uxu0CePMwv8Gw1aQiyGfhcaC4TN9YLSmvqhxbzaxwQ
3ll5cW/PZ6ednW1cnx1PkjOyEMpPFVCoQDzs7HjWBzQ2YCOnaHSoCyNJs7ig
ZluH7vq2CpSsocmTY38gmTHlHTOV7Ozt4RN7Zjc6nTEQdPzsxYyWwz8Mp4as
Pyf17cRypmLSQ2E4OBmOWkrW6ZIkYxQmPPuLYUBzjVTQyfn5R/SCBNn2hCs5
t7d9Y+gBSQP6yNCKM2KLeIHaCO8KaH7I1HNUspKVwaiYDVd0DHz3HEEdGyQp
kkwOdQbDRv12yxkXkUa0+OVjmBsJl6hZqu1XOQopD+jyJ28dts3SI0nZE4zx
we47R3t0BjgSqWf5ZE/5ZE4mTXMZlMXC2emqndljpSx4GSsj6e7YKHsOeO2g
28Mj6rYs4JLA/0QGJUWQjG3OPVrDx/e9x2kxiThUWQaUDbrrVcXo/Xt89pU7
o1dsF+8du9MJjO5LzgPpRVrWbAzUiRzTXT6OqjVk7CymIiNUFNXi22FEXE52
tuHOjrILMu65dG1swrXMWa2MDCYd/S4C9WU2uEJKccxbemykp/iu4lRh9+Eo
WrIL45BFMHIPtPcqaC+6pvG1PLYKGQqj9T04semtdodeArpHpH+pSkEDe0UD
a4hpAeMzviaMVEoytcY4sr82Sg+MCiBtFQ50guQRNhL1p8cP4Yhi7JD1JhIV
nRSJRAtYVQp3r8zgzg1Vo0iTyxkG+IC8PczYXA+iWka2SLQq4fDH9C2/QS4t
GSfaRoljF1dwi1d4MDIW0FRm2TffrNANz1Cv4G1H0Qul/wFQ1kps2Pw+2+BQ
HWI1RyYn/H0GK2w6Tlkzx6sMbOuNrqvxX84m6XWR44hvQeXC7R3nb2i9UOIP
Fo3MNKtpxTJtOYazjkSGVvz7k8MD86A2X611rSH26fbJ3uOHL4+fe+2xZCde
TDpN378+4ZmM4F6UPNkhXJIhf51irBhu7yi/ypIV0+rq6Xf7B9+uraBgfTIo
psTOT8QlCh/Cp2x/hWb2XAcPDvAl7M8OTDYxdr63n1WzKVyo6/fi22IHfeXo
2EzynJZuyKOs5l2k8KTFWh2MnEd5UW7FvSdd5CaN1+F08qlcyvK2l5NSiHdP
W8IzYH1IRN6Y2pjLW6XjLDB6oOTGivu4qIlC09Pa5jCbjopblje9NUDWepuZ
sWaG4hQanorOoJjVTAyn3STrX/S7wmp9tgZ0ktc4Tc5m+UhFvYsCf5lNUS2G
/i/JbmTGxIEKmXViAQMa43mH8wH7CMIsqsRCoJmvAvXnqaVwO9GGrzoPcNPR
CMkH8dy4aLItVjG+Je17ZxXOUOhBR0rogjTOfXtXUhTkXStPpd404sBiQSOD
XEVd3uqWWoeh7xukKAdafbpog4YkytNjY+E50ObKKiPWxGXsYdi1cc3Fw0xW
oxE3a64FQIOYzHG25kid42r0Oq0ljrgOK4OsBi878kL8l8Ikx1P1MfCeYOCk
OnOsqmToqV4G48yBF+1QI06epu0a6ESGRkg7I2JC0WCo8KjAwF5f5qMssjza
8blDQyKeGj6aIs7Kc3r6KQCNbaNE/h2ve2kbEkc1ntJBigfAjkWOF5ybM9IR
aWKLQligbW5hew8+bwmOZCM8nXjmOWhy9o/S+Sh7k7PRjexj6iQ3U9Mz1k1E
iUfjYsa2Nh7kGONLLjQKQxyC7nC7qOjQgXnY33j/vp8kL6dkZXOCX0CkLWr2
s7hSUV5rtzY6oGAB5thu73ZtCTLFyK2ioZkvNjJq+vYEVmEE8mDV4xhBP9zM
jdFzuyUmLLvoh4EE98ahVfMj2TqHSBtTG46ABuwZxUPJAfDVLhQwztAE6EYj
dNWP7lvlcVNcbw0ewJ7vvlEDqKs/k90OG2UyZpX3WPAWMoDLgrSz/XMcRlWL
e8BxZLKtWs+u9UfIWVf/sZBUWA3RR/asLK7i8ypQHvZ+xIZONkEQU54qZ9vm
eC0SX+DKGY6Xms9RSGTTNUmYeB3ZBV8ZPjnM4ISQE1lfX0WVVTnfWqKhN/Cu
LqzPXWHwOWmC4qCYVEVZddlKUqMBXmhpjfPN8Cv0ctLDpMEqYYOOJkWED6o6
bfp0VCFWpUT4jVJIPDk0ZQ1lFCYtoRp4hXC+ePblASOI0Lew6rs2BtJ92deg
u2qQ0IXqCvtBA0OdDS4n+SBP0f0zGplQQPH/GX+gG3lm/K5m5TVqzo3oYKVi
+ZVKOH5noO4Q9LrILUhBoJ7WxbRLfJ0iYM+QlfAgSfaEmyP2nSbr50OuVh9e
LDMbFtgjy4Hbc52DgIReHaCPGKBwWeBhZRlldjbM8fvCrBz2N2/dztjdqIeA
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
zUZXzVrJY8TORsuc5qlZwk9YvC2Qd8vDm1Pip5rmj2yJQjlVTVTx0NTPV8Yq
1v4UmgmpsaE1YNGRLoxJI9W2Iy05u9NoYFUs01I9pOD86jW++lUxzmydlCqa
lNmeeMnRSnMzK829d+pZN5IqxRLjBp7Hs+x8uYZTAe97qNz+lVTk9Cb8n/Gj
qESkN1DEsUvxZCxCrdfC1ppbKQScAg1MYqPGPmEC5H34/8luW6IndpsOGArb
KNh68B0i35ql+FGLJ0mMZldbMhnjewoDwlzy6PGIdea2t2pQJ4DR4WW5ymDR
uIyUqalr4Hi1Epkpl2ckPpwAWl7ck4SD7Jl0UZPhHorguBvQbM0BLqSCpY4S
NnWuher0lDo/yTIWJsPyrtKTYkm6VUbTHmFa5g4yFLM78pqkpJPlgxmWYFKr
LulOzues8Z8bAZluFNkG0UTbTS4lG5nGSBp+cWYUiugiLIE1Tp2w5om9VEj1
TRnzGBa+zIgQXhEYc1JMbscFw4rchyndZnVPTRwyKKHPYvjXhWo6GVrngJYj
3BRKDokl3Jr81OYncyEeLR3kXMIQ19H77B394WI7pj6eY9LAiaTPWkEdAyBH
/K+H5Oj+K69H0Bw/bO5e285PCzCIg934i17sLxwtNARBizQGbwK167LQZGrI
/LO9T+fNO442fFPyXccGvWYxQE+zzxYou2VGG8ev+/Tz7C2Eu1vQ5yrs0Frs
saVG24KOt8ybcUi8Zd6M4+A1h96+tj33xz0kclKWeDMCnDf/Te+v1WO76gtH
G/msBW1v6dfjMHvR1x2M0yaynkkYb2LpLUTV+iRnfz4k3vw+2X16tz5jo23Q
mhiKXttp8mew9Js8geO2CcwfrQu8F26U3c8Anu+/Zz8H6TyIvbY3v/berP7o
0bZDC2yG0AJTRwOdozAGDvOgwjMLEPMxtBrmfJO2i+6ooGxDswYMRZWZGse1
RlF4+Y34gtTFxPY2+g+SVar4cpOVaxxQPihm6IXHuoT0xGaiD+D3x3s/vNw/
3tvV8IeGeSsfZvqm17YYur1SdGEbHAGl3Tqe27u2iPLWnMbQ7Y4cCPcrrPTX
XuE0dGCTAjG4zLNrFxgnXJA5CrlTSSBwStiH+p0dDEaEkzipQRNiu0ObJQF1
BFu7lAMs0ehjLSH6po/xttaIpwzLSchah6pVxKAVaFJ6hMksZQ5vYymh//aF
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
WENNVf9653B3L3m69+3+wclf0HftsfLkG+t9ti7cGaJ36MceLGXNd4sq8hrP
c4B+iU5a+6W9pfIVuWh5VHsHuzAmQ0rda6VEFE8zbXN04eZSSqdr5+C6SBJw
OlaMfLRiZLSIecLxe2oBy4i2A5uflsOo5KWPK4q0B6PQSF8O6JABKkJUDBY9
1iiqopXo6HwpiiEfmLxXheADaiSRdVPQOlSvq1yYDvVYNufJdSjo2molZ1HL
UATV95qYTP78HAZgRiGEsMK7xOOzZdEt/kwcAsmbCUEc6nkywMANOH18mcR2
Mht5i8nE2T1DZj+DaJIWjkyoXj4DDeJK7h567l/eP39EiT/epaIuwkCSGCru
V72NzUhpuSYOryx/CL7vEyWHBPy7hI7oyVYquWdRruecxqUPeCtZ9SPVvEpg
cxib24ez2DZmDbZ4UAcxe41wQ8/EF9X048bt0JP2wBg1W/SAZXI3A9wdT0JD
jnUnkSsYgAMxtrWIicuQlYtHebiJxdKLjdpyUd72gEmksxFcy/tGBNDkELbl
RL4h84TzuQaLNV6QL8LnxWwReUG/4Td46H/VqLHEFSv+GkaEwbdvk//5Pw14
V2+cTokuzRc0qqUEDV7iduhlUwUNbWyV00RcAKCq3pj2pttsQ7rL7Fy831Yz
kLcyoGlkMkPWdurB0grf09rRovoxslNuDeKmVm84LvW5UPKxTU5wTnu/c0i8
WLvkSQgKLrXISYfOIFmQoOnMESTm30O9+FaHIgqhOWdaPL0rWIuCft1c9MAz
QQifjTuwpWaUS7GzUeqIbQwLFiXJdhxyUiQrE/nrpygWZeKfV4WUVFskTE4D
ZIOp22ob+55lCc1TjctqpmDCJz0/sFLBRkrxn3JSTAXMlCJSs8lXlXNBb/zp
5hPQR++Y+fvkSMd/wq163jq1YKdiKBz/XrsmVi7qwOYzu70Y54NTsDAukbR5
3ONCyXbo42HvA5kuBEE2IOCZR7M9zxvG8o7Hs4nqWLTcolRlGboY3MSEqOvO
rLpKKhrAdC0VxL3mmJ3Jhl1moykDr8IapqNbgg+eFrWMlNO/iWMyPQ7lAnOe
ODDAC9QygVVJGgRoab4YjuhPd198AceZoJmBjwj+J7wq4aySZA4D5+xEEBlm
IxjgtfGzZhOtORtsOqF6oCDjE03zccDwXB2/Ah0/VvZHD64nFfSikoir0sua
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
iWt2RZ8IIrGBPGdTgSeGoAEVA4gxQkfDtdPJrRhI/Qhaiu3gQDBKmCXKhUHU
QGgkCJvqJUbxlqqqGOQ2WJdtq+Mx8PSca5cY3CpTEW35lhZC6HDjkhqUXhf5
EMd+naUUuRObLE7HQuzi4lNFQVl7L3LcrZmgbrNQ1NBAv8opOEaVdSkPjuK0
Issrpl4cCxbZHRUVmr7IP7dbjLLr3k9pkaR1nQ6uMiwrn6wUU1Siqxyko+KM
NfeVtbdvi8k0rS+Rwe26yUBOTFnlJfFLRJ7lJUHku4yGzOCfO2aiNkQx3yjN
CQFSSk6jqD1WzYUXU6po3Ch/bNX4BmgQ76nU0RyKCULuJp8BhEfwo7UUPwen
ijKuc6XZHSRzEiEfj1VBU5K4b5pOjgB213lZTMYU+Zgk25U55B90VCRcvcQz
+ruelhsQOijODs7tlVQAcufP2QDwWgbSJVcBykBSroZlgRM18X2mHZD2kALT
dIBYDcrbKUn/e1Qps/1h8yg1mddsg031kd4NQgFcZVxIb8I0rrcpZxXE0O3j
o/sHu6D+FSD9TS7WZORw+9FYV0x6eF7NEbYZ/vhxX47caT7GjIDxlAkbt8An
gIkxZmLIZUbsE+8caCMCGUwteA/47TWz9WlzHayDoH0faUzXhQVMY0rwuVvy
9jPgAr8iu3n/B3I605CyOg7oNDwOiRBMmxXOuvgU/I7PNzpPbFkngyHj3o9h
XoqdYXU6qy7JndulptOSWQzNau1T8NDD3cMtydCpLzFWuvoriey72USqTymK
+upucbKWbNPZRbJ5JE2A2lXOpobJGFxGUE5zxLBiOn0ip55u9LQk2MNmuHew
LOgCceAsqGis05Tkgp+nV1mj9DBTjlEBjy3qZThjhDo6viRxO1BC8syq8zvP
gMJErE+pK5zjfFYpEAg/IMlGcCjW+p3DCbwOZ+XCS8YJMS0pJN/E5Y/QXCHp
fxaAKDCcUFlI1haQhtX5CBYJ7WyY1D/hTEKE20HVuMsgNEi3Ma3Ahq7wClDa
LkVdSgWvlCQPCowHAiLFGl7k1Ywrr6QD0gKHhmehFA27Hno/YO+iuDdEM/FE
5MWsGt06eqDbIN5lCWzc7jLaWo3ePRILZA4+4UFxgV942leDGRvJuAKWlRbD
WhLI8UbMg91KDKexR1FCrjzLmezlSmvdV0UdmhhODyR1cEmlPYGS3bjNh4VR
9y1OZjc+9uaArLTo0Cx7w7DTGEBqXIhpSDCOpEKe8qas6idWJ6uK0PIbxiK4
cVWihYkFbFJnF0ze1zovQBxE1t8yZ6mGZCDdIwKnVtFl+klhGqlbOlXWg7Ci
fHXdLZFhPuv6axVCczmzF67cXDW4SHCJzvKJll0z4WZEMpmqNaZKQuQMh88m
SD+6hKwibTzSZZCrmmO6sdF/uNYPrnToBN1xEAwte/4VRgULXAObRsCxrJxQ
qNEYm0FZlpWXcC8UxQozYoJ165rK3sNhyTnPsBSc00r0CXaw7o0IzdZTq1cZ
aojbZFf/ML1dI/4xQ9Gr5r2I+ssu0ANbRw8W3/k5m2vqlQsJ5KBBDGKWvShn
kzazLMmMsEByY0gl0/pYRWPdEBwZ7ZKYJJlpaWZRDKOjiGiDRneQeR7hYbkF
UjvmDFxvsUCxTBEZ26E4Rt2Vfgytm7NCeeVsi6gCcMzrBsAEcKhANW3ipBnB
ns4YX2UxkRlYD62/7bgnVrQYm6C7UfycTFdoQkM+gM6L2YXVTxAyDYVB0FUJ
9tRwQ9BwYj2aoQ654DZxUoql0NrerjTevoBdFU/ISEA5MTM2khq5P/RX82J5
5TRPC71TpC214B87HMPdwmClPd8QntTI9I2cPS7KEFIY5XBLsRccH+pbJohu
eMwzqi6xnHyzNoZTWpCAUxs1UE3RvGaR8/bFU6HB0Q1SOdMh2RzvHpyQOHJG
0pIi0SparUM58UkMwWeLBim1qcU30zMXlWlNEXrH4oPh5pLLjw5Tv3ZInI8z
OLffY99N1Ga8JQkehUt5aYKjI3YNl4vrAMWkYUulhLORm1glsBg9Zqeqa+zK
qtya2EB3sLFRdMlOYtba1zuNFQE2lJiwpIDNJgPW2/A+kqVJ0geFEPkPaGpQ
plYix8riYpCeGyOLJegB4jatc0ybzv3qkKSFpoT5nvFpREWFR6nU1BoPbc/Q
w7aPeYxLoNjhbhM4y0yvsujMOnwnK5hDdZ8bVB1oA7+NtpMS5HiXuC9Sckq1
d1B/mNeIafI6s8pdkMTSYiBg46M4iIYNd28LkkZr2uR7XHATJ+3lDmJep1h0
jDPWOvGNAPj27X5vlwI6exQd3/vtplIvjAC/GoT9cY4BcoFg1qzG0MStBznt
y2S1ZUnW2ODB4oobJ2pjGhoxy260eQVDHbNRnMMmqVQNWV4NACtOPJ1W4oIn
EYPC69wAPM2UpdCN5qzmL9M29je45IsstATnQsmio2zIQ+PbIfqbym5u4DAv
glBkWgtUBGmy3IJx4DL2MelqJsJ0xcaedlnWGYnE1UE7BAEHk5vZzXACmmYM
QPGO4bxvH+1Lbg0vn5oR4ZYCOfTqD/NC4AIe7HHWDJ2Ix5sPN6Qoh0mn4aOy
zmmkzxTlUtA8aoQNTy5mcFBGtNdDvrVs0Oaha4Csl2DKrT5c/9I5gA/mnD+N
i1mTXOYB+niREnMAdOc1RqqiPDTKrwTxP51ciThUot5PccjZDUHEwFlBfpIP
KJj0aYmi614/2UnLKcbFAak/rK7gmx3gehNQDASv+btsMizzK3ihGFxdpjPj
987Rcjqd1bp7g1lViYUHd4vhBDjLH07eORrA+x2KVCATKoyUBMe96qoAxvTb
lRFlEUM/y6YydlsZekz0m3OBgH5SddtOB0HFz9LBFSyQ8cxjaQH+lRPyKlNf
pRLo4hHVbG9WtfjyySZszgnbcJ6iOXmUVpcUZ8GUVGEjxCUR5u71SHFfpTN8
ZGwBATz/WpglmHu4KUpyKXWMWkqdthzXvaPygLj4rYONQpAbJy5Ayorm7n3j
/2Dext5Wcu8f99Ds79SCn+KsMGgNliQJXvqmEwCtUDDFSnb7/fTnH4/Hz3/8
+Xr4+qD4+cf9ejB+9Wb4+tXvw52Nm8F4/fFw/GTjp83L0SDffwzPXw4eHIwG
k+Pp2ebDf3Tyw/z7y583X8346ScP09cb0+F3V/nzne9///nH76c/vb6pzyav
6p/Gr273fyvyF7t7ty9+/2Hj4LfBw8OT/Wp//Ogfneuz8cEIvz14/WTn7MHL
65eT4X8d7NRXpy+LBz+M9spXr6frP/++/mQ/v8l/evD96Kcfj0c/72xcn8GY
9n/bv3nx2/4/OvWL3UH94vT7ly92f3h8sHvx+OD0pxn8//fXOfbzbPLz60fr
z398env24Ofpz9++uuLfL6dnr0fr2cnG7c+vh//oTAcPjm9/gnX4afPV7XAH
2r/a+P7k5f56enWw+8Or0fTn9WcPTl5+//Tn9dF3P7y6/Png9+/zn0bTgx9e
P/nuh/WDN8cbB//oHBzsjnZ+eLmxe/ry+FW29+rxD6++3/l5/dHrH66eXZ++
PChfnL46Phv9/PinV4ONs29f/H764+Xeq71nL34YDw9fXX3/9Kf1jX90do6v
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
3LJZYblxDsF4w63dC9d3L/AePQY2xRhhhEpEi3QhJaGK3kRuOBVsqMkJHJkG
5cijQarBXu4CbmpMM/dCMhN4PZgMbjucK6++j7Q3Wd4yyLM+Mx1rLItBGkCO
d6Ab3amGaHMnjkHwR8c1v6zxjsOM94RXpo+zfP+EebFnwvEDY7+f8qyKtGIp
TW/r53s+Q4/EJs3Hh6l9++iVrOuVuz3aos+kzqEPKDqV0JUZ2G/oFs5LoPHb
+0Lb3C8RpSkzsqSsEdqi8kbQcEewomNidBXTTewpZYcsfrzXvblz++ZVuyc8
+Gmprx+eO6t0m3z9sL5/Gham9nuff/jif9ZeHqy77Zw/9sbG4veD3i/vJi+L
rv/Ew810kc6fQSn3ofWbf9yk5mDwuXqaP/5j8ZjsxnNbHzfX9l4VhGlSgnWK
rkkINvnAz/MvanXp+srZH+UOv3vr7GXuMV4nqznl7s+byL99GDslIs+f2q7U
TvMmAUk3elBOuHmYOqOmcrKfV6v04u4myhrHdF3idLXKZ+nH91Ta9mpJZ9s+
7fyM+FX5gNNK0s/o5S/N07N48y6pN1M25ZRfn/E/naVcqs126sPnu/tff/r9
zz/Vbfzpl/qLqlbvrtmW/Xm13sXr5jjBtjme+U0Nmetk7PnR3/SDUT/OSdrr
hly84U+mZ69LPrc791Q+uVkr31Dn27s/m2uiMSY//eh6v/+3ed9/NecLL2+z
vv9GzvfTuzbrW+TRJKqigV5NO56ONtBTB2OlQm/7QkT9lGvHwP+9Fwy2QRxE
iLDeE2IyTwaf3m1exstsNT0qRv+cGL1F5FMmWLyAPeqPutOJF+N1ZOoPnuaw
B118Te3p7RO9edk/xPL28DhBj9qMkpF0xCK2BX7rFNOJKKadMbWnmPGqIwW0
kQHVcZ0LsadWIRIgseUJLdq5RWVH5u3cnfQjrmd+XDpSLhhlnSaR1H3K10R2
NRemeZD5dAc2I+MO2Gsn+xqC+oo1nkCZq4xp0Mm23sUToI/SKM7zXSh4b2p5
29i2vMRa7WUuvJk9PgRL9iQsZwWFbqeIc5UVD51MTDKTGz18K7Wmw3QiyvEx
MtOHVETPvFCZL53r6S4tLeFy4Ut7P4rk3ppZbDu18ZQRWClv8k5cLBzKfD2F
udhMob6g18CD9qaU1UiUbCOWIvbN6IkHnj8tIlssI88Fi4iOvMgehB4ewRgm
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
Me2TT1hAjW8SZA1jf7vq6nXca7+sZvbCeJezLRHwDxvindPN+oN2c8FQ65l7
naZGe+mTNUtF71ffKofGppo2v5V2/04C7JKnnsnCm5kB1aw3x+yNPIPi0a/M
BMrvMnTViyRnPQVJ/fl6EC/JMV7TAuusOOWK8aJzA+OWHRFxp4RdE7UovUzk
7VBXuNysL+q4zlUFTPq2HwVPRCUb6P7lrUH8TgqsXS48Fc9UL2qXGcn7aUVi
HU9PWAM0/Ph+VGvDOhpeUoP64fS9i/KyJ8ukG94/q7rUCsQaH2lJNq2WKddq
3t5QAApaFQYinmZvzBiGUY18cLFcUf/5P0652jaY1MEU4/BtzoH6UDv4MwG4
2jVa/62uIUuVaX/8ls77J/74+Pcn7g/pFc0ra2EKXKwlTB2+3pQ3NfNWTTgX
ez9Fl6bectOMwaosn5etHjyNDr6+UxfXX66wvWZx04YWqTXSsq50Cs744cl/
aAH2xOOIS1KZ+gSol5Vq528TgDeb1XQeb2evQ4la+KutQFnL5/hlta4JZ3FQ
k0smns2/0MeK+HABVyqVXFuE4pONGagE2mZ29TtqxfpymZhIzfwypfYN0FOr
28xXTG04ofVlteKW/LQc7pvL+C8ZlXKfLRRPXWZ9/bw5W8smm1en+XhtbmjL
pao8PbX7K1Q//nv7y7lrZ7hoQlqd5653iVwgyAYkefuhUJm3y+wCdeVKwjZN
eKZaB9vT8tyKsnKbN9r0G7WlYRHficsN8l1IeTXfF/tI6nfS5FJTL3lwA2AP
93c1Hp8/2ZpB25DOb79cK5qLvRDniPenXOAU079J4DUr46/B92rpDA84U9s3
EenfNo1TMrDJBH3fHvwKwpXGu62F/N64wHIVcSkwnIjhd5r7p9PI9aqTclW1
5jW/WihVC2TNgpKymnqZ+3LVX4E/1WSvdzU0CcD5Ri31qv0S5zUhPKDemtZ2
7SKV9KrPF1GVVERjn01owfguNyrZ1w77q30IF7ihpuHjBRWebxrrJzCkcVsi
iF+B4htPPc9m04T2ZWe2WxOhJrN8SZkun/OxTnqtN9vXAr6dw9YP3tcc6+c6
i1NSrp2G6Zd3551509NC23lts074b5p8yYmWnVMnKrzXa6hqds7ucor51KMP
VDN8efG9uli5Qh6wFZUpuyBMf/948SXO7oHyZ8tSorqAWtyu1T7BVi6Shr2u
XtIEDsz435Woeo3bZ2retouCT1vfZRvn+F8ahzZ2qD1ttRW2Muzj5VrrOdZd
s70gw+Bs3svZeknhe3PZ1Tp/cWrZxXNrp5sv0/nLPH3GR9ESFZC+3Wii/cc3
GvrbOSSr+L85hcqDaQGkpQMxBYiqiKenVanzRj79Y6dG8Dodf+qT6sDZy4lN
LpuEZZuBV5s94MtETlQ191er9vDG5ZsGoaoGNRlQNSEuAFPthWyw95QePY3+
Kx18CZUnL22c94QuDbD8+n728cvHmivSloASXEFt86LBnCfPrWc2eaCr9H5r
QAP36dx4lfKmt4AHZ0AQ+l/1iQu1hx9/bdGitoU2Ed/0rUWn5YxqFcUwhyvf
Os1mA50X6+9kQM8bZU51il8l4CkVvp2dJlYNy8W6/Mf3PhGN2fKNbSu01EC5
OWhUtZqDwJnM6+S1WutvllZpnWzfqOh2A17bPDSENhtANa6q+aUs2VxmIs6U
8Sq+U67l5BRqUpWEvaggVesXXRGAl9UcXVg9J/WS8brZ+LFWVnzaJzKdzzYX
UUdtMKGXTWtwf72Akcxq6MW4bKozO2vmqF5Fpk0hq0KZy8fTJod2SwXtFLnO
yV3kg/AClQmMW6GQqmGs335mFOc5/vVkxDQ25+mqi1a1rbj2is03RrAh4G13
sp9MhZY0Mbn7HwKZku5XG1YUwF9u1aavbmaFWqGiFcPm6Wd+qjL/rz7Rxjw1
4udNPe2Y7Zr9Oir+kr+eRV2zfr+dnZgq/aZ5XrP58WSfhEinpcmPr4LPMi6b
RJDSqM0jmj1njXMRLr0n+IoLdHpZoxclpU570zCPm+3lhuOa1jWb084rfioV
vp5mc2o55c1Pqq/FtnYN9IykZC31MOAJnzf46vunh/s36Xq90n2CvDprpL77
g4k4UXASfstkBWM/ZW4bZh+rfTnzTbNbQhnxqmhXh+tPXDOvy6TnVSBt/OIc
ZepofYbwDYk0Uhy11lN2dO1M6rvnjtcF5TCQRTvQDTb/WqcnTqJS0ZiaSZy3
vZ9e/PEHDqDSLk2u5ewA17BBuKM2k7WJ06I5p6C2LaulXQWs9/VKM7WtXlv4
eP3UV3h8ZS2z4rzr6pQEUBNXj6Liz5ffaPTFSW1dSb6agDYY/sZ+6ovxpplW
wPr5HACU6rqIRJcRoQWlzbeh50dAo+TKNxqlXWf49eqMQr36R/sMGgNfNUs6
Ksl34ue7lfKJS/No/WPzSvc0gq+Ynca+3U+8et5cZtBqhGmPQtcEGQ5Sv2HW
THj9jtdw803sm6o0RksHklm9/6mWiLS8ddmEkmTLui1VSDkatR2H+N1qe5pb
Ikr1utfJDYm7149cn4NzPbOXkFbFzWqd6ho+bdWLe/pJXp0zRteh6J9ZXss0
/18Y9+BfsenWomum85dt+pVF/7f33gXBRiRYq2+0q594yVu06c3mJafN1DXQ
JitEPSKEU9pB0ATy/wM1LXHlhFkCAA==

-->

</rfc>

