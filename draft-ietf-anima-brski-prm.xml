<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.25 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-08" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support the pledge-responding mode, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and domain registrar, BRSKI-PRM relies on object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge and the domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate,are exchanged and authenticated utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies relies for authentication and authorization of the certification request on the credentials used by for underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenario, it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on the application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also others like Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevIDs do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.
Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Used in the context of this document similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>. Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-possession (of a private key), as defined in <xref target="RFC5272"/></t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-identity, as defined in <xref target="RFC5272"/>
PVR:</t>
  </dd>
  <dt/>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher sent to the Registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of a PER sent to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data. 
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges are in pledge-responder-mode and may have no continuous connection to a domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI defines the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM in contrast defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge in pledge-initiator-mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it initiates the bootstrapping to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge-Enrollment-Request (PER) or to provide a enrollment response can be used for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new building in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are then provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases in which the pledge acts as server.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent <bcp14>MAY</bcp14> provide additional data to the pledge in the context of the voucher triggering request, that the pledge includes into the PVR.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar as defined in <xref target="exchanges_uc2_2_vs"/>, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tv</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/te</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge - Returns pledge-voucher-status</c>
      <c>/sv</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge - Returns pledge-enrollment-status</c>
      <c>/se</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/cc</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge - Returns pledge-status</c>
      <c>/ps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides connectivity between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> if suitable.
The EST <xref target="RFC7030"/> standard endpoints used by BRSKI do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification describes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,248 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,576" fill="none" stroke="black"/>
<path d="M 168,624 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,496 L 312,576" fill="none" stroke="black"/>
<path d="M 312,624 L 312,688" fill="none" stroke="black"/>
<path d="M 312,720 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,864" fill="none" stroke="black"/>
<path d="M 312,928 L 312,976" fill="none" stroke="black"/>
<path d="M 312,1008 L 312,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,320" fill="none" stroke="black"/>
<path d="M 432,384 L 432,480" fill="none" stroke="black"/>
<path d="M 432,560 L 432,576" fill="none" stroke="black"/>
<path d="M 432,624 L 432,688" fill="none" stroke="black"/>
<path d="M 432,720 L 432,736" fill="none" stroke="black"/>
<path d="M 432,800 L 432,864" fill="none" stroke="black"/>
<path d="M 432,928 L 432,944" fill="none" stroke="black"/>
<path d="M 432,1008 L 432,1040" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,320" fill="none" stroke="black"/>
<path d="M 536,384 L 536,496" fill="none" stroke="black"/>
<path d="M 536,544 L 536,576" fill="none" stroke="black"/>
<path d="M 536,624 L 536,688" fill="none" stroke="black"/>
<path d="M 536,720 L 536,736" fill="none" stroke="black"/>
<path d="M 536,800 L 536,864" fill="none" stroke="black"/>
<path d="M 536,928 L 536,976" fill="none" stroke="black"/>
<path d="M 536,1008 L 536,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 160,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 160,320" fill="none" stroke="black"/>
<path d="M 176,384 L 216,384" fill="none" stroke="black"/>
<path d="M 264,384 L 304,384" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 256,432 L 304,432" fill="none" stroke="black"/>
<path d="M 320,496 L 408,496" fill="none" stroke="black"/>
<path d="M 456,496 L 528,496" fill="none" stroke="black"/>
<path d="M 320,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 528,544" fill="none" stroke="black"/>
<path d="M 176,560 L 200,560" fill="none" stroke="black"/>
<path d="M 280,560 L 304,560" fill="none" stroke="black"/>
<path d="M 176,624 L 216,624" fill="none" stroke="black"/>
<path d="M 264,624 L 304,624" fill="none" stroke="black"/>
<path d="M 320,640 L 344,640" fill="none" stroke="black"/>
<path d="M 392,640 L 424,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 400,656 L 424,656" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 288,672 L 304,672" fill="none" stroke="black"/>
<path d="M 288,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,736 L 192,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 160,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 304,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 320,960 L 336,960" fill="none" stroke="black"/>
<path d="M 512,960 L 528,960" fill="none" stroke="black"/>
<path d="M 320,976 L 352,976" fill="none" stroke="black"/>
<path d="M 504,976 L 528,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 280,1024 L 304,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,960 524,954.4 524,965.6" fill="black" transform="rotate(0,528,960)"/>
<polygon class="arrowhead" points="536,496 524,490.4 524,501.6" fill="black" transform="rotate(0,528,496)"/>
<polygon class="arrowhead" points="432,640 420,634.4 420,645.6" fill="black" transform="rotate(0,424,640)"/>
<polygon class="arrowhead" points="328,976 316,970.4 316,981.6" fill="black" transform="rotate(180,320,976)"/>
<polygon class="arrowhead" points="328,656 316,650.4 316,661.6" fill="black" transform="rotate(180,320,656)"/>
<polygon class="arrowhead" points="328,544 316,538.4 316,549.6" fill="black" transform="rotate(180,320,544)"/>
<polygon class="arrowhead" points="312,1024 300,1018.4 300,1029.6" fill="black" transform="rotate(0,304,1024)"/>
<polygon class="arrowhead" points="312,944 300,938.4 300,949.6" fill="black" transform="rotate(0,304,944)"/>
<polygon class="arrowhead" points="312,928 300,922.4 300,933.6" fill="black" transform="rotate(0,304,928)"/>
<polygon class="arrowhead" points="312,720 300,714.4 300,725.6" fill="black" transform="rotate(0,304,720)"/>
<polygon class="arrowhead" points="312,624 300,618.4 300,629.6" fill="black" transform="rotate(0,304,624)"/>
<polygon class="arrowhead" points="312,432 300,426.4 300,437.6" fill="black" transform="rotate(0,304,432)"/>
<polygon class="arrowhead" points="312,384 300,378.4 300,389.6" fill="black" transform="rotate(0,304,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,736 172,730.4 172,741.6" fill="black" transform="rotate(180,176,736)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,320 156,314.4 156,325.6" fill="black" transform="rotate(0,160,320)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="432" y="340">~</text>
<text x="536" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="240" y="388">TLS</text>
<text x="312" y="388">|</text>
<text x="276" y="404">[Reg-Agt</text>
<text x="368" y="404">authenticated</text>
<text x="264" y="420">and</text>
<text x="332" y="420">authorized?]</text>
<text x="232" y="436">PVR</text>
<text x="312" y="436">|</text>
<text x="276" y="452">[Reg-Agt</text>
<text x="364" y="452">authorized?]</text>
<text x="272" y="468">[accept</text>
<text x="340" y="468">device?]</text>
<text x="276" y="484">[contact</text>
<text x="344" y="484">vendor]</text>
<text x="432" y="500">RVR</text>
<text x="436" y="516">[extract</text>
<text x="512" y="516">DomainID]</text>
<text x="432" y="532">[update</text>
<text x="488" y="532">audit</text>
<text x="532" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="240" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="240" y="628">PER</text>
<text x="368" y="644">CSR</text>
<text x="372" y="660">Cert</text>
<text x="240" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="236" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp--</text>
<text x="32" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="432" y="756">~</text>
<text x="536" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="112" y="852">Enroll-Resp--</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="168" y="884">~</text>
<text x="312" y="884">~</text>
<text x="432" y="884">~</text>
<text x="536" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="360" y="964">req</text>
<text x="404" y="964">device</text>
<text x="456" y="964">audit</text>
<text x="496" y="964">log</text>
<text x="388" y="980">device</text>
<text x="440" y="980">audit</text>
<text x="480" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="240" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons.
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pledge-voucher-request-pvr-trigger"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tv"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="RFC8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pledge-voucher-request-pvr-response"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="RFC8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the PVR.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/te"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="pledge-enrollment-request-per-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses its own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case is out of scope of this document how the MASA will obtain the domain CA certificate.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pledge-voucher-request-pvr-processing-by-registrar"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="registrar-voucher-request-rvr-processing-registrar-to-masa"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as in <xref target="RFC8995"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be enhanced with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="RFC8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar EE credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The expected voucher-response format for BRSKI-PRM (pledge-responder-mode) <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> <bcp14>SHOULD</bcp14> be applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar EE credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID(Pledge) certificate (from CA via Registrar)</t>
</list></t>

<t>The registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/sv".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/cc".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/se".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/ps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t><xref target="RFC8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tv                 create pledge-voucher-request     [THISRFC]
 te                 create pledge-enrollment-request  [THISRFC]
 sv                 supply voucher response           [THISRFC]
 se                 supply enrollment response        [THISRFC]
 cc                 supply CA certificates to pledge  [THISRFC]
 ps                 query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="RFC8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="RFC8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>


<reference anchor='RFC8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="RFC8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+S9+1YbV9Yv+r+eog7ZYwQSSQZ8ic3oy4dBxDgGY4lL7E6f
fCWpQGUklbqqBMaxv2fZz3Ke7MzbutYqSTju7vTejG4HpKp1X/P6m3O2Wq1G
mZbjZCd63u39dBjdpuUoOhknw6skSqdRNylm2XSY5NFRNkyidXqoddI92mjE
/X6e3Mh7+FFjmA2m8QSaGubxZdlKk/KyFU/TSdzq58V12prlk9bm00acJ/FO
9HqW5HGZZtMiiqfD6CiexlfJJJmWjdurnWj3+PBoN7r4sTGMS2hwe3P7YaMo
4cFf43E2hU/KfJ400llOvxXl9ubms83tRjHvT9KigFZP72bw1GHn9MBtb1nn
g7jciYpy2JilO40oKrPBTvTtXVJ8C38MssksHpTmg+JukieXhfVBlpfuJzDE
aVaml2kyhA+nGT1V5qlpJp6XoyzfabRgveHFXjs6yNOkgOd4MXtlcnmZTPWn
WQ7z6aU43CLa/RE+UTshH3IPSQI9vC7LrPUiHk1b3XR6FT3BSaTl3U50NJ+m
gxHNaQh9fPt064eHz3iO82mZwxM/Jvkknt7BR8kkTse4KDSO9iWO478K7qsN
awKPzPN0JxqV5azYefDg9va2bX39QM3stB1dJPk0yfXUTkfZJC7Mp/+uqZU0
jtYtjeNLptZpR6+S2EysM06zUn1Es9pLi0EW9e5gFSf2NLow1jKFv+KiSKIf
9Cwu4vE4LZLxOJnqqey9aD19uPnInkoP7uvHJB/DKYaPZyO6G2vfP9qKHj2K
nv7wNHoGN2PNzHQMQ/qvAY6FpifDP2rTOOJ8WGRTPYkj/CgZR3vet7xL0GMy
hmWMetlleQvXKrrI8uvCdDUZ5N8jCfivQj3aHsT2gqr1tL5+0BhkMLG0Py+t
KwGru5++vzarW1xn6hMazGF2Cu8V8zFQiMFdezo2o0jg2fYQnv0v2BHvoZtk
Ok/wll/l2XwmRAIPHdKsiN//jf74L5xIG/r6jE8DiZz3d/ix1u3VA4/GNaYZ
nK8yvaG2uwd7j7efbsqvT354sm1+fSi//rD5UD3ww+Otx/Lr081H6tOnD588
sX7tp7Aqh639tkVi88uBfCXPPdnSbz97Rm16b7y/LVo32XwwSnLn22mCC3XZ
Kj6Ws9agyAOvms52Gun00pvv9rOnT/TUf9Dz3X60pSa5/Vh9+vTR5g/q1x+e
qU+fbT62flXL9GxLT+nZ9sOngXHxHsQ0kMNOp9N6urnd3trt4t9AzJnR4ReR
fBH1ksEczu5+cpMOkuhwCDwAiXVOLyjSjL+35KhNC2hmXiZRdgnXPBkgLY/H
xEb4zwzITxF1plfpNEnygl5WXGzraWvzCX1SJEhGce24eR4vkisZGFIszVpb
cR9JBDANeyLf7sqn5sHoJM+AZ2Xj6PVNkt+kye231gB2Z3k6Rma6TR/yvqn+
T45/NIQuj2/bfM7nMFK8lLAwRPLqTv0DuC/TBzOY+wP67Ff47NdMBtGeTa/w
sk5ncTmSOcT5FRLANdUl3rc4H4zgHLXVdXuAHzyYFFcPiji+ejDZyp/Ns0cf
3n6cvh5cPn3cubve7I7m5eNnTx+s2SuzNgDCBP/Lpi3sMYrLMh5cgxQzzLMZ
SAzx5WU6+Cu/wtuKgkKj1WpFaqUbjdNRWkQg08xRMIiGySVsaBEl0xHQDxIW
ChAPon6WlfjGbIZsKI7yZJLB6Sj4XF0nd0DDLoG6g5gyKPEjlqGa6mJuYCOX
8SAdpyVsktceiGDDDFe2iC6TGN7HD6cZDBrmNr6D+U6SaJxO0jIZAleYTuEE
pjfAQaJ+Ut4mIDbE0YylOTyh5SiR9mCcV8R28nbjsIyKWTKAcw8nGRulrSmi
Ag66SEnwwu0ImAC1kMJpwCWCb6IJcKZxBNxhegWLc5lnE91jK52mZQpzGrbw
qWYErB5O0xAbkzWAqeuncxY1YYL0OD49TIoBMAN+pbS3o904zaJiPpuBwEVj
qjQScZ/mZsCo82w4H8Aw42ia3JI4B/xyWjapBb0gLZAF8UOesNmagh6DtyYo
YdDC6FW21li3Ew15u/Atd1dno7hIaAoJCLV9YPS8sCTKQgPj2sb9zbMnCO8B
SYFzEWX993AO+AziWQBZF4g8dAFXAt6aFrRs6us2HnVofjbLsxhmzCd9GMEr
sNewWlfTDIjegHUDXGFsHLYOhzxH5WB8h7NKpnk2HtNlmSkqxGsoB7Owdqr2
OKqG9/nzvV0YHl3MSTocjpNG4xugwbyTuEiNBustdFp43PDWb7/J7fr8WR1t
2vYiG89paYH0qSsK4lPWKpEPRutA8KFbOLEb3o4BsR8SiyiidZ5AsYEdxdH6
APYsmyT5Bt4XNZ82U490OhjPh3Jyhih2AUG8w9aAyd6CvBQlYyEldMLheElr
1NgDWRy1VskHvmjYgN5czX9hWrDKSVHE0EXpnC06V0soAqxzL9Rm3M/mZe3Y
mh7pqJvCIMlLeqpMmigsqqkMaRTIaJHz4tfDCLZonH7EZRfxBE7HP+YwHTnY
rLSZ7/DKg/Csv6w7Cu3GubyjH4WRqPNhPQ2iDTwdydPyWHqFLao3idLhbEF3
nAONQNKefwtaC4kM6Ud4tAdv4CTkI1jW9aPd3u5Gm64b/gq3q5jL6bhxhkYz
hFt0k+LpScvoJo0XXhfeUtjDgyznXTALbt9Mc5CFdFhko9M75QVAeRRuDjSt
Fp5oD/aIonnNFquDIB3YIyjaDWwcz/g8n6ou5T94F60DQGdOzgSuJH8C43Zn
hR/qYyF3J09IfovHwmj6d9S4RaNOX/X0PcBXcFQDGMW01LcBPwKZBy5qWxOX
4RBOWQFjLQbJNM7TzOOIM2UwYYZXBGg+8kv8D5Ih6XHdYWkwm0s8bLShSHYV
PYZXXIaa5cQh4SAdTqHP4Rz3BWTQZHqTgvgpookZ1iRGcWAU3yTcPc9OJjzH
EcCIp6CwqvEHhk+0v0Z8EN6s1qaJ5xX+Tj4go0iwk9hm0tDWeAwDArKUXl0B
kxninIHnok3G71e2eCF9bHui2vKFzJVZS0QN0J4b39kSQkAgwNcdscET3OqF
gwDXsxh47OwVMY1Ij0+kGLoPQtvU2VQX3ZbGancpOCHaB7gosFPwOa42H3eb
eybT4SxLp9z1bQIv4BEaDlPsj86c+t6iub6oFuibz2SUTmbMAJERIF2n6Vzl
xAcu59MBd4PEEyhATAvMBj6SrDIQMWAZ+rjyrXHG7EMvgpl9WhbJ+LKNm2zE
AX/x1kFJig2PJZKHnwjJ3wgwUH2nrSsVVw9OreSNK2MYeaEJzVCRNDi7Y3Wc
xvFdosR+4O5TYO4gfxUxywNx3k+x0TtLwpsk8NuiY1g5JorNeFNoN/ZCusWi
g+3uM7Z7eNLqxzg3kX1AlLpN8fbDDuIvY5g5LDIIG0DAQcUpifeO0+skej6e
J7DZsK/w7PHBHu0kCBzZbVFZJlgLfxA2Y3AEI2QHSmtCNUeYaWWjItioojo5
u12UEYbpJVAe/EaLB7w8IBgc7ic3h/sia8Ohm+iro5UipiBwIj+UzO9sooYE
FvS8MbN8OCXZPEdKhTJytnsijHv78TZcWjqGuIbw5YvTU/kSzScoBB1SY0jv
qWNoTelZcHaZdwO7Nvc+x4OOcmWKBw53so2EoHU9zW6n0Vn3sMBZZSK2JR4T
tSiEnOmqDlNLnNC2AbdL+GWZ3aIRsuYuBckMrYKinJrx3oKsYdNqxd9iw8g9
EtxuvICNbdKBoUd5cq0iRfJsSTpyxD15RtZ7CKd8UML9lfMK6+nTf7reswyF
DZQ3gCDywbH7YLohn2vmjSeHlQVofzoA2YmEHxZS8MNrEBXwXP3221/RHLe1
jfT9BojrkAeJNpM+ruwUegBVAGYf3hq809gjHhiy/EKjE0sMFn2DB0GXSnrh
s8EDh0NzkE5RaWiqT6Brare8m4k6USRl1PlQwhGCNf0puYvOiNytd34626DZ
4X5cXFxEPaG/zrLLmYBe+imxELz7cEORjCXQOnSH71c2G7cLFgE+jQvRFYE6
kfxYVa7bjd0pkSr1eBogSVOLNGjyXJDZZJqMQRQ3O4Ujshf4Bs1idFCKOcsw
hhjiPWdqeIrKOjSShA0CaA0zPBtVmZhsUbeWfmsrmC7ngxW6ycY3ypbhHwcc
u54UyyUVTcLhxrhHwASSIZ0N2IUCJDrQdpIWCGpEaIi3R7Cj6eWdCJdqzMou
I1cK3iqIPJL6graCb6JToK7pNBtnV3d8AtAKBxwH+ls7OuudrjX5v9Hxa/q9
23lzdtjt7OPvvRe7r17pXxryRO/F67NX++Y38+be66OjzvE+vwyfRs5HjbWj
3bdrLL+tvT45PXx9vPtqrSIiEY1FW6IIJDApFogajgXs+d7J//e/tx7Byv4/
aGXf2noGS8t/PN364RH8gYSNeyM6wn/Cct81YJ8TFISmyDbhqs9AaMWDh7LL
COk4HiBkq3/Dlfn7TvSn/mC29egv8gFO2PlQrZnzIa1Z9ZPKy7yIgY8C3ejV
dD73Vtod7+5b52+17taHvnHX3JRSuLOcnxpLQhOvP13trfY2k+PLDMUROrnw
usgD8rK5e+O7nUbDtXagZNoS4q0NDDuNnWhf9p64AH9sHf5BfjcrM5CUZyMh
lv1sPh0qEQZIZoR9oNWh09lwzAHrVZaCctWr/c65+ylomBGKPlE/ZZsqiqhF
AWs2lOMqJgqU/fJsfoUsdJhe4dmyqIwQF+QO8LnQz3mh6Mkgyy2z7SxPb3BA
eGflxU7H5X6NvV1cnz3HFhArK0tTWVVc+wNIsL7qgI2cogpRZloRYO6ubH3w
hcwQ2etlejVn2ACRR2iy13UHkmijT5f11kaj08FHOno7Gg0lEOHnZ6uIfl9H
7ovuK9JNgBXhGI/mtG/uqT3VSsYrUkt6xpicTVuonHtH2NKbyfaak40IhRRH
y9P8brHC38guL39HL8g5TE8yYJKMRV+JS2wLmsnpJPMFEe00B/0FNyJF2T9a
G4yz+XBN9cXEQFrEHVMDtfQM6oT2CY0gCQyY9LYY5a2kfdVuMvU2A0TzSTqB
+ZHgirqTskoq9ocXAHtgNxP2wZIp8uZ0isgZHFrjpEMHlvE9LWMWbClLWkr2
IVc+gN2Gg95UFtD+nS2vkm1HG2ksQyO5dni7oN/XJ9RvnmWXLfifCLikdZNe
b936jWbIgouO5M+fsaVDpyXaBLr19S+dnNuzFqtuq2tPWc2fbJHaFlvIRHC+
XVdrhzYjEUvMmpwoI2yXCJR6xadPSM5nShYjRIhrVBKRPdrbhRmNkyuyKNrE
eqLxSvpcF1o8dO2mMI/BNd7mLm+9nkbN7uM0YLfZ2gLHxVkDGJDM1Ahz693d
B6+6uxvQw7nXw31W2lnHrm/dRmO5vp5K0SllG0CnSkCgH/pKd9vn8tobg+gf
kHVjND4VfIRvs/l4qJumB8YZ0PEChztFggsrgrrdk0dwyhGPY3wBxDKmWSRu
cqPm4a7mCdxZprN0JUZzBM2ArjBM2HYKcmlCE71OkhlCkcggJ2MD2Sxn/+Qd
WepIPMmugQqs8WBkLKBgzZM//3mN1dzZOB4ko2yMDeM6y7iRabUjllbmaII1
H0fGWaX5EV594Mkyd8+mx0ur/XzzaXyTgYrXh1mPaAyT9AMtGeop3rpRh+vw
FMnw+QSuAY6SFv1l7/WxflA1X2w0DW97vtvrPHl01n3ltMeSrHblwEF6edHj
qzqOSyDaPMOhsC/4PiYcHmwxWZjWdLPrpy8Oj3/cWENNojfIZiS/9MRxCB/C
p+x3hmY6tsUdRwj8PNqD2YLWKjv42zfFfAaX7eazeBPYGV1YNgA251kt3ZLr
VfyMROfTab3pmi4FWfflDKbTeTYvbIZjEWPbZNJJSXG9hfftzozhnjgUUxt9
OYt4knh2FxRH2XgwyUoi5PS0anOYzMbZHR8sZ57Ihu+SUo000dJrpvCZcDSC
viYxISp+yezaZX9AJ3kd46g/T8dKfr3K8Jf5DAauFHdrTOx8T7QlEFF5EzzU
cAZgr4C7lIUSwoX/zuKcpxbDLQRKoRU54LrjMZty4zoxZpcoLvvZYfeYcng7
59JbX0BCauH7fbSb21wIy1iqtqUkyxh7scVWBxwB32Z6I1tqvDREShzvDK8+
XaaqZZ6nxy4FhZ5xnGXGIIf9NpX7KYyZWA+CSjZchAcdfwTb6A71ubbcbzLZ
9eCN2ogsZQSWCDkMXjLkhfhfwhBOZrZTEl6Yj8tCzE1GEdRUXN0KjViBF82w
S4NkqY5WORaM80U9Q1wnCP3xzwwM7GKUws6aPtXyqI5xa1XDAf8Tn1GRjfUA
GNuBtiU20xKt1z7KKMtNO+IlxNM6iNGwaYYixwzOT5+EN5rXMlAHtM0t7Hbg
8xoUILuw6eQzg8ly/1RdjpMPKVsH8bhaZzPockV+jHLCGBY2YctgPJ2C3s2A
sGiC6AvaQA+8pMfeRE2JDs+j9hZqZdHZjMyDFjYEGHhWsl/BiELsVV3gYKZd
B0JoCaq7paHYhBRbR2s433xk1/RtD5ZnDAJj0WKUXM3AP3/eoCGIoYZYsWyv
i0HwOZTtX1kE6Gq8RuIZGycxWtnnhB6Sk+HqcChm9NELZZYhGdIQj3bfep4D
3CgXBHE5z4n220YCskkmWgkzFooQsgkZwigjje/wEnstSvFYWF5atp+rM2zO
vPGJ4NIxgUV5mxewYyRzJTqvA/nZwFNvWSRie1waBSPXiVw7l6T4VidKZlIQ
ZJ4rvrjLuCcScOCian4Z68+hNzHLkxyKl5jdxoXmssMEjs8IWb96fZ1kfOGb
PHw8tvCu2gaXN8NkU9I3xcUyLbIcbZRoOCrRlSAEuMRpJ/gVegvpYdKYFTWE
jlgU8rioUuh1n5YixYqYQAmCZBXJH01ZAfuExfP60P3C+eLFkAe0GEPfwqrv
G0Sg/bKrpzeVAK4Wqik8C00ZZTIYTdNBGiOvG481qk4wNxqDYyO4tF6kV16h
zxyUETwxucdKoWUQBT8iiOI3kjsTg8w9K7NZk6QCQon2kf/wIJu4THDPRBQP
uPTpUij7Ei+Wno1ymleWA7fnJgXxKkqIkCJWwxwuEnLm/WGKj2R68fC7RUvX
J6eKPgeKzDrmAGAbFT+6YpVxXhro0rIlFR0HdUN625aC5Ug4R052kVdkheaR
NJDvRVEQuwMYKrCJEg1Ll3JRPUBX4Z9L6riobYZ1ddCAU3iGFFS+wEVS4koW
ZApIc6NwOu0gRFYtnVCCB5oQwI2YZHyRJmSoM7YRMv5qZYWbZLppGzCj+ApB
1SWjDIz5RY2QTlexZILktbHWUzPCmvWy0EJGm6oc5G8LuT1B4EyzFmfTVIcu
n0+NJ6PSatXYLfKcYgqHLlz9EJQJPm4nGeird6LvGYwVau3EDhxEnKIwHvhd
a/xjxLtgy7bd5lBZV9mCwHo7nIEZ9QwTzGDHUF0f3xkELwGcyfVakJTJdjAa
UlMTcrZ2h/VgbfNFQZEXdgBbiyaSO8NthmyLieAopNmQTSJA1Jl0i6TP9lng
aXEJYyCU760+DOwQYk2YGRccmxEInzQ+dRLJzqu24hWO+bV1+CyALi3YKSH1
W/tiZrXPi2t0RDPdBo4dSZtiQRWEpXuTHJswiG0lcf8TkMuNtVJgP+x7Vhe6
iEbpFWFZraHrvSIUeuXaGcwvkTm+xK7MsrdbGMu5dKV6KryFcVaBvMrAkuVC
G02mLsAhaHLQQIsMPfkge5G/y0wrk+miKNTdfbC36y0Ou7HluqOlFTkctCT4
Rzw1g+tkKnBJ6gQXXiY4BqZGQmdoTfm8RK/wsPN8+CxMEnTnp8VkgeBNLoT5
RFQKsS6kCnFn6et1CK8ys6A0IrfHbFkRacqCM6DhPxXjBdtr2OtZNX+RFIT8
Mx3Mx6j+zOBywl1lJDu9jCL20NIszXYqCGqM5D6dxQ4KlRaeTMa5hqJS42hK
RP8XkRmZPAtuYuwkXwsbsUG/+XiDVjY4XDCfyY4H4kSDqDLUIIXAo4ynqEI+
6pbV4L0QEMR7pCxyKzZOESaoVQ4QXyEwClmipmMKoh1KjFdXVgMfS9hGiPge
otpoA0JgDhtIYq29kNNo3I4aBMHo8vXk/dwH5XbO3h6OttYKqzKrtjoqDOK3
b+Bmt4AzoLk0tpCQyLMIBsTRSY7RztNYlcGVcSfGHpPbg2JynJPjwLLAVMI+
aq0i0bpvpdkgWOLpiqjgerCZG0bUtKE7rgqcKpVV7VLmUj+ywbDJC2PnWxQ7
b6gue/dThjVXWtbghSIIaNWgOpjJlWhzHszHqLa2w9CCemu/IR5i5QqKyVWu
FFsDvZRHq0KXSFIhwuSZwWS6mk1p5TxVHFAG6ejnbEAKwqwrMFnc/9odD11z
df2lY4W1IcAZbafWgxj+q/nN+umrHkKSB7HyC0kTmk8x4N9h6UQDUQ0AeSkd
MzIXQVbiMiFjjwADQcYdAS1RcFFiumRAQyQb0mRaYOwbEWtIZZQEgzIng2cK
tCcV0TrbU56fvups6CWas3i/AhamMCpqHLHamhPUhe3RshUE5R2hxR0jEQ1d
9YdjHqKhPL/TNuMw2FHsKe44K17Q2MEeNJUBlzYf+rus3A48jIcGlec1p7ic
8g4xEk45HipQ2ZjIk3EelFq2d7yh30WHytFJDgoQiud0D5XC54dbBcOsZNfx
3hcFni11IUjFi9Zgsz6gIHK3poQxacKHuuKwOeqkduhmRSq+B4EmKdQjh3Su
0YK0rCGYMfLwiNqpIDlsdMihD/O0GDExl+cL7XimI1CUDD3aLTGHQlF6rAV6
nOF7IudrzdZfWZe4RQbvuIPbg+AGc9jRrdkC+fwqnfp4YpLVLYim9oNVI+YI
tuIYCumLpiVx4wMqAkTB1CMH1TSfDclAinKCDfOu0Ja0UCIKvTFs87ROeFrK
2U4jImyajXTWpj05JRYQzIWIKXPzvA9qoXyvSIZCDYXixJoWshh9VkMRYQze
BW/wnEIQte3XHoY2jgUax/BJ5XbTjp++kmD0+lrkiP2HwsT0kb8EubxwXsHY
dIwWL+iMnLsbXIiwwJezsGOsbX+Jsiopyw+SzSZuDPu2XmMs9gIEH1udS4r7
FVnsKrdUBH3Db8nPVFZQfYXA4uwDI5smgTiC49EmHwSE5HR89kLLLQIcXgFt
XShUk8bG6hlBNfxEgBGEsUEFBlan9Jilwj6GQw65YR3Kjgf/5Ke93jdbm7zu
mAMDgy2Iyss3zGAcY4jgXggAUNBnemllwZXUjHulFLIqRNJMi1m8XnztyTZX
xNwbGV45cuHq6vg2WWegU0KSo2CuizlKAKlIkLt4fLSIUKF84eXzVeO65zRK
HJmhhaL1wK7qqpiAHE95FcjrhpYBFaJV5P4iYBAZJgO2FS+fijL3qtusEUD6
WtfQjCiyPLN4c8Wzl2pKB3KN7eOOU8QWl7WIfpm2OotMxwLro8HO/gLx8thw
AeZRGtYwTBAWZEn8ILQJeMMEAaAOuIvJPPAIz9EurfKRgIYXmy+SzxyxbCUf
q9OKmtqWqs3lVju2WbQaxZjqvB3DQNQmSg5z7ZkOBfb6sZentd5OWTiF2xt6
CqXyj1S0/SnMKB4KY6+gQO4Rwgdrf6wFHD9ZidJyV5K6lWUhEEUeU2qTWcnA
mwlQ3Ml8YkUl5okS74XvaGXS3jKd+wDnYulXhRXGvtJItbNzAesPhcVo/Q9e
F9e9CYnRxrNCR8dU3cAFC4bCb5Xp4jMmTbhJBBCiVTYaJp7xVAXCiQmuCqyx
NB8MSCaXJiNPKgjcPp1amM3L172OwMEfb2G6A6TttUa2tKxQLS2t7OmWMBGT
AMvV3w+RrTV2pzpTTqSy/Kh1MkutveWiRV0S1YbpQ2vV5EbUMBoyxQ+ukw+2
OPkgph208aW7dHX2HF3byl+IxqT5YPtzw84VM2EwO0eo6UBQ2gX7klV8BOQp
lWadUL4Kdi2cJcND9DtByHZaj5XO+3pAWXugFTSgU4zjJ5FHkDQqg0hFEXDe
0xHwdMhMskfDx0bJeMZUqmr7YNc53HeOssW4vYI0KTkXIPWSC8Ey+8tNkEHa
xEEHJtHNgn2k6IsEz8hxptQNfPdlBk+cgMYn9rAr4UbSNL8Wia4p5jJff1dT
CDjcNGEqfI1au6kvExVfL7KPEzxXudw2fpAsWSQ4mdC7VcxF4VBybU3wrQ16
KpdjQTMz47awzdSqEwB/n7jxWrwT7tdplS/YqEAf2ANtTQTLrtwFFvkmJYgE
JS3VGGsdQ1GcvajYNRW5g2aEPYabIlA3ELVCo32B9qYEg0HRmBVu3NyXFz11
GaFNhazDV/2BLTLkqgHbLavwixqWBrqL7SEjXAWNGFjSvHBBE43G/8BPFMfF
zZUkfKv5+b5V8/N9Q30b7WMatd4onUXm60/ROcw3yykWF31c6ucTvvfpC/ur
f+9TBNKwCTo2Dy7p7xNoLCZJT/Tp9S0omgXMZel7vUi0WPrzNOeUcqv3Bxtt
P3i/dfl+1XVxf/7f+zz8SaUc1C8ZVr7oJTKTeR21F/180r/hW+fWW4uGd6Of
aqjV+F69Za/W9/KY91m7oYb3Sb1lL8wn77/yO7wl6ZCtt0yAyichZZ9UwjL9
VrUvllfkQwyR9lqy3/oTD/svzmj+pD5bRy88evRr+8KfV6TS1c/Lf6t+Db+3
1lCCR/Vb9T+6x0BfTvOBg/59cJd1K5gLwAOq6Hm5g7DfEkcELp5t3VzyFv/o
LF4b9hrWvVVP1AJvrfZTR7XX+OCtWWIV0frGbzvRN1pu4syYf/7WXOhdW9rS
IjwrqJ7g8C3IKgTnaQG7upr+eW2cXJZrn328+5iwkToYU1yflqhXly2Pjd90
y3Yio1u7SaQM3FjLYcaSv1jiqrgClbzHFj4TxVR44tcS6EMlHJqCbpeE82Kv
r8lTZpRI0cSofwpHwtDepsn00JS8N4wbopQbc2q5UAFKlS52LduFH/kg8FR3
jbTgTtkYVL4KiYKmYwPbFEXfkTtfY9VtRTQoVGtflpLl2tzKbjjJlu/5Ula2
JRvsjMTGNnCDDNlxTdJaOJMBhWR/RJJruLUR3mgwDug9uOlGRxM/uJXQrBn5
WdF0dCKMiZs+Oe/yrfdNco6PnS3n5B3EexF2EXpuN4mUgaMhk39NQYgwaiX9
m4RrmC/iEj3gckhNJpM4vIUalyxOBhNAQ4FaGcH864DHjoNUzVwlcEuNc0NH
TZrwjv58fF09FgWigXHPDCYTPT5TUBOjWYx2Te33INkZqZKcZBeZPAMpEXX9
sXVenFMpjjFjiVpZnbL0qDzxlX7XIqBNANrk21JagspThsL+d5aZhHZlx3ai
u/AEypBcGg3UndW9TI9R8Bb184wC1tNpLeKuolD6GZPyBA4AEQXH+qXt+epw
ziXM1sq34wMA0OnLj9HuolncgvnXTUKucGFwO8Zv5GV6RMmCDAYqJNsiBS3P
AxIFwrApYxAFE0zm4zJFYKkODMN7wyhOHMk6nnk/V23fhk3JZRSjRN3kPEYr
XtmaNLD+Xu14Z9hN19EUMXR9b3fD/fzwROW70yiz/p2XZ4PRZsYba+KkbGxj
ONmr4AMktFJyUhU6eO8efD4uJCPDKsY5vMJIpRwzj/KMwHM1KfZskji01sMa
XpZXSSTu5sKp1VmQnKvmHBnerxobUrOCuzqhHLJkQ0wVINEcE31BQ+zLALUc
bL6d582CwbHwTvQbwT6w+8NiFF8TDbCggmnRrE5QiRMW2sNcZO0adodlpe/G
/lTCCtdorMPS7XxVwthD4qKxPOA945vMjq2QPMPDHZQGwwOU3TJ4rpM7Fs2k
Gzsc5lcxpdWZ5aL0UqyhuH7GpFpdBwJ9oH04eo89z6jnqhfNzaVY4ec6qomG
iSHn0h3rz0o4IXSS35s4JZn9X87HDNEvEtfg5+2eA4OjfAdAcJyALi+nso4p
R1+L1XpaUqzhVFJSSlZNmB8nHPUOm1wiHZsDGyaWga4hmIdTAUGOm2H2B+O9
TMeChAlsLDwJVyQcKe1K5QvULsqPrDbRZGOyZQO3La14ESxKYdk9cQDpgU6G
E4kPioOyYc2cJFrBqVvZiO0oFX1btUjQJ37EwtsC7c5qOSk5nd1lYNXQMszX
seJh0z1mea3nQFCNThpETSmNFvxAhRZxLnBaO22ARDaBJsUNzUMW5TJHDynG
SbBDWSNw9PbgtVUExtJdOCEMJyXwZBKqx0ChFxaQTHJmUC8uuM52Wq+bBdnQ
D4g3j8xerRP92q6G5P32TXxV/jrLP3xuNNZ2feheKsDlUoIgjcKkmzJ7azuq
UcPRa1/Lbr2V1YrPr+gzZJenI4F6idaD4y01pCWObpP4miL31WzJ12PBIxW0
1gJaW/tkvXc3S3iMtVV4yMtipeGwQb2egqH4lXxDR8XidL6YahCKtt9NRVJQ
zOsli8E1LTjK+ACj5UvDKK2RfVu4IqSzozhqocGzQA4pFWFZm0iuig1IbBCH
vW+DQTIrfTXbFWn5cBUKijQHuWWMXEISEbn5/Kss2Dlpv5I7vZckvCs2g147
6b4+P+xR7kIZFyu0ZMPB8ayh05WEPxSGCIPtZjBGuV6JK9ZdWAOKByeuxU+1
rKn5mN02xYPbBBy/JHRD04H6Wtpl8Mo6toflcF/ccHzYBUAv2nx7u8PGGE9o
FMuftZG8xsmwfuP96xVflokL8NVZCeTi+Myk3dCGLyyFkAwtQiv2nzpoVwh0
Xk/Cft3+9aZQTNZcPz5mtZKqBchdeKOEtD/HqgJpRpYjUzQyDN/47Rsexa/J
TCzHxsprcszUGBHtqBExjZmsLCY3irrnVh5Zk6NFIWRFXJH25AiFfKb7bCXA
h+cmGLmiEOGHqyXhT4tIVz1x4A1650D1pc3bcv3mqwSfODutr6NxQRsl2nW+
myccLXDtgZUSkkt6rWFmyAgLF1ZT3Ti5JbVfX7bjOx7Vd4GsH6ejpOZlzgFB
MbdY9k9CcSidN2UVGNqRCxrmVJLozu3iaMm41YeVmopLf80qPShAV6prFpgt
Ty+RbGHYUougrx/44qhsYqaSAMWn6QBNTGni1hmF51LfDI3JNncajU8mzrfq
4vlkvqP5uF9G+0kZp6ArfGp82qnzO8HPil9CK9GpxG0JxtEXCpjfw2haoNQg
GSvwQn6KHpQ3MByfEMFZRmf3p7quq/0FbGJWT3DlsaukpqvFPZ2INV9b5jN1
ZUwP3qyFNECfRWh6D1fuM5SuZUH/1ipYQwhNG4ewbInVIAQ0Ulg9Q7ODwRfN
7M0cTXGuIiVjNcF0lYnJE9jvrKAT7Pf8mHv+s/tDHs1kNmOP5pZyaXb8AgNS
cyH6XGVSHniwpmhApUKcoafBGnsr2cYPy0otORv4R0b3ezToochq4YBNz8oc
eMBioJz+DnokbG7JWWnDgCJdaKqKv7SGH2Lm4igpvFcNG/BNjEp0YmOnCohU
zEQXIFOlFjQfI3csmgnshLtWnhoJWLTqpSjIr6hT7iFQnjEjPYwdznxPwFwd
vHHZyi4pnKGDCKzCG5fhQRTk1xSIdqAOmjYUFvMUtQjZAj+7PwUXx/nQETYs
CKmq68Auhmp64ZaYzu0jzQ0Y/JFsiFNsjmJWEiP1VQ+5Ca9Vgr6IhB50jmQt
W66wZL46RxuvvhGBgkWRgtKQ3oDv2v+xEgLmQIUtQGZMXnqDYnqgYpFoNwLE
fftXGOtymUCnPpNl3/A3zWIsOk/1rg3sIYYpXw1i5nqh4dwO4hX4zbbiN7uh
jfZDeIn7HFQr29VUGFpwlVNoXVxowL12r8oNT3d1tBy3AXHlYD0TGy/CJ9HJ
HaSopCKQVj5TFbNSYKpTvBxSN3Cu3HO2WZzQK44PT5m5QOWH6yU5HDiGmKX7
MeVgCA9dwxBywyfvCqoYlSTXFJMDMxsbHbhIBr+iMvArtActcUxBiMnr4mfV
9eU0PtpwwrO3XUD1Gp6qSaNqCnr1aE61e033ZZsXKPpf7ADQZW9OhOan5M7U
pY7WYe33N6xCEMpOTBmZELATMH+oJA0tjjdsWR7+JVaELR9wz34Y10ZhJdbg
THZilvZMbiRp/PabXZgbU3lOyb1vpWTAGepwM8lJzQnysLQGgrDLpErBbZY1
ia/ZFCWVE6wBUr4YzVaapkMLXHIZ37C46GZPgEW6wuIsqfgsKYWmbVqn6OFY
hTCdFRJcLbdw4dmohewXUpTLimJ1fCiBcDVdbcyOh1TTs9yOSw6qZfPwzqzl
yw3VI7WcrE2UHiqOFp3D1y0YTXUawr7YmIM942E2Ky1sB5djgNmhXW9Myw1M
nBxj4ztKzGk1pf0/Jgk9p1qiEHviFzW9SzIhsUUWcP1lve1kTBT+Z4XcKNSc
Jb2otFM6ooDTkKs0e9N4IrkK6VDuHkfrxVwu6ZgmioWryBqyYRe6CO6RY+re
Na9jvS1r43BIXFk84WhoR8KyL3MNb/HEqEVINV5/vyHP7qS6o8LPu3aiYOKG
CyEYXwpcktBSCbr1/KcqMF07tFVB0qqeYpNVI+UmE0z6pvMJ+AUB8aqpMYeD
gJbpEovqBzrKEcujFCcoPbJ932QhyQJHKSyb2NM3Sh/X5W4VCRakbU3nk36S
rxcb7priB0ze7dS9qmR24VaxZnwfzdvGnZqWaizGLLVM9o97cIuSBIimfp8Y
22wGQt8GFwhA3HIlGBITRGBkKzZK944FHB+EExmQBKalYlOggU2hy0XVjfEN
uEqtPXCSv3Kc5fbDp8DHDJi6QNeZnM44etONBjokOrjodp4XJLaCTFSZFre2
j6Pnm5uP0SyEL2PQDnKJY3oZb56io57TXhe+etx+WOPA1/g0++w6kfVV/K5E
xbJMytgEmyhIK74dkg9xxRhtrz+JVHYdvSgMziEIunvudyLUz20Sj76lWZxy
WgoTueE6iXbculph1Zta6Hm3ZGfh/Vl8dzhhpAPNNgOEs+xHzf72jXsdYGTi
lRn68O66fJmkJzhVNzzDgTroDSO/sOGc3d74+pfFOgbYWQi01DeaiE2kBHRY
Oz3V72rbWF33Ew2HX7boSINqFt1g6v2ZSQp6tQEaHgmUToqPqgA8MypO7PXD
E7Tokpv4CIGlA3TpIoFUX29zxnw1GJtI2WEZutAGilIIggL5C1MmomBi7q2k
Vebv7Su5HjzlGya7FVVTwMO0Fnyy/Ssn+JeR/VoOZm3qZa1G1UMUP/BIvHL3
bbHprIclq6lIAwYlSkFZKxJcLYzGgUHftb2wexPBcMSKrKyDwau+68KM2Lip
uKQBJyNkmsDExATNCcOLgOYAKeAT4B1aonKzgQTLb9vrUz9qJZ4IKLSKlcJJ
oGwvdgqSXSpYxhpVH+fHen5mh46IuGktipEJmjpBsWPQt+JwpZApmjYwI3Fa
+gJfgbXLdfy/Eu90s2wuxTYu0oNU17xuuh0KoMBuV5lbsB5qfJVjVs5eT9RH
LwMariKBA3WEhJ39H9p68iq7ONk9fjBJilGoYfguQhn0BR4eOIMWDLKyMEsi
jjDjy3OHp++jNPxaoaKBqO45Zs2OjjT57RsXfKXK9hqRqQaGWEP0yZA7E8wL
zzpQflfkuXUThQVjfEAh1LwAOnAgTYoN3/4sGYLsWDddip3cDox0qaSicZiX
NRhVCljNwQsAi17BDnWmSX51F60/f9XZ4IiwJM6B8Y6HXhKM9eODvQ2VvNyf
MHbAy0HioFTWyv3UPsxWMwxlr4TFLcWUQ9/+zKzmOf8xkCcWSvte+J5xAlDS
YJXoSZNeMyGT//jUygS4UgYNfH6n1rZfMASTHQxsfHKCeRZql7Z0EGJHdtxT
VfpwCrXWAZE2vOgzz1iWmuJ44yS+tNIiEpUxoMWWGZsNApPDzuCTgCJvw4dS
XTYQpkQZF1xrqLbMWMqzvzBecUNfcquB02daEr1MSi48ElYFtUhCdSaVFc5A
1YWeGN3D9toa7TgsaBrgW8XA6mWjM9CcKsvV1TU1baua/FfYETyCQLCWJAqt
yRAqYgw3pQZNMYjebpFORWu+xPDkKnELzNnqxI6oLKIuGFxZUa2/0rDcUWn8
3JIx2aKoDrXsYjnPS31r4uLactgZKG4lv6isDaFocQ7zfKrQgUswpIGCi9jz
+hodUTVrT+NdI73uvKsX7L43m+hBQ6Ws44lZs47WFLRxDa/XGpylK/zdQnpb
oE+V0HVB+boVyWTllrl5V5ftAkP/SEjdMfuBr1tI42o96roLa3Zk0V40PROF
EuEWHj1707BZ2hzeFTWsLh7tQ6mc6QNOizkVsqDaFN5KyWZWF6eC6N0nPiz5
iXUb3IeKCZWKG6mFnXDC72ONCYgeffiAh+Ux/EeAIgPKhOcBn43h6AlO1c0Q
NLIQWaRL8bzRUk4cuILirw3pbwTQlKC/gGZrKPW0krLMMPYhucqt/FHarFTM
+2oShZdQR6d7+D6qptGopNWwn7bTunxSpoNPUSU1iJ9gxPrgE/4uuXfQi23c
/pWkI5VW4Z+9XfXtJ205qLSij7P8Ha2/7O5tWGMxT3/i0BZ89Cuti92BPayF
n+Cfup6MTrWjVdWV2zB/6HEIIfvyNkgh/wdh5760jT/56IwvaMNr4i9fuh4L
3ljaBjaiqgQQ/ytPkL0pbDf8iYXvbKy2Ks1oLUOEL0W/bxki1cS/ZRmcuXR+
/1w6Xz6X//HfqHzgf+L8+T+0pSppBi4qFZyyU/WEV0ymj7J58Djea9X/BvSq
BQTL0wbvt3OkGOuA3b/+ffVxuCfqa87FjOV+bUj8EBtl1VTu2YbSG26I13xR
G/oTm/CQ9G2RoS+4UX9LPpQUK8o88XD/71/SCCeth3UGURT1qJUbMdRY52fX
hLn+tDvP/mtIrb6XnZXvpUdSft9ZdlqN9nohMrVyG7SGiPerLmD9qnNxVQpO
+pesOvzDnH6wu0cIRNJhV1t4eQerwEZftvB/shvBGf9ryb9d9sKP55TMJDa4
XLNB+2Z8KRuMbnrc8heydBqH2rQvHId/3r5wLlGip/LvZ+lqT2XfTEUT9YmN
B17E6g2v/5KTTQ0s2OMvJktopFTOS80J7sOWaHaVFqIFzMD6/W/KkndvHrTg
z0VLuOBo/ROooU5MGNLRFcBalwoIp9jXr66YltDW26NiNk5NEROVcN7N/a19
RU72wjIjjEgo5Mz1A7nolCge/GOOZYnJHBY2UBNLsMo0VSDqy/qw4l0NtrI+
lNYDMOkUNmGvm3nSzf/h4TP2dsWgaYz9EuNWHSQPDUuII7YupYqn1Wk/rEy7
4KgDGJjXeLGSf8rJtKeGGQxuqg7mcWUwKgRIGjAQ1OlQYUwoxslJOhh0IK3g
T6NINhUSoZyqu+7R8uEmdKzEpOT5WOHY+teEJ8cJpDirpVRrCo0Qw9x1bQex
qST2IruIVwUV8jIhBBB5xqhKRhIs8ssYbo3ywvJIqQ64sEPoar15qgyKjtbw
Q3JMrpzffjNR6ggpOMGwhSmbpgsnT6mJlGckZzjpnnroASXp0sBsF72u81sg
4My3H1slWy4r4EO5e+uY1WfDqykX9leR8wbDnL8CYDOcTA7hNjamYTk6lFJC
KKJ7G9/BQmOGReMC1PXNipUwMmQuFoykRk5Sk9ZZ1VALHb6mUBSJhLHQCVzp
1Na2HYuybLzXqhM1pe4BjD4ekE05vJ69F6/PXu1zHqvibjoY5dmUM4hRjVf7
2H3RgXNdVOa4LbJx1/84Vl3XpF3/45ilXdvzopcs2/bqL1mm7C+b0/JO7P5a
nCPynm9VnVPcACkl5eLofC1oQucrugfdx22XWHh495yNtE7y5oJBK/tPqygx
Fc/JefeL+lF2VFmlQFSoZZnRra8nk5lJ7v11J61nHUps4E56He3d9+2pXqrW
QfJKdBCtm1BCPqFRw9yoFawxEGwnSKSQ0Qeq/SqOhaZQ9WuHfkX3Zjs69HKP
6hgzVZibBpAYp6M4qAiblQ7SeEoVYTE/cTO6IVlIJDAC1I9JIMPUsUa8/sYU
GBIrQ0uHmpLvoaXSUWByJZ232UXbSOJXNTUFZ2aiT/ivk9fAZ70aU1514Z1Q
kpUH5c1aGDdEtnRZ4j0M84BTdIq5wQQ1kRY70X9bdfwevC+y6X8jBlFXKY3z
eJKUlMXWLj4prs6XvdfHIjKRpLMi8dghme3JIzjdyHC99EmEtbFjkXTDFpmp
NIFDaaXTFtZWcVD+agE8yc2u4ag2JJmlTiEgvQwsVOw05N7AbVsVRrEGW8Yj
lYFSUdk//3mtaRqxplX7eOOzubOz+AYxGOqaSpV5ExSoLpWeIcxvoeZrpwDy
clsVFvBh6WTJ+y/Ch1gl4ANOeWXlByxU3rOhk1JNXeD51MvhFYZepCUi9Qg1
aeXuVImIl0B6PE20lJRo3AZl47KzoCkSQ3fQ5I6zAJQUsiwzF+2luSjXl1kA
LsNUnR3KrdUzrYve6jKowSCWHW52GThKNcR3d3y1g/9gyYrRxFTIc1L1+aFq
dDmv0+EOawnSID3q3c/+XWnKRoWBXYR0cT5bi17vnXZOo95p9/D4Ry7IvNFE
Fc5Sx3d7x+2tiPqRcKc1+621VcIdeb362fBu+WohGmSNkip6IslO9TqrioXR
eiUpp8rDuEGrzzd12IK9qy6lzp401GcX8yjCt3fAu3fw0xZ82qJP+RDQxjhq
U6DdMJYfIVrIJOBeSxmIcELRpgbobLcftreUMuIHBpi6sovVuiqW6ufH25sc
8cRBZhEjl2WDDivRpK4K2hZq/U1Uc8Om0Y9ij8H7xR2peDPQmsr4A1P6WXw3
zuIhkubnu73Ok0dn3Vfrof0HujipnoENJvX6yhTQ0N9IXvtNCrSsSeHexOvj
7PTg6TqO7UR9H72gG73BbdK7ut161oHPocL5d2AisBz7Cd9ImVf4LIfngm3l
LsOBZSQpQFascZ/WdmgJ1szZxzlsb25vtTYftbaenG5u7uD/ttqbm5vvZBnt
I4OPY9hxkjz6YWtrzZ3eWmjl1pYMn1n7+Apb7vS2Hz/hXoHCrcSZ42JYz5e/
6AjW8u1VpNKumDwbjbNZpphOXd5WERucpIC9F7uvXpnoLabrFpEUDGhdwuFD
SZqhaI6V+cDG1PpB0YHsWk7EoMP2xGyII+ljvpCkjnF6w/Qy476/LdShpZG7
Ed2FJZS4q0Gio2b9HuCRxPokz6kU6zCpQSCyW30omewNQh5FEd2poz1U4lcl
JwN3ZRJXil0NWTkxmUebm9FzuPFyTnYUgFllrU7krgCD46b0YlPpcrdyOJuj
dEUMos3N6DbP0DJM5W6k7GE5aKP6ljpvqwnCLUpZeI+SGzJu6+zcuLSmgCJB
0YuEViuks9D0HkYHWd5PhyBA1E6OMzhItYwst6rtWsqOho0rYVoV+61qcreJ
xJ3QVJSRzggcZD7yxY2qdIZN6eumOfRlUBOr3jiu3/s75bgPjwc7rnDpyXCy
lFXOS3bkUoXkKQ3CEWHsnLgj/FSnFKqujOJM1tJUZJe6lYG/9EmtZUVOquUQ
7arIZNWtgUND1uf7yGSwSu6hdEoOVEy1ok9hz5haRYuCNCbuTx/UCndpaiVD
XeOqYhgLNfkOBjEdJP40QebN72ZldpXHs5Ek+ADChTd8ViTzYdbKMYv0JJqq
JAAVmbO6bouCWnBDfKmP9X8F5Q+1qNKHDa0U2oviLzhYMCTAWyqqrv7OtNxw
LnPc7mfyUHkFdAxHRZVbZBRxgrw0w4wLY9pVw6rhoht1dpRliltVbFn3rw2I
PaDHuPVoQkOT6+3UmJer+nYX9LsJHAmrHkxoi7QSUSSUa3GcxJg/3c6aV9Gw
pFux8kjYlEluvCAFklVTq0DyaK2yjJtSozAldxUO6u2fo2LIZ39YxeJkqWIh
n61FrpQMTXny+PImWIdYrkRsGyUiWiNqh88l+8X33z84mO+/+PFs2v1w/LCz
9WjvjZjnFmsb/ISmNPitT2vkka9gKbynqXC5GtRdqgaFFCH4DG6BPmfRohHX
fktf/l2aA9EOu1A7DGL49yjQufbOm7xeq1pm28R76Ni+03soAnjtHWHTH+d/
tx0LqqgBKiEfiTchwzsbMqxCKQykEcZgCb2WNySYVI+ym091S6Tk2XV+2Igb
S5UtS4g3yX9ZWRA1Sh6yQw3DRQQW1KfYJoprqacd48MyGmrH9Zu8xhjvOtyI
FmQsjQvjvQLuIzvtf4yeIyqfoOPqlTvJ2PKik5/2et9sbUqhVM3nUdRZwil4
R1RMo0qbZLsP43RS2DVJYx5cOnCTHE4z1zhdwsRgNInndPHqyazkawr4D7+q
6ympcz11vsT1JMLWNCLXKpsaMNg/uYzn49K+Af7gJeEI3hfnddlWqbdWU5m1
KSV0e1177Un/DZUzFPAqXdA1/qMl+yrRmRgJmyvnrfsduzzCr2EhAhJRTJ7n
PGaDhOV5klex+7VoJ9yUTT6xCZ35nOsXhN1EdF9WMjgtuNHG5nToK2rueWRC
rOhIXITuj3sczG7jzraDVi3rvK9q0JKKICtkgeC9o2MiSDaEvWES0pPXJ6Gy
Mi6UT+6vaXU278P55+ooDgzLiRMOlnYxRIlpUROGcGgnnGk3XiSU3MLO3ke5
zhOyGLG45CYDpfumc637YjkxyY/ljE6eZc2/yrM5pW8hK0ORt5wPSrVidWx3
mpQI22oV2DS8Tqe9EnA8iGdxP6W0Pl7l5rS000t5Zyx3TieaB8ZccY5oviLg
fEwJJigZ4lHdVrcRXhnwbshr2I76VcKOKcMICHWypAabZo3FpI0RRcsN6WAa
1OmdNqO9oxP8p8eZVnp7nRPfImmjKTGrEClTYrmr9qijssdU2vhKaKibLUkX
RlHOJlln2Dy1Tgt3TYQRQ4dJglAFlwx/YyFFpcS014pprUkFD8uAlHTvaC8o
ZQVvsd5ZO2cvTp/UXLw/5JK22Twd5LQM6H+FzTN0JSmd31MnmqH+zdkwVK2f
wGpgtoKVzcmdZebkRx8+PMDA+a9uVu5UzcoYp++YlrG7f7JZmYotqzfS6SL7
cOffZx9eh5cVpd1Y2VqMR9Q2FsuonmAx1WhXi+o7nq3820K+1MKTriMkc+ft
xWNFwhkOfT7VSYPbOOtIShc11TtSygIEd2+9siL53lq0rcfRmWkrOqIVR1Eu
MMygpPeVB/utv7nfUoI7k+fCFSDGY8kPSAnqtfxdzUUcgHbjX2hkYpSIypFj
Z0yzZPvLeU6DXLfGp0G8G6Hkx1xQV2Wuxe6tSlAhodo1BRtwuucdc7OsLSba
SH7gEOeGo2l5GckvJWE72kOqFqTgyrId2bqplOkgpLQWWFKpiO1O2GHHlLCv
tErSaI7A4rkeT08lxKbOvOogglmw/ABpTqhle6+94Yd1mIDuFFTmM8rzWAkl
ULOqqjr6hoUcQVrvqnS+knvo/3zvkO2AXrRYSkgQV8YJbIVZpXXsQHZow14z
klwcSXdntrWJt2Wp3MrBHlubi5dJHQsfrHI6SnxR/R6mak2cLLyN0jesxaUt
tXLVuOZrx37d+Sr2a72K/yHWaj3eWhNpz7ZMm8cFyyJn5Z9inO0txKjYhtlF
Ztna1SGT7BpIruXazt9se7r6wjOwb7c2n7W2HnoGdsdwmywy3C6wNVwo3VLA
57hNpn5nOEypKOO8NJUVl9bWlCuH/F0fPNc+a0+ZTaIlOS0V37+kaPRLmNdo
aqWHJkmaBGm28mJMW47Z4XBp0Ysqi4yNJFO0H2jxfIIwVILAIksus4y9hCQs
uhGaZBDNOStlcHobprAF5cIUqN6j9lZ7a0un02LOQEiduhoMFggXPc5jsWqM
40q6NpJvyQeY3KTZvIBHTXkCEYkL0EXbSbtpO7L5MER/+bP/4XnNhyJmc7mH
0FngzdKVg0wVPa9C2r0qPsR2KAQFlIoSS+I/qQokoKLuYDQ9BCSnUgjNJEbu
z8fXXkJ7KtR8Q8RWxakZwk85e2uy5K2eBT0QEhq9UEGolTBgPzgUuu2a1dAB
vfs6mNePGFV5eY0e7s64Gtoamkol3ynSkQkpsKrtQEvWblYaWJfYGplxxlHi
G1I/NpskpnxOEQzorA/aJDvCkphMIRMYgKmyW/thmCnHRNpg9nBUnisGceTg
AydNtnuDVT72aopB7WNRApS6sCK9jcTLsSwXfjnKSUN3KnpJ2S8dB6lQUhgv
+QD+39uvC2UkQ9eAE2w7Wrldz9mUJglHNv6uBaTQoHJx4GNwT2EweElCpyPU
j93cuk6ZAWwRr8p1AmvGBcV0LXed2VeX4Mw05ZDJ4tj9g4RjbOngUhOK7wns
uBnQbMloGE91E8WfaMA0SVjW9EuES9MqSaVJuwo72qI8mamVoIq5ITlWYlLe
0sEcC3EpMy8pWdbnbBa41PIz3aBiTvo5220Xph+PRhLPTHMgM0HW1/pI7apA
H6yhYicF8gR6vy6hvkyIksZiws1pNr2bZHOdOPwuKVvKDCJ9CvUW079ap2r1
+uAQlX0P94SCS0LRuDp4tfqJm1HRSzVpqB4HGlbyS9qffaI/7ByTsZNW0ovg
1a+b3JKRm1zSzSdJ/7oZJa3/yuuBrJJfNnenbesn8Bl+ZCWR/Ju6yN9bOqqf
ii3QGLwJBK7JIpUuRPP3+j6tN+85Wv9NCYad6LR6oQRCy/qsyaa3ymjDOfS+
/jxbJmlUTbqsJX0yyv5efVqf1OToW+XNcGa+Vd4M5+OrDr1+bVv2j31I5KSs
8Ka36svfdP5a75pVXzrawGfhvH+rvx7M+Bd+3cq4WknyZ6LJ/1T9/p9+x7FH
nWbsHzVJwhb0ye7U+/UZGm2F1gTy+tWeJncGK7/JE+jWTWDxaKMFyQDNftpP
hRPB/RP2cxBT4rl70rI/OW/WpK37eqOtzzuw7ecdsJM/LVAPXZVSov0XJ/qq
2Pl1qG8hZXstTdt3rhKeTFdALxWIwomLxBekFiq2ttV+GK1TmZjbJN9gcPkg
m6MjHiOg6YntSD2A33c7b84Ou539SpFoZetKh4l602nbhCAbqcFvgyFRqlvL
mXvfFlG8WtAYI4b2zFJ21DpzRKxvX4CV1h9tEHwI2RUiJHRlVKdYXH1l3ErC
MlQ5BqM0ubEz7fiLukBlt6oZeF4OO/nNHuKe4PBOy7GqY19nakBNxNS8ZXym
LgRLphL1ppvKrlq80i9q4Ybf16bjSgtf91KbQ3au2uOP/dcvPC9s/UJqGIvV
A807gF1wds+Kxufr5ZaHZM+YXfYgvnJKQq5QuUEKhNDtZFCXXjwLdEPR+2J/
5MOEep1ZyWp1AXd70HksphYvJV8NGGZBeGXPKrzr2cSV45s7qoZDFholq819
Vv4VP+bCZOx0XGzr1rXg4155sUBvraw7OzFq2jLQnY0abyzvcZFMDQy4b2MC
Kyd1MXJVOlZhBNxnPVYbl8VeRg4m2VmCDleFZGc36GvXCCvuhfeVLH4bzXvG
p9asEF39QorKCmZEYc1tqEbLxWYE0OLOSqiBm+01oPHqpwtW0TCTEFKnunz3
XJTlMdEnTkZJzW4ajV3K1eFiSXGPQ9TJv2t8MlWNdFoouzKKOwmrGm6lqEl9
Kj7pw7LkBuMf7WpHXxCdppzl+stvQ2ZPy9xke7DcykqR7mpBnXqyYwVrgJUS
010XtOYSVRq8z/GcYltS6VtT8MW1szzePxTrhSrGg9kAbM+5HeAWrTI03Zuf
iKQZRgxr53aTUAEl0nYBkOmIUs8KqCTU5MMszRXT9I9TnrxX9S51nbUoOseW
ZeMIH6KM0A52SaZCQaiSSVOTkVA2G7dE902WCtIujvLsal49Hoo/hcqkKR4G
LWXTfkaZGPN+im/faRM4tY2G8Vzy9qRTCapFmkwIJ6siKHQPHZd4C4NbuErx
srr6TovKmFXEED5d/sGqzUrDEGFDe2ClbeLDszFFSotmQCQkoWSl6mwc/mmy
4ZKjnTCY8KVriiZ0W/IBesDgU6+u208YPKNkQUfQs5I/idNbk+KvhItdFeVq
eJUFdA0BSK3cqssxpMpX4yVW8yGhjwgSekAAY7tElotZtdKxmTiVARV75jxW
fH95meZlNqGuyVHBlePrK25VmdNiqKobYqdJpsiWHny1Fvupz4RsPuGMENiZ
DIsqCaP9EWOoOiSw5+8z14uzOv917z15YZbZBtgNXruMj7w+iGT1BZGmfAMu
8FTJMUY9rogyXU+UMaq0GtKGr3eEAl+8NAvdxclcTuURnWhLK122XPwFYqwL
f+yumgfDB+1h76ugHV1Mtg911EjH2mD8KpB3vcD8m+uHZQDeWNwD37gRzH7R
XTH7hZ/8IqCLrZjr4v6ZLaTIpI4dsTJKDLIZFcS1JNNAmohwNgjHvbuCXBVI
CVbMZYPtPGKu03/dzzixEcGUKKkzCV/OkAgv55gMAtANyfQACx+PtQwXaKbC
/G32LiWOL40YbHJgVPNcmBwYrjq/7sWkb1SX0qounDpZ7UlSowA3G13v6DYq
rZUl7ruxa768QjNZVCRzRyWVcg9pQ9MfvbpOgo6aSyEVamkoC6qBioBEC1hV
xe1cEjuuQiLa0wKRSWj7whqfSpyqkAk5Xdpo8KGsAhk4qicW60qexyS4OyDP
2mq2nNR7OrQQwYQ0u6VSr5TxQlFnDbEBDk1oEIS8T6/GiYVXrpxnbMC6EPiR
R1cXJWWEnibzcZliwKqre+TV0tXQlQTypXnxxV2aWrDzInQjyDpmX4BFBlZH
C66YpxCUqUvVumrf8vLBCzDidRilFRHieUIGyMEqGPHu/705TpYnT9Q5TvJ/
Xo6T7dYmpjk53dzeefjDzsNn7e2Hj/8tOU4WlqBeNbGJSoMiyUUW5hZZ/GW7
3aad+/s/LyXkV4Lbr5L/JF+U/6S7JP+JrwJoA3qXtSXlyNPmcseqfg/beddP
tOLmOrlf1pVlhvXq3EKm76pm4Rm8lfExkHElbOu2HkyXpYa5ry6kU6DQdojv
pjBDL1cyNAfV0McVba5qa7akJ6NZah1POhVdC0U0h9njAJfUoadzcD+jtGbG
6Fd2hX3MVUMHy9Gz6gzVYictMiOfGzZYZc0euFepjRQ9LtuBLXJtgz3TEAVj
sIXH8Na4SJSlUwSmWnN6Kn3REYQ3jDew7hWWhfAlxd5JNgKh3WgCJNHt7S4y
pVcXGe8rJfHMuLWA0KzZgrW6YfNvNfH0ghyAzYBN1OVRbh5oqgFN6uUqB3DD
FC+Dxhc2LLt8ulh651pCOo7SBKM6VxOlQWX71RvDpt7FKeW0fX919aXWaOAK
mcvMvGrtff4cXKRDI3FrF7zMks6WUoLxKBrkcrzSrV00CsE7A91vms7wILNo
HUdA0mBlMe/F2FpCYsMchAAcbpxdXYH4SFl71OjXzAXvzfst17aNFahounSO
+njJ81ymXBlpE1dSqMBiPbCwLm6MlgvsFo8rTtEyaMKnbD212DcOV4KhFqyV
YkcYVEGa4jqIMRtNlU+LVcGw0sWan2WXvYzTcWGtetA2P9XGedfEbtu0qwgr
vHJW7mTrYaZ318riS+epzr77xLe9csLNCVAJlUwVW9xBs34Tbe74zxN2qDza
eiw5zBQw8xC2Bu0NuDk4X0llqerQVJzgYhhDmrAc1PMVBQkbsIWNolX90ArX
YB+FBW4JykpIVHVyWrKG0cdLxlnjoSnVdtq7XvUlKHJglwMRN4byCQGtLJSv
OQBBEJHdzSyFqJoEaOAYd04bc0AGgj9wRVqEzcCUW1TZIbEyZI00VoMifLTF
3s30ScsqN1cnkP1qWvF/piZcp/3CwkALtdqvp/Eu1zyXaq9GDa6vwlOvVldS
h67N0imJNUSJF+ft/D9C95QbUq9/Bk7/Qn1UlBs4aiKzVyinCn7bCHAGIsl2
l4o81wB7qjGpv94Un8NwH3V3g27GBFePuDTTdEr4BeQI1vaOOAYKEaQ8zfNZ
hrbDmCLQxsv5ku93ZMliSPmSgrnfbK1du4DV6NkQiIGGln/fRmBiZ05aFpUK
rn/noDiyPIUJYbQ6nVyhUyKz8+NOUV8rQehwwYFfbqhUoDntymtai7ctYI6n
PBE0MOuay4pm1/RckYdr9TDYOrR5kEctK3lYi7EO85nOzkkEQolqjjR7uuhr
G7RTUYDU5ipaux6iQwycFJMw76527dwnP2E92ssw57rU8nb1PoV9xGplnz9v
BI+5ymVEgtxiBZzS7LhwY+kcvfIouhaj+Jpuhx10Bn/fxvkwmCegDu8bGI3t
mXHzP1mYPLPwlP3cSQlob6PlkuXMpPgoaPq5g0b2NLDlCaTbDZFoup0fWaqh
/HPmFFTFGzUiltNuMzOFYrmQ42fGNytm0Rfk9398UUhiRb9EImr+3p6xPMgf
XhRbyQuw3JWwXBq7lzj2teUxOQZ/WLFs+fjxMP3bhl8RHJkQ3Ut4XIWq1AqY
lbSxJndjBnqrxiJznr2McgM7DBNpuzLqEMOHEVdBFTEVoIUG09ILRPGxzpyE
k+rKanWSOTuXnIynA3jbZ43ooylcmbQOyrhKUuYgUiwUdBWQlmGhFovLNcmY
9AwoEXhFjt/nBCuYI1iHPenHVZLSKI9vTULXRal+brKxJYyoOfDQTBq+SGXm
I/SdVRvM293p0MGH+0nXDOi9mhLWE/pB+hHnTgeEHRZpNx9uor1BlZA3WRzX
HxSUypejY5qR/JlbH1DyDxDcYObw5yBGeldsVCL88BjbAFDHCCVCDwr+scq0
i29z3md9jL2sikiPTZiS1RhsC85N4Ys519TU2z0t8eDaUeYX160IXzmTX9PL
0vTQLhMQ8ViQMUVkKKSPRo8HCkeDMYna9ATHIZnpYDbS2zB1ZFydoj9cupd5
cokI3pgyhWknqWvXq2yAa2td4EOV+daHH0lyrAVJJJXYTyggnbnIIO5CrRLV
FsFaZ4nkk4nHnzOm0lbblY8MHXFTvFiplWI+DnxSN+wE2240psqffhvnVt5Q
N5gXs2dptyPd2aD5NBrOtU4sUbdLLO24eag0KNVVK9ECPQvWkv4uquDVtY+W
MufziQusdu3OGW+kpUQEcqcandkFcnmBKS5Q5zsP5ieejUpY47cOBlUyyjGp
22hqzwY6y1BAcLz6TQ6sxevFulAFek18wwYPGv+BsTSrxcUC7wru7Z8ZJyu9
T1Uq+rJN2zNK0x+tnWxtes42lndV/s4dTNtIR0Nl8rXOuww2kFn+1qQqtHVp
7aoR7xgLtXhSDAMLhVRSXgKHnskBpUTuxt8gRNvp5jR0IzE1UZLSfIZAoAcY
mwyTRJ3YO/tVUk3UYxf9YoHCGdXaGFbtjDJzSp3JaKEtSoXEW6sAq1VAtZoM
XIQ8iwcjzo0nRooASFXaHpL0VyhqLEfGRT9O4inIDU52fCeZXtcYtMT55meS
0shtK8eyc9Nq4lUDclAwgHWlsFWHbVSMlUEf3PbmZvT6Jw3z5DvJjkk88+gg
oeedaBrX9WaYmmyo8uqQKOOn4V6UhXNvt5qaW8Sv6nFQ0AaOGJyq45sEahPV
pMI3BHQ5eZ5dD4ofWpN0kvx3W0Vi8I24EEFob7flOYPvLVbfDuLPOnul7fAS
RgB8wU9ZHchYTthmZYojZkK6i2Rkq9Akz2hpBEEqBwR74AupZtmq4poIn7ak
xrtkwcmrdlLM/idxNCbpqomoaTeMTKUlypCg5mfxI1rf9EILrbUVm50mdnwz
dMxgJXRt6oX138Z3FSWNVYTgSHgvQxnhLEbvao6eoqgNrBXkgdaEqpiE+mpR
wokrepuV2UAR5TT3AsrWrXvr5B10p7Nwa5BGZjpru3c9NXqFJMulu40zVRu+
UCq3hHBfQA8TV+lPHe1FdF0nf8Vm8d7AGG2VnjA0fcpEaC8lR/5MkJt4Z25D
M4MfO6fthfqA7f/WCL1/pnrg04WvqyIQpw82kRYO7K56DOy1Xe5YEoJnjzx8
i80Ji9YtXWCjGaRpzq3DAHMyj0Uq3ADE5v6aLZiKlda1r/uNEgTrX2FgZxPC
Hx5cIMxmBcMmLvfvNmP+cT33to31ZG93r964Wj3Tqx6qWvsqCUNCeCR/dA9o
+vjOcbobGYgtkxX55yE0dchhS0UxnyQWv66k+BJDAQfNJsOAmUCTQmWg0qSt
QnsIARZPiRGNiW1NXD5J+OQKIsGk52OgKZmtgZA6+aq+04ayinxot+RddHzP
0QP1g2K/4CV07Rc8ir3qGEL8SuTslkhZfhXJ0yxSWSHNx7pgmNYcOXGzZwT3
yoDq9M60ybNZDKwCA7xhOkWZ+WKF3iUO2FKD0JqCjoZ28m/b/AanEig+uixF
tw6enIZ0T/rYiuOtCM3hpLoqh2zlx0k02/ikrkQofR79OHl2G05G25rnd01i
3ZWetzLp3nv8C5uOor/Za2slvF36njr3hckyt/QlMyUrkSZmQpTbrcZSTbm5
epsmgaeGGLJGbKU8hbtKx3v1tuH/KuG406o9DzULXzCIvmgef7JadIxYitz8
rrWRNNf+0vzOtXFarU5jb5dkgmhdXdaNey/NgnSUDw1f1SfT5OIYqaIJgXID
Hv2t46WnI5MIzJfptaelYnBR58XCsWp7lU3E6PvH2083a5OFOWq6TZeRp3Bu
QqDGXhFgsgHpQCHH/bijeaSWEIzfcSULWYXtuhrs/W1lxc1azeRXSlm2QoDX
1Is/MnH5RiOwwiDa0a5B4EDzVymWNCTeaZDIXE6MRAylndhU1TytUT5eyJph
oUH0oO+iJrMd4TLGaBBUjSD37yfGul+JyKfRqKfwRKjABauqwbeFroSiipRK
WiKUO5xANscxoCMQjEaiVHg1Pm3yMSekGh5XF43jJ9HIcrQDNoB0bLWjc7Zp
0A44iK6a4Lon7S0/WUEUbbejQ2XOsc0CtdC+MKQv4nNUiDQCDT/UAwxpg/cZ
JaduLQkz53qPHSeTTvGoTnGwaKK9vjDKR21OI6Zgg+HGfRThikA39bh4A/1E
JwqLaKWpFDmTijqtiqbb4IiXmFhQMitUst+4DzIucAD4h1LJGRelsX2rfJzO
wUT4aDpVK7J20n19ftg7fH28+0pu2ZpELak1FfXFOT9VtK0fM0WDVpVWs8Fg
nsOZmOsq8W7EqCkuZbnkLAthWpgQUFB4uQSohs/GBcrxdjhYUKyp4RM95qWn
CRKGMr9TMBP18qKRWn2R/xTGpir5xopJl6phXY61LlLohyAiW9o3iehsJiV9
cLkr4aQpITqtZKeuDzkiVdTlbXXpYuUpZZd12FONnU85qyoJIQS24u5Q7FSZ
v8Hp4Lw1yMbaWnSAiYhlQbN5pTZ0rSI4IJlBu7Jb6VJdCdfWteZdXF7LNWvD
oIUrY9ICelLcz6gV7OCPb+SqWZewpQlXxVoHuC0FgzO3eJr88g6Sj4Q+4U3F
0akbaBMsZXeFuVtPtyTtjEKBAvnUMgW2hAPBeX3+Iwe72CYzOun1NrMg/TIH
s9Yw5hA4y0+45xrgVpOIlbOdJJikDDgLLO+5NqNUnKBfLDcPBmumtJ7nztHi
iNjnB/l8gNERNIzYwlvCcUSoArB34SPOmzxRyiPUT8j/2FSZBCuyuUnaGjyu
OEGniGqN4qyYwFehqcarUIV8Biksmmq1LvYlHgSHJ/HyreAvLDgSwRYgKpAc
L5+XM5lvLXDslyXOdMGVC9JoVuWQABKKJCCuwKWPGpyWwTWHI69asdzZe6/+
fKrcv+EclaZk9IqF7wtenEKjU1X+RMWQtTvIISIGzfvFCjUbUL6iPp3U6dN+
TwF1WjKx8RWqOBQL2yoVBOZUHAMyyXR6iSUiMKklx7MtgnNwQD8mapz6KRqX
FoRv6jD8QJq2xtksYyjGzGRUcS6r5SnXdzWEfKrcciV/WlsaVaVPSgOnVmqJ
jKlyrAYufmAV3Pyr0rNWCiSPOwkZXBrvNuWuD3Zf9Trt2kNdlf6tmX8Fmf5Z
JfcqSbdqT5mGiKGtaV8X6clQfd/bHYSHHnp1JCUHxpLtdlmazvCjPd56K01U
J+IdXlWKj3jcJlHyvCQPROLI4Q1FEjibKgrPVHgJlTdZohusrAl8sYbjZZ9T
4rKzb54WUesY96TnRVqE0/5/jBLhrcqy2K976xCdgBfh/0J9IllJn3DJ9nJ1
QqcC87keXhdTE90z3es8Lp6r19EMLH6h7cQyLu2EU7KIJs6+zQZJIh8A9Yku
Ix2CQkpN0AWIyEeffeGSzZgzndw2dSJ0l6+LIuMhj7NSFw6DGlf1xco6hlHi
/0RftcXw3bNEc9Lqz8Jyr1G16ukq1V7tqqpuwdcFxV4tn7R5221yQa1X7aB2
Kro65V7vUer1PvNe4Dv8VP1zUaHX6O8LXjR/NP5mnTfL+b38xfsN1X9RO8vt
Ep5+0cCv2mPLqnLZU57i39EjtgeEocVlUE1BzoW1RCNdcNN/rd55/DcR3c2j
C6EJKy6FSz7/iYtf7+N+pPjWc7eGouvjvlcpRRLcbWpqiHKNaS2Q/CstDBEe
mmIiltjKNS6E8jpuNEcEwSqGWWmqSiwp7RjdIhcZZ0Ul/GiVQpGam1pwM+00
Yqncp/412rQJng2vGfaEISmTbGgloq5Mxgr+aCEsq4UDJm0/BJXVGOqQ5i8D
+FUEwjZDVsM+c0rOFhf1JrUKbqwKvhDv8jCZpQPL46Rd547PIpjmNpiVY5GT
yvYwSURiWlICjekVHVMMCFDOcCEeMA4OBJo4xQb53Cs/r59jUuYSqFVQTb3t
Yr4rXrXdwSDLVeoW2zVvubZqyqb8u0KEQucdQQRKBbWNF7RxYz2OB1qNNSUV
aBtAKxhN00EK0+DA/urpFsvHBYxezY7g50jOC/tvWZ5BPONUS7i/tkaphcLA
uaM3iSipCBOhfgSHt3JEBUTM/p0dBKFd7cRzWshztPDKuASZer2//2m1gM9K
BFsHhXo6SzBJY4VML6TRvpVw3YkmoVoE2TgYuWTlLFqVZrrD/9eTTO5fEcza
cI5/IcFMagimH4BcRy+dFW03dscq4W+F9jpU1GohLb6YioYLxMg0A4a1ZbTU
m0zwKuO1IwKQ3LDd1MrjGjxl5h7EilY51jaUL6wCZytZhJWhW9IQiE2yagum
s4sGworpjs3eZjMqBVyqOx4gULJ3ljqLD5qDqSGRS62wq7AteO8Pxrie2+fS
tqd6w0QL6DAZMDmVBLBW9Tc0ghXenaBkJ4Kgo8LHBRlo7Ej6NpeBSYtgl2wt
v8kEyVXxJ/zBGG54Y1diuQ0rHFfS3ogGFQhAIZZZE4LyuGJw4lAUsTHFwTXD
wFpcC+g/v7MvCt0iHVHhR6gLSBJWHP2tuM6YrkbcglaFIotK0JEQOuFZ88o4
v0pKRS4tZJcTFeM4kvBM6gh+OJ0qb4RmYCjechpgnpDC0hW+SWuZvUrolwox
aEagLXHsPNHtiOl2YUyjKlUALmkqzpZYv+VKARawNHec2qoRj7Ja4FED0tNq
WoBOfqcdVbhlKvRIZqdDYG2viw4hUXE6TSr5iGcFdlC9KZUgKb8FU9giuV8g
yb2iSO4VQnKv+JF7BY/cK3JE2rdg/uLH0LZpvvSte2D8rTiFSmsm7mGxtchu
rd6S8lhZUk6cbiphAiEntgjc9SF333iUrhWdCsI1ZGuXcxiWkp2oZXdJEPZv
8ADC5xRL9MIAwvCAWV3EdLAqjONb93d5Ybajw9J47m0yq2O8FTRKaBlWa2Fh
gioWkpxscMka9CFpB5t2ViAUOb3KfZlniKKoNYbtWA5Y7PpXaPxXWEEXT1qd
qpLp+neVlTNaR22B6goqB1Z7gC74fQz23Ncl5qNXcGLn6DFf39vff7UhgteT
LcRfYDY7jYQwYAqZq5XKvnbL2hEHdJqKnGo8Fps0XH2ox2XyiblS4h7eT2h6
WiKYWoZAITgJ8IEyHVhMxBtLIXlPEVYlBdvQrRltSbJ4+VN7sHWampJiEiYp
1wMlEQo2Qe66C5/xt1FAAkxVFOB8zrCpXXVaKLLD32OSN6xMUuH2BQahxj5G
IYCqxEzRTIXXsJAsPI7yYiWw57onCWU+G81hDRUo9097r/c70fPOj4fHvb+g
X9wRAaI/G8+28Q/PMeGH+thJ2Fny3aJK29qr7eUFRQ+w+dLcUvmK/L88qs7x
PoxJE177WimSi6eZtjm4cAut11bXTilZJ4XEmpar1rRsFzB3WK5VVT81oEXB
5sei+vgSm3pcpT93cik44ZQeDdIplRAawkKKSRJSS3TUfAlelA50xK8F2xOc
3Qy0GaUvFqygcCvKA1qdZ1Oy/OFiSoV2UfdQdFXvVTNIuXO0GIAehRDCAu8S
j89U0jYJbcIJm5yZwOk3ZFqnSq6UgcCXSdwnM5SzmEyc7TOk99NDqtSwYcpB
5rS59ruR7+7l/eOjVdzxrgTp8FEqoXzBT1tb24GqiNUMxbL8ftUIlyhZJOA/
BZeiTraikh2T93vBaVz5gN9LXNX4VVGS6CNHcN1oeAA6p/rdAo5oD87aJQOl
g7MxKD0QoebTCkPo2ByDpodaC6wyv7YbQRnvHuGlXsYeR6RDFncvGc0bgMmg
trOM6cuIFdcP8nwNDFOEALXyLL9rAVOJ52O4xg+0yKBiWdimFPiGzCDW5wq4
VnlBvvCfF/NI4AX1Db/BQ/+rgrBFthjy1wA8Lfpf/0snCGtN4hmRscVySbGS
XMIrXJ/DWhf9Q1NfYTURlheQaVOYn9pkg7/Pk0txvhtFQt5KgASS5Q454amT
YlfYpCp/LuohZ4RKjV1eF6P2x6VcPhQdbeIkrLPebrwm1q265ElIRl9qkYMs
rUGy3EHTWSB3LL6F6roblYvogoqPy0W2aEoiSUkjXl10zzFCoQCVK7CjbDQj
MedRCItpDOtyRdFuOJ+mCGI6JsSNuMzyyD2uKl+mHBOcnMLqelM3OOJDx2yF
tq/KXdVTMLE2thta0UAHc/GHnRQTAT2lgJCt43PlXNAbf7j5eOTROWbuPlnC
9B9wq17VTs3bqVC6kv+sXROjGHVg4rftXrQPxKpOFJZD6hz+YZFk13c16Xxb
mUqP6xHwxKHZjgMQccWTyXyqVDJabtHBkgQ9GXa+iaAHUa+6klMUfuoGvWMw
KKc5ZmeyYaNkPOOssrCG8fiOciOb6kwSgBYzevm7qligzxPjEhycmMZ1gYzo
4sNUsBmO6A93X1z5xpqgnoGeGF2fP+BV8We1gH1zmCQIDPNxjGGl2tubTFWF
ZW/PKekIyjEuzdTCMLw/z6f6KY/92QaC4vPnYBUldYwdGaEVlEtse4Cs0Jon
dK8tjFi5h+7Pzf0HKf9q/l+g/esYFZ8zrhp1Ev2nhJ3YxYG0shjQ+YuAzn9P
HUQhXaqKncVOdH1Y5eY0cAUPilPM2vaX5LptqdI3h2Ww1OsiQFKlBsy0/hbq
Uh4yp0KLhFjyGdmxHBz805qd5/1Naqe3jpJXYGYbOtukQe/c2Dlxlk2r7RVc
VuXB4UyaV60qzDqkb0EFXif02kbAWEWXA5V5rQe98G4dtu+WEU4dX5wNjFoa
V23GURvHvcp4loR432ccbpT36ovxIGD2ES6GuAYsTjEvo2kCRx1eGqsr5Plf
TC0feQtj67AOMoeMR7t4FOGaFgSOMUnY+G31bfTbN16epNYsn7TuQGL8jIxO
0sn104LcgaVfgUoPx69FbdBblMGcPGm2IEheNgxbRaKMudaRZxrHuFvwxcnr
5FZ5oQ0pQk3jgjpDciXhLYovJ+CKKYyOebbQP2p5bTiuVyddiNXCaeCtLjPl
3VMlTxCEy69o76V8p4yAumIVSmV6WMvTXlmDdTuxyRHm2BASGqApTaqWGudx
8BHTs92iUyRIEpzZa4k755QJzez8qeERC2i3+jaWymK2ZWK1bT+Qgs+oza8a
pGKu4pO7gms4+gKuz+Hu8S4SC8TcsampaHgGMSv80LbK0ptc34JTXEXix7ag
EcrQfQc8FR9P7dQtVEjM2LzUoxGqNMDAhyiTUYMX2N5P1N5Z97BYM0TdjEan
aFQWXnzUx7DsW0GV4Z+uws02ovKm8i27WuoSr+HP305fHPbgnPwd3k+WvB+o
f2O/X1T79zK7asXC/NjvV/tfkAG1+v5gUPe+n2MFLyYzX/v9WVF5n4GDSkFi
PuL+WO87pV6c/qWWjLlOwffdagb0rfadBAsrFM77Wq6sTXkEonF6Ew/uKtfn
UDsxRTKR5wbOcx4wmK75ned/x3om7caBDrXldmJKLVRoPCbxRm6aGThRe6bZ
JaN4LAHK4iCmdLRHJ+H1qV0sbhzf2SlnluO5WJO1TCl2LpwKBMQqckBsyYXa
oFcabRYoBigLUTzlHEu+0m6VrCOXPhEctNsAfRC7DzLRaRBpXhTZIDX2ASas
k0laqLRNGrGvk0Ku3tJS8DA3Lt4IKuOCY79J4rFj6sFEGQqwE1oBp/YO7Qil
XpUNcSxYdn4ZJfb7+RVNmUmDIaVU6OSNIwkxsObFnFP+wVgwK/o4o3qRlB51
PxsnN623cYb1suLBNeL4YC3WshlqlQVaNrI+g6XXNn77LZvO4nKE3KpS3FTD
nWzwkSgDhjF4JjgZDkmPfEeMkT8UYVFUU5aqBJvKnGMX/ZYUtTHXdhLDTSXw
Hg1FqY+MwZ2WdMSqnKbcWD4ZCOtyZUaFF2bBCw6Euei6FhF+RuK+qvmKUxID
FE0nxUCemzTPplzMK4p2C330v+isiN0sx5P7UR2XW5AgSMSH03wtKdHs+bNZ
MomLlHOiJfFNUgzzDGep9QrdyDQhmkxzAfo1yO8wogYH36GUwvWP64ep0RQx
hgQ7k0datyisXSecwHTKhK+1LWe1iNZ3uycPjvcj2NoMRO6rDRk4kASCliEM
s4UnVh9ig0/Cj9ty6E7TCRonJzMmeNwInwEm0mgUlvuMqE3nJKhGBGFALTgP
uO1VcUa0vRZKy2vfjb1QS8PyYk/xAJfpgX4F3OFXZEOfqwzQ5Cr7nRxQN6RY
IGuTmvdR8UbY9Jjly6/BB/mEo9nNJLvT6Ff7hnB5QfxtfTYvRhhrlyh9g1kP
zWrjK/BWFLb3k6mk31OpI9b3s95GtEsnFWnkiTy9nxb5fKb5jHKmJ6P4Js1y
RZV7csbp+s5yivkKeLfdFUAXgYW7o1zaVlOCO7mMr6tqI5OJcQaPLetFCpzy
SSUZ2sI7yzPr1u88A9xvVGs9Mb0p7OJyXijUIj8org44BxvtxuspNAPH48px
BfgBfdoEOEa1UfyOBiht5HRhVKkphDkHCj/GIlFjoHklhUigIQ1hwcUIqROB
ZZFOowXTYAh5EQgv8GGW5qqyWUzyB9nggFxIpNBRWkhB2Hgghc0Uj0IRuhoy
hNsXxOcSkcRDkWbzYnxnKXF2g3hzJX33bpNjSMoymcxIDpA5uGQG5QN+4Xlb
mKKUquPkgYlf6dMKVh2lY+a5dgaa09CjUhDQMkXINq7VZr9W6Oip5uxAQAcj
ynJcUG3C+gzUhyZOsBkee3VARma0KJS5ZNhpKEA0LLRUJBZLMsE/A7H3LqIj
WldI0vcYZQQETGNdRAWjvH+4gckVE/ONxhHIf8jqa+as6++mNUbswi44SMY0
rp/pl8RhTLt7qe3UQPqzprtWCwoiCw+urhpcJLhE/XSqMlbqMp1ENZmwVaZK
QuMch8+BEY7Hmk0adRzRZofryrm9tdV+tNH2rrQf+7JnxWUZZvwrjAoWuASm
jIERSc5cd4LNoOxKU6qWTGKwPdrevWVr6pIHw2Gu88+aar2gquVla0zBvI5q
vc6IaG6TazwM4zsqoojbjiMfVLLlK9Z3hcC/cD09vvIL9lYXchAKSBsHmrSS
MqJ8PtUifMVcmJKKJxcmtcrzRFmFRWNMOCZEIvesSoEv2mFwFAGV0K/ddYJn
5Q4o7USystqLJXU5bYKjdV7pR5O6BSuUFta2iOQPp7ysANuAQXn6aU2wKIuf
/YTPGV9nsX2ZoqNrFXP0mq78UprqGG4h0oqYAJ1nV3Ojk+BwUPwDBZVCOzVH
VAHEPKRg73rYQ650YGqG4vIQRMOSxetXtKkkFjIdoNiFfjFcBi31aweRVwnU
yjZ8mqlLRgOviQe3OEjFaG1W3fO3TUPT11L2JMsr9mqsq2tVUF94npTBnPSc
Vz3ydhQjrLNRzREkN0eXP6/khdapRKvVJfxKQ9bqKSnCUg1iOeU+HZ3sH/dI
PqEKezr0VoXnWqQUn/xMlVt0PbjYBGaoAxiUc3VtDssQNI0niaCK+ghLcZIo
hRk7Zytwe3QinQnuLbVi0oI13KLetGEzdjVEsWqYrFGVykl8MYsIlqPFHFZp
IPuqAp5OOGIPNzSKJplK9Gq7iieD10VeuJxPB6yu4UUkG5O4LIUkuQ8o7Gyi
zEOWecUOmrzU1hVD2t3UA7S+IR2aJSTtZSHdM6bcFwkfwtKU/K3aEk3PGCHn
xHbjiVE5FOwmcJKJusKiKavRW0AELiP8SsN6oQ38NthOTKkXrMrRiO6xYMfM
dMRQeWPWhC7R293jH6Mj2FVYsxq7AJsdxc0zrHhTvbACxwubFkZ+q5TtEavN
UIPFdVpx653D1n47TcrLVjxNJzEWrlI+GxWTWieGVXPOVLN0gFT2Q7ReM+8N
NmaI2ZUWasILpeDloSmzG1fc4DDOCZvC2VVLKbnItKoDQ3HW8ayYs72DZIqX
r3udyHbxKic8xYhU57V4jXaxv8GIb6kQCpwMuaTHyZCHxrdA9DUlrNmphmQZ
hOLSaqDmR7PlJnRAB0diYz+//fZXWvQf0IO9ph+QKkETFs8KtvaQwNVAQwSF
N6vybVqaAvKljT3hUcAp3z05pDQQSqpVVkO4m0D5nNTsvCy4nMed073Xxwe8
k0+2H21JKqJup2d98XTzEZWiO1CxeAzMaooz92oOJ2dMWz/ky8r2ax47aNBj
0lL0zsHguNlHmz9YJ/LhggOJF5T0NEFNDNA/i1SXAhAajQvgziT+jNNrcY3H
02uRfnJU+5GGpsktQVPh6CDvSAdw9ECOzlF07bSjvTifJaj3NKPXxTV8swc8
bgqKwbAZvUimwzy9hoezwfUonhdsiDmcXmXRBXynvT4pmkxn81Jt5WBONBOv
NG4dg5gYWwSH8hJt38ZAyGOUBm69OnQvcWthuNn8Ywoj2s8m6RRGdIpeCB7N
3ijHswOz6YGAORwj6rWHF5bMsrAgJJp2iusMeN37ay0xYyaSJJmp7nVy/gl1
z0EhQJ0pj3hP6DBK99meVxlOZkYOq1LV6sYGDAzDeb4yxxcZPNydp9GrlJp6
AXpsAh+9TGPcecwF0Yf5whHQOAPMDcO/clxwoRNnFRJDPiZESDVt0Q/PtuH4
9dhI9RwN5OO4GIFGNU5YzFIQPPGx+OicFlkm1u1ENbb3igWODT8cLHUwqIqV
FDrlTWy1ZQELLKUO5F8bZ0rAFwdsKhnLlIenQKA4kT/oG4eMCRoePXn0DFac
ihiTr/jP7k90/Pq0sxN9+8u36POwynnMcAUO9iJcvsh76c8ND+DKoMjk7uXs
3c/dyauf390ML46zdz8floPJ+YfhxfnH4d7W7WCy+WQ4ebb1dns0HqSHT+D5
0eDh8Xgw7c76249+aaSv05ejd9vnc3762aP4Yms2fHGdvtp7+fHdzy9nby9u
y/70vHw7Ob87fJ+lR/udu6OPb7aO3w8eve4dFoeTx780bvqT4zF+e7p//LL3
/l02eNE9fLM57vY3Hz96e3GQvj4b/fzmdPPZYXqbvn34cvz25+743d7WTR/G
dPj+8Pbo/eEvjfJo/0159P7d2dH+2ZOj07fw/8H8+OPu44sU+zmYvrt4vPnq
5+d3/YfvZu9+PL/m30ez/sV4M+lt3b27GP7SmA0edu/ewjq83T6/G+5B+9db
L3tnh5vx9fH+m/Px7N3mwcPe2cvn7zbHL96cj94df3yZvh3Pjt9cPHvxZvP4
Q3fr+JfG8fH+eO/N2db+6Vn3POmcP3lz/nLv3ebjizfXBzenZ8f50el5tz9+
9+Tt+WCr/+PRx9OfR53zzsHRm8nw9fn1y+dvN7d+aex1rx/fvusMoYXukzdn
j1ULx6dnL4uzyYf3R1svO2fn3efvzt49PHoxPu52zh9Dj++Hm4//0T3tHp93
Zr80Rt3p4Da53up0f4Ynfjx+eDqZHRx3ts56k4Pj7n73Uffn2fOz65fTU1hT
mMXxm+3iw/H5wfx8Ohudfzwv3n7EGcEYzt6cfVBjeA9j+PF0+vy6u3X+qLvZ
fX6+KS2cbUGrz3vDycufu9Pnab8zKy7evyySSfeXxmFvMnofX7+M4e3j7ubL
x4Oz4enp6ZvHby6GB93N433998/Dg16nc9s7O9h7M4HxXBc38engcX/r5S+N
vPfx/B2cqDfvPo7Oz7YOH716eP7x6KL75vxiHPc6W5v97fL03YuDVzD6SX88
/Phm8iYfnL88Ot4a9t5N3o3Pt8tfGo/h3Kb9zdmkd/GhGP788n18erg13H6c
xWfPLt5sDv/x7ufZ3vHZ1t5RZ/j86Pz8ujc+6J5vbu2dnQ333zw8ht0/+KVx
3r1++RBms/due3gHu3cAf3ffbnYPu52DE97NUfd1B87L+9EB7t2bzcNNmN0p
nKXO+fjwFlb+l8ZB9+fhm+PO+Prt9tZFf3Lw9vT98/f9s3ePTw9GPTwfZz+f
vz+afCjejocXcFMfH12Mr998PN+6GI9O32yO5r3Jh18aMTzx5F1n9FP84/Hs
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
oHJ305h4tb6oA39breLjm6XqgrjYnx+tVlkSf6YLsi5Xrqq2tVMb4Ys3shyX
xn7FKH9rWk/DzYdZvSm0eVF+syvu2OXja1uXp/uiL66Ivvj01a+/1H385beP
7R3Py9W22WD+bbXehuvmuAR97+wAwXtV2FPTr8Zh0zhO1dnLjpw94Sfrspcv
82/3JIqqbLPov6HBt2cpm7P2sMkvYtNPu+XhRTd/VPC1m4Kv3FG6v/9/t+Lr
K1oRFKwau9871i2jz3398DRTuovAAZAUpgw2+zBTepardlNLta7vZbbm6m41
6US9B6oRL/v70Ovtz2pAyqwDvrgIdY7fGnk05XnUmVDf8oSVHeSgTaRAKVzW
L/RIy/nM1SwuBVszL/VA7WFE5rQfMDl1wsLwvIVNlaJp4MkO1VgCvZxzVd17
WbS1mOyFHTDOTvroc75GC1RrSm2qd91wXb5GC9A0cRBm2dbnrBtpVhXqmjXT
Vjsv41aiT/bu0n7gmrGCqtbBSrVwaKR8mqpM6X79gG/FWjSMp7yYHAI1vot5
8MRyUa2SmRxvY1Fryh2MIvXzwDO1CdRS1zJvkQnzGAxeRSvRrUZ92Pnebss1
i3kZWnD711Qx4jIfOtP8gbucg/d7M5AVsM4xNP01z9M7Lht+OATMc652H105
GKAF3xUtMJkrSJuSDEumHIqhhOJ3Im2yn6llzl1Ngx3RB6TpBWd2blC9iwch
6Apz834aHlSF3xrbSdbVkqHmgMU8+FkEOxG9giWLXpcXoH2ydmMvqN71RXY9
WFenmluia0jV/sFzR5iL7tDOU8tTjTWDOjS1bG/yeD5jQcD1coCZ4B71gap+
WTyOOfxlOtP6sHUfY9e8SDZ0J4t5KCNNMh5GWqA6RWXPuNbxMz5mub9nWQWG
bAy5HGQet58wLqox8dWeZ4FnK/YGdIGhhUfY3uE80Klqh7/tGWggo5p7loa2
2n1mVDnJjXWsGXNONewJL2TJkZFQNfRBKlcuCzBXgQ5e7VIfMFd3nhZ4Tp56
nDSXGtzBok9uzuEN5ZRnEWik72leoAZUrQp9zGbCS87hI+jDlHvV2GcyKHDK
ecceBt7O4Tlfe1nXs6kFzdZ9D/Ran92ihay7cr0q9DivrKk1xyd0XuyoTguS
ZpEd9IAFIc+DtVtUFoiBgT6GM8WEb6fQxjN95/l5uoLPEPm2TFYaXhZsmWxs
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
13sMb/tl4FUhBM6YH1Lb1HfuTB/Jd5KN0cI2Uvfel0ed2NtBEMd6bASKvU0W
wZxl/t5WgyrS87sZCL6ZxV1eqNc+j7NY2Y0iCejF48CXMomp8Z1fRHQSsX4x
zCZ48yTixTnEm9+rzvKPwx5C73pkKnfQKn+yZ1VOD+XvveuJZrmP+qfhwV33
J5V6/ef1p70DDbbX4k72cOMPlp2u7xu/7+863bizqfarP/er+cO3uy/vnkM8
nkH7maOIf3GA8N3TiOfHEU/fbK7cqk8d0tE3OgZXHwP8KF5/eHl/z7/2PrRX
l4O98ZS/fsjPHca7evfMXDtYcW6uJ9/87z8299aJuR+dkGvPx3398F95J1r7
RrSvH/4r70Rr34j29cPpnWiL70/WYaSImtWyX86K+p1KM0VOQ+/6xVvPjC0d
1Z5wXiE9k9Y8vvcs2gZsJzuD6vy9Zz/z1rOvH/7qvWc/89azi+SVPnBVlV0k
CtKZrmtZSVbWyYv12MSlYxCc6kyWKck34q1nGqe3ngHq/+K9Zz9+69mleqZj
38WufltXZtv/4pF66F5XqZRQtkexm9ozbXJAArkz6RVUbrTmHWvkKqMt52hd
0sxYjaBl+D1o1WPo8Wvz1n9m9MaJwOL9u9AzlEBK2WRe6feyxsIizmdqOkxA
Up1Ov0O1N79juYmnPbLcHtiqPHBqtZ2JtThtMqej6bmFJA7b+NcTCUlgGqtB
QwCZisT+drppkw0peR1Ulsk3zLMP9qD3eL+vlt7gDzzfuEMsje7ltAKxeKP2
GY+djN5Ahr70Q1LlQ6SVfWW4ajxgai4x5bvkL/Kpp6e+u+SriFsTK/u+9uc9
c7LvFTzP1TBXlZl4b4xNtfIldyYSdP1SPSReOrDclHngG/6yHI0H1cNMT6d8
GjzMNEM15UCLmJ35stah98b853VeUd0Qi+R6fqHzwGwGYWatvfd13r/ybgtV
cML/6rst6C0O9G4LejkgvSzwQYRNbhumKuszmQJVlHc0Cis4wxg/b12xhdq+
sdkOUFAdS8TEkUHoM4RJbrclPRFmtsov+sDcUTeBzrGnfYSg1RZbATexErfv
qmi+Yc9NqQQMBWFc2FOIemisfEnl2llhiLdlJMwwwfXp6AqbcIxoAAZ3LBI6
9Yv6jj/Ti/vAeG8nTHMnh2AOUOvPPL4zedCxityOcuMwpiNMWy+P1pY+AszF
3UCXp9HBGMKiOu/E8xDpwSy6hqd+P7gdbeTIgTwemnu2DEq48DiEWzn0erKB
o6bSpLBLO+OhtwzmltK7Jq78Fy8LPC+EfP3w5itgHNeeeJ5xHQ+tA9jlHi1d
gw9KSc6fGZge61jdQN0eoCphhS5CPNat8diDrtPSSa2bAsNfWM93UvBgSgZD
CjLtpZU6eelgZjOrUz7EU+sJrUb3MnisgjnSHMU4IORLjjCZOkhF3m5JSc3m
4MWuP/82eYuWSW6/m68/RRt58ZiFyrM1mxSdWd/3vt0b8R+HmN+NVrzbSVaK
/90Zucu7O//rB/d5aLKttN31tvH+yeILa/Xl+/1+Y42+q895lFf9918PcWRj
NXt5m469olJHjvMz74V4+e2PNTuabzZPSXz8a30JyumOsBNdOt0y8P9+Bvf+
Ww/OGVxHkv7/wOAYM+bO1NxZrnEAKD/zQ+wkXDM91XoODn/F4LJKvL8MDM68
MQ8RGJz/ZB6+7//N4P7N4P7N4P7N4P7N4P7N4P5bGVw8zLeU1E4pUn6MO+Y6
XFqUmt6qvH398BbJc9JH748nzc6evkxHh8WXtH89W+WmuYwj/3fdf+zczVa9
6/2zXi0G4U6ddoYwzQ0GwVzV+DN7yiey/vvtMmTX8++3DzHTq4j37rPtL//8
+FNLbPajKOB7l4HraVnHLIy5l70buHVu+dnMQg76fm55J7NoeZ3djm9lR7Cc
vZddjw/9mzpQaWcMHDBjEvLjHb3PxRqmWpJpTptxZ5J8S7tWGK17e7TT2fKQ
YyX5GlDQd9Wzde8sGEe6PeTTdAiHnbYtuGjV1AzFz2MdYfr1w8YpdudvE6f9
/PVL7pZ5yxPAI/g5b4BD89HE7RsThCT68/WD4tAr8+q3tr96Zzu9cC46aBnT
eOllqRXrvTVT7J0jR3JQdKeRZGR3HY3euXobT1kRFAGP14kX537RuwuyfAOw
2PtKtrem8VOoA+wyaxgW4CwL3u4+qV/IR+8Atya5Vr+S7/RCvoHIWpgjGz/T
Uhu9C9WV2tXqVORNu/aKgUUl8A4yd7O0ZQzQcIfd2kagWxUvuikt9/mKrCds
59csR5PFu7Z1Y8qXfIHcXQaq+fWDTG+KZZI1mmXHd+PXb8Z31a1467LaLa0p
PE0OJMCWnGS7qbPomzOXb4KzHTEvXxWYU3lep/J8ou+ySZGGEb1VdsHv3Ftj
EuXxLYLbtYpU9Xi0Sxi87gHz4PhTPo9UEwxLM5D7jRB8jknlPJB2T4GSzn3E
jqnbCyQ9zguAh3hvex//lp2EdouGpmZtzOK7lKi5j7n/zwAJ/OWdIr51vZry
6z/4zVOxGZp3WRo7TmH4WsVnN+H3xW1HeZqWo1zf3Txy9ffbVPo0A8amtr1f
LHflH9KI/6ntZfvLeDoaHTadyR+Dpfm9//37z6pFD5oNMshBl/5V4fjxZwTf
++ryaojPrtbiyvZBGi7pMrP/RcpHRXur9X/QDWfhhu7woYsV/6+rf/wNCunP
tP4SGnhYr/BN+jLd0llW+DdOTleSffigUUdHqqtdxevwW3UFQfbp/7z4xe/i
tmtPvx8018bUVzzRhXTF6vl0eXUrL5tLueqLZtorH+lWsfotfXO6iyh6Etce
0aUspOLqi6o+tleliovG8vyyJXEj/dP3sxttLp9LujTKn+L2OuqX7wsMN1fb
BI2Gm+bmpgRWm4ff12Gxwfg2BZ5IvRd2nYvLu9fNxdubD1dvGKr70lA3wlCs
jJuLb9sr/473G+GvIyoGXP3t5veP9ZWmybK53bm5aC9ZxuJ+yfqqynVS1hfl
iLt3yWno6sk4KfPVvr5fCS2KUVMr4o45+izdV3VqaPXiSsj2FYZ0oZ64VWj1
5n18aPp0F2tz/9Dx/iAxl446uB3ZV0m4Fjc3i0/8Sq+hnC9X+er7/irKw/Xx
ri5M78m29QVG9cz+9tdPGo3d/54nvZ7F65ez2BWziEBuLwaLL/w1DZ8TcUFc
cxVYe0dWe2NTfdOouD5KuCxdUpkLh8YPpyk/vzj+Y10iuvrb7wqe/CWmyXzv
Ajl6zJO4iU/cL/nz1yG2j+jiEYPaWkl78fsnuvlMXMRVo1d9PRPG/FRfgXb6
dkeYBmEvLmRrb/oUV1s38b2ef/+etFfLra42ZK4Zxo5sQDAorkyk7zfIsBO3
n6br1dP39GpVNtPXPk6izgrUi6/Op5uscLoo9PKWUDz0vSu0P1Lwz6vT9ep0
XzZ9YSbuaatbPD795uY4GxRQp5vo0iSM6R7YENCR0FWuv9a3ocafVsvfxPVb
qn1+weI32DVd0n2r4qLQ8GLOb85NKl7fmiwjMYrBl/6Vtlo/FdTrtrdJfZuu
uGH404NtHuc9FNeXto3SLKvt5YjJei0AJK4vwmw9tvu5+1k+fqXT+4jvXZ9/
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
RrRXoEnk/zfpB/fVpFwCAA==

-->

</rfc>

