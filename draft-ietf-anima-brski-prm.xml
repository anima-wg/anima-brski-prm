<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.2.3) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-brski-prm-20" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.28.1 -->
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-20"/>
    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>
    <date year="2025"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    <abstract>
      <?line 136?>

<t>This document defines enhancements to Bootstrapping Remote Secure Key Infrastructure (BRSKI, RFC8995) as BRSKI with Pledge in Responder Mode (BRSKI-PRM).
BRSKI-PRM supports the secure bootstrapping of devices, referred to as pledges, into a domain where direct communication with the registrar is either limited or not possible at all.
To facilitate interaction between a pledge and a domain registrar the registrar-agent is introduced as new component.
The registrar-agent supports the reversal of the interaction model from a pledge-initiated mode, to a pledge-responding mode, where the pledge is in a server role.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
This approach is agnostic to enrollment protocols that connect a domain registrar to a key infrastructure (e.g., domain Certification Authority).</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>
  </front>
  <middle>
    <?line 146?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated with a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>
      <t>Security information pertaining to the customer domain, specifically, the customer domain certificate, is exchanged and authenticated through the use of signed data objects, namely the voucher artifacts, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>
      <t>For the certificate enrollment of devices, BRSKI relies on Enrollment over Secure Transport (EST, <xref target="RFC7030"/>) to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and an EST server.</t>
      <t>BRSKI addresses scenarios in which a pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>
      <ul spacing="normal">
        <li>
          <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
        </li>
        <li>
          <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and a domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
        </li>
        <li>
          <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
        </li>
        <li>
          <t>allows the application of Registrar-Agent credentials to establish TLS connections to a domain registrar; these are different from the pledge IDevID credentials.</t>
        </li>
        <li>
          <t>also enables the usage of alternative transports, both IP-based and non-IP (e.g., Bluetooth-based or NFC-based communication), between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
        </li>
      </ul>
      <t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
      <t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>
      <t>There may be pledges that can support both modes, initiator and responder mode.
In these cases, BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="RFC9733"/> to allow for more bootstrapping flexibility.
Providing information about capabilities of BRSKI components like the pledge or registrar is handled as part of the discovery. BRSKI-PRM relies only on a minimum necessary set of capabilities for the interaction and leaves the definition of more advanced mechanisms allowing to signal specific capabilities to <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

<t>This document makes use of the terms defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>
      <dl>
        <dt>authenticated self-contained object:</dt>
        <dd>
          <t>Describes a data object, which is cryptographically bound to an end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
        </dd>
        <dt>CA:</dt>
        <dd>
          <t>Certification Authority.
An entity, which issues certificates and maintains certificate revocation information.</t>
        </dd>
        <dt>CMS:</dt>
        <dd>
          <t>Cryptographic Message Syntax, as defined in <xref target="RFC5652"/>.</t>
        </dd>
        <dt>Commissioning tool:</dt>
        <dd>
          <t>Tool to interact with devices to provide configuration data.</t>
        </dd>
        <dt>CSR:</dt>
        <dd>
          <t>Certificate Signing Request, as defined in <xref target="RFC2986"/>.</t>
        </dd>
        <dt>domain registrar:</dt>
        <dd>
          <t>An entity in the customer domain, which facilitates the interaction of a pledge or Registrar-Agent with a manufacturer service (MASA). 
It operates as BRSKI-EST server for the pledge when requesting vouchers and certificates and acts as the client BRSKI-MASA client when requesting vouchers from the MASA. This component was introduced in <xref target="RFC8995"/>.</t>
        </dd>
        <dt>EE:</dt>
        <dd>
          <t>End entity, as defined in <xref target="RFC9483"/>.
Typically, a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
        </dd>
        <dt>EE certificate:</dt>
        <dd>
          <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
        </dd>
        <dt>endpoint:</dt>
        <dd>
          <t>Term equivalent to resource in HTTP <xref target="RFC9110"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
        </dd>
        <dt>IDevID:</dt>
        <dd>
          <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>LDevID:</dt>
        <dd>
          <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>mTLS:</dt>
        <dd>
          <t>mutual Transport Layer Security, refers to mutual authenticated TLS as specified in <xref target="RFC8446"/>.</t>
        </dd>
        <dt>PER:</dt>
        <dd>
          <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
        </dd>
        <dt>POI:</dt>
        <dd>
          <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>POP:</dt>
        <dd>
          <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>PVR:</dt>
        <dd>
          <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
        </dd>
        <dt>RA:</dt>
        <dd>
          <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Registrar-Agent:</dt>
        <dd>
          <t>Component facilitating the data exchange between a pledge in responder mode and a domain registrar.</t>
        </dd>
        <dt>RVR:</dt>
        <dd>
          <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>
      <dl>
        <dt>BASE64(OCTETS):</dt>
        <dd>
          <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
        </dd>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
      <t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <tt>base64encodedvalue==</tt> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.
Note, base64-encoded values are mainly used for fields related to certificates like:
x5bag, x5c, agent-provided-proximity-registrar-cert, p10-csr</t>
    </section>
    <section anchor="scope-of-solution">
      <name>Scope of Solution</name>
      <section anchor="sup-env">
        <name>Supported Environments and Use Case Examples</name>
        <t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to a domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>
        <t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>
        <section anchor="building-automation">
          <name>Building Automation</name>
          <t>In building automation, a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>
          <t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>
          <t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>
        </section>
        <section anchor="infrastructure-isolation-policy">
          <name>Infrastructure Isolation Policy</name>
          <t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>
        </section>
        <section anchor="less-operational-security-in-the-target-domain">
          <name>Less Operational Security in the Target-Domain</name>
          <t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate an RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>
        </section>
      </section>
      <section anchor="potential-limitations">
        <name>Potential Limitations</name>
        <t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with one another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>
      </section>
    </section>
    <section anchor="req-sol">
      <name>Requirements Discussion and Mapping to BRSKI-PRM Functional Elements</name>
      <t>Based on the intended target environment described in <xref target="sup-env"/>, the following boundary conditions are derived to support bootstrapping of pledges in responder mode (acting as server):</t>
      <ul spacing="normal">
        <li>
          <t>To facilitate the communication between a pledge in responder mode and a registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
        </li>
        <li>
          <t>The security of communication between the Registrar-Agent and the pledge does not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
        </li>
        <li>
          <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
        </li>
        <li>
          <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition, the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
        </li>
        <li>
          <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <tt>proximity</tt> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
        </li>
      </ul>
      <t>At least the following properties are required for the voucher and enrollment processing:</t>
      <ul spacing="normal">
        <li>
          <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
        </li>
        <li>
          <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
        </li>
      </ul>
      <t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>
      <ul spacing="normal">
        <li>
          <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
        </li>
        <li>
          <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
        </li>
      </ul>
    </section>
    <section anchor="architecture">
      <name>Solution Architecture</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>For BRSKI-PRM, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>
        <t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/>.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>
        <t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>
        <t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>
        <t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>
        <t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>
        <t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>
        <ul spacing="normal">
          <li>
            <t>uses existing endpoints where the required functionality is provided.</t>
          </li>
          <li>
            <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
          </li>
          <li>
            <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
          </li>
        </ul>
        <figure anchor="uc2figure">
          <name>BRSKI-PRM architecture overview using Registrar-Agent</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,240 L 8,384" fill="none" stroke="black"/>
                <path d="M 80,240 L 80,384" fill="none" stroke="black"/>
                <path d="M 152,240 L 152,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,368 L 224,416" fill="none" stroke="black"/>
                <path d="M 256,240 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,240 L 328,336" fill="none" stroke="black"/>
                <path d="M 336,64 L 336,144" fill="none" stroke="black"/>
                <path d="M 376,152 L 376,232" fill="none" stroke="black"/>
                <path d="M 376,336 L 376,368" fill="none" stroke="black"/>
                <path d="M 424,240 L 424,336" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,416" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,144" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 8,240 L 80,240" fill="none" stroke="black"/>
                <path d="M 152,240 L 256,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 424,240" fill="none" stroke="black"/>
                <path d="M 88,304 L 144,304" fill="none" stroke="black"/>
                <path d="M 264,304 L 320,304" fill="none" stroke="black"/>
                <path d="M 152,336 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 224,368 L 424,368" fill="none" stroke="black"/>
                <path d="M 8,384 L 80,384" fill="none" stroke="black"/>
                <path d="M 224,416 L 424,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
                <polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
                <polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
                <polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
                <polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
                <polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="224" y="84">M</text>
                  <text x="280" y="84">anufacturer</text>
                  <text x="40" y="100">:</text>
                  <text x="224" y="100">A</text>
                  <text x="272" y="100">uthorized</text>
                  <text x="384" y="100">Ownership</text>
                  <text x="40" y="116">:</text>
                  <text x="224" y="116">S</text>
                  <text x="260" y="116">igning</text>
                  <text x="376" y="116">Tracker</text>
                  <text x="40" y="132">:</text>
                  <text x="224" y="132">A</text>
                  <text x="268" y="132">uthority</text>
                  <text x="40" y="148">:</text>
                  <text x="40" y="164">:</text>
                  <text x="40" y="180">:</text>
                  <text x="412" y="180">BRSKI-</text>
                  <text x="40" y="196">:</text>
                  <text x="404" y="196">MASA</text>
                  <text x="40" y="212">:</text>
                  <text x="248" y="212">...............................</text>
                  <text x="416" y="212">.........</text>
                  <text x="40" y="228">V</text>
                  <text x="128" y="228">.</text>
                  <text x="448" y="228">.</text>
                  <text x="128" y="244">.</text>
                  <text x="448" y="244">.</text>
                  <text x="128" y="260">.</text>
                  <text x="448" y="260">.</text>
                  <text x="44" y="276">Pledge</text>
                  <text x="116" y="276">BRSKI-</text>
                  <text x="204" y="276">Registrar-</text>
                  <text x="292" y="276">BRSKI-</text>
                  <text x="364" y="276">Domain</text>
                  <text x="448" y="276">.</text>
                  <text x="112" y="292">PRM</text>
                  <text x="184" y="292">Agent</text>
                  <text x="288" y="292">PRM</text>
                  <text x="376" y="292">Registrar</text>
                  <text x="448" y="292">.</text>
                  <text x="448" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="188" y="324">EE</text>
                  <text x="224" y="324">cert.</text>
                  <text x="356" y="324">EE</text>
                  <text x="392" y="324">cert.</text>
                  <text x="448" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="448" y="340">.</text>
                  <text x="44" y="356">IDevID</text>
                  <text x="128" y="356">.</text>
                  <text x="448" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="448" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="248" y="388">Key</text>
                  <text x="324" y="388">Infrastructure</text>
                  <text x="448" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="260" y="404">(e.g.,</text>
                  <text x="304" y="404">PKI</text>
                  <text x="336" y="404">CA)</text>
                  <text x="448" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="448" y="420">.</text>
                  <text x="288" y="436">.........................................</text>
                  <text x="260" y="452">Customer</text>
                  <text x="324" y="452">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t><xref target="uc2figure"/> shows the relations between the following main components:</t>
        <ul spacing="normal">
          <li>
            <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to a Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocols to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by a Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
              </li>
              <li>
                <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that a Registrar-Agent can request data required for bootstrapping the pledge.</t>
              </li>
              <li>
                <t>The pledge includes additional data in the PVR, which is provided and signed by a Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
              </li>
              <li>
                <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and a domain registrar.
This is for situations in which a domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  </t>
            <ul spacing="normal">
              <li>
                <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
              </li>
              <li>
                <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
              </li>
              <li>
                <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
              </li>
              <li>
                <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
              </li>
              <li>
                <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
          </li>
          <li>
            <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
              </li>
              <li>
                <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  </t>
            <ul spacing="normal">
              <li>
                <t>The default format for voucher artifacts (including voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
              </li>
              <li>
                <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="arch_nomadic">
        <name>Nomadic Connectivity</name>
        <t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the building automation use case mentioned in <xref target="building-automation"/>.</t>
        <figure anchor="uc3figure">
          <name>Registrar-Agent nomadic connectivity example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="464" viewBox="0 0 464 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 24,128 L 24,176" fill="none" stroke="black"/>
                <path d="M 96,128 L 96,176" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,64" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,448" fill="none" stroke="black"/>
                <path d="M 336,320 L 336,368" fill="none" stroke="black"/>
                <path d="M 384,72 L 384,312" fill="none" stroke="black"/>
                <path d="M 384,368 L 384,400" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,64" fill="none" stroke="black"/>
                <path d="M 432,320 L 432,368" fill="none" stroke="black"/>
                <path d="M 432,400 L 432,448" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 24,128 L 96,128" fill="none" stroke="black"/>
                <path d="M 104,160 L 184,160" fill="none" stroke="black"/>
                <path d="M 24,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 336,320 L 432,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 328,352" fill="none" stroke="black"/>
                <path d="M 336,368 L 432,368" fill="none" stroke="black"/>
                <path d="M 224,400 L 432,400" fill="none" stroke="black"/>
                <path d="M 224,448 L 432,448" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="392,312 380,306.4 380,317.6" fill="black" transform="rotate(90,384,312)"/>
                <polygon class="arrowhead" points="392,72 380,66.4 380,77.6" fill="black" transform="rotate(270,384,72)"/>
                <polygon class="arrowhead" points="336,352 324,346.4 324,357.6" fill="black" transform="rotate(0,328,352)"/>
                <polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
                <polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
                <polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="164" y="100">........................................</text>
                  <text x="8" y="116">.</text>
                  <text x="40" y="116">v</text>
                  <text x="320" y="116">.</text>
                  <text x="8" y="132">.</text>
                  <text x="248" y="132">.-.-.-.-.-.-.-.</text>
                  <text x="320" y="132">.</text>
                  <text x="8" y="148">.</text>
                  <text x="144" y="148">BRSKI-PRM</text>
                  <text x="192" y="148">:</text>
                  <text x="244" y="148">Registrar-</text>
                  <text x="304" y="148">:</text>
                  <text x="320" y="148">.</text>
                  <text x="8" y="164">.</text>
                  <text x="60" y="164">Pledge</text>
                  <text x="192" y="164">:</text>
                  <text x="224" y="164">Agent</text>
                  <text x="304" y="164">:</text>
                  <text x="320" y="164">.</text>
                  <text x="8" y="180">.</text>
                  <text x="116" y="180">L2</text>
                  <text x="140" y="180">or</text>
                  <text x="164" y="180">L3</text>
                  <text x="248" y="180">:-.-.-.-.-.-.-:</text>
                  <text x="320" y="180">.</text>
                  <text x="420" y="180">BRSKI-</text>
                  <text x="8" y="196">.</text>
                  <text x="140" y="196">connectivity</text>
                  <text x="216" y="196">^</text>
                  <text x="320" y="196">.</text>
                  <text x="412" y="196">MASA</text>
                  <text x="164" y="212">..........................!.............</text>
                  <text x="52" y="228">Pledge</text>
                  <text x="132" y="228">Installation</text>
                  <text x="216" y="228">!</text>
                  <text x="60" y="244">Location</text>
                  <text x="216" y="244">!</text>
                  <text x="256" y="244">Nomadic</text>
                  <text x="216" y="260">!</text>
                  <text x="276" y="260">connectivity</text>
                  <text x="216" y="276">!</text>
                  <text x="252" y="292">...........!....................</text>
                  <text x="424" y="292">.........</text>
                  <text x="128" y="308">.</text>
                  <text x="216" y="308">v</text>
                  <text x="456" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="208" y="324">.-.-.-.-.-.-.-.</text>
                  <text x="300" y="324">BRSKI-</text>
                  <text x="456" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="152" y="340">:</text>
                  <text x="204" y="340">Registrar-</text>
                  <text x="264" y="340">:</text>
                  <text x="296" y="340">PRM</text>
                  <text x="372" y="340">Domain</text>
                  <text x="456" y="340">.</text>
                  <text x="128" y="356">.</text>
                  <text x="152" y="356">:</text>
                  <text x="184" y="356">Agent</text>
                  <text x="264" y="356">:</text>
                  <text x="384" y="356">Registrar</text>
                  <text x="456" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="208" y="372">:-.-.-.-.-.-.-:</text>
                  <text x="456" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="456" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="456" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="248" y="420">Key</text>
                  <text x="324" y="420">Infrastructure</text>
                  <text x="456" y="420">.</text>
                  <text x="128" y="436">.</text>
                  <text x="260" y="436">(e.g.,</text>
                  <text x="304" y="436">PKI</text>
                  <text x="336" y="436">CA)</text>
                  <text x="456" y="436">.</text>
                  <text x="128" y="452">.</text>
                  <text x="456" y="452">.</text>
                  <text x="292" y="468">..........................................</text>
                  <text x="260" y="484">Customer</text>
                  <text x="324" y="484">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                          ^
........................................       |
.   v                                  .       |
. +--------+           .-.-.-.-.-.-.-. .       |
. |        | BRSKI-PRM : Registrar-  : .       |
. | Pledge |<--------->: Agent       : .       |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .       | BRSKI-
.          connectivity   ^            .       | MASA
..........................!.............       |
   Pledge Installation    !                    |
   Location               ! Nomadic            |
                          ! connectivity       |
                          !                    |
               ...........!....................|.........
               .          v                    v        .
               .  .-.-.-.-.-.-.-. BRSKI- +-----------+  .
               .  : Registrar-  :  PRM   | Domain    |  .
               .  : Agent       :<------>| Registrar |  .
               .  :-.-.-.-.-.-.-:        +-----+-----+  .
               .                               |        .
               .           +-------------------+-----+  .
               .           | Key Infrastructure      |  .
               .           | (e.g., PKI CA)          |  .
               .           +-------------------------+  .
               ..........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>BRSKI-PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>
        <ol spacing="normal" type="1"><li>
            <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
          </li>
        </ol>
        <t>Variations of this setup include cases where the Registrar-Agent uses for example, WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>
      </section>
      <section anchor="colo-regagt">
        <name>Co-located Registrar-Agent and Domain Registrar</name>
        <t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously interact with a domain registrar during onboarding, through discovery, voucher exchange, and enrollment.
This may increase the load on the domain registrar, specifically, if a larger number of pledges onboards simultaneously.</t>
        <figure anchor="uc4figure">
          <name>Registrar-Agent integrated into Domain Registrar example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="464" viewBox="0 0 464 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,160 L 8,208" fill="none" stroke="black"/>
                <path d="M 80,160 L 80,208" fill="none" stroke="black"/>
                <path d="M 200,32 L 200,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 216,288" fill="none" stroke="black"/>
                <path d="M 368,72 L 368,136" fill="none" stroke="black"/>
                <path d="M 368,224 L 368,256" fill="none" stroke="black"/>
                <path d="M 416,144 L 416,224" fill="none" stroke="black"/>
                <path d="M 416,256 L 416,288" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,64" fill="none" stroke="black"/>
                <path d="M 200,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 200,64 L 424,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 416,144" fill="none" stroke="black"/>
                <path d="M 8,160 L 80,160" fill="none" stroke="black"/>
                <path d="M 88,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 8,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 208,224 L 416,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 416,256" fill="none" stroke="black"/>
                <path d="M 216,288 L 416,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
                <polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
                <g class="text">
                  <text x="48" y="52">.....</text>
                  <text x="92" y="52">Drop</text>
                  <text x="132" y="52">Ship</text>
                  <text x="176" y="52">.....</text>
                  <text x="236" y="52">Vendor</text>
                  <text x="296" y="52">Service</text>
                  <text x="32" y="68">:</text>
                  <text x="32" y="84">:</text>
                  <text x="32" y="100">:</text>
                  <text x="420" y="100">BRSKI-MASA</text>
                  <text x="32" y="116">:</text>
                  <text x="240" y="116">...............................</text>
                  <text x="408" y="116">.........</text>
                  <text x="32" y="132">:</text>
                  <text x="120" y="132">.</text>
                  <text x="440" y="132">.</text>
                  <text x="32" y="148">v</text>
                  <text x="120" y="148">.</text>
                  <text x="440" y="148">.</text>
                  <text x="120" y="164">.</text>
                  <text x="156" y="164">BRSKI-</text>
                  <text x="268" y="164">..............</text>
                  <text x="440" y="164">.</text>
                  <text x="120" y="180">.</text>
                  <text x="152" y="180">PRM</text>
                  <text x="216" y="180">.</text>
                  <text x="268" y="180">Registrar-</text>
                  <text x="320" y="180">.</text>
                  <text x="356" y="180">Domain</text>
                  <text x="440" y="180">.</text>
                  <text x="44" y="196">Pledge</text>
                  <text x="216" y="196">.</text>
                  <text x="248" y="196">Agent</text>
                  <text x="320" y="196">.</text>
                  <text x="368" y="196">Registrar</text>
                  <text x="440" y="196">.</text>
                  <text x="100" y="212">L2</text>
                  <text x="124" y="212">or</text>
                  <text x="148" y="212">L3</text>
                  <text x="268" y="212">..............</text>
                  <text x="440" y="212">.</text>
                  <text x="140" y="228">connectivity</text>
                  <text x="440" y="228">.</text>
                  <text x="120" y="244">.</text>
                  <text x="440" y="244">.</text>
                  <text x="120" y="260">.</text>
                  <text x="440" y="260">.</text>
                  <text x="120" y="276">.</text>
                  <text x="240" y="276">Key</text>
                  <text x="316" y="276">Infrastructure</text>
                  <text x="440" y="276">.</text>
                  <text x="120" y="292">.</text>
                  <text x="440" y="292">.</text>
                  <text x="280" y="308">.........................................</text>
                  <text x="252" y="324">Customer</text>
                  <text x="316" y="324">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         | BRSKI-MASA
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    . BRSKI-   |..............           |  .
 |        |    .  PRM     |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of stand-alone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>
      </section>
      <section anchor="agt_prx">
        <name>Agent Proximity Assertion</name>
        <t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicates via a Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <tt>agent-proximity</tt>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>
        <t>In BRSKI, the pledge verifies POP of the registrar end-entity (EE) credentials via the TLS handshake and pins that public key as the <tt>proximity-registrar-cert</tt> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>
        <t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>
        <t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>
      </section>
    </section>
    <section anchor="system-components">
      <name>System Components</name>
      <section anchor="agent_component">
        <name>Registrar-Agent</name>
        <t>The Registrar-Agent uses its own EE certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.</t>
        <t>The Registrar-Agent EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference within agent-signed data objects as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>
        <t>The SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate in agent-signed data objects to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>
        <t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short-lived Registrar-Agent EE certificates in the range of days or weeks.
This is to address the assumed nature of stand-alone Registrar-Agents as nomadic devices (see <xref target="arch_nomadic"/>) and to avoid potential misuse as outlined in <xref target="sec_cons_reg-agt"/>.</t>
        <t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>
        <t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow for the discovery of pledges by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an (out-of-band) interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number data record.</t>
        <t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before the interaction with a pledge:</t>
        <ul spacing="normal">
          <li>
            <t>Registrar-Agent EE certificate and corresponding private key: own operational credentials to authenticate and sign agent-signed data</t>
          </li>
          <li>
            <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
          </li>
          <li>
            <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
          </li>
        </ul>
        <t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.
In case the registrar-agent does not have synchronized time, it may not be able to verify the registrar EE certificate during the optional TLS handshake.
As the registrar-agent is recommended to utilize short-lived certificates in <xref target="sec_cons_reg-agt"/>, a registrar-agent may use the valid from time of its short-lived certificate for time synchronization.</t>
        <t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge manufacturer/vendor to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
        <section anchor="discovery_uc2_reg">
          <name>Discovery of the Registrar</name>
          <t>While the Registrar-Agent requires an IP address of a domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>
          <t>Moreover, the discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence that discovery is not applicable.</t>
          <t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
For further discussion, see <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
        </section>
        <section anchor="discovery_uc2_ppa">
          <name>Discovery of the Pledge</name>
          <t>The discovery of the pledge by the Registrar-Agent in the context of this document describes the minimum discovery approach that <bcp14>MUST</bcp14> be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS, is discussed in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref section="9" sectionFormat="of" target="RFC6762"/> provides support for conflict resolution in situations when a DNS-SD with mDNS responder receives an mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>
          <t>The pledge constructs a Service Instance Name based on device local information (manufacturer/vendor name and serial number), which results in <tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>.
The product-serial-number composition is manufacturer-dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance.
To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>
          <t>Note that the service name definition is not fully inline with the naming recommendation of <xref target="RFC6763"/>.
However, the definition allows to discover specific instances of a pledge.</t>
          <t>The <tt>_brski-pledge._tcp</tt> service, however, targets machine-to-machine discovery.</t>
          <t>For discovery the Registrar-Agent <bcp14>MUST</bcp14> use</t>
          <ul spacing="normal">
            <li>
              <t><tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>, to discover a specific pledge, e.g., when connected to a local network</t>
            </li>
            <li>
              <t><tt>_brski-pledge._tcp.local</tt> to get a list of pledges to be bootstrapped</t>
            </li>
          </ul>
          <t>if it does not support a more general discovery such as defined in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>When supporting different options for discovery, as outlined in <xref target="I-D.ietf-anima-brski-discovery"/>, a manufacturer may support configuration of preferred options.</t>
          <t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer supports this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>
          <t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet, network connectivity can be provided, e.g., via a switch to an operational network or to a specific VLAN for bootstrapping, depending on an operators security policy.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.draft-ietf-emu-eap-arpa"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>
        </section>
      </section>
      <section anchor="pledge_component">
        <name>Pledge in Responder Mode</name>
        <t>In BRSKI-PRM, the pledge is triggered by a Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>
        <t>To enable interaction as responder with a Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints "tpvr", "tper", "svr", "scac", and "ser" defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> URI path.
The optional endpoint "qps" <bcp14>SHOULD</bcp14> be supported.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>
        <table anchor="pledge_ep_table">
          <name>Well-Known Endpoints on a Pledge in Responder Mode</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">
                <xref target="tpvr"/></td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">
                <xref target="tper"/></td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply Voucher to Pledge</td>
              <td align="left">
                <xref target="voucher"/></td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA Certificates to Pledge</td>
              <td align="left">
                <xref target="cacerts"/></td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to Pledge</td>
              <td align="left">
                <xref target="enroll_response"/></td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query Pledge Status</td>
              <td align="left">
                <xref target="query"/></td>
            </tr>
          </tbody>
        </table>
        <t>HTTP(S) uses the Host header field (or :authority in HTTP/2) to allow for name-based virtual hosting as explained in <xref section="7.2" sectionFormat="of" target="RFC9110"/>.
This header field is mandatory, and so a compliant HTTP(S) client is going to insert it, which may be just an IP address.
In the absence of a security policy the pledge <bcp14>MUST</bcp14> respond to all requests regardless of the Host header field provided by the client (i.e., ignore it).
A security policy  may include a rate limiting for requests to avoid susceptibility of the pledge to overload.
Note that there is no requirement for the pledge to operate its BRSKI-PRM service on port numbers 80 or 443, so there is no reason for name-based virtual hosting.</t>
        <t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <tt>http://pledge.example.com/.well-known/brski/tpvr</tt>, it sets the Host header field to <tt>pledge.example.com</tt> and the absolute path <tt>/.well-known/brski/tpbr</tt>.
In practice, however, the pledge is usually known by a <tt>.local</tt> hostname or only its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>
        <t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the voucher-requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>
        <section anchor="pledge-with-combined-functionality">
          <name>Pledge with Combined Functionality</name>
          <t>Pledges may support both initiator and responder mode.</t>
          <t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-like attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>
          <t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>
        </section>
      </section>
      <section anchor="registrar_component">
        <name>Domain Registrar</name>
        <t>The domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>
        <table anchor="registrar_ep_table">
          <name>Additional Well-Known Endpoints on a BRSKI-PRM Registrar</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to Registrar</td>
              <td align="left">
                <xref target="per"/></td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain CA Certificates</td>
              <td align="left">
                <xref target="obtain_cacerts"/></td>
            </tr>
          </tbody>
        </table>
        <t>For the supply of the PVR to the registrar, the pledge uses the endpoint "requestvoucher", defined in <xref target="RFC8995"/> as described in <xref target="pvr"/>.</t>
        <t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).</t>
        <t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, a domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>
        <t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>
        <t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>
        <section anchor="domain-registrar-with-combined-functionality">
          <name>Domain Registrar with Combined Functionality</name>
          <t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>
          <t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment that the connecting client is a Registrar-Agent.</t>
          <t>The registrar <bcp14>MAY</bcp14> be configured to only accept certain Registrar-Agents, which authenticate using the Registrar-Agent EE certificate.</t>
          <t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>
        </section>
      </section>
      <section anchor="masa">
        <name>MASA</name>
        <t>The Manufacturer Authorized Signing Authority (MASA) is a vendor service that generates and signs voucher artifacts for pledges by the same vendor.
When these pledges support BRSKI-PRM, the MASA needs to implement the following functionality in addition to BRSKI <xref target="RFC8995"/>.</t>
        <t>A MASA for pledges in responder mode <bcp14>MUST</bcp14> support the voucher format defined in <xref target="I-D.ietf-anima-jws-voucher"/> to parse and process JWS-signed voucher-request artifacts and generate JWS-signed voucher artifacts.</t>
        <t>Further, a MASA for pledges in responder mode <bcp14>MUST</bcp14> support the Agent Proximity Assertion (<xref target="agt_prx"/>) through the validation steps defined in <xref target="masa_interaction"/> based on the Pledge Voucher-Request (PVR) and Registrar Voucher-Request (RVR) artifact fields defined in <xref target="pvr_artifact"/> and <xref target="rvr_artifact"/>, respectively.</t>
      </section>
    </section>
    <section anchor="exchanges">
      <name>Exchanges and Artifacts</name>
      <t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>
      <t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>
      <t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>
      <figure anchor="exchangesfig_uc2_all">
        <name>Overview pledge-responder-mode exchanges</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
              <path d="M 16,88 L 16,192" fill="none" stroke="black"/>
              <path d="M 16,256 L 16,320" fill="none" stroke="black"/>
              <path d="M 16,384 L 16,448" fill="none" stroke="black"/>
              <path d="M 16,512 L 16,800" fill="none" stroke="black"/>
              <path d="M 16,864 L 16,960" fill="none" stroke="black"/>
              <path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
              <path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
              <path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
              <path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
              <path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
              <path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
              <path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
              <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
              <path d="M 168,88 L 168,192" fill="none" stroke="black"/>
              <path d="M 168,256 L 168,320" fill="none" stroke="black"/>
              <path d="M 168,384 L 168,448" fill="none" stroke="black"/>
              <path d="M 168,512 L 168,800" fill="none" stroke="black"/>
              <path d="M 168,864 L 168,960" fill="none" stroke="black"/>
              <path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
              <path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
              <path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
              <path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
              <path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
              <path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
              <path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
              <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
              <path d="M 312,88 L 312,192" fill="none" stroke="black"/>
              <path d="M 312,256 L 312,320" fill="none" stroke="black"/>
              <path d="M 312,384 L 312,448" fill="none" stroke="black"/>
              <path d="M 312,512 L 312,544" fill="none" stroke="black"/>
              <path d="M 312,592 L 312,624" fill="none" stroke="black"/>
              <path d="M 312,656 L 312,800" fill="none" stroke="black"/>
              <path d="M 312,864 L 312,960" fill="none" stroke="black"/>
              <path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
              <path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
              <path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
              <path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
              <path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
              <path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
              <path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
              <path d="M 456,88 L 456,192" fill="none" stroke="black"/>
              <path d="M 456,256 L 456,320" fill="none" stroke="black"/>
              <path d="M 456,384 L 456,448" fill="none" stroke="black"/>
              <path d="M 456,512 L 456,664" fill="none" stroke="black"/>
              <path d="M 456,784 L 456,800" fill="none" stroke="black"/>
              <path d="M 456,864 L 456,960" fill="none" stroke="black"/>
              <path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
              <path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
              <path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
              <path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
              <path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
              <path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
              <path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
              <path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
              <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
              <path d="M 560,88 L 560,192" fill="none" stroke="black"/>
              <path d="M 560,256 L 560,320" fill="none" stroke="black"/>
              <path d="M 560,384 L 560,448" fill="none" stroke="black"/>
              <path d="M 560,512 L 560,704" fill="none" stroke="black"/>
              <path d="M 560,752 L 560,800" fill="none" stroke="black"/>
              <path d="M 560,864 L 560,960" fill="none" stroke="black"/>
              <path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
              <path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
              <path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
              <path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
              <path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
              <path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
              <path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
              <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
              <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
              <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
              <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
              <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
              <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
              <path d="M 24,160 L 160,160" fill="none" stroke="black"/>
              <path d="M 24,176 L 160,176" fill="none" stroke="black"/>
              <path d="M 24,272 L 56,272" fill="none" stroke="black"/>
              <path d="M 128,272 L 160,272" fill="none" stroke="black"/>
              <path d="M 24,288 L 72,288" fill="none" stroke="black"/>
              <path d="M 112,288 L 160,288" fill="none" stroke="black"/>
              <path d="M 24,304 L 80,304" fill="none" stroke="black"/>
              <path d="M 112,304 L 160,304" fill="none" stroke="black"/>
              <path d="M 24,400 L 56,400" fill="none" stroke="black"/>
              <path d="M 128,400 L 160,400" fill="none" stroke="black"/>
              <path d="M 24,416 L 72,416" fill="none" stroke="black"/>
              <path d="M 112,416 L 160,416" fill="none" stroke="black"/>
              <path d="M 24,432 L 80,432" fill="none" stroke="black"/>
              <path d="M 112,432 L 160,432" fill="none" stroke="black"/>
              <path d="M 176,528 L 216,528" fill="none" stroke="black"/>
              <path d="M 256,528 L 304,528" fill="none" stroke="black"/>
              <path d="M 176,608 L 224,608" fill="none" stroke="black"/>
              <path d="M 256,608 L 304,608" fill="none" stroke="black"/>
              <path d="M 320,672 L 416,672" fill="none" stroke="black"/>
              <path d="M 456,672 L 552,672" fill="none" stroke="black"/>
              <path d="M 320,688 L 424,688" fill="none" stroke="black"/>
              <path d="M 456,688 L 552,688" fill="none" stroke="black"/>
              <path d="M 320,768 L 408,768" fill="none" stroke="black"/>
              <path d="M 472,768 L 552,768" fill="none" stroke="black"/>
              <path d="M 176,784 L 208,784" fill="none" stroke="black"/>
              <path d="M 280,784 L 304,784" fill="none" stroke="black"/>
              <path d="M 176,880 L 216,880" fill="none" stroke="black"/>
              <path d="M 256,880 L 304,880" fill="none" stroke="black"/>
              <path d="M 176,896 L 224,896" fill="none" stroke="black"/>
              <path d="M 256,896 L 304,896" fill="none" stroke="black"/>
              <path d="M 320,912 L 344,912" fill="none" stroke="black"/>
              <path d="M 424,912 L 448,912" fill="none" stroke="black"/>
              <path d="M 320,928 L 336,928" fill="none" stroke="black"/>
              <path d="M 176,944 L 192,944" fill="none" stroke="black"/>
              <path d="M 288,944 L 304,944" fill="none" stroke="black"/>
              <path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
              <path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
              <path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
              <path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
              <path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
              <path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
              <path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
              <path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
              <path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
              <path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
              <path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
              <path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
              <path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
              <path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
              <path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
              <path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
              <path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
              <path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
              <path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
              <path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
              <path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
              <path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
              <path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
              <path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
              <path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
              <path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
              <path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
              <path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
              <path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
              <path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
              <path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
              <path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
              <path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
              <path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
              <path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
              <path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
              <path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
              <path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
              <path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
              <path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
              <polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
              <polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
              <polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
              <polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
              <polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
              <polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
              <polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
              <polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
              <polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
              <polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
              <polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
              <polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
              <polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
              <polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
              <polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
              <polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
              <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
              <polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
              <polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
              <polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
              <polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
              <polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
              <polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
              <polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
              <polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
              <polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
              <polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
              <polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
              <polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
              <polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
              <polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
              <polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
              <polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
              <polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
              <polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
              <polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
              <polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
              <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
              <polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
              <polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
              <polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
              <polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
              <polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
              <polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
              <polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
              <polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
              <polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
              <polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
              <polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
              <polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
              <polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
              <g class="text">
                <text x="44" y="52">Pledge</text>
                <text x="172" y="52">Registrar-</text>
                <text x="308" y="52">Domain</text>
                <text x="432" y="52">Key</text>
                <text x="540" y="52">MASA</text>
                <text x="168" y="68">Agent</text>
                <text x="312" y="68">Registrar</text>
                <text x="436" y="68">Infra.</text>
                <text x="516" y="100">Internet</text>
                <text x="92" y="116">discover</text>
                <text x="92" y="132">pledge</text>
                <text x="68" y="148">mDNS</text>
                <text x="112" y="148">query</text>
                <text x="16" y="212">~</text>
                <text x="168" y="212">~</text>
                <text x="312" y="212">~</text>
                <text x="456" y="212">~</text>
                <text x="560" y="212">~</text>
                <text x="16" y="228">(1)</text>
                <text x="64" y="228">Trigger</text>
                <text x="124" y="228">Pledge</text>
                <text x="216" y="228">Voucher-Request</text>
                <text x="16" y="244">~</text>
                <text x="168" y="244">~</text>
                <text x="312" y="244">~</text>
                <text x="456" y="244">~</text>
                <text x="560" y="244">~</text>
                <text x="76" y="276">opt.</text>
                <text x="112" y="276">TLS</text>
                <text x="92" y="292">tPVR</text>
                <text x="96" y="308">PVR</text>
                <text x="16" y="340">~</text>
                <text x="168" y="340">~</text>
                <text x="312" y="340">~</text>
                <text x="456" y="340">~</text>
                <text x="560" y="340">~</text>
                <text x="16" y="356">(2)</text>
                <text x="64" y="356">Trigger</text>
                <text x="124" y="356">Pledge</text>
                <text x="212" y="356">Enroll-Request</text>
                <text x="16" y="372">~</text>
                <text x="168" y="372">~</text>
                <text x="312" y="372">~</text>
                <text x="456" y="372">~</text>
                <text x="560" y="372">~</text>
                <text x="76" y="404">opt.</text>
                <text x="112" y="404">TLS</text>
                <text x="92" y="420">tPER</text>
                <text x="96" y="436">PER</text>
                <text x="16" y="468">~</text>
                <text x="168" y="468">~</text>
                <text x="312" y="468">~</text>
                <text x="456" y="468">~</text>
                <text x="560" y="468">~</text>
                <text x="16" y="484">(3)</text>
                <text x="60" y="484">Supply</text>
                <text x="104" y="484">PVR</text>
                <text x="132" y="484">to</text>
                <text x="184" y="484">Registrar</text>
                <text x="268" y="484">(including</text>
                <text x="332" y="484">MASA</text>
                <text x="404" y="484">interaction)</text>
                <text x="16" y="500">~</text>
                <text x="168" y="500">~</text>
                <text x="312" y="500">~</text>
                <text x="456" y="500">~</text>
                <text x="560" y="500">~</text>
                <text x="236" y="532">mTLS</text>
                <text x="308" y="564">[Registrar-Agent</text>
                <text x="308" y="580">authenticated&amp;authorized?]</text>
                <text x="240" y="612">PVR</text>
                <text x="280" y="644">[accept</text>
                <text x="348" y="644">device?]</text>
                <text x="436" y="676">mTLS</text>
                <text x="440" y="692">RVR</text>
                <text x="456" y="708">~</text>
                <text x="460" y="724">[extract</text>
                <text x="536" y="724">DomainID]</text>
                <text x="456" y="740">[update</text>
                <text x="532" y="740">audit-log]</text>
                <text x="456" y="756">~</text>
                <text x="440" y="772">Voucher</text>
                <text x="244" y="788">Voucher'</text>
                <text x="16" y="820">~</text>
                <text x="168" y="820">~</text>
                <text x="312" y="820">~</text>
                <text x="456" y="820">~</text>
                <text x="560" y="820">~</text>
                <text x="16" y="836">(4)</text>
                <text x="60" y="836">Supply</text>
                <text x="104" y="836">PER</text>
                <text x="132" y="836">to</text>
                <text x="184" y="836">Registrar</text>
                <text x="268" y="836">(including</text>
                <text x="328" y="836">Key</text>
                <text x="404" y="836">Infrastructure</text>
                <text x="516" y="836">interaction)</text>
                <text x="16" y="852">~</text>
                <text x="168" y="852">~</text>
                <text x="312" y="852">~</text>
                <text x="456" y="852">~</text>
                <text x="560" y="852">~</text>
                <text x="236" y="884">mTLS</text>
                <text x="240" y="900">PER</text>
                <text x="384" y="916">[Request]</text>
                <text x="396" y="932">[Certificate]-</text>
                <text x="240" y="948">Enroll-Resp</text>
                <text x="16" y="980">~</text>
                <text x="168" y="980">~</text>
                <text x="312" y="980">~</text>
                <text x="456" y="980">~</text>
                <text x="560" y="980">~</text>
                <text x="16" y="996">(5)</text>
                <text x="60" y="996">Obtain</text>
                <text x="100" y="996">CA</text>
                <text x="164" y="996">Certificates</text>
                <text x="16" y="1012">~</text>
                <text x="168" y="1012">~</text>
                <text x="312" y="1012">~</text>
                <text x="456" y="1012">~</text>
                <text x="560" y="1012">~</text>
                <text x="236" y="1044">mTLS</text>
                <text x="240" y="1060">caCerts</text>
                <text x="16" y="1092">~</text>
                <text x="168" y="1092">~</text>
                <text x="312" y="1092">~</text>
                <text x="456" y="1092">~</text>
                <text x="560" y="1092">~</text>
                <text x="16" y="1108">(6)</text>
                <text x="60" y="1108">Supply</text>
                <text x="120" y="1108">Voucher</text>
                <text x="164" y="1108">to</text>
                <text x="204" y="1108">Pledge</text>
                <text x="16" y="1124">~</text>
                <text x="168" y="1124">~</text>
                <text x="312" y="1124">~</text>
                <text x="456" y="1124">~</text>
                <text x="560" y="1124">~</text>
                <text x="76" y="1156">opt.</text>
                <text x="112" y="1156">TLS</text>
                <text x="100" y="1172">Voucher'</text>
                <text x="96" y="1188">vStatus</text>
                <text x="16" y="1220">~</text>
                <text x="168" y="1220">~</text>
                <text x="312" y="1220">~</text>
                <text x="456" y="1220">~</text>
                <text x="560" y="1220">~</text>
                <text x="16" y="1236">(7)</text>
                <text x="60" y="1236">Supply</text>
                <text x="100" y="1236">CA</text>
                <text x="164" y="1236">Certificates</text>
                <text x="228" y="1236">to</text>
                <text x="268" y="1236">Pledge</text>
                <text x="16" y="1252">~</text>
                <text x="168" y="1252">~</text>
                <text x="312" y="1252">~</text>
                <text x="456" y="1252">~</text>
                <text x="560" y="1252">~</text>
                <text x="76" y="1284">opt.</text>
                <text x="112" y="1284">TLS</text>
                <text x="96" y="1300">caCerts</text>
                <text x="16" y="1332">~</text>
                <text x="168" y="1332">~</text>
                <text x="312" y="1332">~</text>
                <text x="456" y="1332">~</text>
                <text x="560" y="1332">~</text>
                <text x="16" y="1348">(8)</text>
                <text x="60" y="1348">Supply</text>
                <text x="152" y="1348">Enroll-Response</text>
                <text x="228" y="1348">to</text>
                <text x="268" y="1348">Pledge</text>
                <text x="16" y="1364">~</text>
                <text x="168" y="1364">~</text>
                <text x="312" y="1364">~</text>
                <text x="456" y="1364">~</text>
                <text x="560" y="1364">~</text>
                <text x="76" y="1396">opt.</text>
                <text x="112" y="1396">TLS</text>
                <text x="96" y="1412">Enroll-Resp</text>
                <text x="88" y="1428">eStatus</text>
                <text x="16" y="1460">~</text>
                <text x="168" y="1460">~</text>
                <text x="312" y="1460">~</text>
                <text x="456" y="1460">~</text>
                <text x="560" y="1460">~</text>
                <text x="16" y="1476">(9)</text>
                <text x="64" y="1476">Voucher</text>
                <text x="124" y="1476">Status</text>
                <text x="192" y="1476">Telemetry</text>
                <text x="276" y="1476">(including</text>
                <text x="352" y="1476">backend</text>
                <text x="436" y="1476">interaction)</text>
                <text x="16" y="1492">~</text>
                <text x="168" y="1492">~</text>
                <text x="312" y="1492">~</text>
                <text x="456" y="1492">~</text>
                <text x="560" y="1492">~</text>
                <text x="236" y="1524">mTLS</text>
                <text x="240" y="1540">vStatus</text>
                <text x="436" y="1556">mTLS</text>
                <text x="368" y="1572">req</text>
                <text x="412" y="1572">device</text>
                <text x="480" y="1572">audit-log</text>
                <text x="396" y="1588">device</text>
                <text x="464" y="1588">audit-log</text>
                <text x="264" y="1620">[verify</text>
                <text x="340" y="1620">audit-log]</text>
                <text x="312" y="1636">|</text>
                <text x="16" y="1652">~</text>
                <text x="168" y="1652">~</text>
                <text x="312" y="1652">~</text>
                <text x="456" y="1652">~</text>
                <text x="560" y="1652">~</text>
                <text x="20" y="1668">(10)</text>
                <text x="68" y="1668">Enroll</text>
                <text x="124" y="1668">Status</text>
                <text x="192" y="1668">Telemetry</text>
                <text x="16" y="1684">~</text>
                <text x="168" y="1684">~</text>
                <text x="312" y="1684">~</text>
                <text x="456" y="1684">~</text>
                <text x="560" y="1684">~</text>
                <text x="236" y="1716">mTLS</text>
                <text x="240" y="1732">eStatus</text>
                <text x="16" y="1764">~</text>
                <text x="168" y="1764">~</text>
                <text x="312" y="1764">~</text>
                <text x="456" y="1764">~</text>
                <text x="560" y="1764">~</text>
                <text x="20" y="1780">(11)</text>
                <text x="64" y="1780">Query</text>
                <text x="116" y="1780">Pledge</text>
                <text x="172" y="1780">Status</text>
                <text x="16" y="1796">~</text>
                <text x="168" y="1796">~</text>
                <text x="312" y="1796">~</text>
                <text x="456" y="1796">~</text>
                <text x="560" y="1796">~</text>
                <text x="76" y="1828">opt.</text>
                <text x="112" y="1828">TLS</text>
                <text x="96" y="1844">tStatus</text>
                <text x="96" y="1860">pStatus</text>
                <text x="16" y="1892">~</text>
                <text x="168" y="1892">~</text>
                <text x="312" y="1892">~</text>
                <text x="456" y="1892">~</text>
                <text x="560" y="1892">~</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
        </artset>
      </figure>
      <t>The following subsections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>
      <ol spacing="normal" type="1"><li>
          <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
        </li>
        <li>
          <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
        </li>
        <li>
          <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
        </li>
        <li>
          <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
        </li>
        <li>
          <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
        </li>
        <li>
          <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
        </li>
      </ol>
      <section anchor="tpvr">
        <name>Trigger Pledge Voucher-Request</name>
        <t>The Registrar-Agent begins the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide transport security, e.g., privacy and peer authentication, for the exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_1">
          <name>PVR acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(1)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="216" y="132">Voucher-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPVR</text>
                  <text x="96" y="212">PVR</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent triggers the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tpvr</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PVR, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).
The pledge will take the last received tPVR for the provisional accept of the received registrar EE certificate, if it does not have the capability to store more that one registrar EE certificate.</t>
        <t>If the pledge is unable to create the PVR, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <tt>application/json</tt>.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/voucher-jws+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tpvr_artifact">
          <name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>
          <t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>
          <t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>
          <figure anchor="tpvr_CDDL_def">
            <name>CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork>
          </figure>
          <t>The <tt>agent-provided-proximity-registrar-cert</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <tt>agent-signed-data</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>
          <figure anchor="tpvr_example">
            <name>tPVR Representation in JSON</name>
            <artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork>
          </figure>
          <section anchor="jws-asd">
            <name>JWS Agent-Signed Data</name>
            <t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <tt>agent-signed-data</tt> as binary.
For the JWS-signed JSON format used by this specification, the <tt>agent-signed-data</tt> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <tt>agent-signed-data</tt> member of the tPVR artifact:</t>
            <figure anchor="asd_representation">
              <name>JWS Agent-Signed Data in General JWS JSON Serialization Syntax</name>
              <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
            </figure>
            <t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
            <section anchor="prm-asd">
              <name>JSON Agent-Signed Data</name>
              <t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>
              <figure anchor="prmasd_CDDL_def">
                <name>CDDL for JSON Agent-Signed Data (prmasd)</name>
                <artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork>
              </figure>
              <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>
              <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>
              <t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>
              <figure anchor="prmasd_payload">
                <name>JSON Agent-Signed Data Example</name>
                <artwork type="json" align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "vendor-pledge4711"
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-protected-header">
              <name>JWS Protected Header</name>
              <t>The JWS Protected Header of the <tt>agent-signed-data</tt> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
              <ul spacing="normal">
                <li>
                  <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
                </li>
                <li>
                  <t><tt>kid</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/>.</t>
                </li>
              </ul>
              <t><xref target="asd_header"/> shows an example for this JWS Protected Header:</t>
              <figure anchor="asd_header">
                <name>JWS Protected Header Example for</name>
                <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-signature">
              <name>JWS Signature</name>
              <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <tt>agent-signed-data</tt> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            </section>
          </section>
        </section>
        <section anchor="pvr_artifact">
          <name>Response Artifact: Pledge Voucher-Request (PVR)</name>
          <t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>
          <figure anchor="pvr_representation">
            <name>PVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="pvr_data">
            <name>JSON PVR Data</name>
            <t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaf data nodes in the YANG definition mandatory for the PVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time.</t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a cryptographically strong random or pseudo-random number nonce (see <xref section="6.2" sectionFormat="of" target="RFC4086"/>).</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the assertion type <tt>agent-proximity</tt> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>).</t>
              </li>
              <li>
                <t><tt>agent-provided-proximity-registrar-cert</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion.</t>
              </li>
              <li>
                <t><tt>agent-signed-data</tt>: <bcp14>SHALL</bcp14> contain the same value as the <tt>agent-signed-data</tt> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge.</t>
              </li>
            </ul>
            <t><xref target="pvr_data_example"/> shows an example for the JSON PVR Data:</t>
            <figure anchor="pvr_data_example">
              <name>JSON PVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-1">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-1">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="tper">
        <name>Trigger Pledge Enroll-Request</name>
        <t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_2">
          <name>PER acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(2)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="212" y="132">Enroll-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPER</text>
                  <text x="96" y="212">PER</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent triggers the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tper</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PER, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the PER, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.
While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tper_artifact">
          <name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>
          <t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>
          <t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>
          <t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>
          <figure anchor="tper_CDDL_def">
            <name>CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork>
          </figure>
          <t>The <tt>enroll-type</tt> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <tt>enroll-generic-cert</tt> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>
        </section>
        <section anchor="per_artifact">
          <name>Response Artifact: Pledge Enroll-Request (PER)</name>
          <t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>
          <t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="per_representation">
            <name>PER Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="per_data">
            <name>JSON CSR Data</name>
            <t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <tt>csr-grouping</tt> of the <tt>ietf-ztp-types</tt> YANG module defined in <xref section="3.2" sectionFormat="of" target="RFC9646"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="RFC9646"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <tt>p10-csr</tt> case of the <tt>csr-grouping</tt> <bcp14>MUST</bcp14> be used.</t>
            <t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>
            <figure anchor="csr_example">
              <name>JSON CSR Data Example</name>
              <artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-2">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification. 
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
              <li>
                <t><tt>crit</tt>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <tt>created-on</tt> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
            </ul>
            <t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time.</t>
              </li>
            </ul>
            <t>The new protected Header Parameter <tt>created-on</tt> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <tt>created-on</tt> of PER &gt;= <tt>created-on</tt> of PVR &gt;= <tt>created-on</tt> of PVR trigger.
The registrar <bcp14>MAY</bcp14> ignore any but the newest PER artifact from the same pledge in case the registrar has at any point in time more than one pending PER from the pledge.</t>
            <t><xref target="per_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="per_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-2">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            <t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported similarly.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>
          </section>
        </section>
      </section>
      <section anchor="pvr">
        <name>Supply PVR to Registrar (including MASA interaction)</name>
        <t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>
        <t>As already stated in <xref target="RFC8995"/>, and required by <xref target="I-D.ietf-uta-require-tls13"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>
        <t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_3">
          <name>Voucher issuing exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,448" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,448" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,192" fill="none" stroke="black"/>
                <path d="M 312,240 L 312,272" fill="none" stroke="black"/>
                <path d="M 312,304 L 312,448" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,312" fill="none" stroke="black"/>
                <path d="M 456,432 L 456,448" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,352" fill="none" stroke="black"/>
                <path d="M 560,400 L 560,448" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,256 L 224,256" fill="none" stroke="black"/>
                <path d="M 256,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 320,320 L 416,320" fill="none" stroke="black"/>
                <path d="M 456,320 L 552,320" fill="none" stroke="black"/>
                <path d="M 320,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 456,336 L 552,336" fill="none" stroke="black"/>
                <path d="M 320,416 L 408,416" fill="none" stroke="black"/>
                <path d="M 472,416 L 552,416" fill="none" stroke="black"/>
                <path d="M 176,432 L 208,432" fill="none" stroke="black"/>
                <path d="M 280,432 L 304,432" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
                <polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
                <polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
                <polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
                <polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(3)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PVR</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="344" y="132">backend</text>
                  <text x="428" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="308" y="212">[Registrar-Agent</text>
                  <text x="308" y="228">authenticated&amp;authorized?]</text>
                  <text x="240" y="260">PVR</text>
                  <text x="280" y="292">[accept</text>
                  <text x="348" y="292">device?]</text>
                  <text x="436" y="324">mTLS</text>
                  <text x="440" y="340">RVR</text>
                  <text x="456" y="356">~</text>
                  <text x="460" y="372">[extract</text>
                  <text x="536" y="372">DomainID]</text>
                  <text x="456" y="388">[update</text>
                  <text x="532" y="388">audit-log]</text>
                  <text x="456" y="404">~</text>
                  <text x="440" y="420">Voucher</text>
                  <text x="244" y="436">Voucher'</text>
                  <text x="16" y="468">~</text>
                  <text x="168" y="468">~</text>
                  <text x="312" y="468">~</text>
                  <text x="456" y="468">~</text>
                  <text x="560" y="468">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>
        <ul spacing="normal">
          <li>
            <t>the <tt>agent-provided-proximity-registrar-cert</tt> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate.</t>
          </li>
          <li>
            <t>the <tt>agent-signed-data</tt> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header of the <tt>agent-signed-data</tt> field.</t>
          </li>
          <li>
            <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
          </li>
          <li>
            <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <tt>agent-signed-data</tt> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PVR, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar converts the PVR artifact to a Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>
        <t>The domain registrar can respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>
        <t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="masa_interaction">
          <name>MASA Interaction</name>
          <t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges consequently supports the same formats as supported by those pledges.</t>
          <t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> choose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <tt>prior-signed-voucher-request</tt> field of the RVR that</t>
          <ul spacing="normal">
            <li>
              <t>the <tt>agent-provided-proximity-registrar-cert</tt> field contains an EE certificate that is signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent.</t>
            </li>
            <li>
              <t>the registrar EE certificate in the <tt>agent-provided-proximity-registrar-cert</tt> field and the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR are signed by the same domain owner.</t>
            </li>
            <li>
              <t>the <tt>agent-signed-data</tt> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header in the <tt>agent-signed-data</tt> field.</t>
            </li>
            <li>
              <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of PVR and the <tt>serial-number</tt> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
            </li>
          </ul>
          <t>If the <tt>agent-sign-cert</tt> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>
          <t>If the verification fails, the MASA responds with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>
          <ul spacing="normal">
            <li>
              <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden.</t>
            </li>
            <li>
              <t>404 Not Found: if the request is for a device that is not known to the MASA.</t>
            </li>
            <li>
              <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type.</t>
            </li>
            <li>
              <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA.</t>
            </li>
          </ul>
          <t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        </section>
        <section anchor="supply-voucher-to-registrar-agent">
          <name>Supply Voucher to Registrar-Agent</name>
          <t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>
          <t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the registrar-countersigned Voucher artifact ('Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>If the domain registrar is unable to return the Voucher, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
          <ul spacing="normal">
            <li>
              <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure.</t>
            </li>
            <li>
              <t>502 Bad Gateway: if the registrar received an invalid response from the MASA.</t>
            </li>
            <li>
              <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <tt>Retry-After</tt> response header field with an appropriate value.</t>
            </li>
            <li>
              <t>504 Gateway Timeout: if the backend request to the MASA timed out.</t>
            </li>
          </ul>
        </section>
        <section anchor="request-artifact-pledge-voucher-request-pvr">
          <name>Request Artifact: Pledge Voucher-Request (PVR)</name>
          <t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>
        </section>
        <section anchor="rvr_artifact">
          <name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>
          <t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>
          <figure anchor="rvr_representation">
            <name>RVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="rvr_data">
            <name>JSON RVR Data</name>
            <t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a copy of the <tt>nonce</tt> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
              </li>
              <li>
                <t><tt>idevid-issuer</tt>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <tt>x5c</tt> field</t>
              </li>
              <li>
                <t><tt>prior-signed-voucher-request</tt>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
              </li>
            </ul>
            <t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>
            <ul spacing="normal">
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the value <tt>agent-proximity</tt> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar.</t>
              </li>
              <li>
                <t><tt>agent-sign-cert</tt>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <tt>agent-signed-data</tt> field of the contained PVR.</t>
              </li>
            </ul>
            <t>Note that the <tt>ietf-voucher-request</tt> YANG module defines the leaf <tt>agent-sign-cert</tt> as binary;
this specification refines it as a JSON array structure similar to the <tt>x5c</tt> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
            <t><xref target="rvr_data_example"/> shows an example for the JSON RVR Data:</t>
            <figure anchor="rvr_data_example">
              <name>JSON RVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-3">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-3">
            <name>JWS Signature</name>
            <t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
        <section anchor="voucher_artifact">
          <name>Backend Response Artifact: Voucher</name>
          <t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <tt>assertion</tt> field <bcp14>MAY</bcp14> contain the value <tt>agent-proximity</tt> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>
          <t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>
          <figure anchor="voucher_data_example">
            <name>JSON RVR Data Example</name>
            <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "vendor-pledge4711"
  }
}
]]></artwork>
          </figure>
        </section>
        <section anchor="rcv_artifact">
          <name>Response Artifact: Registrar-Countersigned Voucher</name>
          <t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>
          <t>For BRSKI-PRM, the domain registrar <bcp14>MUST</bcp14> add an JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>
          <figure anchor="rcv_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork>
          </figure>
          <t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <tt>pinned-domain-cert</tt> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>
          <t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>
          <t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>
          <section anchor="json-voucher-data">
            <name>JSON Voucher Data</name>
            <t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>
          </section>
          <section anchor="jws-protected-header-registrar">
            <name>JWS Protected Header (Registrar)</name>
            <t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data.</t>
              </li>
            </ul>
            <t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>
          </section>
          <section anchor="jws-signature-registrar">
            <name>JWS Signature (Registrar)</name>
            <t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            <t>The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>
            <t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>
          </section>
        </section>
      </section>
      <section anchor="per">
        <name>Supply PER to Registrar (including Key Infrastructure interaction; requestenroll)</name>
        <t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>
        <t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER-request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>
        <figure anchor="exchangesfig_uc2_4">
          <name>Enroll exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,256" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,256" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,256" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,256" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 224,192" fill="none" stroke="black"/>
                <path d="M 256,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 344,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 448,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 336,224" fill="none" stroke="black"/>
                <path d="M 176,240 L 192,240" fill="none" stroke="black"/>
                <path d="M 288,240 L 304,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
                <polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(4)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PER</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="328" y="132">Key</text>
                  <text x="404" y="132">Infrastructure</text>
                  <text x="516" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">PER</text>
                  <text x="384" y="212">[Request]</text>
                  <text x="396" y="228">[Certificate]-</text>
                  <text x="240" y="244">Enroll-Resp</text>
                  <text x="16" y="276">~</text>
                  <text x="168" y="276">~</text>
                  <text x="312" y="276">~</text>
                  <text x="456" y="276">~</text>
                  <text x="560" y="276">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestenroll</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>
        <ul spacing="normal">
          <li>
            <t>the PER was signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
          </li>
          <li>
            <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PER, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the PER cannot be verified.</t>
          </li>
          <li>
            <t>404 Not Found: if the PER is for a device that is not known to the registrar.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>
        <t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate signed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> with an smime-type parameter <tt>certs-only</tt>, as specified in <xref target="RFC7030"/> and <xref target="RFC5273"/>.</t>
        <t>If the domain registrar is unable to return the Enroll-Resp, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure.</t>
          </li>
          <li>
            <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure.</t>
          </li>
          <li>
            <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>MUST</bcp14> include the Retry-After response header field with an appropriate value.</t>
          </li>
          <li>
            <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out.</t>
          </li>
        </ul>
        <t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported similarly with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>
        <section anchor="request-artifact-pledge-enroll-request-per">
          <name>Request Artifact: Pledge Enroll-Request (PER)</name>
          <t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>
        </section>
        <section anchor="er_artifact">
          <name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>
          <t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>
          <t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>
        </section>
      </section>
      <section anchor="obtain_cacerts">
        <name>Obtain CA Certificates (wrappedcacerts)</name>
        <t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>
        <t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>
        <t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>
        <t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_5">
          <name>CA certificates retrieval exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(5)</text>
                  <text x="60" y="132">Obtain</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <tt>/.well-known/brski/wrappedcacerts</tt>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a GET request at <tt>/.well-known/brski/wrappedcacerts</tt>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <section anchor="request-no-artifact">
          <name>Request (no artifact)</name>
          <t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.
As the caCerts artifact processing on the pledge may result in errors, signaled via HTTP status codes, the Registrar-Agent should log these for evaluation as outlined in <xref target="log_hints"/>.</t>
        </section>
        <section anchor="cacerts_artifact">
          <name>Response Artifact: CA-Certificates (caCerts)</name>
          <t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>
          <t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>
          <figure anchor="cacerts_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="cacerts_data">
            <name>JSON CA Data</name>
            <t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>
            <figure anchor="cacerts_CDDL_def">
              <name>CDDL for JSON CA Data (cacerts)</name>
              <artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [2* bytes]
}
]]></artwork>
            </figure>
            <t>The <tt>x5bag</tt> member <bcp14>MUST</bcp14> follow the definition of the <tt>x5bag</tt> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>
            <t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>
            <t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>
            <figure anchor="cacerts_data_example">
              <name>JSON CA Data Example</name>
              <artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-4">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
              </li>
            </ul>
            <t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="cacerts_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-4">
            <name>JWS Signature</name>
            <t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="voucher">
        <name>Supply Voucher to Pledge (svr)</name>
        <t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>
        <ul spacing="normal">
          <li>
            <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
          </li>
          <li>
            <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
          </li>
          <li>
            <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
          </li>
        </ul>
        <t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> store information from the first connection with the pledge to optimize this process.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_6">
          <name>Voucher exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 136,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(6)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="120" y="132">Voucher</text>
                  <text x="164" y="132">to</text>
                  <text x="204" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="100" y="196">Voucher'</text>
                  <text x="96" y="212">vStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/svr</tt>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>,
to indicate the encoding of the vStatus response object status telemetry message.</t>
        <t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>
        <ol spacing="normal" type="1"><li>
            <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
          </li>
          <li>
            <t>Provisionally install the initial domain trust anchor contained in the <tt>pinned-domain-cert</tt> field of the voucher.</t>
          </li>
          <li>
            <t>Validate the registrar EE certificate received in the <tt>agent-provided-proximity-registrar-cert</tt> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
          </li>
          <li>
            <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but using the pinned domain certificate instead of the MASA certificate for the verification.</t>
          </li>
        </ol>
        <t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>
        <t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.
A manufacturer may opt to provide the acceptance of nonceless voucher  as configurable item.</t>
        <t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>
        <t>If the pledge did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>
        <section anchor="request-artifact-registrar-countersigned-voucher">
          <name>Request Artifact: Registrar-Countersigned Voucher</name>
          <t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>
        </section>
        <section anchor="vstatus_artifact">
          <name>Response Artifact: Voucher Status (vStatus)</name>
          <t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>
          <figure anchor="vstatus_representation">
            <name>vStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="vstatus_data">
            <name>JSON Voucher Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>voucherstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>version</tt>: contains a version number for the format and semantics of the other fields;
this specification assumes version <tt>1</tt> just like BRSKI <xref target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>status</tt>: contains the boolean value <tt>true</tt> in case of success and <tt>false</tt> in case of failure.</t>
              </li>
              <li>
                <t><tt>reason</tt>: contains a human-readable message;
should not provide information beneficial to an attacker.
As the pledge is not localized at this point in time language selection cannot be done.
Therefore, English is taken as a default here for this diagnostic messages.
The internationalization of text is expected to be done on another level.</t>
              </li>
              <li>
                <t><tt>reason-context</tt>: contains a JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, <bcp14>MUST</bcp14> be provided;</t>
              </li>
            </ul>
            <t>BRSKI-PRM implementations utilize the <tt>reason-context</tt> field to provide a distinguishable token, which enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pvs-details</tt>.</t>
            <t><xref target="vstatus_data_example_success"/> shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>
            <artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/jose+json
Content-Language: en
]]></artwork>
            <figure anchor="vstatus_data_example_success">
              <name>JSON Voucher Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed.",
  "reason-context": {
    "pvs-details": "Current date 5/23/2024"
  }
}
]]></artwork>
            </figure>
            <artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/jose+json
Content-Language: en
]]></artwork>
            <figure anchor="vstatus_data_example_error">
              <name>JSON Voucher Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate.",
  "reason-context": {
    "pvs-details": "Current date 1/1/1970 < valid from 1/1/2023"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-5">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification. 
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="vstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="vstatus_header">
              <name>JWS Protected Header Example within vStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-5">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="cacerts">
        <name>Supply CA Certificates to Pledge (scac)</name>
        <t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certificate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by the pledge as reflected in the vStatus artifact.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_7">
          <name>Certificate provisioning exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(7)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/scac</tt>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>
        <t>If the pledge is unable to process the caCerts, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate).</t>
          </li>
          <li>
            <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates).</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="request-artifact-ca-certificates-cacerts">
          <name>Request Artifact: CA-Certificates (caCerts)</name>
          <t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>
        </section>
        <section anchor="response-no-artifact">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent. While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        </section>
      </section>
      <section anchor="enroll_response">
        <name>Supply Enroll-Response to Pledge (ser)</name>
        <t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_8">
          <name>Enroll-Response exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 48,192" fill="none" stroke="black"/>
                <path d="M 144,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 56,208" fill="none" stroke="black"/>
                <path d="M 120,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(8)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="152" y="132">Enroll-Response</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">Enroll-Resp</text>
                  <text x="88" y="212">eStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/ser</tt>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> with an smime-type parameter <tt>certs-only</tt>, as specified in <xref target="RFC7030"/> and <xref target="RFC5273"/>, and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>
        <section anchor="request-artifact-enroll-response-enroll-resp">
          <name>Request Artifact: Enroll-Response (Enroll-Resp)</name>
          <t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>
        </section>
        <section anchor="estatus_artifact">
          <name>Response Artifact: Enroll Status (eStatus)</name>
          <t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>
          <figure anchor="estatus_representation">
            <name>eStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="estatus_data">
            <name>JSON Enroll Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>enrollstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/> (including making <tt>reason-context</tt> mandatory).</t>
            <t>BRSKI-PRM implementations again utilize the <tt>reason-context</tt> field to provide a distinguishable token.
For eStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pes-details</tt>.</t>
            <t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>
            <figure anchor="estatus_data_example_success">
              <name>JSON Enroll Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork>
            </figure>
            <figure anchor="estatus_data_example_error">
              <name>JSON Enroll Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-6">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification. 
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="estatus_header">
              <name>JWS Protected Header Example within eStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-6">
            <name>JWS Signature</name>
            <t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="vstatus">
        <name>Voucher Status Telemetry (including MASA interaction)</name>
        <t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>
        <t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>
        <figure anchor="exchangesfig_uc2_9">
          <name>Voucher Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,288" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,288" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,200" fill="none" stroke="black"/>
                <path d="M 456,256 L 456,288" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,288" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 416,208" fill="none" stroke="black"/>
                <path d="M 456,208 L 552,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 352,224" fill="none" stroke="black"/>
                <path d="M 520,224 L 552,224" fill="none" stroke="black"/>
                <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                <path d="M 504,240 L 552,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
                <polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
                <polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
                <polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(9)</text>
                  <text x="64" y="132">Voucher</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="276" y="132">(including</text>
                  <text x="352" y="132">backend</text>
                  <text x="436" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">vStatus</text>
                  <text x="436" y="212">mTLS</text>
                  <text x="368" y="228">req</text>
                  <text x="412" y="228">device</text>
                  <text x="480" y="228">audit-log</text>
                  <text x="396" y="244">device</text>
                  <text x="464" y="244">audit-log</text>
                  <text x="264" y="276">[verify</text>
                  <text x="340" y="276">audit-log]</text>
                  <text x="312" y="292">|</text>
                  <text x="16" y="308">~</text>
                  <text x="168" y="308">~</text>
                  <text x="312" y="308">~</text>
                  <text x="456" y="308">~</text>
                  <text x="560" y="308">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/voucher_status</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>
        <t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>
        <section anchor="request-artifact-voucher-status-vstatus">
          <name>Request Artifact: Voucher Status (vStatus)</name>
          <t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-1">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="estatus">
        <name>Enroll Status Telemetry</name>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_10">
          <name>Enroll Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(10)</text>
                  <text x="68" y="132">Enroll</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">eStatus</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/enrollstatus</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>
        <t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK in the success case or can fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>
        <section anchor="request-artifact-enroll-status-estatus">
          <name>Request Artifact: Enroll Status (eStatus)</name>
          <t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-2">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="query">
        <name>Query Pledge Status (qps)</name>
        <t>The following assumes that a Registrar-Agent may need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_11">
          <name>Pledge Status exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(11)</text>
                  <text x="64" y="132">Query</text>
                  <text x="116" y="132">Pledge</text>
                  <text x="172" y="132">Status</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">tStatus</text>
                  <text x="96" y="212">pStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/qps</tt>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the pStatus artifact, the pledge responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tstatus_artifact">
          <name>Request Artifact: Status Trigger (tStatus)</name>
          <t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>
          <t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="tstatus_representation">
            <name>tStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="tstatus_data">
            <name>JSON Status Trigger Data</name>
            <t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>
            <figure anchor="stat_req_def">
              <name>CDDL for JSON Status Trigger Data (statustrigger)</name>
              <artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <tt>version</tt> <bcp14>SHALL</bcp14> be set to <tt>1</tt>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and emit an operational notification.</t>
            <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>
            <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>
            <t>The <tt>status-type</tt> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>
            <ul spacing="normal">
              <li>
                <t><tt>bootstrap</tt> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain).</t>
              </li>
              <li>
                <t><tt>operation</tt> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers).</t>
              </li>
            </ul>
            <t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>
            <t><xref target="stat_req_data"/> shows an example for the JSON Status Trigger Data using the status type <tt>bootstrap</tt>:</t>
            <figure anchor="stat_req_data">
              <name>JSON Status Trigger Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "vendor-pledge4711",
  "status-type": "bootstrap"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-7">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
              </li>
            </ul>
            <t><xref target="tstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="tstatus_header">
              <name>JWS Protected Header Example within tStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-7">
            <name>JWS Signature</name>
            <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
        <section anchor="pstatus_artifact">
          <name>Response Artifact: Pledge Status (pStatus)</name>
          <t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <tt>status-type</tt>.</t>
          <t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="pstatus_representation">
            <name>pStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="pstatus_data">
            <name>JSON Pledge Status Data</name>
            <t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <tt>voucherstatus-post</tt> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the <tt>enrollstatus-post</tt> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
            <figure anchor="stat_res_def">
              <name>CDDL for JSON Pledge Status Data (pledgestatus)</name>
              <artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    "reason-context": { * $$arbitrary-map }
  }
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>
            <t>The <tt>reason</tt> and <tt>reason-context</tt> members follow the definitions in <xref target="vstatus_data"/>, i.e., in contrast to <xref target="RFC8995"/>, <tt>reason-context</tt> <bcp14>MUST</bcp14> be provided.</t>
            <t>The new pStatus artifact also utilizes the <tt>reason-context</tt> field to provide a distinguishable token.
For pStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain either the</t>
            <ul spacing="normal">
              <li>
                <t><tt>pbs-details</tt> member for status information corresponding to the status-type <tt>bootstrap</tt>, or the</t>
              </li>
              <li>
                <t><tt>pos-details</tt> member for status information corresponding to the status-type <tt>operation</tt> (see <xref target="tstatus_data"/>)</t>
              </li>
            </ul>
            <t>Other documents may add additional <tt>reason-context</tt> members correlating to other <tt>statustrigger</tt> status-types or to include further status information.</t>
            <t>For the <tt>pbs-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>factory-default</tt>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-success</tt>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-error</tt>: Pledge voucher processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-success</tt>: Pledge processed the enrollment exchange successfully.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-error</tt>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
            </ul>
            <t>The <tt>pbs-details</tt> values <bcp14>SHALL</bcp14> be cumulative in the sense that <tt>enroll-success</tt> and <tt>enroll-error</tt> imply <tt>voucher-success</tt>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_bootstrap">
              <name>status-bootstrap JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge processed enrollment exchange successfully.",
  "reason-context": {
    "pbs-details": "Pledge processed enrollment exchange successfully."
  }
}
]]></artwork>
            </figure>
            <t>For the <tt>pos-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>connect-success</tt>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>connect-error</tt>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
            </ul>
            <t><xref target="stat_example_operation"/> provides an example for operational status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_operation">
              <name>status-operation JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "connect-error" : "Connection establishment terminated with error."
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-8">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification. 
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="pstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="pstatus_header">
              <name>JWS Protected Header Example within pStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-8">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according to its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="log_hints">
      <name>Logging Considerations</name>
      <t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
Recommend key events for logging comprise:</t>
      <ul spacing="normal">
        <li>
          <t>Communication attempts between the pledge, Registrar-Agent, and registrar.</t>
        </li>
        <li>
          <t>Protocol handshakes and onboarding steps.</t>
        </li>
        <li>
          <t>Voucher requests and responses.</t>
        </li>
        <li>
          <t>Authentication successes or failures.</t>
        </li>
      </ul>
      <t>The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>
      <ul spacing="normal">
        <li>
          <t>PVR received from Registrar-Agent</t>
        </li>
        <li>
          <t>Acceptance of a pledge into the domain</t>
        </li>
        <li>
          <t>Voucher provided to Registrar-Agent</t>
        </li>
        <li>
          <t>PER received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate requested</t>
        </li>
        <li>
          <t>Pledge EE certificate received from Domain CA</t>
        </li>
        <li>
          <t>Pledge EE certificate provided to Registrar-Agent</t>
        </li>
        <li>
          <t>CA Certificates provided to Registrar-Agent</t>
        </li>
        <li>
          <t>Voucher Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Enroll Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate revoked</t>
        </li>
      </ul>
      <t>Furthermore, it is recommended to:</t>
      <ul spacing="normal">
        <li>
          <t>support adjustable logging levels (severity) to cater to different operational needs or failure situations.</t>
        </li>
        <li>
          <t>include meta information to distinguish logs that relate to different BRSKI approaches (e.g., BRSKI, BRSKI-AE, BRSKI-PRM, constraint BRSKI) that are likely supported in the same domain in parallel.</t>
        </li>
        <li>
          <t>include detailed error codes and diagnostics information as defined throughout the document or stemming from other used components or libraries also in the logging information.</t>
        </li>
        <li>
          <t>support synchronized time (e.g., via NTP) to include timestamps in logging to enable sequencing and  correlation of events.</t>
        </li>
        <li>
          <t>utilize standard logging formats (e.g., syslog) to allow for easy integration into log analysis tools and SIEM systems.</t>
        </li>
        <li>
          <t>utilize secure transmission of logs to centralized log servers, particularly in cloud or distributed environments (e.g., in case of syslog, <xref target="RFC9662"/> updates the utilized cipher suites for TLS and DTLS).</t>
        </li>
        <li>
          <t>allow for definition of key operational thresholds (e.g., high latency, failed onboarding attempts) to trigger alerts for proactive issue resolution.</t>
        </li>
        <li>
          <t>avoid inclusion of sensitive information (see also <xref target="priv_cons"/>)</t>
        </li>
      </ul>
      <t>For log analysis the following may be considered:</t>
      <ul spacing="normal">
        <li>
          <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
        </li>
        <li>
          <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
        </li>
        <li>
          <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in the EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
        </li>
      </ul>
      <t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different Registrar-Agents or if different registrars have been used.</t>
      <t>In order to protect the registrar from overload attacks, a rate-limiting may be used by logging events from the same type just once.</t>
    </section>
    <section anchor="op_cons">
      <name>Operational Considerations</name>
      <t>As outlined in <xref target="architecture"/>, BRSKI-PRM introduces an additional component with the Registrar-Agent in the BRSKI architecture in addition to new modes of interaction to facilitate the communication between the pledge and the registrar.
As outlined in <xref target="colo-regagt"/> the functional support of BRSKI-PRM can also be achieved using a Registrar-Agent co-located with the Registrar instead of a stand-alone Registrar-Agent, which may reduce operational complexity.</t>
      <t>This has an influence on the configuration and operation not only of the Registrar-Agent, but also for the registrar and the pledge.</t>
      <t>As outlined in <xref target="system-components"/>, there are additional configuration items dues to the introduction of the Registrar-Agent. This may increase operational complexity and potential misconfigurations in deploying and managing this entity:</t>
      <ul spacing="normal">
        <li>
          <t>A Registrar-Agent needs to be provided with a Registrar-Agent EE certificate, the domain registrar EE certificate and the list of pledges. BRSKI-PRM is open regarding the selected provisioning method, which may be automated or by configuration.</t>
        </li>
        <li>
          <t>Pledges may support either BRSKI-PRM only or combined with other modes of operation.</t>
        </li>
        <li>
          <t>Registrars may support either BRSKI-PRM only or combined with other BRSKI modes of operation. The distinction of BRSKI and BRSKI-PRM is done based on the provided endpoints of the registrar. An operator deploying pledges with a mixed set of operation need to ensure that the domain registrar supports all necessary options to ensure bootstrapping of pledges depending of the supported operational mode.</t>
        </li>
        <li>
          <t>In addition, registrars may  support a co-located Registrar-Agent, if nomadic operation of the Registrar-Agent is not required. This facilitates situations in which an operator wants to deploy BRSKI pledges acting as clients and BSKI pledges acting as servers.</t>
        </li>
      </ul>
      <t>With the Registrar-Agent enhancement a new component is introduced in the communication path between the pledge and the registrar.
This likely increases the latency of the communication between the pledge and the registrar.
The increase in latency due to this additional component may be neglected given that the Registrar-Agent operates with nomadic connectivity as outlined in <xref target="arch_nomadic"/>.</t>
      <t>BRSKI-PRM requires pledges to possess an IDevID to enable onboarding in new domains.
IDevID (and corresponding trust anchors) are expected to have a rather long lifetime.
This may allow for a longer period between device acquisition and initial onboarding.
Contrary, if devices that have been provided with an LDevID (and corresponding trust anchors) and temporarily taken out of service, immediate connectivity when bringing them back to operation may not be given, as the LDevIDs typically have a much shorter validity period compared to IDevIDs.
It is therefore recommended to onboard them as new devices to ensure they possess valid LDevIDs.</t>
      <t>The key infrastructure as part of the customer domain discussed in <xref target="architecture"/> may be operated locally by the operator of that domain or may be provided as a third party service.</t>
      <t>Requirements to the utilized credentials authenticating and artifact signatures on the registrar as outlined in <xref target="registrar_component"/> may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>
      <t>Besides the above, also consider the existing document on operational modes for BRSKI MASA in <xref target="I-D.richardson-anima-masa-considerations"/>.</t>
    </section>
    <section anchor="iana_con">
      <name>IANA Considerations</name>
      <t>This document requires the following IANA actions.</t>
      <section anchor="brski-well-known-uris">
        <name>BRSKI Well-Known URIs</name>
        <t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>
        <table anchor="iana_table_uri">
          <name>BRSKI Well-Known URIs Additions</name>
          <thead>
            <tr>
              <th align="left">Path Segment</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to registrar</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain wrapped CA certificates</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply voucher to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA certificates to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query pledge status</td>
              <td align="left">[THISRFC]</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sn_reg">
        <name>Service Name and Transport Protocol Port Number Registry</name>
        <t>IANA has registered the following service names:</t>
        <t><strong>Service Name:</strong> brski-pledge<br/>
          <strong>Transport Protocol(s):</strong> tcp<br/>
          <strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Contact:</strong> IETF Chair <eref target="mailto:chair@ietf.org">chair@ietf.org</eref><br/>
          <strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br/>
          <strong>Reference:</strong> [THISRFC]</t>
      </section>
    </section>
    <section anchor="priv_cons">
      <name>Privacy Considerations</name>
      <t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>potentially no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <t><xref target="tpvr"/> describes to optionally apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>
      <t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>
      <t>As logging is recommended to better handle failure situations, it is necessary to avoid capturing  sensitive or personal data.
Privacy-preserving measures in logs <bcp14>SHOULD</bcp14> be applied, such as:</t>
      <ul spacing="normal">
        <li>
          <t>Avoid logging personally identifiable information unless unavoidable.</t>
        </li>
        <li>
          <t>Anonymize or pseudonymize data where possible.</t>
        </li>
      </ul>
      <t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>
      <ul spacing="normal">
        <li>
          <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is not encrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
        </li>
        <li>
          <t>the Timestamp data could reveal the activation time of the device.</t>
        </li>
        <li>
          <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
        </li>
      </ul>
    </section>
    <section anchor="sec_cons">
      <name>Security Considerations</name>
      <t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered in the following subsections related to:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent and related attack options.</t>
        </li>
        <li>
          <t>the reversal of the pledge communication direction (push mode, compared to BRSKI).</t>
        </li>
        <li>
          <t>no transport layer security between Registrar-Agent and pledge and the impact on transport of sensitive information.</t>
        </li>
      </ul>
      <section anchor="sec_cons-dos">
        <name>Denial of Service (DoS) Attack on Pledge</name>
        <t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS-attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>
        <t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limit the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>
        <t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resend the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>
      </section>
      <section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent">
        <name>Misuse of acquired PVR and PER by Registrar-Agent</name>
        <t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <tt>proximity-registrar-cert</tt> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>
        <t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>
      </section>
      <section anchor="sec_cons_reg-agt">
        <name>Misuse of Registrar-Agent</name>
        <t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>
        <t>In addition, it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".</t>
        <t>Furthermore, the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent.
If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.
If the registrar detects a mismatch in the utilized certificates, it may conclude the usage of either an outdated "agent-signed-data" component in the PVR or a man-in-the-middle attack by a potentially unauthorized Registrar-Agent.</t>
      </section>
      <section anchor="sec_cons_mDNS">
        <name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>
        <t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>
        <t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>
      </section>
      <section anchor="yang-module-security-considerations">
        <name>YANG Module Security Considerations</name>
        <t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>
        <t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>
        <t>Documents that define exclusively modules following the extension in <xref target="RFC8971"/> are not required to include the YANG security template per guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>.</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC5272">
          <front>
            <title>Certificate Management over CMS (CMC)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
              <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
              <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
              <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5272"/>
          <seriesInfo name="DOI" value="10.17487/RFC5272"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
            <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
            <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
            <date month="October" year="2013"/>
            <abstract>
              <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC7518">
          <front>
            <title>JSON Web Algorithms (JWA)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>This specification registers cryptographic algorithms and identifiers to be used with the JSON Web Signature (JWS), JSON Web Encryption (JWE), and JSON Web Key (JWK) specifications. It defines several IANA registries for these identifiers.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7518"/>
          <seriesInfo name="DOI" value="10.17487/RFC7518"/>
        </reference>
        <reference anchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8615">
          <front>
            <title>Well-Known Uniform Resource Identifiers (URIs)</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
            <date month="May" year="2019"/>
            <abstract>
              <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
              <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8615"/>
          <seriesInfo name="DOI" value="10.17487/RFC8615"/>
        </reference>
        <reference anchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9360">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="February" year="2023"/>
            <abstract>
              <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9360"/>
          <seriesInfo name="DOI" value="10.17487/RFC9360"/>
        </reference>
        <reference anchor="RFC9646">
          <front>
            <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero-Touch Provisioning (SZTP) Bootstrapping Request</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>This document extends the input to the "get-bootstrapping-data" RPC defined in RFC 8572 to include an optional certificate signing request (CSR), enabling a bootstrapping device to additionally obtain an identity certificate (e.g., a Local Device Identifier (LDevID) from IEEE 802.1AR) as part of the "onboarding information" response provided in the RPC-reply.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9646"/>
          <seriesInfo name="DOI" value="10.17487/RFC9646"/>
        </reference>
        <reference anchor="I-D.ietf-anima-jws-voucher">
          <front>
            <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="15" month="January" year="2025"/>
            <abstract>
              <t>   This document introduces a variant of the RFC8366 voucher artifact in
   which CMS is replaced by the JSON Object Signing and Encryption
   (JOSE) mechanism described in RFC7515.  This supports deployments in
   which JOSE is preferred over CMS.  In addition to specifying the
   format, the "application/voucher-jws+json" media type is registered
   and examples are provided.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-16"/>
        </reference>
        <reference anchor="I-D.ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="1" month="April" year="2025"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a Pledge to an
   owner using an artifact signed, directly or indirectly, by the
   Pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the Pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, includes a number of desired
   extensions into the YANG.  The voucher request defined in RFC8995 is
   also now included in this document, as well as other YANG extensions
   needed for variants of BRSKI/RFC8995.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-14"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <author fullname="G. Klyne" initials="G." surname="Klyne"/>
            <author fullname="C. Newman" initials="C." surname="Newman"/>
            <date month="July" year="2002"/>
            <abstract>
              <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3339"/>
          <seriesInfo name="DOI" value="10.17487/RFC3339"/>
        </reference>
        <reference anchor="RFC4086">
          <front>
            <title>Randomness Requirements for Security</title>
            <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
            <author fullname="J. Schiller" initials="J." surname="Schiller"/>
            <author fullname="S. Crocker" initials="S." surname="Crocker"/>
            <date month="June" year="2005"/>
            <abstract>
              <t>Security systems are built on strong cryptographic algorithms that foil pattern analysis attempts. However, the security of these systems is dependent on generating secret quantities for passwords, cryptographic keys, and similar quantities. The use of pseudo-random processes to generate secret quantities can result in pseudo-security. A sophisticated attacker may find it easier to reproduce the environment that produced the secret quantities and to search the resulting small set of possibilities than to locate the quantities in the whole of the potential number space.</t>
              <t>Choosing random quantities to foil a resourceful and motivated adversary is surprisingly difficult. This document points out many pitfalls in using poor entropy sources or traditional pseudo-random number generation techniques for generating such quantities. It recommends the use of truly random hardware techniques and shows that the existing hardware on many systems can be used for this purpose. It provides suggestions to ameliorate the problem when a hardware solution is not available, and it gives examples of how large such quantities need to be for some applications. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="106"/>
          <seriesInfo name="RFC" value="4086"/>
          <seriesInfo name="DOI" value="10.17487/RFC4086"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
        <reference anchor="RFC5273">
          <front>
            <title>Certificate Management over CMS (CMC): Transport Protocols</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines a number of transport mechanisms that are used to move CMC (Certificate Management over CMS (Cryptographic Message Syntax)) messages. The transport mechanisms described in this document are HTTP, file, mail, and TCP. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5273"/>
          <seriesInfo name="DOI" value="10.17487/RFC5273"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC9525">
          <front>
            <title>Service Identity in TLS</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="R. Salz" initials="R." surname="Salz"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
              <t>This document obsoletes RFC 6125.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9525"/>
          <seriesInfo name="DOI" value="10.17487/RFC9525"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
            <author fullname="K. Hartke" initials="K." surname="Hartke"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
            <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9110">
          <front>
            <title>HTTP Semantics</title>
            <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
            <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
            <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
            <date month="June" year="2022"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
              <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="97"/>
          <seriesInfo name="RFC" value="9110"/>
          <seriesInfo name="DOI" value="10.17487/RFC9110"/>
        </reference>
        <reference anchor="RFC9238">
          <front>
            <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="J. Latour" initials="J." surname="Latour"/>
            <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
              <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9238"/>
          <seriesInfo name="DOI" value="10.17487/RFC9238"/>
        </reference>
        <reference anchor="RFC9662">
          <front>
            <title>Updates to the Cipher Suites in Secure Syslog</title>
            <author fullname="C. Lonvick" initials="C." surname="Lonvick"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="J. Salowey" initials="J." surname="Salowey"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>RFCs 5425 and 6012 describe using TLS and DTLS to securely transport syslog messages. This document updates the cipher suites required by RFC 5245 (TLS Transport Mapping for Syslog) and RFC 6012 (DTLS Transport Mapping for Syslog). It also updates the protocol recommended by RFC 6012 for secure datagram transport.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9662"/>
          <seriesInfo name="DOI" value="10.17487/RFC9662"/>
        </reference>
        <reference anchor="RFC9733">
          <front>
            <title>BRSKI with Alternative Enrollment (BRSKI-AE)</title>
            <author fullname="D. von Oheimb" initials="D." role="editor" surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <date month="March" year="2025"/>
            <abstract>
              <t>This document defines enhancements to the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol, known as BRSKI with Alternative Enrollment (BRSKI-AE). BRSKI-AE extends BRSKI to support certificate enrollment mechanisms instead of the originally specified use of Enrollment over Secure Transport (EST). It supports certificate enrollment protocols such as the Certificate Management Protocol (CMP) that use authenticated self-contained signed objects for certification messages, allowing for flexibility in network device onboarding scenarios. The enhancements address use cases where the existing enrollment mechanism may not be feasible or optimal, providing a framework for integrating suitable alternative enrollment protocols. This document also updates the BRSKI reference architecture to accommodate these alternative methods, ensuring secure and scalable deployment across a range of network environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9733"/>
          <seriesInfo name="DOI" value="10.17487/RFC9733"/>
        </reference>
        <reference anchor="I-D.ietf-uta-require-tls13">
          <front>
            <title>New Protocols Using TLS Must Require TLS 1.3</title>
            <author fullname="Rich Salz" initials="R." surname="Salz">
              <organization>Akamai Technologies</organization>
            </author>
            <author fullname="Nimrod Aviram" initials="N." surname="Aviram">
         </author>
            <date day="14" month="April" year="2025"/>
            <abstract>
              <t>   TLS 1.3 use is widespread, it has had comprehensive security proofs,
   and it improves both security and privacy over TLS 1.2.  Therefore,
   new protocols that use TLS must require TLS 1.3.  As DTLS 1.3 is not
   widely available or deployed, this prescription does not pertain to
   DTLS (in any DTLS version); it pertains to TLS only.

   This document updates RFC9325 and discusses post-quantum cryptography
   and the security and privacy improvements over TLS 1.2 as a rationale
   for that update.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-uta-require-tls13-12"/>
        </reference>
        <reference anchor="I-D.ietf-netmod-rfc8407bis">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="Andy Bierman" initials="A." surname="Bierman">
              <organization>YumaWorks</organization>
            </author>
            <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
              <organization>Orange</organization>
            </author>
            <author fullname="Qin Wu" initials="Q." surname="Wu">
              <organization>Huawei</organization>
            </author>
            <date day="15" month="April" year="2025"/>
            <abstract>
              <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-23"/>
        </reference>
        <reference anchor="I-D.draft-ietf-emu-eap-arpa">
          <front>
            <title>The eap.arpa domain and EAP provisioning</title>
            <author fullname="Alan DeKok" initials="A." surname="DeKok">
              <organization>InkBridge Networks</organization>
            </author>
            <date day="29" month="January" year="2025"/>
            <abstract>
              <t>   This document defines the eap.arpa domain as a way for Extensible
   Authentication Protocol (EAP) peers to signal to EAP servers that
   they wish to obtain limited, and unauthenticated, network access.
   EAP peers signal which kind of access is required via certain pre-
   defined identifiers which use the Network Access Identifier (NAI)
   format of RFC 7542.  A table of identifiers and meanings is defined,
   which includes entries for RFC 9140.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-emu-eap-arpa-06"/>
        </reference>
        <reference anchor="I-D.richardson-anima-masa-considerations">
          <front>
            <title>Operational Considerations for Voucher infrastructure for BRSKI MASA</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Manufacturer Authorized Signing Authority (MASA) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the MASA is
   deployed into.  This document does not change any protocol
   mechanisms.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-masa-considerations-09"/>
        </reference>
        <reference anchor="I-D.richardson-anima-registrar-considerations">
          <front>
            <title>Operational Considerations for BRSKI Registrar</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-09"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-discovery">
          <front>
            <title>BRSKI discovery and variations</title>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei USA</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators,
   especially in the face of variations in the protocols that can
   introduce non-interoperability when not equally supported by both
   responder and initiator.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-05"/>
        </reference>
        <reference anchor="IEEE-802.1AR">
          <front>
            <title>IEEE 802.1AR Secure Device Identifier</title>
            <author>
              <organization>Institute of Electrical and Electronics Engineers</organization>
            </author>
            <date year="2018" month="June"/>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="BRSKI-PRM-abstract" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00">
          <front>
            <title>Abstract BRSKI-PRM Protocol Overview</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="March"/>
          </front>
        </reference>
        <reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
          <front>
            <title>Android Developer: Connect devices wirelessly</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
        </reference>
        <reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
          <front>
            <title>Security with Network Protocols</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
        </reference>
        <reference anchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC4648">
          <front>
            <title>The Base16, Base32, and Base64 Data Encodings</title>
            <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
            <date month="October" year="2006"/>
            <abstract>
              <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4648"/>
          <seriesInfo name="DOI" value="10.17487/RFC4648"/>
        </reference>
        <reference anchor="RFC8971">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
            <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
            <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
            <author fullname="V. Govindan" initials="V." surname="Govindan"/>
            <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8971"/>
          <seriesInfo name="DOI" value="10.17487/RFC8971"/>
        </reference>
        <reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
          <front>
            <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="29" month="March" year="2025"/>
            <abstract>
              <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-07"/>
        </reference>
      </references>
    </references>
    <?line 2876?>

<section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent">
        <name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>
        <t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge-Voucher-Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Registrar Voucher-Request (RVR) - from Registrar to MASA</name>
        <t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>
        <figure anchor="ExampleRegistrarVoucherRequestfigure">
          <name>Example Registrar-Voucher-Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher-Response from MASA</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>
        <figure anchor="ExampleVoucherResponseWithRegSignfigure">
          <name>Example Voucher-Response from MASA, with additional Registrar signature</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="pledgehttps">
      <name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>
      <t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>
      <t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependent upon the security of the TLS connection.</t>
      <t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>
      <ol spacing="normal" type="1"><li>
          <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do not help as there is no previous relationship between the Registrar-Agent and the pledge.</t>
        </li>
        <li>
          <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
        </li>
      </ol>
      <t>If the Registrar-Agent has a pre-configured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>
      <t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QR codes may help automate this in some cases.</t>
      <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="of" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTP-over-TLS connection without performing WebPKI verification.
The application will then have to do its own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involves use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures (see <xref target="androidtrustfail"/>).</t>
      <t>Also note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge IDevID certificate.
IDevID certificates are intended to be widely usable and EKU does not support that use.</t>
    </section>
    <section anchor="app_history">
      <name>History of Changes [RFC Editor: please delete]</name>
      <t>Proof of Concept Code available</t>
      <t>From IETF draft 19 -&gt; IETF draft 20:</t>
      <ul spacing="normal">
        <li>
          <t>addressed last comments and nits before telechat</t>
        </li>
      </ul>
      <t>From IETF draft 18 -&gt; IETF draft 19:</t>
      <ul spacing="normal">
        <li>
          <t>addressed DISCUSS received during telechat preparation:
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 136: included hint for reaction on HTTP requests to avoid DoS (rate limiting) in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>issue 137: HTTP error handling BCP RFC 9205: removed normative language for HTTP status codes</t>
            </li>
            <li>
              <t>issue 139: usage of TLS 1.3 emphasized by also referencing UTA draft in <xref target="pvr"/></t>
            </li>
            <li>
              <t>issue 140: provided hint for time synchronization of registrar-agent in <xref target="agent_component"/></t>
            </li>
            <li>
              <t>issue 145: clarified language tagging in status information in <xref target="vstatus_data"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>addressed COMMENT, NITS, received during telechat preparation, specifically
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 140: synchronized time</t>
            </li>
            <li>
              <t>issue 141: config options for discovery and nonceless vouchers in <xref target="voucher"/> and <xref target="agent_component"/></t>
            </li>
            <li>
              <t>issue 142: addressed TTL of provisional accept state by utilizing the last received tPVR for the binding in <xref target="tpvr"/></t>
            </li>
            <li>
              <t>issue 144: clarified usage of "<bcp14>MUST</bcp14> ...unless" in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>issue 146: added MTI algorithm for JWS signatures</t>
            </li>
            <li>
              <t>issue 147: definitions of reason-context in status objects</t>
            </li>
          </ul>
        </li>
        <li>
          <t>updated reference of BRSKI-AE (now RFC 9733).</t>
        </li>
        <li>
          <t>removed unused references</t>
        </li>
      </ul>
      <t>From IETF draft 17 -&gt; IETF draft 18:</t>
      <ul spacing="normal">
        <li>
          <t>addressed nits received from the GenART review</t>
        </li>
        <li>
          <t>addressed comment from IANA to update contact for service name registration from IESG to IETF Chair in <xref target="sn_reg"/></t>
        </li>
        <li>
          <t>SECDIR review: included reasoning for short lived certificates in <xref target="agent_component"/></t>
        </li>
        <li>
          <t>SECDIR review: enhanced reasoning for optional TLS usage in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for handling if the accept header is not used in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for response body encoding in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint regarding IDevID and LDevID validity in <xref target="op_cons"/></t>
        </li>
        <li>
          <t>DNSDIR review: renamed <xref target="sn_reg"/> to Service Name and Transport Protocol Port Number Registry</t>
        </li>
        <li>
          <t>from IANA expert review: included registered service names in headings</t>
        </li>
      </ul>
      <t>From IETF draft 16 -&gt; IETF draft 17:</t>
      <ul spacing="normal">
        <li>
          <t>updated formatting of key events in <xref target="log_hints"/></t>
        </li>
        <li>
          <t>updated reference to corresponding sections for JWS Header and Signature in <xref target="I-D.ietf-anima-jws-voucher"/> in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
        <li>
          <t>simplified description for JWS Protected Header aligning with the update in draft-ietf-anima-jws-voucher-15 to always include the certificate chain in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
      </ul>
      <t>From IETF draft 15 -&gt; IETF draft 16:</t>
      <ul spacing="normal">
        <li>
          <t>issue #135: corrections from IOTDIR review (clarification regarding minimum supported discovery in <xref target="discovery_uc2_ppa"/>, clarification regarding CDDl notation in <xref target="cacerts_CDDL_def"/> and editorial nits.</t>
        </li>
        <li>
          <t>updated references (draft-ietf-netconf-sztp-csr became RFC 9646, included RFC 9662, operational considerations drafts for registrar and MASA)</t>
        </li>
        <li>
          <t>AD review: included term Registrar-Agent in Terminology section</t>
        </li>
        <li>
          <t>AD review: enhanced interaction information in <xref target="uc2figure"/> and <xref target="uc3figure"/></t>
        </li>
        <li>
          <t>AD review: included new section on <xref target="op_cons"/> to outline operational considerations</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="log_hints"/> with more detailed recommendations on logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="priv_cons"/> with enhanced recommendations concerning logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="sec_cons_reg-agt"/> with more information about misuse of the Registrar-Agent</t>
        </li>
        <li>
          <t>IOTDIR/OPSDIR/AD review: addressed various nits received throughout the draft</t>
        </li>
      </ul>
      <t>From IETF draft 14 -&gt; IETF draft 15:</t>
      <ul spacing="normal">
        <li>
          <t>issue #134: editorial clarifications on references to <xref target="I-D.ietf-anima-brski-discovery"/> in <xref target="discovery_uc2_reg"/> and  <xref target="discovery_uc2_ppa"/></t>
        </li>
      </ul>
      <t>From IETF draft 13 -&gt; IETF draft 14:</t>
      <ul spacing="normal">
        <li>
          <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
        </li>
        <li>
          <t>Changes incorporated based on Shepherd review PR #133:
          </t>
          <ul spacing="normal">
            <li>
              <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
            </li>
            <li>
              <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
            </li>
            <li>
              <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
            </li>
            <li>
              <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
            </li>
            <li>
              <t>Included MASA component in description of affected components in <xref target="system-components"/></t>
            </li>
            <li>
              <t>Moved host header field handling from <xref target="pledgehttps"/> to <xref target="pledge_component"/> as generally applicable</t>
            </li>
            <li>
              <t>Updated status artifacts (vStatus, eStatus, pStatus) to align with BRSKI CDDL definition, but made reason-context mandatory  to have distinguishable objects for the registrar-agent</t>
            </li>
            <li>
              <t>Correction of terminology of local host name vs. service instance name in <xref target="discovery_uc2_ppa"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>Update of informative references and nits</t>
        </li>
      </ul>
      <t>From IETF draft 12 -&gt; IETF draft 13:</t>
      <ul spacing="normal">
        <li>
          <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
        </li>
        <li>
          <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
        </li>
        <li>
          <t>Updated CDDL source code integration to allow for automatic verification</t>
        </li>
        <li>
          <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
        </li>
        <li>
          <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
        </li>
        <li>
          <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
        </li>
      </ul>
      <t>From IETF draft 11 -&gt; IETF draft 12:</t>
      <ul spacing="normal">
        <li>
          <t>Updated acknowledgments to reflect early reviews</t>
        </li>
        <li>
          <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
        </li>
      </ul>
      <t>From IETF draft 10 -&gt; IETF draft 11:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
        </li>
        <li>
          <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
        </li>
        <li>
          <t>removed unused reference RFC 5280</t>
        </li>
        <li>
          <t>removed site terminology</t>
        </li>
        <li>
          <t>deleted duplicated text in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
        </li>
        <li>
          <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
        </li>
        <li>
          <t>addressed comments from SECDIR early review</t>
        </li>
      </ul>
      <t>From IETF draft 09 -&gt; IETF draft 10:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
        </li>
        <li>
          <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
        </li>
        <li>
          <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
        </li>
        <li>
          <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
        </li>
        <li>
          <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
        </li>
        <li>
          <t>issue #130, aligned the usage of site and domain throughout the document</t>
        </li>
        <li>
          <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
        </li>
        <li>
          <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
        </li>
        <li>
          <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
        </li>
      </ul>
      <t>From IETF draft 08 -&gt; IETF draft 09:</t>
      <ul spacing="normal">
        <li>
          <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
        </li>
        <li>
          <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
        </li>
        <li>
          <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
        </li>
        <li>
          <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
        </li>
        <li>
          <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
        </li>
        <li>
          <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
        </li>
        <li>
          <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
        </li>
        <li>
          <t>issue #94: clarified terminology (possess vs. obtained)</t>
        </li>
        <li>
          <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
        </li>
        <li>
          <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
        </li>
        <li>
          <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
        </li>
        <li>
          <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
        </li>
        <li>
          <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
        </li>
        <li>
          <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
        </li>
        <li>
          <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
        </li>
        <li>
          <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
        </li>
        <li>
          <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
        </li>
        <li>
          <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
        </li>
        <li>
          <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
        </li>
        <li>
          <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
        </li>
        <li>
          <t>updated references</t>
        </li>
      </ul>
      <t>From IETF draft 07 -&gt; IETF draft 08:</t>
      <ul spacing="normal">
        <li>
          <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
        </li>
        <li>
          <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
        </li>
      </ul>
      <t>From IETF draft 06 -&gt; IETF draft 07:</t>
      <ul spacing="normal">
        <li>
          <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
        </li>
        <li>
          <t>smaller editorial corrections</t>
        </li>
      </ul>
      <t>From IETF draft 05 -&gt; IETF draft 06:</t>
      <ul spacing="normal">
        <li>
          <t>Update of list of reviewers</t>
        </li>
        <li>
          <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
        </li>
        <li>
          <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
        </li>
        <li>
          <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
        <li>
          <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
      </ul>
      <t>From IETF draft 04 -&gt; IETF draft 05:</t>
      <ul spacing="normal">
        <li>
          <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
        </li>
        <li>
          <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
        </li>
        <li>
          <t>Clarified pledge-status responses are cumulative, issue #73</t>
        </li>
        <li>
          <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
        </li>
        <li>
          <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
        </li>
        <li>
          <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
        </li>
        <li>
          <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
        </li>
        <li>
          <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
        </li>
        <li>
          <t>Enhanced security considerations and privacy considerations, issue #59</t>
        </li>
        <li>
          <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
        </li>
        <li>
          <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
        </li>
        <li>
          <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
        </li>
        <li>
          <t>Reworked all message representations to align with encoding</t>
        </li>
        <li>
          <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
        </li>
        <li>
          <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
        </li>
        <li>
          <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
        </li>
        <li>
          <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
        </li>
        <li>
          <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
        </li>
        <li>
          <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
        </li>
        <li>
          <t>Several editorial changes and enhancements to increasing readability.</t>
        </li>
      </ul>
      <t>From IETF draft 03 -&gt; IETF draft 04:</t>
      <ul spacing="normal">
        <li>
          <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
        </li>
        <li>
          <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
        </li>
        <li>
          <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
        </li>
        <li>
          <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
        </li>
        <li>
          <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
        </li>
        <li>
          <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
        </li>
        <li>
          <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
        </li>
        <li>
          <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
        </li>
        <li>
          <t>utilized defined abbreviations in the document consistently, issue #22</t>
        </li>
        <li>
          <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
        </li>
        <li>
          <t>Added several clarifications based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
        </li>
        <li>
          <t>Include link to SVG graphic as general overview</t>
        </li>
        <li>
          <t>Restructuring of section 5 to flatten hierarchy</t>
        </li>
        <li>
          <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
        </li>
        <li>
          <t>Several editorial improvements based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
        </li>
        <li>
          <t>Included representation for General JWS JSON Serialization for examples</t>
        </li>
        <li>
          <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
        </li>
        <li>
          <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
        </li>
        <li>
          <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
        </li>
        <li>
          <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
        </li>
        <li>
          <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
        </li>
        <li>
          <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
        </li>
        <li>
          <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
        </li>
        <li>
          <t>Reworked text in from introduction to section pledge-responder-mode</t>
        </li>
        <li>
          <t>Fixed "serial-number" encoding in PVR/RVR</t>
        </li>
        <li>
          <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
        </li>
        <li>
          <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
        </li>
        <li>
          <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
        </li>
        <li>
          <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
        </li>
        <li>
          <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
        </li>
        <li>
          <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
        </li>
        <li>
          <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
        </li>
        <li>
          <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
        </li>
        <li>
          <t>Addressed YANG warning (issue #1)</t>
        </li>
        <li>
          <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and a Pledge Enroll-Request.</t>
        </li>
      </ul>
      <t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>
      <ul spacing="normal">
        <li>
          <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
        </li>
        <li>
          <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
        </li>
        <li>
          <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
        </li>
        <li>
          <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
        </li>
        <li>
          <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
        </li>
        <li>
          <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
        </li>
        <li>
          <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
        </li>
        <li>
          <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
        </li>
        <li>
          <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
        </li>
        <li>
          <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
        </li>
        <li>
          <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
        </li>
        <li>
          <t>First description of exchanged object types (needs more work)</t>
        </li>
        <li>
          <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
        </li>
        <li>
          <t>Updated references.</t>
        </li>
        <li>
          <t>Included Thomas Werner as additional author for the document.</t>
        </li>
      </ul>
      <t>From individual version 03 -&gt; IETF draft 00:</t>
      <ul spacing="normal">
        <li>
          <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
        </li>
        <li>
          <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
        </li>
        <li>
          <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
        </li>
        <li>
          <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
        </li>
        <li>
          <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
        </li>
        <li>
          <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
        </li>
      </ul>
      <t>From individual version 02 -&gt; 03:</t>
      <ul spacing="normal">
        <li>
          <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
        </li>
        <li>
          <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
        </li>
        <li>
          <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
        </li>
      </ul>
      <t>From individual version 01 -&gt; 02:</t>
      <ul spacing="normal">
        <li>
          <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
        </li>
        <li>
          <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
        </li>
      </ul>
      <t>From individual version 00 -&gt; 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
        </li>
        <li>
          <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
        </li>
        <li>
          <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
        </li>
      </ul>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization>IoTconsultancy.nl</organization>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei</organization>
        <address>
          <email>tte@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
        <organization>Siemens Schweiz AG</organization>
        <address>
          <email>ietf@kovatsch.net</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+y9+XYbR5I3+r/O8TtUU/d8JtsAxEV7r7REtzUtWxqStmeu
rz+xCBTJaoEoNKpAmSPre5b7LPfJbqyZkVlZAEgtlhf1nLEEoLJyiYz1FxH9
fv+TG03ZjIuH2ef7B/98kr0qm7Ps+bgYnRZZOcn2i3paTUbFLPuqGhXZOv2o
/3z/q41PbuTHx7PiQh7Ezz65MaqGk/wcBhvN8pOmXxbNST+flOd5/3hWvyz7
09l5f3sTHp0V+cPs2bSY5U1ZTeosn4yyr/JJflqcF5PmkxuvTh9mu18/+Wo3
++4fMGzewJjbm9t3PrlRN/DbF/m4msBHzWxefHKjnM7or3Wzvbn5YHMbfjQ/
Pi/rGoY+vJzC757sHX4RD7p0DsO8eZjVzeiTG9Py4Sc3sqyphg+zTy+L+lP8
17A6n+bDxnxSX57PipPaflLNmugjmOykasqTshjBp5OKf9fMSjNUPm/Oqhm8
sw9nAA8fDLIvZmVR4095fw+a4uSkmPiPqxks7qDEqdfZ7j/wIz0f+VTeUxTw
nmdNU/W/zM8m/f1ycprdpfWUzeXD7Kv5pBye8fpG8KJP72/d23kgC55Pmhn8
5h/F7DyfXOJnxXlejnGXaDqDE5zO32t+4QB2CH8zn5UPs7OmmdYPb9169erV
wHx/y63xcJB9V8wmxcwv8vCsOs9r8/HPu8iGptN/RdO53iL3BtnTIjdL3BuX
VeM+o/U9KuthlR1cwp6eB+vZhzk3Jfwrr+siu+eX810+Hpd1MR4XE7+mR1/2
7+9s3g7WdAC3+3+K2RgoHT+fntElWvvs9lZ2+3Z2/9797AHcoDWz5jHM7O9D
nBEvVNbx1YBmk89GdTXxq/kKPyvG2aP4az44eG0xhk3NDqqT5hXcv+y7avay
Nq87H84+Q6bx91p/Oxjmwfbq7prvYXuHFSywPJ439tbAZj8u//XSbHb9snIf
0ZSeVIfwaD0fA1MZXg4mYzOXAn49GMGv/w5HFP+qryRawXYWdZ3tDV8Ws8YN
/MW8mc+KV0Vp6acp/j6sByf5fDAq7Fb+s7rIm5oJUjYyb5qzEmjffhVQ/8Hw
DEb/H7kF8gbaupfyyGBSwHwuism8IO51OqvmU2GAdHOQL2f84Gv6x9/x+QG8
5g39HiTB/Pgh/67/6vRWxMg/uTGp4Io05QWPv//Fozvb97b93+9v6t/v3ru7
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
9AXyGUS9StjPGbh9/f3RrcGrYjzuv5xUrya3SCDcOsq+2X9C5cKEyp37TyeW
rf17Wq+pWzkymQ6DFeSmFwN3MKfGr6gjSTu3OkQBnJCBW1fz2bDoWzSALy2F
xUD3dCo/+YauXUBr+LU6WXDHdl05i59gpIcO623+2vWn8yc4UoaHJS88lDJd
6TRB+olL8osmCyN1vZ5fUnS8JMw3zNxLiqu/pJaFYJ3jOcmSbz12Ul7nd9eC
D6/yEiDi8CWPdm2Lqdq87CebbnellxTxSqL8xeglrRS+VV4Ct0Ff8p9z1Fxk
QEnYi4jx9et/z0ndap/JX8I/nAwQXWdNCfgO7+0/JwTncteNSux3iYBPM+L4
WofU9Zb5EtuwnhU5/u6kLMajbB0u4UPf6hhGwodubW+EwV28xeJ3uChn1BIC
vchSV6/4cTrO23ise+wupA4WW1ubIktBWAQzYBNzhBrBJTM65BOMOypzuPe6
CkGgwe9PKynmWmLLWlQbIyv+XwxHMH7vgTa1xfYZhZRvyWMNxEpFYtZaapY3
QxHUtVi4Y/H5p7c2bpQp8xd4RHk6qagK1gY5n+KJaGab4OAoQkCeCVw5c06Z
igOz1PMaMchlsuFww01rMT0uAq75ijQpWJl5XHozo47unVJqCiM6lNg9qet1
dn8TFcTbt3ek5Kl9C3YdX0JVztD0MXWy9tKxGFDJClacxFXA0tRLsWph81ff
eg2rmaFIPMJw1sNbt8RolBSbAdBkQoriu44oOloXTdc9g4kdtUc7cooQUCU6
pgou3pkS1s30eHbEZDwlPSW03gN1Trvf0POs0h2p1euiP4hnw1xRPFATICLd
RwKE9KQ30zSrX2+btnoWOnUWVWv56pCPnJkr4cmv0JtCOkVJA63ItNLucmFS
RN/dIwuZkRv7Sgsd+B5bxTm2og9r8CabjUmqiyqJxE04QgZsSRBZj9khaJCG
WpXAFHniPT1XBAbqM9XM9yt3dgBR8aPq/Jh27wtrrOIvn5uu1L75MrlVKTRZ
zSTi1yqRuGtujv8x3RxQ8RCbMianLFdhnEyquTSgys7RTqVc/FYSg8fsbrWy
hL6ZorPUBghyg9Qzp40dyV1JaDr6uNo38TgbANyNMsCzdZQ2hovitwcg9sYg
EOs+xaTyhjrFdpZ83KCZiI4sLfCc2MDxxC6qVeW1zKe7jzxt/jMUVY530RkP
9YxDhwQaRMd4UayPg2aGeAOxRkQGUSK/LzcAO6wO2CA8z5FmtZs9vC3sYMqF
PrDf8llVklv2CXnKuA9R2ETNuDVhAbYii2n8rJVv8w59dx0Mzw3xP6g1ZZuc
irpnjfQTE+uyS7T2dCJtP1VV0EWw4iC1i4uElp2Gx6N2YhYBqH3RyXDdA0Yh
Pck2dzYRssoAsXpeNhLcjBHOC+zKjiKJ17cYjTIaGo91sOjIziMRtwq3b5Vh
tIe8iBx86UKFf4WVHmPoSUdxYDY6nc3pVPkFpmen0RlZnWI/LrI9u78ks1OL
N3ChE2/oYNVn2CZPuWJ9sEG4zKaRHRKjC9d6TBGd2EaTQSv69oW30TrNmTa5
qUWz6xHy3caNJwG3sE/f2OStmlevQedv91t5ZIFe5Kwg79yQDRVdYK0XXheD
g2jJL61+H4OIfUfjlTNwbDdXEqEGyE0ZRiNNrxFcuERXvCAz49+ywMh4tMp1
lWthwRMQnTi1x9E1X2gQrKlHyIWvNZYYSjAbXrzQpxXVvDtESKpIaZPCN4iS
hnspQJVU2grwQGED13bLBGFzOD2t4KtxWQNZiNw3AyW2sjaMtg3ds/h3hO2I
jRcB+iIeBD+MoNcZh37hi1s2DrFeb6jljM3jL0oaErV0Z3SHVWuf8DqBS1BG
A0oUSRKwgqWXxlqx8xK1mATQP+aiXalYdwYPWmpdhIpMv9i+czFiWFCzDu/Y
zj6SVI92loVkJ4Y3d9V0i3QinJGi5m6ZToLRYpLpFgv2YkGiRfJofL7FEtz1
tbIulp/M0vSLTEq2E9QgNGhaitgS02bXbFyoIUtrzolVNUOtGec5KqiteZnq
OotWIXObIu4y66oqrPNr8Bw3JBWkzU7Xbc0N/GHAfgTTPMpi9p2mNoOntpw8
7M9KgkOieGdhIQ+yPMLkt5CDuOJK1uXPC3PxPgE0CNUf7H4N/J6z54B9OJIh
J8+G6TOwUsKba+mwOCEYHY/lsMRDkENUbTsh58LdcWAOjb/5q10mEKsJUS8k
rlTNCATuXsHFALRda5yt5hZnkxa8dbU0M9T67yTa2FIzFqftdjUNramEw0Vp
siPD/PBUSeoEyFzTShtfFbNzMtYEozoUr29i1W5nZ31lI/K7voXjgeglu855
vY6Pb/AqLoKy7bxXEmwsvIlQJyqf29rrNmmfRxwIOqMhgycq0xbHV2k5Dl7k
a7iTH8cl3kStQcN0r2TtA2R5NLada0cY0ta90cVK5feVK7bTOeazutDWKdQU
3tSAjyulhMaY7nviiaBVmYFn59da34Jy8kEpeduzoFVCfkn9+FXURjBJv93n
VFMvxFq/2f/WmK3sJ40biF3MjOIsaOxZ8GGPNoXwA8X40t0lLDmw59oVhWbp
65u+RpBeMhv87uhbkUqeo8pRHKmpz4qRcCPTwUm78ZjaAtp2DiZ1q/KNnV2z
p7Lw6q6r18cV6VlI1i4ixNonNTNwb4JHnzWmfbuWdsLp8uYG0snMUPFa2CGv
Z7rgPa1egWlazE5R0j/d2+hRX7wCjvQLcu0/CpMIvv7i0YbziJjhaQK0M8xY
tUVEOfGgStn6CssftboQLk07YBmlbzQDDwu2FyR3UMl/9XIuOE9K++K6xQHs
xy3RVIxB9trkhnn6GjKJVmUOr6FWUEffpti6pyIJq1SSevRV2K2i1ppxZMCY
Phieb7nEFOmKsHSjlpBs3DAjnEKiJYfVx65C0DyEupqvuAh/B54d7Ol8H33+
bN/Md8B9Ph0PAeWH0P2gqllwOAK9tI+okLXvnzZC09UHN4wwBA2ytn3abaXN
sEpjuxHtZ50f2H99FnTvzYJOu339xJdr1A+w4KD7Fwmnn+JWtfj/XOXGeGj9
gIoWDvwDjAd4Z0sLOxibya3wyRMUAsCPqcoo/8TBKK8yjv+Hn8/UQEmuPw7B
RglTcf1xwmqb5Fu91jitYf76NvtzhafS4/yf9jjtj5Z88n8+ubG+tbEE0vTu
3vXO1s5nWk2bAZoZb3EWQhsNqG/vhDbcOL8O2thu0UYYivlNkMbeOyKNvV8V
aexsuGDUt1EwyrQSI7lpbI2Nj5FiEuPw4Z8LBS0/s3d5QgvH+T7Wka8+TqAX
/q/cOVj+9sOHX9dV2eYH2+fse/HpMTZZ9uZnnI9+EmgznkB1+1YeJ1Rl9p38
u+o4rU+Ce3rdcb4vfmyoqwCr5U8e/3DdgeZTDhYBP2r64+r0ugNl116ZPTFV
rfyfhRxIfv7pp8ulz8coI25vdAIWjIxIVHb/hUqM9XW8kBsbb8PJrqotXO3G
fy+K2w+tka9Ez98bnMgP/VX3x+C1fpn0fGejAyrzC6LRPtPoW9EWjTPMcQfq
VTTjj/Es72505r98jKf5bq2aK8iVjnGYOV1wGsyvx6q5t7E0YenXTx1XuNkd
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

-->

</rfc>
