<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-13" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 131?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces new endpoints for the Domain Registrar and pledge, and a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the Key Infrastructure (e.g., domain CA).</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 139?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing signed data objects, the voucher artifacts as defined in <xref target="RFC8995"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the pledge IDevID credentials.</t>
  <t>also enables the usage of alternative transports, both IP-based and non-IP, between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes a data object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>IDevID:</dt>
  <dd>
    <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
  </dd>
  <dt>LDevID:</dt>
  <dd>
    <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64(OCTETS):</dt>
  <dd>
    <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
  </dd>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <spanx style="verb">base64encodedvalue==</spanx> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <spanx style="verb">proximity</spanx> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="188" y="324">EE</text>
<text x="224" y="324">cert.</text>
<text x="356" y="324">EE</text>
<text x="392" y="324">cert.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocol to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  <list style="symbols">
      <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by the Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided and signed by the Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
      <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
    </list></t>
  <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
This is for situations in which the domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  <list style="symbols">
      <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  <list style="symbols">
      <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
      <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
    </list></t>
  <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  <list style="symbols">
      <t>The default format for voucher artifacts (incl. voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
      <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
    </list></t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers" type="1">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent Proximity Assertion</name>

<t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicated via the Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <spanx style="verb">agent-proximity</spanx>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar EE credentials via the TLS handshake and pins that public key as the <spanx style="verb">proximity-registrar-cert</spanx> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>

<t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="registrar_component"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <spanx style="verb">/.well-known/brski/</spanx> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Obtain CA Certificates</c>
      <c><xref target="obtain_cacerts"/></c>
</texttable>

<t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).
Overall, this may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>

<t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>

<t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment, that the connecting client is a Registrar-Agent.</t>

<t>The registrar <bcp14>MAY</bcp14> be restricted by configuration, if it accepts every Registrar-Agent, which can authenticate with a domain issued certificate or only explicitly authorized ones.</t>

<t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="agent_component"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a store and forward communication path with secure message passing between pledges in responder mode and the domain registrar.</t>

<t>It uses its own EE certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference in the context of the agent-signed data object as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>

<t>In BRSKI-PRM, the SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>

<t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short lived Registrar-Agent EE certificates in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration or a repository.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>

<t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to authenticate and sign agent-signed data</t>
  <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
  <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>While the Registrar-Agent requires the IP address of the domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>

<t>Moreover, the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in <spanx style="verb">&lt;product-serial-number&gt;._brski-pledge._tcp.local</spanx>.
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.ietf-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14> use</t>

<t><list style="symbols">
  <t><spanx style="verb">&lt;product-serial-number&gt;._brski-pledge._tcp.local</spanx>, to discover a specific pledge, e.g., when connected to a local network.</t>
  <t><spanx style="verb">_brski-pledge._tcp.local</spanx> to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_component"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <spanx style="verb">/.well-known/brski/</spanx> URI path, except for the <bcp14>OPTIONAL</bcp14> endpoint "qps".
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <spanx style="verb">http://pledge.example.com/.well-known/brski/tpvr</spanx>, it sets the Host header field to <spanx style="verb">pledge.example.com</spanx> and the absolute path <spanx style="verb">/.well-known/brski/tpbr</spanx>.
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,800" fill="none" stroke="black"/>
<path d="M 16,864 L 16,960" fill="none" stroke="black"/>
<path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
<path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
<path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
<path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
<path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
<path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
<path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,800" fill="none" stroke="black"/>
<path d="M 168,864 L 168,960" fill="none" stroke="black"/>
<path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
<path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
<path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
<path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
<path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
<path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
<path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,544" fill="none" stroke="black"/>
<path d="M 312,592 L 312,624" fill="none" stroke="black"/>
<path d="M 312,656 L 312,800" fill="none" stroke="black"/>
<path d="M 312,864 L 312,960" fill="none" stroke="black"/>
<path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
<path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
<path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
<path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
<path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
<path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
<path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,664" fill="none" stroke="black"/>
<path d="M 456,784 L 456,800" fill="none" stroke="black"/>
<path d="M 456,864 L 456,960" fill="none" stroke="black"/>
<path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
<path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
<path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
<path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
<path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
<path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
<path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
<path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,704" fill="none" stroke="black"/>
<path d="M 560,752 L 560,800" fill="none" stroke="black"/>
<path d="M 560,864 L 560,960" fill="none" stroke="black"/>
<path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
<path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
<path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
<path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
<path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
<path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
<path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,608 L 224,608" fill="none" stroke="black"/>
<path d="M 256,608 L 304,608" fill="none" stroke="black"/>
<path d="M 320,672 L 416,672" fill="none" stroke="black"/>
<path d="M 456,672 L 552,672" fill="none" stroke="black"/>
<path d="M 320,688 L 424,688" fill="none" stroke="black"/>
<path d="M 456,688 L 552,688" fill="none" stroke="black"/>
<path d="M 320,768 L 408,768" fill="none" stroke="black"/>
<path d="M 472,768 L 552,768" fill="none" stroke="black"/>
<path d="M 176,784 L 208,784" fill="none" stroke="black"/>
<path d="M 280,784 L 304,784" fill="none" stroke="black"/>
<path d="M 176,880 L 216,880" fill="none" stroke="black"/>
<path d="M 256,880 L 304,880" fill="none" stroke="black"/>
<path d="M 176,896 L 224,896" fill="none" stroke="black"/>
<path d="M 256,896 L 304,896" fill="none" stroke="black"/>
<path d="M 320,912 L 344,912" fill="none" stroke="black"/>
<path d="M 424,912 L 448,912" fill="none" stroke="black"/>
<path d="M 320,928 L 336,928" fill="none" stroke="black"/>
<path d="M 176,944 L 192,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
<path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
<path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
<path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
<path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
<path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
<path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
<path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
<path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
<path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
<path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
<path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
<path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
<path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
<path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
<path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
<path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
<path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
<path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
<path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
<path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
<path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
<path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
<path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
<path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
<path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
<path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
<path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
<path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
<path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
<path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
<path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
<path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
<polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
<polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
<polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
<polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
<polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
<polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
<polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
<polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
<polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
<polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
<polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
<polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
<polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
<polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
<polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
<polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
<polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
<polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
<polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
<polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
<polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
<polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
<polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
<polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
<polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
<polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
<polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
<polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
<polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="332" y="484">MASA</text>
<text x="404" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="564">[Registrar-Agent</text>
<text x="308" y="580">authenticated&amp;authorized?]</text>
<text x="240" y="612">PVR</text>
<text x="280" y="644">[accept</text>
<text x="348" y="644">device?]</text>
<text x="436" y="676">mTLS</text>
<text x="440" y="692">RVR</text>
<text x="456" y="708">~</text>
<text x="460" y="724">[extract</text>
<text x="536" y="724">DomainID]</text>
<text x="456" y="740">[update</text>
<text x="532" y="740">audit-log]</text>
<text x="456" y="756">~</text>
<text x="440" y="772">Voucher</text>
<text x="244" y="788">Voucher'</text>
<text x="16" y="820">~</text>
<text x="168" y="820">~</text>
<text x="312" y="820">~</text>
<text x="456" y="820">~</text>
<text x="560" y="820">~</text>
<text x="16" y="836">(4)</text>
<text x="60" y="836">Supply</text>
<text x="104" y="836">PER</text>
<text x="132" y="836">to</text>
<text x="184" y="836">Registrar</text>
<text x="268" y="836">(including</text>
<text x="328" y="836">Key</text>
<text x="404" y="836">Infrastructure</text>
<text x="516" y="836">interaction)</text>
<text x="16" y="852">~</text>
<text x="168" y="852">~</text>
<text x="312" y="852">~</text>
<text x="456" y="852">~</text>
<text x="560" y="852">~</text>
<text x="236" y="884">mTLS</text>
<text x="240" y="900">PER</text>
<text x="384" y="916">[Request]</text>
<text x="396" y="932">[Certificate]-</text>
<text x="240" y="948">Enroll-Resp</text>
<text x="16" y="980">~</text>
<text x="168" y="980">~</text>
<text x="312" y="980">~</text>
<text x="456" y="980">~</text>
<text x="560" y="980">~</text>
<text x="16" y="996">(5)</text>
<text x="60" y="996">Obtain</text>
<text x="100" y="996">CA</text>
<text x="164" y="996">Certificates</text>
<text x="16" y="1012">~</text>
<text x="168" y="1012">~</text>
<text x="312" y="1012">~</text>
<text x="456" y="1012">~</text>
<text x="560" y="1012">~</text>
<text x="236" y="1044">mTLS</text>
<text x="240" y="1060">caCerts</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="16" y="1108">(6)</text>
<text x="60" y="1108">Supply</text>
<text x="120" y="1108">Voucher</text>
<text x="164" y="1108">to</text>
<text x="204" y="1108">Pledge</text>
<text x="16" y="1124">~</text>
<text x="168" y="1124">~</text>
<text x="312" y="1124">~</text>
<text x="456" y="1124">~</text>
<text x="560" y="1124">~</text>
<text x="76" y="1156">opt.</text>
<text x="112" y="1156">TLS</text>
<text x="100" y="1172">Voucher'</text>
<text x="96" y="1188">vStatus</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="16" y="1236">(7)</text>
<text x="60" y="1236">Supply</text>
<text x="100" y="1236">CA</text>
<text x="164" y="1236">Certificates</text>
<text x="228" y="1236">to</text>
<text x="268" y="1236">Pledge</text>
<text x="16" y="1252">~</text>
<text x="168" y="1252">~</text>
<text x="312" y="1252">~</text>
<text x="456" y="1252">~</text>
<text x="560" y="1252">~</text>
<text x="76" y="1284">opt.</text>
<text x="112" y="1284">TLS</text>
<text x="96" y="1300">caCerts</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="16" y="1348">(8)</text>
<text x="60" y="1348">Supply</text>
<text x="152" y="1348">Enroll-Response</text>
<text x="228" y="1348">to</text>
<text x="268" y="1348">Pledge</text>
<text x="16" y="1364">~</text>
<text x="168" y="1364">~</text>
<text x="312" y="1364">~</text>
<text x="456" y="1364">~</text>
<text x="560" y="1364">~</text>
<text x="76" y="1396">opt.</text>
<text x="112" y="1396">TLS</text>
<text x="96" y="1412">Enroll-Resp</text>
<text x="88" y="1428">eStatus</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="16" y="1476">(9)</text>
<text x="64" y="1476">Voucher</text>
<text x="124" y="1476">Status</text>
<text x="192" y="1476">Telemetry</text>
<text x="276" y="1476">(including</text>
<text x="352" y="1476">backend</text>
<text x="436" y="1476">interaction)</text>
<text x="16" y="1492">~</text>
<text x="168" y="1492">~</text>
<text x="312" y="1492">~</text>
<text x="456" y="1492">~</text>
<text x="560" y="1492">~</text>
<text x="236" y="1524">mTLS</text>
<text x="240" y="1540">vStatus</text>
<text x="436" y="1556">mTLS</text>
<text x="368" y="1572">req</text>
<text x="412" y="1572">device</text>
<text x="480" y="1572">audit-log</text>
<text x="396" y="1588">device</text>
<text x="464" y="1588">audit-log</text>
<text x="264" y="1620">[verify</text>
<text x="340" y="1620">audit-log]</text>
<text x="312" y="1636">|</text>
<text x="16" y="1652">~</text>
<text x="168" y="1652">~</text>
<text x="312" y="1652">~</text>
<text x="456" y="1652">~</text>
<text x="560" y="1652">~</text>
<text x="20" y="1668">(10)</text>
<text x="68" y="1668">Enroll</text>
<text x="124" y="1668">Status</text>
<text x="192" y="1668">Telemetry</text>
<text x="16" y="1684">~</text>
<text x="168" y="1684">~</text>
<text x="312" y="1684">~</text>
<text x="456" y="1684">~</text>
<text x="560" y="1684">~</text>
<text x="236" y="1716">mTLS</text>
<text x="240" y="1732">eStatus</text>
<text x="16" y="1764">~</text>
<text x="168" y="1764">~</text>
<text x="312" y="1764">~</text>
<text x="456" y="1764">~</text>
<text x="560" y="1764">~</text>
<text x="20" y="1780">(11)</text>
<text x="64" y="1780">Query</text>
<text x="116" y="1780">Pledge</text>
<text x="172" y="1780">Status</text>
<text x="16" y="1796">~</text>
<text x="168" y="1796">~</text>
<text x="312" y="1796">~</text>
<text x="456" y="1796">~</text>
<text x="560" y="1796">~</text>
<text x="76" y="1828">opt.</text>
<text x="112" y="1828">TLS</text>
<text x="96" y="1844">tStatus</text>
<text x="96" y="1860">pStatus</text>
<text x="16" y="1892">~</text>
<text x="168" y="1892">~</text>
<text x="312" y="1892">~</text>
<text x="456" y="1892">~</text>
<text x="560" y="1892">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers" type="1">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> begin the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <spanx style="verb">application/json</spanx></t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/voucher-jws+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tpvr_artifact"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>

<t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>

<figure title="CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <spanx style="verb">agent-signed-data</spanx> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>

<figure title="tPVR Representation in JSON" anchor="tpvr_example"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork></figure>

<section anchor="jws-asd"><name>JWS Agent-Signed Data</name>

<t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <spanx style="verb">agent-signed-data</spanx> as binary.
For the JWS-signed JSON format used by this specification, the <spanx style="verb">agent-signed-data</spanx> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <spanx style="verb">agent-signed-data</spanx> member of the tPVR artifact:</t>

<figure title="JWS Agent-Signed Data in General JWS JSON Serialization Syntax" anchor="asd_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="prm-asd"><name>JSON Agent-Signed Data</name>

<t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>

<figure title="CDDL for JSON Agent-Signed Data (prmasd)" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">created-on</spanx> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>

<t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>

<figure title="JSON Agent-Signed Data Example" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/></t>
</list></t>

<t><xref target="asd_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example for " anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="jws-signature"><name>JWS Signature</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <spanx style="verb">agent-signed-data</spanx> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="pvr_artifact"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <spanx style="verb">ietf-voucher-request</spanx> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>

<figure title="PVR Representation in General JWS JSON Serialization Syntax" anchor="pvr_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<section anchor="pvr_data"><name>JSON PVR Data</name>

<t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <spanx style="verb">ietf-voucher-request</spanx> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the PVR artifact:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <spanx style="verb">created-on</spanx> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the assertion type <spanx style="verb">agent-proximity</spanx> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>)</t>
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion</t>
  <t><spanx style="verb">agent-signed-data</spanx>: <bcp14>SHALL</bcp14> contain the same value as the <spanx style="verb">agent-signed-data</spanx> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge</t>
</list></t>

<t><xref target="pvr_data_example"/> below shows an example for the JSON PVR Data:</t>

<figure title="JSON PVR Data Example" anchor="pvr_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-1"><name>JWS Protected Header</name>

<t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
If the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification of the pledge IDevID certificate.</t>

</section>
<section anchor="jws-signature-1"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/tper</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tper_artifact"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

<t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>

<figure title="CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork></figure>

<t>The <spanx style="verb">enroll-type</spanx> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <spanx style="verb">enroll-generic-cert</spanx> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.
The enumeration values are managed in an IANA registry to track extensions to BRSKI-PRM (see <xref target="iana_con"/>).</t>

</section>
<section anchor="per_artifact"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>

<t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="PER Representation in General JWS JSON Serialization Syntax" anchor="per_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="per_data"><name>JSON CSR Data</name>

<t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <spanx style="verb">csr-grouping</spanx> of the <spanx style="verb">ietf-ztp-types</spanx> YANG module defined in <xref section="3.2" sectionFormat="of" target="I-D.ietf-netconf-sztp-csr"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <spanx style="verb">p10-csr</spanx> case of the <spanx style="verb">csr-grouping</spanx> <bcp14>MUST</bcp14> be used.</t>

<t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>

<figure title="JSON CSR Data Example" anchor="csr_example"><artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-2"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
  <t><spanx style="verb">crit</spanx>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <spanx style="verb">created-on</spanx> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/></t>
</list></t>

<t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <spanx style="verb">created-on</spanx> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time</t>
</list></t>

<t>The new protected Header Parameter <spanx style="verb">created-on</spanx> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <spanx style="verb">created-on</spanx> of PER &gt;= <spanx style="verb">created-on</spanx> of PVR &gt;= <spanx style="verb">created-on</spanx> of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER artifact from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t><xref target="per_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within PER" anchor="per_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-2"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported in a similar way.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>

</section>
</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including MASA interaction)</name>

<t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>

<t>The registrar <bcp14>SHOULD</bcp14> verify the TLS client authentication of the Registrar-Agent, in particular if the TLS session is used to obtain the Registrar-Agent EE certificate (see <xref target="registrar_component"/>).
Note that authentication and authorization is of the pledge verified during the TLS session based on the signatures inside the PVR artifact.</t>

<t>As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,448" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,448" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,192" fill="none" stroke="black"/>
<path d="M 312,240 L 312,272" fill="none" stroke="black"/>
<path d="M 312,304 L 312,448" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,312" fill="none" stroke="black"/>
<path d="M 456,432 L 456,448" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,352" fill="none" stroke="black"/>
<path d="M 560,400 L 560,448" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,256 L 224,256" fill="none" stroke="black"/>
<path d="M 256,256 L 304,256" fill="none" stroke="black"/>
<path d="M 320,320 L 416,320" fill="none" stroke="black"/>
<path d="M 456,320 L 552,320" fill="none" stroke="black"/>
<path d="M 320,336 L 424,336" fill="none" stroke="black"/>
<path d="M 456,336 L 552,336" fill="none" stroke="black"/>
<path d="M 320,416 L 408,416" fill="none" stroke="black"/>
<path d="M 472,416 L 552,416" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 280,432 L 304,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
<polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
<polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
<polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="212">[Registrar-Agent</text>
<text x="308" y="228">authenticated&amp;authorized?]</text>
<text x="240" y="260">PVR</text>
<text x="280" y="292">[accept</text>
<text x="348" y="292">device?]</text>
<text x="436" y="324">mTLS</text>
<text x="440" y="340">RVR</text>
<text x="456" y="356">~</text>
<text x="460" y="372">[extract</text>
<text x="536" y="372">DomainID]</text>
<text x="456" y="388">[update</text>
<text x="532" y="388">audit-log]</text>
<text x="456" y="404">~</text>
<text x="440" y="420">Voucher</text>
<text x="244" y="436">Voucher'</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/requestvoucher</spanx>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>

<t><list style="symbols">
  <t>the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate</t>
  <t>the <spanx style="verb">agent-signed-data</spanx> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <spanx style="verb">kid</spanx> Header Parameter of the JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> field.</t>
  <t>the product-serial-number inside the <spanx style="verb">agent-signed-data</spanx> is equal to the <spanx style="verb">serial-number</spanx> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
  <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <spanx style="verb">agent-signed-data</spanx> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
</list></t>

<t>If the registrar is unable to process the request or validate the PVR, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
  <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported</t>
</list></t>

<t>Otherwise, the registrar converts the PVR artifact to an Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>

<t>Optionally, the domain registrar <bcp14>MAY</bcp14> respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>

<t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="masa_interaction"><name>MASA Interaction</name>

<t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <spanx style="verb">/.well-known/brski/requestvoucher</spanx>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges <bcp14>MUST</bcp14> support the same formats as supported by those pledges.</t>

<t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> chose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <spanx style="verb">prior-signed-voucher-request</spanx> field of the RVR that</t>

<t><list style="symbols">
  <t>the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field contains an EE certificate that signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent</t>
  <t>the registrar EE certificate in the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field and the Registrar-Agent EE certificate in the <spanx style="verb">agent-sign-cert</spanx> field of the RVR are signed by the same domain owner.</t>
  <t>the <spanx style="verb">agent-signed-data</spanx> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <spanx style="verb">agent-sign-cert</spanx> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <spanx style="verb">kid</spanx> Header Parameter of the JWS Protected Header in the <spanx style="verb">agent-signed-data</spanx> field.</t>
  <t>the product-serial-number inside the <spanx style="verb">agent-signed-data</spanx> is equal to the <spanx style="verb">serial-number</spanx> field of PVR and the <spanx style="verb">serial-number</spanx> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
</list></t>

<t>If the <spanx style="verb">agent-sign-cert</spanx> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>

<t>If the verification fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden</t>
  <t>404 Not Found: if the request is for a device that is not known to the MASA</t>
  <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type</t>
  <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA</t>
</list></t>

<t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="supply-voucher-to-registrar-agent"><name>Supply Voucher to Registrar-Agent</name>

<t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>

<t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Registrar-Countersigned Voucher artifact (Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the domain registrar is unable to return the Voucher, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure</t>
  <t>502 Bad Gateway: if the registrar received an invalid response from the MASA</t>
  <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <spanx style="verb">Retry-After</spanx> response header field with an appropriate value</t>
  <t>504 Gateway Timeout: if the backend request to the MASA timed out</t>
</list></t>

</section>
<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>

</section>
<section anchor="rvr_artifact"><name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>

<t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <spanx style="verb">ietf-voucher-request</spanx> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>

<figure title="RVR Representation in General JWS JSON Serialization Syntax" anchor="rvr_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<section anchor="rvr_data"><name>JSON RVR Data</name>

<t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <spanx style="verb">ietf-voucher-request</spanx> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a copy of the <spanx style="verb">nonce</spanx> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
  <t><spanx style="verb">idevid-issuer</spanx>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <spanx style="verb">x5c</spanx> field</t>
  <t><spanx style="verb">prior-signed-voucher-request</spanx>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>

<t><list style="symbols">
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the value <spanx style="verb">agent-proximity</spanx> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar</t>
  <t><spanx style="verb">agent-sign-cert</spanx>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <spanx style="verb">agent-signed-data</spanx> field of the contained PVR</t>
</list></t>

<t>Note that the <spanx style="verb">ietf-voucher-request</spanx> YANG module defines the leaf <spanx style="verb">agent-sign-cert</spanx> as binary;
this specification refines it as a JSON array structure similar to the <spanx style="verb">x5c</spanx> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>

<t><xref target="rvr_data_example"/> below shows an example for the JSON RVR Data:</t>

<figure title="JSON RVR Data Example" anchor="rvr_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-3"><name>JWS Protected Header</name>

<t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
However, the <spanx style="verb">x5c</spanx> Header Parameter <bcp14>MUST</bcp14> also contain the certificate chain for verification at the MASA.</t>

</section>
<section anchor="jws-signature-3"><name>JWS Signature</name>

<t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
</section>
<section anchor="voucher_artifact"><name>Backend Response Artifact: Voucher</name>

<t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <spanx style="verb">assertion</spanx> field <bcp14>MAY</bcp14> contain the value <spanx style="verb">agent-proximity</spanx> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>

<t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>

<figure title="JSON RVR Data Example" anchor="voucher_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "callee4711"
  }
}
]]></artwork></figure>

</section>
<section anchor="rcv_artifact"><name>Response Artifact: Registrar-Countersigned Voucher</name>

<t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>

<t>For BRSKi-PRM, the domain registrar <bcp14>MUST</bcp14> add an additional JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>

<figure title="Voucher' Representation in General JWS JSON Serialization Syntax" anchor="rcv_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork></figure>

<t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <spanx style="verb">pinned-domain-cert</spanx> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>

<t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>

<t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>

<section anchor="json-voucher-data"><name>JSON Voucher Data</name>

<t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>

</section>
<section anchor="jws-protected-header-registrar"><name>JWS Protected Header (Registrar)</name>

<t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data</t>
</list></t>

<t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>

</section>
<section anchor="jws-signature-registrar"><name>JWS Signature (Registrar)</name>

<t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>

<t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>

</section>
</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including Key Infrastructure interaction)</name>

<t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>

<t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,256" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,256" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,256" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,256" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,256" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 344,208" fill="none" stroke="black"/>
<path d="M 424,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 336,224" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 288,240 L 304,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="328" y="132">Key</text>
<text x="404" y="132">Infrastructure</text>
<text x="516" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="384" y="212">[Request]</text>
<text x="396" y="228">[Certificate]-</text>
<text x="240" y="244">Enroll-Resp</text>
<text x="16" y="276">~</text>
<text x="168" y="276">~</text>
<text x="312" y="276">~</text>
<text x="456" y="276">~</text>
<text x="560" y="276">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/requestenroll</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>

<t><list style="symbols">
  <t>the PER was signed signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
  <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
</list></t>

<t>If the registrar is unable to process the request or validate the PER, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the PER cannot be verified</t>
  <t>404 Not Found: if the PER is for a device that is not known to the registrar</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>

<t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate singed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>If the domain registrar is unable to return the Enroll-Resp, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure</t>
  <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure</t>
  <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>SHOULD</bcp14> include the Retry-After response header field with an appropriate value</t>
  <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out</t>
</list></t>

<t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>

</section>
<section anchor="er_artifact"><name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>

<t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>

<t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>

</section>
</section>
<section anchor="obtain_cacerts"><name>Obtain CA Certificates</name>

<t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>

<t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>

<figure title="CA certificates retrieval exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="60" y="132">Obtain</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">caCerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <spanx style="verb">/.well-known/brski/wrappedcacerts</spanx>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a GET request at <spanx style="verb">/.well-known/brski/wrappedcacerts</spanx>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-no-artifact"><name>Request (no artifact)</name>

<t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.</t>

</section>
<section anchor="cacerts_artifact"><name>Response Artifact: CA-Certificates (caCerts)</name>

<t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>

<t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>

<figure title="Voucher' Representation in General JWS JSON Serialization Syntax" anchor="cacerts_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="cacerts_data"><name>JSON CA Data</name>

<t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>

<figure title="CDDL for JSON CA Data (cacerts)" anchor="cacerts_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [+ bytes]
}
]]></artwork></figure>

<t>The <spanx style="verb">x5bag</spanx> member <bcp14>MUST</bcp14> follow the definition of the <spanx style="verb">x5bag</spanx> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>

<t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>

<t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>

<figure title="JSON CA Data Example" anchor="cacerts_data_example"><artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-4"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
</list></t>

<t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within PER" anchor="cacerts_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-4"><name>JWS Signature</name>

<t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>

<t><list style="symbols">
  <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
  <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
  <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
</list></t>

<t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> stored information from the first connection with the pledge to optimize.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 136,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="100" y="196">Voucher'</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/svr</spanx>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"></xref> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers" type="1">
  <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
  <t>Provisionally install the initial domain trust anchor contained in the <spanx style="verb">pinned-domain-cert</spanx> field of the voucher.</t>
  <t>Validate the registrar EE certificate received in the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
  <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but use the pinned domain certificate instead of the MASA certificate for the verification.</t>
</list></t>

<t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>

<t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.</t>

<t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>

<section anchor="request-artifact-registrar-countersigned-voucher"><name>Request Artifact: Registrar-Countersigned Voucher</name>

<t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>

</section>
<section anchor="vstatus_artifact"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>

<figure title="vStatus Representation in General JWS JSON Serialization Syntax" anchor="vstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="vstatus_data"><name>JSON Voucher Status Data</name>

<t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <spanx style="verb">voucherstatus-post</spanx> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">version</spanx>: contains a version number for the format and semantics of the other fields;
this specification assumes version <spanx style="verb">1</spanx> just like BRSKI <xref target="RFC8995"/></t>
  <t><spanx style="verb">status</spanx>: contains the boolean value <spanx style="verb">true</spanx> in case of success and <spanx style="verb">false</spanx> in case of failure</t>
  <t><spanx style="verb">reason</spanx>: contains a human-readable message;
<bcp14>MAY</bcp14> be omitted in the case of success;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
  <t><spanx style="verb">reason-context</spanx>: contain an arbitrary JSON object that provides additional information specific to a failure;
 <bcp14>MAY</bcp14> be omitted in the case of success</t>
</list></t>

<t><xref target="vstatus_data_example_success"/> below shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>

<figure title="JSON Voucher Status Data Success Example" anchor="vstatus_data_example_success"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed."
}
]]></artwork></figure>

<figure title="JSON Voucher Status Data Failure Example" anchor="vstatus_data_example_error"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate
             because it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-5"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
</list></t>

<t><xref target="vstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within vStatus" anchor="vstatus_header"><artwork align="left"><![CDATA[
# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-5"><name>JWS Signature</name>

<t>The plege <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certficate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done, if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by pledge as reflected in the vStatus artifact.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">caCerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/scac</spanx>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>

<t>If the pledge is unable to process the caCerts, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate)</t>
  <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates)</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="request-artifact-ca-certificates-cacerts"><name>Request Artifact: CA-Certificates (caCerts)</name>

<t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/ser</spanx>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/pkcs7-mime</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>

</section>
<section anchor="estatus_artifact"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>

<figure title="eStatus Representation in General JWS JSON Serialization Syntax" anchor="estatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="estatus_data"><name>JSON Enroll Status Data</name>

<t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <spanx style="verb">enrollstatus-post</spanx> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/>.</t>

<t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>

<figure title="JSON Enroll Status Data Success Example" anchor="estatus_data_example_success"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork></figure>

<figure title="JSON Enroll Status Data Failure Example" anchor="estatus_data_example_error"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-6"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
</list></t>

<t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within eStatus" anchor="estatus_header"><artwork align="left"><![CDATA[
# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-6"><name>JWS Signature</name>

<t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

<dl>
  <dt>Implementation Note:</dt>
  <dd>
    <t>Due to similar JSON Data, in a failure case the resulting eStatus artifact is not distinguishable from a vStatus artifact defined in <xref target="vstatus_artifact"/> (both are signed using the pledge IDevID credential).
Hence, Registrar-Agents need to carefully manage from which exchange/endpoint they receive a status artifact and ensure to only send it to the corresponding endpoint on the domain registrar.
BRSKI-PRM implementations <bcp14>MAY</bcp14> utilize the <spanx style="verb">reason-context</spanx> to provide a distinguishable token that enables the registrar to detect status artifacts provided to the wrong endpoint, e.g., using the <spanx style="verb">reason-context</spanx> object key <spanx style="verb">pvs-details</spanx> for vStatus and <spanx style="verb">pes-details</spanx> for eStatus.
Standardization of this mechanism is out of scope of this document.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including MASA interaction)</name>

<t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>

<t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>

<t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>

<figure title="Voucher Status telemetry exchange" anchor="exchangesfig_uc2_9"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,288" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,288" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,256" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,288" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,288" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="480" y="228">audit-log</text>
<text x="396" y="244">device</text>
<text x="464" y="244">audit-log</text>
<text x="264" y="276">[verify</text>
<text x="340" y="276">audit-log]</text>
<text x="312" y="292">|</text>
<text x="16" y="308">~</text>
<text x="168" y="308">~</text>
<text x="312" y="308">~</text>
<text x="456" y="308">~</text>
<text x="560" y="308">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/voucher_status</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <spanx style="verb">serial-number</spanx> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>

<t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>

<t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>Second, the Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/enrollstatus</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <spanx style="verb">serial-number</spanx> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or <bcp14>MAY</bcp14> fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent <bcp14>MAY</bcp14> need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the pStatus artifact, the pledge <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tstatus_artifact"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>

<t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="tStatus Representation in General JWS JSON Serialization Syntax" anchor="tstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="tstatus_data"><name>JSON Status Trigger Data</name>

<t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>

<figure title="CDDL for JSON Status Trigger Data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <spanx style="verb">version</spanx> <bcp14>SHALL</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">serial-number</spanx> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>

<t>The <spanx style="verb">created-on</spanx> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>

<t>The <spanx style="verb">status-type</spanx> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>

<t><list style="symbols">
  <t><spanx style="verb">bootstrap</spanx> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain)</t>
  <t><spanx style="verb">operation</spanx> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers)</t>
</list></t>

<t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.
The enumeration values are managed in an IANA registry to track extensions to BRSKI-PRM (see <xref target="iana_con"/>).</t>

<t><xref target="stat_req_data"/> below shows an example for the JSON Status Trigger Data using the status type <spanx style="verb">bootstrap</spanx>:</t>

<figure title="JSON Status Trigger Data Example" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-7"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
</list></t>

<t><xref target="tstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within tStatus" anchor="tstatus_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-7"><name>JWS Signature</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
<section anchor="pstatus_artifact"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <spanx style="verb">status-type</spanx>.</t>

<t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="pStatus Representation in General JWS JSON Serialization Syntax" anchor="pstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="pstatus_data"><name>JSON Pledge Status Data</name>

<t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>:</t>

<figure title="CDDL for JSON Pledge Status Data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": $status-enums,
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }

  $status-enums /= $status-bootstrap
  $status-bootstrap /= "factory-default"
  $status-bootstrap /= "voucher-success"
  $status-bootstrap /= "voucher-error"
  $status-bootstrap /= "enroll-success"
  $status-bootstrap /= "enroll-error"

  $status-enums /= $status-operation
  $status-operation /= "connect-success"
  $status-operation /= "connect-error"
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>

<t>The <spanx style="verb">reason</spanx> and <spanx style="verb">reason-context</spanx> members follow the definitions in <xref target="vstatus_data"/> (same as in JSON Voucher Status Data).</t>

<t>The <spanx style="verb">status</spanx> member <bcp14>SHALL</bcp14> contain a status value corresponding to the queried <spanx style="verb">status-type</spanx>.
For this, the CDDL in <xref target="stat_res_def"/> defines <spanx style="verb">status</spanx> as an extensible list of valid status label enumerations that correspond to different status-type values.
This document defines the following status label enumerations:</t>

<t><list style="symbols">
  <t>"status-bootstrap" with an (extensible) enumeration of status labels corresponding to the status-type <spanx style="verb">bootstrap</spanx> defined in <xref target="stat_req_def"/></t>
  <t>"status-operation" with an (extensible) enumeration of status labels corresponding to the status-type <spanx style="verb">operation</spanx> defined in <xref target="stat_req_def"/></t>
</list></t>

<t>Other documents may enhance the enumeration to reflect further status information or add additional enumerations for other <spanx style="verb">statustrigger</spanx> status-types (see <xref target="tstatus_data"/>).</t>

<t>The status-bootstrap enumeration defines the following status values with the given semantics, while additional information <bcp14>MAY</bcp14> be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members:</t>

<t><list style="symbols">
  <t><spanx style="verb">factory-default</spanx>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">voucher-success</spanx>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">voucher-error</spanx>: Pledge voucher processing terminated with error.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">enroll-success</spanx>: Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
  <t><spanx style="verb">enroll-error</spanx>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
</list></t>

<t>The status-bootstrap status values <bcp14>SHALL</bcp14> be cumulative in the sense that <spanx style="verb">enroll-success</spanx> and <spanx style="verb">enroll-error</spanx> imply <spanx style="verb">voucher-success</spanx>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>

<figure title="status-bootstrap JSON Pledge Status Data Example" anchor="stat_example_bootstrap"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": "enroll-success",
  "reason": "Pledge has processed the enrollment exchange successfully."
}
]]></artwork></figure>

<t>The status-operation enumeration defines the following values with the given semantics, while additional information <bcp14>MAY</bcp14> be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members:</t>

<t><list style="symbols">
  <t><spanx style="verb">connect-success</spanx>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
  <t><spanx style="verb">connect-error</spanx>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
</list></t>

<t><xref target="stat_example_operation"/> below provides an example for operational status information in the JSON Pledge Status Data:</t>

<figure title="status-operation JSON Pledge Status Data Example" anchor="stat_example_operation"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "Pledge connection establishment terminated with error.",
  "reason-context": {
    "app-server.example.com" : "Cannot verify TLS server certificate."
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-8"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the x5c Header Parameter, it <bcp14>MUST</bcp14> be available at the Registrar-Agent for verification</t>
</list></t>

<t><xref target="pstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within pStatus" anchor="pstatus_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-8"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
</section>
<section anchor="log_hints"><name>Logging Considerations</name>

<t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures. 
The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>

<t><list style="symbols">
  <t>PVR received from Registrar-Agent</t>
  <t>Acceptance of a pledge into the domain</t>
  <t>Voucher provided to Registrar-Agent</t>
  <t>PER received from Registrar-Agent</t>
  <t>Pledge EE certificate requested</t>
  <t>Pledge EE certificate received from Domain CA</t>
  <t>Pledge EE certificate provided to Registrar-Agent</t>
  <t>CA Certificates provided to Registrar-Agent</t>
  <t>Voucher Status received from Registrar-Agent</t>
  <t>Enroll Status received from Registrar-Agent</t>
  <t>Pledge Status received from Registrar-Agent</t>
  <t>Pledge EE certificate revoked</t>
</list></t>

<t>For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
  <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
</list></t>

<t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different registrar-agents or if different registrars have been used.</t>

</section>
<section anchor="iana_con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Obtain wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query pledge status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="pledge-enrollment-type-indication"><name>Pledge Enrollment Type Indication</name>

<t>IANA is required to enhance the Registry entitled "BRSKI Parameters" with a new sub-registry for the enroll-type.
The <spanx style="verb">enroll-type</spanx> member is a trigger parameter for the pledge that allows to specify what type of certificate is to be enrolled via PVR.
BRSKI-PRM results in a generic operational device certificate (LDevID).
The sub-registry allows for indicating other certificates to be enrolled such as application-related certificates, which can be used by other specifications.
The references for each entry <bcp14>MUST</bcp14> also provide a CDDL <xref target="RFC8610"/> definition with a separate <spanx style="verb">"/="</spanx> rule for <spanx style="verb">$enroll-type</spanx> defined in <xref target="tper_CDDL_def"/>.
The following item is in the initial registration, with this document (see <xref target="tper_artifact"/>) as the reference:</t>

<t><list style="symbols">
  <t>enroll-generic-cert</t>
</list></t>

</section>
<section anchor="pledge-status-telemetry-enhancements"><name>Pledge Status Telemetry Enhancements</name>

<t>IANA is required to enhance the Registry entitled "BRSKI Parameters" with a new sub-registry for the status-type.
The <spanx style="verb">status-type</spanx> member is a query parameter for the pledge that allows to specify which status information is to be returned.
The sub-registry allows for indicating the defined status-types.
The references for each entry <bcp14>MUST</bcp14> also define an enumeration of status labels corresponding to the defined status-type using separate CDDL <xref target="RFC8610"/> rules for <spanx style="verb">$status-enums</spanx> defined in <xref target="stat_res_def"/>.
The following item is in the initial registration, with this document (see <xref target="tstatus_data"/>) as the reference:</t>

<t><list style="symbols">
  <t>bootstrap</t>
  <t>operation</t>
</list></t>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <spanx style="verb">proximity-registrar-cert</spanx> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>

<t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.<br />
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="18" month="June" year="2024"/>
      <abstract>
	 <t>   [I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact called
   voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-10"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="4" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>

<reference anchor="RFC7951">
  <front>
    <title>JSON Encoding of Data Modeled with YANG</title>
    <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
    <date month="August" year="2016"/>
    <abstract>
      <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7951"/>
  <seriesInfo name="DOI" value="10.17487/RFC7951"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="3" month="June" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-ietf-anima-brski-ae/.

   Source for this draft and an issue tracker can be found at
   https://github.com/anima-wg/anima-brski-ae.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-11"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.ietf-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="18" month="April" year="2024"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>

<reference anchor="RFC4648">
  <front>
    <title>The Base16, Base32, and Base64 Data Encodings</title>
    <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
    <date month="October" year="2006"/>
    <abstract>
      <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4648"/>
  <seriesInfo name="DOI" value="10.17487/RFC4648"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2767?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>

<t><list style="numbers" type="1">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers" type="1">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
  <t>Reordered description in section <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
  <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
  <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
  <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
  <t>Changes incorporated based on Shepherd review PR #133:
  <list style="symbols">
      <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
      <t>Restructuring of section <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
      <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
      <t>Enhancement of IANA considerations in <xref target="iana_con"/> with values for the trigger messages and with an enhancement of the pledge status query and response to allow for a more flexible status inquiry and reporting</t>
    </list></t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_component"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
BM+Foe25pIqjDV4Js/uFcmmRJZpMX8n+NAEToXEk9Ndtq71DbypLQ9HS9+wc
7JssyGYdXVPMUzVZ942WMh229gz7z4g0SYoXRa9gCM2Ic6Td1F8nc9jkC6++
favfd+33pHn9CjwFzdmWMYsvanzTZeEvlzPHpB/n+cAyKd93vX/c56Mm5x3X
tgx/ec+rIfpPBg5/3nFNyv7zznqebSG7frYNT3jr8Z43Px52A+zi+239+UMU
nvAfWf6BK0bCzx8iYKXnn+nV8H/+YO5+8HzLzx/CDc19vmU97k/rfvkncHW4
L9pfY+jluDqaL4bIxD8NV0fzxRCrZFOhxyL2oodejHh/bngsIi8GeOYu9fNZ
S5314/gPZrw4238w48Xfu/9g2/cfhBKgqpDebRLOOsNtQBKMGB9UtlFzOXEl
lTqj47eF6RwXmkHrhqZpMmWV1dPJeoJmkhz5fsnhomU+qdrCJSL2jGhzjBmV
qZ1of2Com3DQnnCC5YMbOg5XEpH6FWn1unJkxkCPQTHeLW4QifCyuVPrnONT
ZrDp7DKlVNVhzsmURiItBHa9zlZksbOgsKMj+2HW3HDDZkTqTBpnum4qSJi0
BN/uGq/7xpaxaI28yonSdxxetnWMp9azZZtGwz9QlgXZZ3uBk1pPqJFqrRvI
BjYn2wGAhe66hZDJiwk2+52TCWJ2xY+uLbUtd1cTFtDvLXmg6yYrQJdtTXJe
5w8HbWJ2Sw1DWWb5Rq9Yhz/6KVrLKrKi0oZ4rlcKRNzc/WUOTKF8xAuzwCaK
cXSN5fIWDcQz/Rsu/XdpmYspXWkc0SJ13sy1x1C4k1vG4Pv8aR4JyYudpam1
RMHpXB8mDJlTcAXDNbWOr9A66Va9d014bu44ps6Mz4eOJiNuMDLTcGa1MYZ6
63XrQLFGSNUWULvbs3bBmOE1bKRFtXqNscQz30lbMEVVxyQaKzoOj9WY3Ilm
ASy4b6pfa0o2ujxqri1xmjmNP9xvMa2oybEOxoGTwG3wgOHfOoUtB0YuFiYy
DpOTXJYmwluvC+aoD4kdYpOYKi+JGnsWrQr9SWi3Zcu5Hij6SYeFCUZvxpe/
Rz3RHfK96YnLPd9Y1hzRLNAL3BdnTxToBY7q4LzYDgmWJ30N1XnxZ3+V7gb5
uU6grXrvuspFr6FTxNRW/PkzvOgoF72GThHVXxdcrfPjK38xEP3m9JGPS624
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
rU8sdDoKq1meiZIhvAKVdINabN/+4oK+EGWl1MTjkT3u4tEaVUcJXqZ8xwZ0
cLwHOp5t9LN3pfYp5yMuHKMF/x8AHeABM3hZsHIM/1G7pwCCltk4vdJO/8Fi
DSKp+T8u/uPy6J+TH5z5R34Gq0OIpTLRCl/g7bpR5dCYghAp8iz+zer1TUA0
/5sWmNgyb/jMQ2bL4NdPU4pN+M9RJ8xknXBmiDx9rX5B5AlxscwVxaW4m3h2
iOC7QxSlQYsRTobIKpMo96IQOishn97ciwx24dwQx3sgDXUyRHB+FmcaqL81
xLc0qw7BgqbV+yHHpFUZ4h/iH2pAUMbL2UVqZjycJfrCuwsGw38KfqtsP6V1
erW2z27R0vB2he9ocb0fsZ3gutLIFpE6Vjd1M70sUpIFAuYuS7SlmQHw79JP
5Es3Xi0/yVITg/AtZEWEeCx7JfLtQXmjHblnbVmOqlaxZHv2SVgAXiMALS/3
wmGVlDLWkogaI9Gs4kri4Foe+P0jtZw+sBVV1i3dB+BXlin4p+6+Y1qUZ5YB
sdMo8pnscPk9kfwmX7uY7vkHqjnrojIFl11sUoGHzYiWOFVqJ1LNWPb2OZPY
UiYMiL7bAZ4QbMO/v/vbP979e2294Xb3v/9flbOtXpOFHf0VR2dh1uOr+hFa
LVFxaYp+EfZeCMJSWdaqd6VEUDStdGT+IDJ/i8X/AvT+V0GM/JQvcV+PGEYk
TBZ4qcMYgoaC/7/iGSnse3XmyonMM0d3r3+aY37+espPUniR4VHcZmBh658n
Qn6Twlv+E4H+M1/m8Lkg1lPKRrrNOOHK6UDn8wOy/xrCrUbz36DbMgPrr6Vo
YnR7r5uYN0lFlA5EkHE8FdK7WDiJYB2cFNviLyzxBTSa/ioP8ctf4YtY3+aS
UdH/nK7/FR6xiqJyiN5XYDy9zz7gs/ks5Y/cZdRMoiP0O2a39j+jIHv5f6Ig
/3q1Wr/8K38Mqz1gLuz3n5KAGT6J296qIGojWOC1LxOLLAa0DBetoQUPgKWA
P3qWp19gOBys0Loc+T7z+mlV8EtL8TH/VMLznPlzsypIPrqJSYU4Y+dSzyCN
X11oRRMtNpCHLCm1kKuYszgCNWkZZeXMBpIyO6UoV1E37oyVna5y5sVL8E6c
VB0w8faBVKVS1Io7VyeOkQK9OEGroBeONyoxVrxMHV852rTMOUa7vjFTWL51
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
XLDKGszPSD2QRdZ95fmT7e2tMO9jE9UeIzpUL6g9B/CjQeRdXRhszsXw4qYb
u1LJEBuFAUl5oQB+WLrZS5NW/iYjxTbgEmCG6KpGeevy8hL00izmjMYvcCFC
5RfR+D2iLBA30xieBn6ndwqqjViRpT/d1oGlTUzbD2otjAwkXhbSJCVWwrC4
JfZGdu77Z2J8qF2yvXwuXF8nLkrrOJ9Cuj0n1HpWXFHwpKHOm/HLH9X3e8cU
swhKZ2BRMi0D30bPWpT9UqvffmrAZueYv0Rv0P2j+g+mVnR+qf3Ll3/BMG3A
spwplQNZw/bVcP9qRy/94+K4zt67YD9I3bGxeBy7r76jr9xxP58tyM53yMFv
q9vZQrnxF7fqpB4ms6h/A8+Hs8aXCz2ZLY10Wr+OnqJB6NbJhj19e+05aur3
4uixPTi440E6cbb5dEnyyYLs+/NVNLzv7IeHkarPv1zMrp/MftZfNF+nCz3B
33r18Cmw8601NlaTup5OLG3v9GaK3r6t25Zy24+20aQxSCZjI3Hb6us0+nLR
v+nP+9vhfJQP7yf5cG7Yw/v4Br5zAz/b6JZddyL8irZ0nabyOG7tpw03dbsk
Zn8O06nz5SJRAlPdu46fzhrGfgL7MKmTvd+G0WN1YNp9xYv1+xFJUlfRGqY9
aLlK0huR0NUPg2iSpPoIRrntjRR9Z6i6rt8n7ZGt3lu2QYIOuRmRQdtVms4o
1l4tW18PLWJME/dmQmbqtDs8WOOwQzracLT4cuE/kXjQmihq24ibW7fjwwjG
zchuihFgUYPMXuzmQ3XQsYnRcm23MewlutEhTfji3Fe+XDS/GZahk04aGsvZ
NojVjjGGJ7p6w1qkmt5RbXOh6ca9cW2M05YdD5YW7OnIudVH9WynE21Dll8u
0pAcSDY56DrMwR7ZOzGHOcyhay1bsaGSa0MxWkThI9gqjNoy/cVgbCxb0bQD
o2TOfJAFC6NvLsK5Fw88eFs3lEFzZvuWZY2aI8fXDEW/L/4+9jWz09mattYe
LWA+8ZeL7NWzZs2pOlibB+ICRY3cQ0hstX/92CCHoWOMiJN4ZkdVpvXccnva
I8x9MU38w2gxWs/IYKirsLumu3ATUs+bQLfRVEkXprPL/PFg7ll91a83V559
64wU/5s7Ttu6rbaHHb81JCQ2E80gcCq2DaPcjxo6nL9GjHjQgNW03bq/Hy1g
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
ukwDAA==

-->

</rfc>

