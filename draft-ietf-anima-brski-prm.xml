<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.32 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 115?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI) <xref target="RFC8995"/> to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 123?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar. 
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
First, the IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevIDs do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security at the application layer.
Another reason is the support for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.
To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>. 
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data. 
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) because the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., NFC).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.<br />
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure. 
It <bcp14>MAY</bcp14>  be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols can be used as long as they support the exchange of the necessary data objects. 
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the LDevID by the registrar via the TLS handshake and includes that LDevID as the "proximity-registrar-cert" into the voucher request to allow for the MASA to decide whether or how to respond to the voucher-request. Until the pledge receives the voucher, the registrar certificate is accepted provisionally. 
In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and takes the LDevID provided by the registrar-agent from the PVR trigger message and includes it into his PVR. 
This allows not only the MASA, but also the registrar to decide whether or how to proceed with the BRSKI-PRM PVR. 
In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>. 
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER. 
It will also be triggered for processing of the responses and the generation of status information one the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge. 
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object. 
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. 
The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is vendor dependent and may contain information regarding the vendor, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therfore needs to be sufficiently unique.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

<t>As an alternative discovery mechanism GRASP M_DISCOVERY multicast with M_RESPONSE, based on <xref target="RFC8990"/>, may be used. 
The specification of this approach to discover a pledge from the registrar-agent is left for further study.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI. 
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,320" fill="none" stroke="black"/>
<path d="M 32,376 L 32,576" fill="none" stroke="black"/>
<path d="M 32,616 L 32,696" fill="none" stroke="black"/>
<path d="M 32,712 L 32,736" fill="none" stroke="black"/>
<path d="M 32,792 L 32,864" fill="none" stroke="black"/>
<path d="M 32,920 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,368 L 168,576" fill="none" stroke="black"/>
<path d="M 168,608 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,496 L 312,576" fill="none" stroke="black"/>
<path d="M 312,624 L 312,688" fill="none" stroke="black"/>
<path d="M 312,720 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,864" fill="none" stroke="black"/>
<path d="M 312,928 L 312,976" fill="none" stroke="black"/>
<path d="M 312,1008 L 312,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,320" fill="none" stroke="black"/>
<path d="M 432,384 L 432,480" fill="none" stroke="black"/>
<path d="M 432,560 L 432,576" fill="none" stroke="black"/>
<path d="M 432,624 L 432,688" fill="none" stroke="black"/>
<path d="M 432,720 L 432,736" fill="none" stroke="black"/>
<path d="M 432,800 L 432,864" fill="none" stroke="black"/>
<path d="M 432,928 L 432,944" fill="none" stroke="black"/>
<path d="M 432,1008 L 432,1040" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,320" fill="none" stroke="black"/>
<path d="M 536,384 L 536,496" fill="none" stroke="black"/>
<path d="M 536,544 L 536,576" fill="none" stroke="black"/>
<path d="M 536,624 L 536,688" fill="none" stroke="black"/>
<path d="M 536,720 L 536,736" fill="none" stroke="black"/>
<path d="M 536,800 L 536,864" fill="none" stroke="black"/>
<path d="M 536,928 L 536,976" fill="none" stroke="black"/>
<path d="M 536,1008 L 536,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 160,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 160,320" fill="none" stroke="black"/>
<path d="M 176,384 L 216,384" fill="none" stroke="black"/>
<path d="M 264,384 L 304,384" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 256,432 L 304,432" fill="none" stroke="black"/>
<path d="M 320,496 L 408,496" fill="none" stroke="black"/>
<path d="M 456,496 L 528,496" fill="none" stroke="black"/>
<path d="M 320,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 528,544" fill="none" stroke="black"/>
<path d="M 176,560 L 200,560" fill="none" stroke="black"/>
<path d="M 280,560 L 304,560" fill="none" stroke="black"/>
<path d="M 176,624 L 216,624" fill="none" stroke="black"/>
<path d="M 264,624 L 304,624" fill="none" stroke="black"/>
<path d="M 320,640 L 344,640" fill="none" stroke="black"/>
<path d="M 392,640 L 424,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 400,656 L 424,656" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 288,672 L 304,672" fill="none" stroke="black"/>
<path d="M 288,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,736 L 192,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 160,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 304,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 320,960 L 336,960" fill="none" stroke="black"/>
<path d="M 512,960 L 528,960" fill="none" stroke="black"/>
<path d="M 320,976 L 352,976" fill="none" stroke="black"/>
<path d="M 504,976 L 528,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 280,1024 L 304,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,960 524,954.4 524,965.6" fill="black" transform="rotate(0,528,960)"/>
<polygon class="arrowhead" points="536,496 524,490.4 524,501.6" fill="black" transform="rotate(0,528,496)"/>
<polygon class="arrowhead" points="432,640 420,634.4 420,645.6" fill="black" transform="rotate(0,424,640)"/>
<polygon class="arrowhead" points="328,976 316,970.4 316,981.6" fill="black" transform="rotate(180,320,976)"/>
<polygon class="arrowhead" points="328,656 316,650.4 316,661.6" fill="black" transform="rotate(180,320,656)"/>
<polygon class="arrowhead" points="328,544 316,538.4 316,549.6" fill="black" transform="rotate(180,320,544)"/>
<polygon class="arrowhead" points="312,1024 300,1018.4 300,1029.6" fill="black" transform="rotate(0,304,1024)"/>
<polygon class="arrowhead" points="312,944 300,938.4 300,949.6" fill="black" transform="rotate(0,304,944)"/>
<polygon class="arrowhead" points="312,928 300,922.4 300,933.6" fill="black" transform="rotate(0,304,928)"/>
<polygon class="arrowhead" points="312,720 300,714.4 300,725.6" fill="black" transform="rotate(0,304,720)"/>
<polygon class="arrowhead" points="312,624 300,618.4 300,629.6" fill="black" transform="rotate(0,304,624)"/>
<polygon class="arrowhead" points="312,432 300,426.4 300,437.6" fill="black" transform="rotate(0,304,432)"/>
<polygon class="arrowhead" points="312,384 300,378.4 300,389.6" fill="black" transform="rotate(0,304,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,736 172,730.4 172,741.6" fill="black" transform="rotate(180,176,736)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,320 156,314.4 156,325.6" fill="black" transform="rotate(0,160,320)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,712 C 26,712 26,696 32,696" fill="none" stroke="black"/><circle cx="168" cy="368" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="608" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="432" y="340">~</text>
<text x="536" y="340">~</text>
<text x="40" y="372">(2)</text>
<text x="88" y="372">provide</text>
<text x="136" y="372">PVR</text>
<text x="160" y="372">t</text>
<text x="236" y="372">infrastructure</text>
<text x="240" y="388">TLS</text>
<text x="312" y="388">|</text>
<text x="276" y="404">[Reg-Agt</text>
<text x="368" y="404">authenticated</text>
<text x="264" y="420">and</text>
<text x="332" y="420">authorized?]</text>
<text x="232" y="436">PVR</text>
<text x="312" y="436">|</text>
<text x="276" y="452">[Reg-Agt</text>
<text x="364" y="452">authorized?]</text>
<text x="272" y="468">[accept</text>
<text x="340" y="468">device?]</text>
<text x="276" y="484">[contact</text>
<text x="344" y="484">vendor]</text>
<text x="432" y="500">RVR</text>
<text x="436" y="516">[extract</text>
<text x="512" y="516">DomainID]</text>
<text x="432" y="532">[update</text>
<text x="488" y="532">audit</text>
<text x="532" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="240" y="564">Voucher</text>
<text x="40" y="612">(2)</text>
<text x="88" y="612">provide</text>
<text x="136" y="612">PER</text>
<text x="160" y="612">t</text>
<text x="236" y="612">infrastructure</text>
<text x="240" y="628">PER</text>
<text x="368" y="644">CSR</text>
<text x="372" y="660">Cert</text>
<text x="240" y="676">Enroll-Resp</text>
<text x="44" y="708">2)</text>
<text x="80" y="708">query</text>
<text x="136" y="708">cACerts</text>
<text x="188" y="708">from</text>
<text x="268" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="236" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp--</text>
<text x="32" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="432" y="756">~</text>
<text x="536" y="756">~</text>
<text x="40" y="788">(3)</text>
<text x="88" y="788">provide</text>
<text x="152" y="788">voucher</text>
<text x="200" y="788">and</text>
<text x="264" y="788">certificate</text>
<text x="328" y="788">and</text>
<text x="376" y="788">collect</text>
<text x="436" y="788">status</text>
<text x="484" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="112" y="852">Enroll-Resp--</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="168" y="884">~</text>
<text x="312" y="884">~</text>
<text x="432" y="884">~</text>
<text x="536" y="884">~</text>
<text x="40" y="916">(4)</text>
<text x="88" y="916">provide</text>
<text x="152" y="916">voucher</text>
<text x="212" y="916">status</text>
<text x="256" y="916">and</text>
<text x="300" y="916">enroll</text>
<text x="356" y="916">status</text>
<text x="396" y="916">to</text>
<text x="448" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="360" y="964">req</text>
<text x="404" y="964">device</text>
<text x="456" y="964">audit</text>
<text x="496" y="964">log</text>
<text x="388" y="980">device</text>
<text x="440" y="980">audit</text>
<text x="480" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="240" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: <bcp14>MAY</bcp14> possess/trusts pledges IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons.</t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="172" y="148">pledge</text>
<text x="264" y="148">voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="116" y="212">pledge</text>
<text x="208" y="212">voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="236" y="244">enrollment-request</text>
<text x="128" y="260">(empty)</text>
<text x="124" y="292">pledge</text>
<text x="228" y="292">enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data" 

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge. 
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA. 
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification."</t>

</section>
<section anchor="PER-response"><name>Pledge Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. 
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.
Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation 
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation 
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID. 
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding. 
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation 
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTPS connection similar as described for the PER processing in Section 5.2 of <xref target="RFC8995"/>.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="216" y="260">enrollment-response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation 
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation 
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC8990'>
<front>
<title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<author fullname='B. Carpenter' initials='B.' role='editor' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' role='editor' surname='Liu'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t></abstract>
</front>
<seriesInfo name='RFC' value='8990'/>
<seriesInfo name='DOI' value='10.17487/RFC8990'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='13' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-04'/>
   
</reference>


<reference anchor='I-D.richardson-emu-eap-onboarding'>
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname='Alan DeKok' initials='A.' surname='DeKok'>
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='2' month='April' year='2023'/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-richardson-emu-eap-onboarding-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<?line 2035?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1YcR7Y3+H89RQ7+1jLYVAnQxTKnbwiQhVpCqEDIlrvH
J6lKIE1VZXVmFghLPut7je+/eZZ5lHmS2beI2BEZWVXI6tPtb4blC1RlxnXH
jn397W6326nzepRtJ0/6x389SG7y+jI5GmXDiyzJJ0k/q6bFZJiVyctimCWr
9FD3qP9yrZOenZXZtbyHH3WGxWCSjqGpYZme1908q8+76SQfp92zsrrKu9Ny
3N34tpOWWbqdvJpmZVrnxaRK0skweZlO0otsnE3qzs3FdrJzePByJ3n7XWeY
1tDg1sbW/U5Vw4M/paNiAp/U5Szr5NOSfqvqrY2Nbze2OtXsbJxXFbR6cjuF
pw72T5767S3qfJDW20lVDzvTfLuTJHUx2E6+vM2qL+GPQTGepoPafVDdjsvs
vFIfFGXtfwJDnBR1fp5nQ/hwUtBTdZm7ZtJZfVmU250urDe8eNxLnpZ5VsFz
vJjHdXZ+nk3sp0UJ8znOcbhVsvMdfGJ2Qj7kHrIMenhV10X3WXo56fbzyUXy
CCeR17fbycvZJB9c0pyG0MeXjze/uf8tz3E2qUt44rusHKeTW/goG6f5CBeF
xtE7x3H8peK+erAm8MiszLeTy7qeVtv37t3c3PTU1/fMzE56ydusnGSlndrJ
ZTFOK/fpv2pqNY2je0Pj+JSp7feSF1nqJrY/yovafESz2s2rQZEc38IqjvU0
+jDWOoe/0qrKkm/sLN6mo1FeZaNRNrFT2X3WfXx/44GeyjGc11+ycgRUDB9P
L+lsrHz9YDN58CB5/M3j5Fs4GStupiMY0l8GOBaangz/ZY/GkZbDqpjYSbzE
j7JRsht8y7sEPWYjWMbkuDivb+BYJW+L8qpyXY0H5dfIAv5SmUd7g1QvqFlP
9fW9zqCAieVns1odCVjdvfznK7e61VVhPqHBHBQn8F41GwGHGNz2JiM3igye
7Q3h2b/AjgQPdQ0ZFrCCWVUl+4OrrKwT0+zTWT0rs5ssV5RSZ38ZVL3zdNYb
ZraBl2ldX+ZAyX8trtO6IuqTF2gFruTj3iSrO9fZZJYhb7koi9lUWBOSOnLK
hN/6QH/8BV/uwVB+xaeBMc/Otvmx7s3FvYCzdiYFUHWdX1Pb/ae7D7ceb8iv
j755tOV+vS+/frNx3zzwzcPNh/Lr440H5tPH9x89Mr8+2txwv9pnv/2Wfj3o
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
mt3LEmkHZnMM8udwhPG0x3h+yXQLC0KS6351VcBN+POVFagR8STLpqZ7W5Vg
TN1zkgnwbsJIPxYujcJ/sRsU15OZkVOrNsXRsQEXquE935jjswIe7s/y5EVO
TT0DPTeDj57nKe48gk6cwXxV1GBFIDT8KycgVxb2q5Jk9RGFjTTxkb75dgvp
jy1ZT9CKPkqrS9C4RsZOZeL4xBMThvR0yXaxqiFxtI+LBZK1MMEs9+JbzVVT
WXCdVLWlwg+U1gcCsg5ipfAYL5JVANeMH6jCEHRigNA3DhmhIB48evAtrDmV
iyaP8h/9H/Rq7m8nX/7tS/SMqFImGD0Ay5fg+iXBS3/sBNGzHFmZ3T6fvvu+
P37x/bvr4dvD4t33B/VgfPp++Pb0l+Hu5s1gvPFoOP5284ety9EgP3gEz18O
7h+OBpP+9Gzrwd86+av8+eW7rdMZP/3tg/Tt5nT47Cp/sfv8l3ffP5/+8Pam
Ppuc1j+MT28Pfi7yl3v7ty9/eb15+PPgwavjg+pg/PBvneuz8eEIvz3ZO3x+
/PO7YvCsf/B6Y9Q/23j44Ie3T/NXby6/f32y8e1BfpP/cP/56Ifv+6N3u5vX
ZzCmg58Pbl7+fPC3Tv1y73X98ud3b17uvXn08uQH+HcwO/xl5+HbHPt5Onn3
9uHGi++f3J7dfzd9993pFf9+OT17O9rIjjdv370d/q0zHdzv3/4A6/DD1unt
cBfav9p8fvzmYCO9Otx7fTqavtt4ev/4zfMn7zZGz16fXr47/OV5/sNoevj6
7bfPXm8cvu9vHv6tc3i4N9p9/WZz7+RN/zTbP330+vT57ruNh29fXz29Pnlz
WL48Oe2fjd49+uF0sHn23ctfTr6/3D/df/ry9Xj46vTq+ZMfNjb/1tntXz28
ebc/hBb6j16/eWhaODx587x6M37/88vN5/tvTvtP3r15d//ls9Fhf//0IfT4
83Dj4T/6J/3D0/3p3zqX/cngJrva3O9/D098d3j/ZDx9eri/+eZ4/PSwv9d/
0P9++uTN1fPJCawpzOLw9Vb1/vD06ex0Mr08/eW0+uEXnBGM4c3rN+/NGH6G
MXx3Mnly1d88fdDf6D853ZAW3mxCq0+Oh+Pn3/cnT/Kz/Wn19ufnVTbu/61z
cDy+/Dm9ep7C24f9jecPB2+GJycnrx++fjt82t843LN/fz98ery/f3P85unu
6zGM56q6Tk8GD882n/+tUx7/cvoOKOr1u18uT99sHjx4cf/0l5dv+69P347S
4/3NjbOt+uTds6cvYPTjs9Hwl9fj1+Xg9PnLw83h8bvxu9HpVv23zkOg2/xs
Yzo+fvv+/23vbZsbVbIt4e/1Kxynv5wzUVUXkOVzfCdmIkoSICGDrIRMBFNP
nECgKiRAwpJsvXT0f5+1E9CLy1Wn+t47E/E8T0d0d7VtKcncuffaa+3MJDfJ
xFpE3kBNtPYq4vf+WEmewknZdbjatfWkYwuRubnBhKJ2OU9645aD2Tc+vxMs
s1oYTTfUkgNmz8DPLFDYgOnGYzWbKRvp8JdFatDcjZWBgtF58CVd5IMdLP/5
ncEmydjR8yzQVH9aGIG36CymPGx7RuqSf/CJWNjFfhPkiY9Ibdt+no2PQvXz
1Bsr6bNb7D+/i/CJu1BPh5HplLbXiXz9ducVmTorjIlYsgj2uPOMZGjr+63j
7zP08QF9XMZ+uo6y+zGnEemYixHsro+zsBNx63Zqsm5klHtbF5rDS9vOOweh
OMpM2Fqks1AcjfZY+eOFF4YaLDs9h3w3dTlbun7a8QxnGBSJPS2SVVDADsdO
FqiJKUT48qAlfW/x6QU55c4FDHNtd4jgka5I17aLmL6IW6cMtTZFfYboTwkt
wkk+TNQ8mPaduZ2Fa9cvXyJRBlN9u4DnhcJX9p5ATJtxz4pYwR6DhbHzhRPw
opyLfKX4WZgJTWx5xhzfZE9Bzjo2LBya2zlTSlWI1I0ydTvri8/vwqlnTAKv
c+sbYhuZW9c2wp3oDci6ftQqvekkjYQSDmM1WSOesykvd1xlEeJsPe05XLQ6
n98NQ53vmRABz9rptN/xhSFckbXXNhfhLC8feSZ8W7A1z60R+owW0pFbWGtn
4oT2wjgGHCMaMl0NRLH1Zxn6oO1XeIYYTToeRgGPExsnpxZCJzpyzV+WPloA
IggrmiRlcLQ20wJet2WLTuYjPoNWbgHVj7GWL1y91IA5flSwPp5gRcV9CS/b
uJqzZXkq8LRxIMQODriL+ujLwhaWH+rMjYRjuJnDp5POS+DvI8zwOjRCX+hh
JIr9KvCZ7+WJACr5QkkcRzgT2CUV5LtByGMVo9hiFGJqlKMQkS1EMpmaquBK
fnT99ig2VgfHTzPXCNt+7lhOlq+DVunbWtrnCvri20Zijj02Z63UE0W2c3w2
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
T+H3g1whMbYBOThQUUR49oJrg6Xy5rnoX4I/V2lULouX6W7x8Mzn8ajzu/Op
gJT9ff6186XkeTbkz66TmB9mvcFtByFxeJ6EWrS7bx3DQXLbZr9P9p+GH1Qt
GA72d08Pi/njwt7J88lXb/mqa4FVba6uBNaFwC/zr3I97frw74+Khj96p9e5
6hitp6s5LVSct81/2xo7lSDPn9qu5N76uvRILyWginfdmLwaQJaCv6xWyell
VVVNXG7jj1erbJZ8pKu+rteytk1r5zaiVy95Oa2d/Yph/la3nkabd9Nq72j9
ov9689ypy6c3xC7P12Nf3Yh99embX3+p+vjLb6eX6i9Xu3of+pfVehet61MV
9L2LcwbfK8Oem/5mHIzGcS7PXnfk4gk/WZi9voyg2booy7L1toANDb45clkf
4IdNfpHbgppNEa+6+aOKL6srvmpLa//+/92Sb6AZRVjw7cj72nJ6nD73+d3z
VGsvQhdIUtgq6OzjVLt3PL2dOrpz+6DytdD3q3Ervn+kIvGyc4j8+8NFEUib
tkAYF5Ep8Fsrjycij1tj6ls+42ULSWgTa5AK1wUMMzZyMfUMRyjhzs5LM9Tv
MSJ70gm5mrpRYfn+glGpaBL6qktFltAs50LXD34W7xyu+lELlLOVPgVCrNEC
FZtSRgWvO2Gqt2gBoiYJoyzbBYK3Y8PZRqbhTI3V3s+EMzPHB2/JHoVhrSCr
TdBSI+pbqZikOtfan9/hW4kR95OJKMbHUE+GiQifeS7LVSpXk10ii025i1Gk
QR76tjGGXGo7dg+pME9A4XW0EvcM6sM+8Pc7YTjcz9CC17mlkpFQRd+d5I/C
EwLE35+CrYB2jiDqb0WeDoVqBVEfOC+E3n7y1LCLFgJPtsBVoSFvKiosmQpI
hhKS342N8WGql7nwDAN2RB+QpxeCs9yigpcII/AV7uWdNDrqmuhZu3HWNmZ9
wwWNeQyyGHYifgVLFvdtUYD3qcYdW1DB65Pq+bCuSUW3mWkgVwdH3xtgLtp9
lqeOr1trDnloG9nBFsl8ysNQmGUXMyF86gOV/bJklAj4y2RqdGDrDsZu+LFq
mW6WiEhFnuQiio1Qd4stmwqjFWRixPPgwLMtKLLVF2qY+YI9Y1xUZBKrg8hC
n2lsA77A0cITbO8KEZpUtsPfDhw8kFPRPUsjprdfOJVOcmudGNZcUBF7LApV
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
Ln2SF00T+s2lq5b56lBdFoYW5ZipFXmdIn2WLl87N7R6df1p8zJOckPpLKs3
r55E0+d7h2u3unY8V+/2BuxmFq3lVeXyE7/SC1Xny1W++nq4RjNM7kU0yNu4
qnn97a+fNBh5/zVP+nYWb1/PYlvOIjJSc8tdcuWtafQyk5cf1vfabeoL35rr
x6pbdeVdaNJh6UJWCU30w3nKLzH5fQO2v2t48qeEJvN7lyPSY57lpZPyKtWf
v/mzeUQbj+hW1sJjKq/7QNf4yVvlKmSvrhrDmJ+r+/zO325J0yDo5e2Cza22
8i73OrrX869fZ809iaubDZlrirGD1lA+l7eD0vdrXNjLm37T9er5awr8q6ev
eZxCnZW5Jbm5nG6ywvlS3OsbcWW2+f6d8e8p/OcIolV9jyddEE9fmsqLB6sv
nHpwd3eaEQqq89WK6SxK6N7jCOAxIxz/tbr9N/mwWv4mEVdnl/eJfoFt0yXd
Lywvxo2u5v3u0qynjENf737q3Bir9XNBvW56O6tuj5Y3an94ZPZp7iN5XW/T
KM203qTu2XotQSSp7n1tvLb9sf1RPX2ldf8e37u9/N53L+nERJZrkIj49Z9O
rbXvz3jXVq4vMZeDXNf311HYVLeaz5qL5a9ueDw3c/t7VXevLiqOT7fKvrog
uW5zQ3f+/sgXmqtvu5+k/YlJvnI0tP3LRY+q4P7l/c0v51ZkF06/v/hwk3ZO
f5xt448n62i/Xz6Tcl1T9gfow1DnJEevpSZ6WzGq5q7Vk1/O9mUeLU+mkPap
riQn855GKMf9zdRXqHTxG+3sDOT6PXkjZ3KVUaTz1enq+orwGkbmS3r62RNb
7cvnvuaL8lXcg0/Op7dc7Pyl6oF/zsp//OMy6Z0uR6RObWYvcnWludn81VPr
exX/cUETGps3az205HL24BbF5ePqsRoxeTt8JpsdrjHm6nr3pl8I1wIDiEhP
vG843d9amhzV324vQqOF+ItPgCxfpV1dUn2CZ3lFMV3OjEbjfA7P+De61hqg
Q/36Ul+3CV7829n7LmJG+6b9s5QiOJEednG1+TfJoFJiS4rNjRRx9eu+D+jY
Nq6u0I5gz+0NYubmepns/DrxFfVyN8cf5tv6ucl6VV6Sn/ru6FU2e33H+sVw
Wt8M56KFTUqRRHeTygbqC9npIvmL+2erDNVMfX3jtfxQWqOsfGH75rCMkZiW
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

-->

</rfc>

