<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain.
This document refers to the approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of credentials different from the pledge's IDevID for the registrar-agent when establishing a TLS connection to the domain registrar.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Extended Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additionally wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to a specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied in the data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included into the "agent-provided-proximity-registrar-certificate" leaf of the PVR.
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data of the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVRs contains the assertion of "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" component of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA.</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition from Pledge by Registrar-Agent</name>

<t>The following description assumes that the registrar-agent already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and an own LDevID(RegAgt) credential for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have a synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and an own registrar EE credential.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note that the registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="voucher-request-trigger-and-response"><name>Voucher Request Trigger and Response</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-voucher-request".</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Three parameters are provided in the JSON document that is posted:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JWS-object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, as it can only verify it once it has received the voucher.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It can be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JOSE object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an ietf-voucher-request-prm:agent-signed-data element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error status code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="enrollment-request-trigger-and-response"><name>Enrollment Request Trigger and Response</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-enrollment-request".</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type: "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note that the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge is already implementing an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note also that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credential to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx status code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for its operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible, allowing a bulk bootstrapping of multiple pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling by the Registrar-Agent</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or multiple PVR and PER.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and an it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only a necessary precondition if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope of this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and infrastructure bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection with the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Response and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<t>After verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Status Handling (Registrar-Agent - Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge Status by Registrar-Agent</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1obV7Yv+r+eojbZ32dIJBnwJTYrfcGAE9I2EMB2Lt0n
q5AKqCCp1FUlMLG9nmU/y3myM25zzjFnzZKE46xO73X4umOQquZ9jvv4jV6v
16nzepRtJc+OT/62n9zk9WVyNMqGF1mST5LjrJoWk2FWJi+LYZas0kO9o+OX
a5307KzMruU9/KgzLAaTdAxNDcv0vO7lWX3eSyf5OO2dldVV3puW4976o05a
ZulWcjjNyrTOi0mVpJNh8jKdpBfZOJvUnZuLrWT7YP/ldvLm684wraHBzfXN
zU5Vw4M/p6NiAp/U5Szr5NOSfqvqzfX1p+ubnUFabyVVPexM861OktTFYCu5
d5tV9+CPQTGepoPafVDdjsvsvFIfFGXtfwIdTIo6P8+zIXw4KeipusxdM+ms
vizKrU4PVgtePOknz8s8q+A5XoqTOjs/zyb206KE2Z3kONMq2f4aPjHrKB9y
D1kGPRzWddH7Jr2c9I7zyUXyGCeR17dbycvZJB9c0pyG0Me9JxtfPnjKc5xN
6hKe+Dorx+nkFj7Kxmk+wkWhcfTPcRx/rbivPqwJPDIr863ksq6n1db9+zc3
N3319X0zs9N+8iYrJ1lpp3Z6WYzTyn36r5paTePo3dA4PmZqe/3kRZa6ie2N
8qI2H9GsdvJqUCQnt7CKYz2NYxhrncNfaVVlyZd2Fm/S0SivstEom9ip7HzT
e/Jg/aGeygnctl+zcgTnGj6eXtLJXvni4Uby8GHy5MsnyVM41ytupiMY0l8H
OBaangz/ZZ/GkZbDqpjYSbzEj7JRshN8y7sEPWYjWMbkpDivb+BGJm+K8qpy
XY0H5Rd4gf9amUf7g1QvqFlP9fX9zqCAieVns1pdCVjd3fyXK7e61VVhPqHB
7Ben8F41G8H9Htz2JyM3igye7Q/h2b/CjgQPXWeTWYa3/KIsZlMhGXjokOIk
/P47+uOvOJE+9PUBnwYCNzvb4sd6Nxf3AwrVmRRwvur8mto+fr7zaPPJuvz6
+MvHm+7XB/Lrl+sPzANfPtp4JL8+WX9oPn3y4PFj8+vjDfvp06f07H5vt69I
5S83Ve+6mA0us9L7dpLhApz3ql/raW9QlZFXy/MBdnWWV1udfHIezGPz6RMz
isebDzfMiDcfbdphuhE/XP/S/PrlU/PA03X77NMNO4+nmw+eRAbDC5pS7/t7
e3u9J+ub/Y3tY/wbKDPzHPwikS+Sk2wwg4O4m13ngyzZHwIvQMpb0guGzuLv
PTk3kwqamdVZUpzDnc0GSJjTEbET/rMAWlIle5OLfJJlZUUvG4ay8aS3/pg+
qTKkibhg3DyPF2mPDAzJj+VyvfQM7ztwAD2Re9vyqXswOSoLYEDFKDm8zsrr
PLu5pwawPS3zEfM1/JA3y/R/dPC1o1pletPnQzuDkeINg4Uh+tV2hO/D4Z/c
n8Lc79NnP8NnPxcyiP50coE3bzJN60uZQ1peIDVbMV3i5UnLwSUcnr65O/fx
g/vj6uJ+laYX98cb5dNZ8fDtD79ODgfnTx7t3V6tH1/O6kdPn9xf0SuzMgAq
A/8rJj3sMUnrOh1cgUAxLIspMO/0/Dwf/IVf4W3dO33e6fR6vcSsdKdzeplX
CYgXMxQQkmF2DhtaJdnkEogBCQ0V8PrkrChqfGM6RZ6SJmU2LuB0VHyurrJb
IEjnQKpBYhjU+BGLM11zG9ewkfN0kI/yGjYpaA+koWGBK1sl51kK7+OHkwIG
DXMb3cJ8x1kyysd5nQ2BxE8mcALza2AHyVlW32QgA6TJlAUrPKH1ZSbtwTgv
iIeU/c5+nVTTbADnHk4yNkpbUyUVHHSWlro4kJtLIOnURA7HAdcIvkrGwGdG
CdD6yQWsznlZjG2XvXyS1zlMatjDp7oJMG44TkNsTBYB5m6fLlnsgxnS4/j0
MKsGQNr5lVrvR79zWiTVbDoF8QnWrL7sqksA4yuL4WwAA0qTSXZDYhjwuUnd
pfHbufdA/MMPeWpuFyp6DN4ao2RAa2AXVC2nbScZ8s7gW/4GTi/TKqPBZiBK
ngGDvqTjhE+SEAmNjFo7CPdKTxLeAwoCx4Dayt7yFiBZQrKFdGyASw8ncXTe
wxsMLcGfxdkvcEaqBM86/85nFc8MyMbAAaA9uDrQ3aSi1TVf9/FKwLim07JI
Ybn4RgwTeAWOBCz1xaQA4jhgcR53ExuHHcbxzVCeH93ikmSTshiNaBWmhlrx
BsgB5tXnZehG18G0usuf72zD2Oj2jvPhcJR1Op8BoeYzgEvb6bCeQSeKBw1v
vXsnV/DDB3P+6cBUxWhGGwL00dxjEJiKXo0cMlmF5YVuYWnXgr2GpR8SH6mS
VR59tYYdpcnqAHa6GGflGl4qcwf7TGLyyWA0G8qZG6KgBVTzFlsD9nsDElKS
jYTe5LzZpjVq7L4sjrnf+iTYnbWcGaYFS5xVVQpd1OpUymlcQDZgnU9ibaZn
xaxuHVs3oC9tUxhkZU1P1bDvsDJmKsMENmSU/4qLLGIKnIV/zmDwrMi5D5GE
VLiNka0GMeXDB1z0DORmeQWehO2t8gt1N7p4Lq/zIXxynadRomkOoFqkosyB
5SMJFyII2uUMSAoS/fIeKCckTOS/Qqsn0B3ORT6CtVx9uX2yvQar+7woeRfd
JXHHSq6/uvp7J6c8OZQH4RzDsGRh+N7gaFE0bllwsy3Sgd6Aqt/BxvHEzcqJ
6jJNznKi0jgw2kr7Ep4E0z1S9om+9qcvTiyHUtQOW8COBtD+pLbHDT8CyQNu
Qt/e3uEQ9hc3txpkk7TMi8pnS2YzkILA/kuL57KiAaOGfvJKuBlxKWSp55En
Vz2+A/M7x1Mj+2+JIfTnM72iJC4Ge7o/gS6GM9wJEBSzyXUOMqLID27U4xR5
9mV6TYwvlcnLesxwADDxCaiIhqlGhkqEt4XHC/9US1fzFUMqnWEnaa3Hc5OP
RjAgIAv5xQVQ+CFOGbglGlAyd/twdd0gDKOOH7d+IFItXMrSGIJEIACNtfO5
5u4RZo6veyw/kK/aGXtwn722SXZRDxDZTuz4EpFv4DVz+szhNRday0yt+xSd
EO0EyE2wV/A57jPfB82/sslwWkAXcGthhRw3C3teBUUgdSyCaAR+IpRvLUL/
B9SlnRFPsrnqrdIlygyOD1X2Gg+JmEynI7MPo/Q2M2ItMKYJ8CWQG6pUhJry
LMcGb5VkMs7gt3n711hfQ8+D4fc7OzHZed6JkHnztaV29496ZynOS9g2SAE3
OV4cOAH4ywhmDQsMfDIdVQW98mw0y2q4PZf4zMHzHdo94JHFTWXuhF0eWIMB
tIaCHbwPpP0cbg8ROGQ3bqjAavZBnd3ftZSvcaBAOnSMn9WWgDrLnWzuJm0n
nKexPXJWpOebBYftbc2UVN91JD2gpoyYdcIBKGYl3mCU3ortI2Fim4824TDT
CcMlgi+/OT2VL1H7R/a9T40hJaSOoTWjJcA0mI8B6zL3gdh7OkCJJ8fzhKve
v8lGo97VpLiZJK+O9/HOgHzOIkYWcB93s4ykzWvSU6QhtsZK+PAXgm4z6uyO
Q9XFDVrK5q1447rh8hhSk5qGaGMVcTMswV7mBs3qd76BQ9Sl7adHeda9Kkd6
psQBOdpKtcBjIhsxhNM9qOHeynmFhQ4JJl3raYHsm8SziTmkqg+mFfK55Xei
usAr0P5kAAITHWxm+/jhVY7S1zmckr+gmWljEwnidTrKhzxItAWc4cpOoAeQ
XmH28T3Du4w9ZtewjMyJQbeu6DSPlTAnojIPpmLOeVPMRkPshqgWHEoZAJ8n
nhMwAxAQQQLumkni4cQe69upyMYXOXa+97aGcwfr/bfsNnlFJHB172+v1mif
3rx5k5wILfa3g4ilnBjo6Qx5HhNToBVI3DLoYVhQK42jgJsJSwSfppUoP0Cz
SHRD6uOritDJdnI+K2uWuumNPEKzJopOWboNcqzbQRyLWXhcvms0A9EBqmYs
DDgiiYSBqeRJgSaJqs5S2vpZZSRMmKwI70Z1c+xiebIe17PRpjQc5jgz2qsb
EXlQe0jJtiMCpBLejTh8dqu6ZamgIbvrceBfqKplQxKQYNNc1zDDrAezJKIG
84a24TDk57dsgiBSKyMypg25qPBiRdSYNAdUmj9LToGY55NiVFzc8slBmxXw
L+h45eWrk9OVLv+bHBzS78d7373aP97bxd9Pvtl+8cL+0pEnTr45fPVi1/3m
3tw5fPly72CXX4ZPE++jzsrL7R9WWIxaOTw63T882H6x0iSheGvQ8iaiDUwK
Bdi06njmomc7R//v/9l4CEv8v9AQvbHxFNaY/3iy8eVD+APJJfdG1In/hHW/
7eC+wh4g1QFqPUinIDuOKqJp1SWyDbR5ILP+CVfmH1vJV2eD6cbDP8sHOGHv
Q7Nm3oe0Zs1PGi/zIkY+inRjV9P7PFhpf7zbP3h/m3VXH4amUN/yVLvz02Jd
6eJVJHqw0d9kIn9eoJBD5xVeZy5tXtZ3bKvTWcKatdXZSnZl74m38Mfq8A/K
22ldXMCFvRRCe1bMJkMj5wCxTbAP1MT39tY0U0pWm4wKpbUXu3uv/U9B1UsS
nJzRj1HYrSpYs6EcV2tWqC/LYnaBjHmYX+DZatIQ5DXwudBdJnAsYZXOUAot
5tc4ILyz8uLens9TOzvbuD47npaeGssD2lkqoFCB6g/y8HgM38Cz1HFRjLCR
U/gX52JUCpYZjNFL0V70GuUXM3a2k4oBTZ4c+wPJrCHkmKlkZ28Pn9izu9Hp
jIGo42cvZ7Qc/mE4taT9BekOJ447FZMeap7ByVBaIdn2SrJ6oEQxmwz4zOEZ
sExovjbbKc7Pf0MvSJBdT7iSc3vbt8oGiBvQBzRf0sHh85hOeFdA+UDGnqOi
kKwMRsVsuGLGwHdPifnYIImSJDzXGQwbVawtNS4ijWgayMcwN5IwUbkxljPD
UcgwhM5S8nNg2yxCIqNHRo0+E1ixoz06Axzr0XN8smf4ZE62D3sZDIuFs9M1
VjqPlbL0Zc0RpDhio2x35bWDbg+PqNuygEsC/xNBlDRi1C31PVrDx/e9x2kx
iThUWQaUDbrrVcXowwd89rWe0Wu2KvaO9XQCk+WS80B6kZYkfLqJHNNdPhYp
IbzKSPmmIiNUFDfgm0FEZk52tuHOjrIL8nRouja2ATH2rFZWDpOOfhWp+jIb
XCGlOOYtPbYSVHxXcaqw+3AUHdmFccgiWLkH2nsdtBdd0/haHjulDAXSGnTh
m/TWdIc2VrpHpIMZvYIG9poG1hDTAsZnLfUYC5Jkb9MxPOgpAKZRemBUAGmr
cKATJI+wkahEPX4IRxSjM5wvhqjopEjEz+r0Kdy9MoM7NzRqRZpczjCEAmTu
YcZ2PRDVMtKqr7JsisMf07f8BjkEZJxoQyKOXVzBLV7hwchYQF2ZZX/60wrd
8Ax1C952FL1QAxgAZa3EgMfvswkMdSLWdWRywt9nsMK2YyQUORl7YCb5W7Ou
1vszm6TXRY4jvgW9C7d3nL+l9UKpP1g0sletwlMk05ZjOOtIZGjFvz05PLAP
muarta4zKTzbPtl7/PDV8QuvPZbsxGpGp+nbNyc8kxHci5InO4RLMuSvU4zG
we0d5VdZsmJbXT39Zv/g67UVFKxPBsWU2PmJOJTgQ/iUfZbQzJ62BOMAX8H+
7MBkQf2ThXv3WTWbwoW6/iBGcHZvVkrRZpKnWrohf5z4n4jCkyrr9DCyMudF
uRU3s3aRmzReh9PJp3IpK9FeTooh3j3TEp4BZ2wm8sbUxl7eKh1ngeEDJTfW
3sdFTRSanjZtDrPpqLhledNbA2Stt5kda2YpTmECAOHURD0iYrvrJln/ot8V
VuuzNaCTvMZpcjbLR0bUuyjwl9kUVWPo/5JsR3ZM7ObNnLUbGNAYzzua9UBT
h34rI68KXwXqz1NL4XYCBbE6D3DT0Ujsp22iyTZRXHbMzts7p3CGQg8anENf
hXWNuruirJVmW2oyTTEHFisacAR8m7Qrs6XOs+A7EchHTKtPF23QkER5emwE
PwfaXDllxNm5rFEMu+4ar0ncSb8ajVdY01YAE/5hj7M1i9s5rkav01qixHVY
GWQ1eNmRF+K/FGA2nhoTL+8JhpxVYshxqpKlp+Yy2AAIeNENtXaBEc3RGiM+
0IkMDZFuRsSEoqEk4VGBgb25zGFDm8tjOj5XNCTiKOGjKeKsPGdOP4XusH2U
yL9yz5WuIfFo4SkdpHgA3FjkeMG5OSMdkSa2KAAA2uYWtvfg85awMnaw0oln
nlOU4VE6H2Vvcza8kY3MeNPs1MwZ6yaixKOFMWN7Gw9yjN75C+PDFtO2Hm4X
FR06MA/7Gx8+9JPk1ZQsbSp0AETaomZfgZaK8tp069yIBQswx257t2tHkCnC
aBWtzXyxkVHTtyewCiOQB6seR1f5wTpqbdd0t8SEZRd9J3ro7XO0an4cUOcQ
aWPq/JZoxZ5RNIkcAF/tQgHjDM2A2m1JQyRtyLPM46ZoTzwewJ7vmjdGUK0/
k90OG2Uy5pT3WOgLMoDLgrSz/XMcRlWLi0D5Edlgbc6u80nIWTeeECGpsBqi
j+w5WdyIz6tAedZoZrGhk00QxJRnhrNtc7QLiS9w5SzHS+3nKCSy/ZokTLyO
7KqsLJ8cZnBCLpF5m9dXUWU1nG8tMT56eNcsrM9dYfA5aYLipZhURYkGObSS
1GiFF1pa43wz/AodbfQwabCGsEFHLGgHfNCo07ZPpQqxKiXCb5RC4smhKZtA
MGHSvD50hXC+ePblASuI0Lew6rsugky/7GvQXWOQMAvVFfaDBoY6G1xO8kGe
og9oNLKBVBLbYWM9dNyO9R3alTcxR7ieYs2pWKlYfqXQDIaim/GJoOtFbkEK
AvW0LqZd4usUP3iGrIQHSbIn3Byx7zRZPx9yY/XhxbKzMb7mxnLg9lznICCh
awfoI8YHXBZ4WFlGmZ0Nc/y+sCuH/c1bt7PsHGm/OQTM2j0NlKh/w/9sWJ4o
9sutp2gvqNTR21qIlfPgnTfZQrH2LG4eiQi5G4z1TncAQwU2UKO9x/iTg6ih
KjyUclNaWsElIL02xygsVDv58lZZjQtZkWqfl86n7LWD4ZRm5YQK3LdEAG7D
uOBLNCYTmbNskJXTqhrcZEFaszYpJukFxtrC3jBhNMYTM0I6WZUJIWuZILkn
1HJaPteyXCo6xelCjUN8r5KbYyj0vh9WvA+yOW//UQGq4a2oTy7GBvVjos1e
zJS57kGQstWtRxizgS0jHzXEYt8YGllXB/6flWxWw567cKdhCVEzhrdtECUF
mJKnsCLhTewLOKSuparsqWdDR9vlIfmLj8cA1hpNDbeO9A/RQ4Oib1bmxZCs
LkhhmY6KBM1mTGAwaQ1joEDLG7s77IpgxZK5COzjJch0ND5zNMgcarbiBY75
UJ0GFSNJC3ZKEdW9XbHiaY++b8NLVo+313DsSGoMP/ANb8Qa9dH2TKcgJtXE
io9AknTGP/Fzlky25IZVyWV+gZPRB9nuFUUBN+6BC8QkssO3ypN9+p2d7cpZ
lqUv01UVrIy3DOTTBAYpV8ypCC4S3T+9URXeRg4UaPEAYYlcLW5ehcwXBZPj
7fs728HqsAdVLiCau5DfQEsSA4fHZnBFVkwUm6kTXHmZ4AhYDAl1sUXlA5O8
wNPO8+HDMM4wICuvxnMkXTK1z8ZswhNlnR38Qg6NIblQISCZizVrhDwRfVCu
dzSK56L/s8kjFWkztC6RGII8LB/MRqhWTOFCwv3kAGJ6GaXWoVLSvFwCPqtI
c/Np6gUf0loPshx1VBOBSI2joQ4dr0RaZMIsOYkpkdwQbBkGHeLXa2DveJ5g
PuOtIHIPzY3G1oFUAY8vHpwGyWgL+nLBTBjUwttijFpLNs6+92O+HLy0u6C/
zdgpwcmprFFCs8aA2NszgeDvPjM+iE7nWSrBdLUE+1HkCCdxeCaoQEEzpsUP
dp46dMMaG1rfqj3jRKmnwjS0hG0canNEI1y+1USQrIYmizWKjTtdMpazPeLJ
T9zo6rAKX0/MjRqXZGzNLHyKRfYItv9gjnCPcoQdqWRncM7BqI2Wra+7ikZS
2sgumMmF6ENBeIhT9vy7Hw/RNS6olFyrRifsJyzIuFh6In+pEl1EHmmMsmkT
kula3mIV1tywLRmk016tMSUaHNsgWLj/c6N324JSpWMTmkFxTbSdVpPg2FPL
I1ZPX5xgLOwgNT4TacLyFjKKay6cMhFDWRqEnHzEYaEYliMeBbKISHQaSIqX
QAxMMCMxSjImoZUeiSotMPaNMU1o1DFiB8qDHGtRodGlSlbZxvDs9MXeml2i
WbV8IpBV8tKEFb+SIiPYJitbQdGhl2h1npClzixsOBz3EA3lmchlIFjGI+7E
fOGPM3QJSoijS+ES0kCbD/2dN24HHsZ9F6wVNGfYlI3Uo9gpY35sBMumRJ6c
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
o2zIQ+PLIcqbEdx01DAvgpBjWgvUAmmy3IL13jLsMSlqNrx0xQWedlnQGYm4
1UEjBGEGk49ZpzcBRbPWn3jHcN63j/YlsYaXz9gQ4ZYCMfSKEfNC4AIe7HHK
DJ2Ix5sPN6REh82l4aOyzjmkzw3ApQB51IgYnlzM4KCMaK+HfGvZms1DN9Gx
XnYpt/pw/Ut1AB/MOX8mKGZNEpkH6OBFOszRz503GKaKwtAovxL8/3RyJbJQ
iUo/BSFnN4QOA2cFuUk+oEjSZyXKrXv9ZCctpxgUB4T+sLqCb3aA5U1AKxCo
5m+yybDMr+CFYnB1mc6s0ztHs+l0VpvdG8yqSsw7uFuMJcAp/nDyztH63e9Q
mALZT2GkJDXuVVcFsKVfrqwci/D5WTaVsbsy0WMi35wIBPSTSt12OognfpYO
rmCBrFseqwrwr5yNV9lqK5WgFo+ogHuzxsWXTzdhc07YgPMMbcmjtLqkIAum
pAYzQvwRYeJej7T2VTrDR9YQECDzr4UpgrkHmmJILuWNUUupakv57ZW+A7Ki
BkYhvA0PHWXFJO79yf/BpI29reTe3++hzV8Vhp/irDBiDZYkCV76UydAWaFI
ipXs9tvpj98fj198/+P18M1B8eP3+/Vg/Prt8M3rX4c7GzeD8frj4fjpxg+b
l6NBvv8Ynr8cPDgYDSbH07PNh3/v5If5t5c/br6e8dNPH6ZvNqbDb67yFzvf
/vrj999Of3hzU59NXtc/jF/f7v9S5C93925f/vrdxsEvg4eHJ/vV/vjR3zvX
Z+ODEX578ObpztmDV9evJsN/HuzUV6evigffjfbK12+m6z/+uv50P7/Jf3jw
7eiH749HP+5sXJ/BmPZ/2b95+cv+3zv1y91B/fL021cvd797fLB78fjg9IcZ
/P/XNzn283zy45tH6y++f3Z79uDH6Y9fv77i3y+nZ29G69nJxu2Pb4Z/70wH
D45vf4B1+GHz9e1wB9q/2vj25NX+enp1sPvd69H0x/XnD05effvsx/XRN9+9
vvzx4Ndv8x9G04Pv3jz95rv1g7fHGwd/7xwc7I52vnu1sXv66vh1tvf68Xev
v935cf3Rm++unl+fvjooX56+Pj4b/fj4h9eDjbOvX/56+v3l3uu95y+/Gw8P
X199++yH9Y2/d3aOrx7d/Lg3hBaOH3/36pFp4eD01bfVq/HbX15ufLv36vXx
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
qKI3kRtOBRtqcgJHpkE58miQarCXu4CbGtPMvZDMBF4PJoPbDufKq+8j7U2W
twzyrM9MxxrLYpAGkOMd6EZ3qiHa3IljEPzRcc0va7zjMOM94ZXp4yzfP2Fe
7Jlw/MDY76c8qyKtWErT2/r5ns/QI7FJ8/Fhat8+eiXreuVuj7boM6lz6AOK
TiV0ZQb2G7qF8xJo/Pa+0Db3S0RpyowsKWuEtqi8ETTcEazomBhdxXQTe0rZ
IYsf73Vv7ty+ec/uCQ9+Wurrh+fOKt0mXz+s75+Ghan93ucfvviftZcH6247
54+9sbH4/aD3y7vJy6LrP/FwM12k82dQyn1o/eYfN6k5GHyunuaP/1g8Jrvx
3NbHzZ29V7VgmpRgnaJrEoJNPvDz/ItaXLq+b/ZHucPvXjl7mXuM18lqTrn7
8w7ybx/GTonI86e2K7XNvElA0nUelBNuHqYOqKmc7OfVKr24uImyxjHdlThd
rfJZ+vE9Fbq9WtLZtk87PyN+VTngtJL0M3r5S/P0LN68S+qdlE1x5dcH/E8H
KZdqp5368Pna/teffv/zT3Ubf/ql/qKq3Ltr9mR/Xq138bo5S7BtzmZ+Uz7m
Ohl7fvQ3/WDUj3OS9rohF2/4k+nZ6wLQ7bY9lU9uFso31Pn24s/mjmiMyU8/
utvv/23e91/N+cLL26zvv5Hz/fSuzfoWeTSJqmigV9OOp6MN9NTBWKnQ274Q
UT/l2jHwf+8Fg20QBxEirPeEmMyTwad3m5fxMltNj4rRPydGbxH5lAkWL2CP
+qPudOLFeB2Z+oOnOexBF19Te3r7RG9e9g+xvD08TtCjNqNkJB2xiG2B3zrF
dCKKaWdM7SlmvOpIAW1kQHVc50LsqVWIBEhseUKLdm5R2ZF5O3cn/YjrmR+X
jpQLRlmnSSR1n/I1kV3NhWkeZD7dgc3IuAP22sm+hqC+Yo0nUOYqYxp0sq13
8QToozSK83wXCt6bWt42ti0vsVZ7mQtvZo8PwZI9CctZQaHbKeJcZcVDJxOT
zORGD99KrekwnYhyfIzM9CEV0TMvVOZL53q6S0tLuFz40t6PIrm3ZhbbTm08
ZQRWypu8ExcLhzJfT2EuNlOoL+g18KC9KWU1EiXbiKWIfTN64oHnT4vIFsvI
c8EioiMvsgehh0cwhklSgpvoeAJanViVBzZzFHq04oZjT03mSauqQkGj4E2m
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
F0nDXhdNaQIHZvzvSlS9xu0zNW/bRcGnLSuzjXP8L41DGzvUnrbaClsZ9vFy
rfUc667ZXpBhcDbv5Wy9pPC9uexqnb84teziubXTzZfp/GWePuOjaIkKSN9u
NNH+4xsN/e0cklX835xC5cG0ANLSgZgCRFXE09Oq1Hkjn/6xUyN4nY4/9Ul1
4OzlxCaXTcKyzcCrzR7wZSInqoj8q1V7eOPyTYNQxYqaDKiaEBeAqfZCNth7
So+eRv+VDr6EypOXNs57QpcGWH59P/v45WPNFWlLQAmuoLZ50WDOk+fWM5s8
0FV6vzWggft0brxKedNbwIMzIAj9r/rEhdrDj7+2aFHbQpuIb/rWotNyRiWS
YpjDlW+dZrOBzov1dzKg540ypzrFrxLwlArfzk4Tq4blYl3+43v/tNf49bYV
Wmqg3Bw0qlrNQeBM5nXyWq31N0urtE62b1R0uwGvbR4aQpsNoBpX1fxSlmwu
MxFnyngV3ynXcnIKNalKwl4Urqr1i64IwMtqTjuwn5N6yXjdbPxYKys+7ROZ
zmebi6ijNpjQy6Y1uL9ewEhmNfRiXDbVmZ01c1SvItOmkFWhzOXjaZNDu6WC
dopc5+Qu8kHnbeKNUGh3i6sdYSdGcZ7jX09GTGNznq66Vlbbimuv2HxjBBsC
3nYD/clUaEkTk7v/IZAp6X61YUUB/OVWbfrqZlaoFSpaMWyefuanKvP/6hNt
zFMjft7U047Zrtmvo+Iv+etZ1DXr99vZiale7K5vNj+e7JMQ6bQ0+fFV8FnG
ZZMIUhq1eUSz56xxLsKl9wRfcYFOL2v0oqTUaW8a5nGzvdxwXNO6ZnPaecVP
pcLX02xOLae8+Un1tdjWroGekZSspR4GPOHzBl99//Rw/yZdr1e6T5BXZ43U
d38wEScKTsJvmaxg7KfMbcPsY7UvZ75pdksoI14V7epw/Ylr5nWZ9LwKpI1f
nKNMHa3PEL4hkUaKo9Z6yo6unUl99/KAhBrVCkPdDHSDzb/W6YmTqFQ0pmYS
523vpxd//IEDqLRLk2s5O8A1bBDuqM1kbeK0aM4pqG3LamlXAet9vdJMbavX
Fj5eP/UVHl9Zy6w477o6JQHUxNWjqPjz5TcafXFSW1eSryagDYa/sZ/6Yrxp
phWwfj4HAKW6LiLRZURoQWnzbej5EdAoufKNRmnXGX69OqNQr/7RPoPGwFfN
ko5K8p34+W6lfOLSPFr/2LzSPY3gK2ansW/3E6+eN5cZtBph2hPYNUGGg9Rv
mDUTXr/jNdx8E/umKo3R0oFkVu9/qiUiLW9dNqEk2bJuKyRSjkZtxyF+t9qe
5paIUr3udXJD4u71I9fn4FzP7CWkVXGzWqe6hk9b9eKefpJX54zRdSj6Z5bX
Ms3/F8Y9+FdsurXomun8ZZt+ZdH/7b13QbARCdbqG+3qJ17yFm16s3nJaTN1
DbTJClGPCOGUdhA0gfz/AI7rDqwaWQIA

-->

</rfc>

