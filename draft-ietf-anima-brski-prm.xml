<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.2 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-11" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by Registrar-Agent.
The Join Proxy may still be present, and there <bcp14>MAY</bcp14> be some situations in which the Join Proxy can be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the Registrar-Agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the Registrar-Agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The Registrar-Agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The Registrar-Agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the registrar.
The trust assumption between the Registrar-Agent and the registrar is based on the LDevID of the Registrar-Agent, provided by the PKI responsible for the domain.
This allows the Registrar-Agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a Registrar-Agent during the TLS session establishment and also to verify that this Registrar-Agent is authorized to perform the bootstrapping of the distinct pledge.
The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.
Contrary, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the Registrar-Agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the Registrar-Agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from Registrar-Agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-Agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The Registrar-Agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The Registrar-Agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the Registrar-Agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.
Due to the use of the Registrar-Agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the Registrar-Agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the Registrar-Agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The Registrar-Agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the Registrar-Agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the Registrar-Agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the Registrar-Agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the Registrar-Agent uses its EE (RegAgt) certificate.
The provisioning of the Registrar-Agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The Registrar-Agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a Registrar-Agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a Registrar-Agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing Registrar-Agent LDevID certificates.
This allows the registrar to detect Registrar-Agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discovery of specific pledges based on the product-serial-number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the Registrar-Agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the Registrar-Agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The Registrar-Agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar.
In addition, the Registrar-Agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="164" y="52">Registrar-</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar-|   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the Registrar-Agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the Registrar-Agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the Registrar-Agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the Registrar-Agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-Agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledge's IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.
In addition, the Registrar-Agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The Registrar-Agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the product-serial-number(s) are not known in advance, the Registrar-Agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (Registrar-Agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="372" y="52">Registrar-</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar-|
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The Registrar-Agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The Registrar-Agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the Registrar-Agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the Registrar-Agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the Registrar-Agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the Registrar-Agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The Registrar-Agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The Registrar-Agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between Registrar-Agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The Registrar-Agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between Registrar-Agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| Agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and Registrar-Agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> re-sent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Registrar-Agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar-|        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| (RegAgt)  |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-Agent: possesses LDevID (RegAgt), may have a list of product-serial-number(s) of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between Registrar-Agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The Registrar-Agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The Registrar-Agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by Registrar-Agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a Registrar-Agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of Registrar-Agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The Registrar-Agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved Registrar-Agent, which allows the registrar to verify the Registrar-Agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the Registrar-Agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the Registrar-Agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="20" month="October" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-06"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2246?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-Agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
pDjGVTeBk5U92Dx5wCkaFr6MUbTLSzh70AWmSodLg3PHofkoeD8YDBfnLH/E
75wsv5hyPCcLSuZC+bYINJVl6qfvEsOeXH10t22IEp1jVmbVlDCUex9QHYjA
BihOAcyVy7ynkOp1A6S9tG1ipFOxxwYdfHX4sfo2InTJOJr4CUUTf0Gx6bYQ
aBjubDApfXoYKNQgTTDsHe8nL9OirW6oa/IOM2J1f13RLt9dHuUcyDWewovC
FkU+94YNuzMhm0+RTBgTXEya+GTLLW2cFzbQlbpSuyoGZ2aOfAh4nNWF1rvO
HaBDFAvwYSMe6TUaf+I5JeiujoR0Egsku04ELS+x+VPbEdpOI6HNGxBwPOzr
efOBa9ItKo+d3aaPvj2ldKNpkVMZADdTa1jQ2ezBUonOT23guwRD0agQZirg
ElGC448Pcb6Gie0lW9aE1E4j7oWw/6WHX6HjS0oFahQU/ETYUHZCGohsaq53
DT00xNycHhkUlxH++ozNDkjHOD5QD4B26SKXt+A4Sq3gqikig5czEumU52i5
YPf1UBIlOpsQ+qdVnSDFT9acwSzhxsL5Hm3GFchTuXARks3pMjwve2ifSsg6
PO9mzu1fFIFy9w66WBgVfbouLlIcUYu9rxMEHUZXxhHQLgD6AdAmWw3GKG4d
t4mo56YjMvaHPW8n0YZO10QbisGGYoSR9bGFHo4kJBXbXW6ZQfAZV/PSkhFE
R+/C8qTRd5xhcU1pP4Eh2Sxkgy3wZBg5sRUj/GyDjNJS+Qm6cMGQGKLHmswS
gTESkA4Lz9G8fc10pFIrd7IQyCFyMeZQF1fIYw5dBHE0WxFEx3Z3KV2BbjqP
VmJA/YESYG3+TRxHn9ASRW0NZNGOSE1zWlbbfl+tci7wJ21OcHYiICkbjky5
TQhQkXruzoCrx9M4l0A1iYBP67zS7GSxefZDJVysBn3itlD6fjVZ1YIOWZHT
6CxlP7Xd4jmcJ5iLgbOuc1I/gyjiqDuDMEBQ1VhvyB1Z4kcSaY/YQUrNNdSJ
1GbiwxiYP7uaFib7oHMBsAVzg/CjiBD3IgBTRzeLaVsifECoQdcGZ8T3JInB
Zd28W4901ohtL5rU9elknSzzOwQGn45/AUN+W+VZoeViyYGVIS7J9uiyNe+6
WTPfoy4ovXfcl/FhkhNO/zdaVOHRef+xaFF7wx0EjDrf2dt//Mn+489Ge4+f
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
q9rYkUTJc29/BMN+4btlgABnwo6Jqat7e66OxTvBxGwhG6F374njTuTuERBH
aqT5krmLl/7CSb2DKftlqGZ3cxB8PY16LJe7HovSSNqPQwHoxSLfE1LBkaM7
Lw/pKmL1MszWf/Mq4sVFxJvPZWf15XhAoNcd69IdYpU/nWdZTI7F59vuVDHs
H+rH0dHe9Kel3P2z+/FgIQY7KFEnfbjxBqtOz/O0z4e7Ti/qbMvD+s/DevHw
/e7ruxcRmztov3IX8S8uEP7SdcTzN+vig9WtQ7r6RtfgqmuAH/gLiJdFqv65
B9FelUl8o5e/7uTXLuNdv3tnrp5sdW/uVrz5v//a3Fs35n52Q+50P+7b1b/y
KNrpSbRvV//Ko2inJ9G+XZ0fRVs+PhnHscRzVqt+Mc+rR5XmkpgEbvfFs2fa
ju5qTxkr4Z4p1mwePgt3vrMXrUHZfvjsV549+3b1Vw+f/cqzZxfOK3lgsiza
cBQUZ9q2YcRpUTkv59aZ2nQNglGeydAF8YY/e6YwevYMUP8XD5/9/Nmzy+iZ
7n3n++q5rtQ0/8k79Yh7bamUAtEcR3ZizpXpEQ7kTqc3qOxwwzrG2JbGO8bQ
uqDokRwilmH3oFU/Apd19aH37NCTE77B+neBq0m+kDjTRanei4oT5FE2l5NR
DJJqdfodyr15HcOOXeWHk5kDUxYHVhVtp3wvTpku6G56ZsCJQzZedyrACcwi
2a8JoCPDsb/tbk7OhiJ5FVTWEW8c1zyag9sf94dy5Q6+oH/tDrY0vheTEsTi
jdxnNLFSeoIMY+kHFJWP4FYOpWbL0cCRM8GRHgVvmc1cNfHsFVuHzJga6ePG
W9zq08NtzrJMDjJZmvOHY0zKla+YNRUQ16/kY+wmA8NOHBd8w1sV48mgfJir
yYzN/Ie5osm66CuhY6aeqHTo4Zj/epyXlzfEIpmaXcR5YDaDIDU27vtx3j/z
uIXMOeG/+rgFPeNAj1vQ64D0WuADN5vM1HRZVOciGSpP7yhkVlCGCX7e2fwI
tXljOntAQdmkiIkjg9CnMJPMPKX0uJmZMrsYg2OPezHiHHPWhwkap2Qr4CaS
otNjFfU3zIUuFIAhP4hyc4agHjFWtqJ07TzX+HMZsaPp4Pp0dcWZMsxoAAbX
JAmt6qW+5md6uQ+Mdzh1FHt69BcAtf7cZXud+R0jz8ww044TusK0c7NwY6hj
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
4PSunIotevaqJaPHcJCr/hs14/8G8ebxbqXRAgA=

-->

</rfc>

