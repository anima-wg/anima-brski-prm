<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.15 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-13" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 131?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 139?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts including the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge that is in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname, as the latter is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>Either IDevID certificate or LDevID certificate of the EE.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enroll-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new Agent-Proximity Assertion value {#agt_prx} is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="196" y="324">EE</text>
<text x="228" y="324">cert</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |    EE cert |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to the following differences compared to BRSKI:  <list style="symbols">
      <t>The pledge is discovered by the Registrar-Agent as defined in {#discovery_uc2_ppa}.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_ep"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided by the Registrar-Agent in the voucher-request trigger as defined in <xref target="tpvr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different from those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected simultaneously and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: Provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.  <list style="symbols">
      <t>The Registrar-Agent triggers one or more pledges to create bootstrapping artifacts such as the voucher-request and the Enroll-Request.
It can then perform a (bulk) bootstrapping based on the collected data.</t>
      <t>The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, and IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on an LDevID, which is provided by the PKI responsible for the customer domain.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
In contrast to <xref target="RFC8995"/>, a BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent.</t>
  <t>Vendor Services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the Agent-Proximity Assertion {#agt_prx}.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers" type="1">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>.</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
Agent-proximity is therefore a different assertion than "proximity", which is defined in <xref section="4" sectionFormat="of" target="RFC8366"/>.
Agent-proximity is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This assertion can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the registrar certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.
In a similar fashion, the pledge <bcp14>MUST</bcp14> accept the Registrar-Agent EE certificate provisionally.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For agent-proximity, the EE certificate of the Registrar-Agent <bcp14>MUST</bcp14> be an LDevID certificate signed by the domain owner.
Akin to the proximity assertion in the BRSKI case, the agent-proximity provides pledge proximity evidence to the MASA.
But additionally, agent-proximity allows the domain registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent, to which the registrar is connected to.</t>

<t>The provisioning of the Registrar-Agent LDevID certificate is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="domain-registrar"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
These endpoints accommodate for the signature-wrapped objects used by BRSKI-PRM for the Pledge Enroll-Request (PER) and the provisioning of CA certificates.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Request CA Certificates</c>
      <c><xref target="req_cacerts"/></c>
</texttable>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the Pledge Voucher-Request.
This behavior is retained in BRSKI-PRM.</t>

<t>The domain registrar <bcp14>MUST</bcp14> possess and trust the IDevID (root or issuing) CA certificate 
of the pledge vendor/manufacturer.</t>

<t>Further, the domain registrar <bcp14>MUST</bcp14> have its own EE credentials.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credential for client authentication during the TLS session establishment and switch switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the EE certificate of the Registrar-Agent.</t>

<t>Alternatively, this may be supported by using an LDevID certificate signed by the domain owner for the client authentication of the Registrar-Agent.
Using an LDevID certificate also allows the registrar to verify that a Registrar-Agent is authorized to perform the bootstrapping of a pledge.
See also agent-proximity assertion in <xref target="agt_prx"/>.</t>

<t>Using an LDevID certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the IDevID credential of the pledge is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="registrar-agent"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a secure message passing service between pledges in responder mode and the domain registrar.</t>

<t>It requires the EE certificate of the domain registrar for TLS server authentication when establishing a TLS session with the domain registrar and to provide the registrar EE certificate to the pledge for creating the Pledge Voucher-Request (PVR).</t>

<t>The Registrar-Agent uses its own EE certificate for TLS client authentication when establishing a TLS session with the domain registrar and for signing agent-signed data.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="tpvr"/>.</t>

<t>Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> has a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE certificate of the Registrar-Agent to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>In addition to the EE certificates, the Registrar-Agent is provided with the product serial number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product serial number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Domain registrar EE certificate: certificate of the domain registrar to be provided to the pledge.</t>
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to sign agent-signed-data.</t>
  <t>Serial number(s): product serial number(s) of pledge(s) to be bootstrapped for discovery.</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"&lt;product-serial-number&gt;._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_ep"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI "http://pledge.example.com/.well-known/brski/tpvr", it sets the Host header field to "pledge.example.com" and the absolute path "/.well-known/brski/tpbr".
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the IDevID of the pledge.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through data objects that are not bound to specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
Therefore, authenticated self-contained artifacts (e.g., JWS-signed JSON structures or COSE-signed CBOR structures) are used for the data exchanges between the pledge and the registrar via the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1856" width="576" viewBox="0 0 576 1856" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,736" fill="none" stroke="black"/>
<path d="M 16,800 L 16,912" fill="none" stroke="black"/>
<path d="M 16,976 L 16,1040" fill="none" stroke="black"/>
<path d="M 16,1104 L 16,1168" fill="none" stroke="black"/>
<path d="M 16,1232 L 16,1280" fill="none" stroke="black"/>
<path d="M 16,1344 L 16,1408" fill="none" stroke="black"/>
<path d="M 16,1472 L 16,1584" fill="none" stroke="black"/>
<path d="M 16,1648 L 16,1696" fill="none" stroke="black"/>
<path d="M 16,1760 L 16,1824" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,912" fill="none" stroke="black"/>
<path d="M 168,976 L 168,1040" fill="none" stroke="black"/>
<path d="M 168,1104 L 168,1168" fill="none" stroke="black"/>
<path d="M 168,1232 L 168,1280" fill="none" stroke="black"/>
<path d="M 168,1344 L 168,1408" fill="none" stroke="black"/>
<path d="M 168,1472 L 168,1584" fill="none" stroke="black"/>
<path d="M 168,1648 L 168,1696" fill="none" stroke="black"/>
<path d="M 168,1760 L 168,1824" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,528" fill="none" stroke="black"/>
<path d="M 312,624 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,912" fill="none" stroke="black"/>
<path d="M 312,976 L 312,1040" fill="none" stroke="black"/>
<path d="M 312,1104 L 312,1168" fill="none" stroke="black"/>
<path d="M 312,1232 L 312,1280" fill="none" stroke="black"/>
<path d="M 312,1344 L 312,1408" fill="none" stroke="black"/>
<path d="M 312,1472 L 312,1552" fill="none" stroke="black"/>
<path d="M 312,1648 L 312,1696" fill="none" stroke="black"/>
<path d="M 312,1760 L 312,1824" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,632" fill="none" stroke="black"/>
<path d="M 456,720 L 456,736" fill="none" stroke="black"/>
<path d="M 456,800 L 456,912" fill="none" stroke="black"/>
<path d="M 456,976 L 456,1040" fill="none" stroke="black"/>
<path d="M 456,1104 L 456,1168" fill="none" stroke="black"/>
<path d="M 456,1232 L 456,1280" fill="none" stroke="black"/>
<path d="M 456,1344 L 456,1408" fill="none" stroke="black"/>
<path d="M 456,1472 L 456,1512" fill="none" stroke="black"/>
<path d="M 456,1568 L 456,1584" fill="none" stroke="black"/>
<path d="M 456,1648 L 456,1696" fill="none" stroke="black"/>
<path d="M 456,1760 L 456,1824" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,656" fill="none" stroke="black"/>
<path d="M 560,704 L 560,736" fill="none" stroke="black"/>
<path d="M 560,800 L 560,912" fill="none" stroke="black"/>
<path d="M 560,976 L 560,1040" fill="none" stroke="black"/>
<path d="M 560,1104 L 560,1168" fill="none" stroke="black"/>
<path d="M 560,1232 L 560,1280" fill="none" stroke="black"/>
<path d="M 560,1344 L 560,1408" fill="none" stroke="black"/>
<path d="M 560,1472 L 560,1584" fill="none" stroke="black"/>
<path d="M 560,1648 L 560,1696" fill="none" stroke="black"/>
<path d="M 560,1760 L 560,1824" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,576 L 224,576" fill="none" stroke="black"/>
<path d="M 256,576 L 304,576" fill="none" stroke="black"/>
<path d="M 320,640 L 416,640" fill="none" stroke="black"/>
<path d="M 456,640 L 552,640" fill="none" stroke="black"/>
<path d="M 320,656 L 424,656" fill="none" stroke="black"/>
<path d="M 456,656 L 552,656" fill="none" stroke="black"/>
<path d="M 320,704 L 408,704" fill="none" stroke="black"/>
<path d="M 472,704 L 552,704" fill="none" stroke="black"/>
<path d="M 176,720 L 208,720" fill="none" stroke="black"/>
<path d="M 272,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,816 L 216,816" fill="none" stroke="black"/>
<path d="M 256,816 L 304,816" fill="none" stroke="black"/>
<path d="M 176,832 L 224,832" fill="none" stroke="black"/>
<path d="M 256,832 L 304,832" fill="none" stroke="black"/>
<path d="M 320,848 L 360,848" fill="none" stroke="black"/>
<path d="M 400,848 L 448,848" fill="none" stroke="black"/>
<path d="M 320,864 L 368,864" fill="none" stroke="black"/>
<path d="M 400,864 L 448,864" fill="none" stroke="black"/>
<path d="M 320,880 L 336,880" fill="none" stroke="black"/>
<path d="M 432,880 L 448,880" fill="none" stroke="black"/>
<path d="M 176,896 L 192,896" fill="none" stroke="black"/>
<path d="M 288,896 L 304,896" fill="none" stroke="black"/>
<path d="M 176,992 L 216,992" fill="none" stroke="black"/>
<path d="M 256,992 L 304,992" fill="none" stroke="black"/>
<path d="M 176,1008 L 192,1008" fill="none" stroke="black"/>
<path d="M 280,1008 L 304,1008" fill="none" stroke="black"/>
<path d="M 176,1024 L 192,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 304,1024" fill="none" stroke="black"/>
<path d="M 24,1120 L 56,1120" fill="none" stroke="black"/>
<path d="M 128,1120 L 160,1120" fill="none" stroke="black"/>
<path d="M 24,1136 L 64,1136" fill="none" stroke="black"/>
<path d="M 128,1136 L 160,1136" fill="none" stroke="black"/>
<path d="M 24,1152 L 64,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1248 L 56,1248" fill="none" stroke="black"/>
<path d="M 128,1248 L 160,1248" fill="none" stroke="black"/>
<path d="M 24,1264 L 64,1264" fill="none" stroke="black"/>
<path d="M 128,1264 L 160,1264" fill="none" stroke="black"/>
<path d="M 24,1360 L 56,1360" fill="none" stroke="black"/>
<path d="M 128,1360 L 160,1360" fill="none" stroke="black"/>
<path d="M 24,1376 L 48,1376" fill="none" stroke="black"/>
<path d="M 144,1376 L 160,1376" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 120,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 176,1488 L 216,1488" fill="none" stroke="black"/>
<path d="M 256,1488 L 304,1488" fill="none" stroke="black"/>
<path d="M 176,1504 L 208,1504" fill="none" stroke="black"/>
<path d="M 272,1504 L 304,1504" fill="none" stroke="black"/>
<path d="M 320,1520 L 416,1520" fill="none" stroke="black"/>
<path d="M 456,1520 L 552,1520" fill="none" stroke="black"/>
<path d="M 320,1536 L 352,1536" fill="none" stroke="black"/>
<path d="M 520,1536 L 552,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 368,1552" fill="none" stroke="black"/>
<path d="M 504,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 176,1664 L 216,1664" fill="none" stroke="black"/>
<path d="M 256,1664 L 304,1664" fill="none" stroke="black"/>
<path d="M 176,1680 L 208,1680" fill="none" stroke="black"/>
<path d="M 272,1680 L 304,1680" fill="none" stroke="black"/>
<path d="M 24,1776 L 56,1776" fill="none" stroke="black"/>
<path d="M 128,1776 L 160,1776" fill="none" stroke="black"/>
<path d="M 24,1792 L 64,1792" fill="none" stroke="black"/>
<path d="M 128,1792 L 160,1792" fill="none" stroke="black"/>
<path d="M 24,1808 L 64,1808" fill="none" stroke="black"/>
<path d="M 128,1808 L 160,1808" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1536 548,1530.4 548,1541.6" fill="black" transform="rotate(0,552,1536)"/>
<polygon class="arrowhead" points="560,1520 548,1514.4 548,1525.6" fill="black" transform="rotate(0,552,1520)"/>
<polygon class="arrowhead" points="560,656 548,650.4 548,661.6" fill="black" transform="rotate(0,552,656)"/>
<polygon class="arrowhead" points="560,640 548,634.4 548,645.6" fill="black" transform="rotate(0,552,640)"/>
<polygon class="arrowhead" points="456,864 444,858.4 444,869.6" fill="black" transform="rotate(0,448,864)"/>
<polygon class="arrowhead" points="456,848 444,842.4 444,853.6" fill="black" transform="rotate(0,448,848)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,1520 316,1514.4 316,1525.6" fill="black" transform="rotate(180,320,1520)"/>
<polygon class="arrowhead" points="328,880 316,874.4 316,885.6" fill="black" transform="rotate(180,320,880)"/>
<polygon class="arrowhead" points="328,848 316,842.4 316,853.6" fill="black" transform="rotate(180,320,848)"/>
<polygon class="arrowhead" points="328,704 316,698.4 316,709.6" fill="black" transform="rotate(180,320,704)"/>
<polygon class="arrowhead" points="328,640 316,634.4 316,645.6" fill="black" transform="rotate(180,320,640)"/>
<polygon class="arrowhead" points="312,1680 300,1674.4 300,1685.6" fill="black" transform="rotate(0,304,1680)"/>
<polygon class="arrowhead" points="312,1664 300,1658.4 300,1669.6" fill="black" transform="rotate(0,304,1664)"/>
<polygon class="arrowhead" points="312,1504 300,1498.4 300,1509.6" fill="black" transform="rotate(0,304,1504)"/>
<polygon class="arrowhead" points="312,1488 300,1482.4 300,1493.6" fill="black" transform="rotate(0,304,1488)"/>
<polygon class="arrowhead" points="312,1008 300,1002.4 300,1013.6" fill="black" transform="rotate(0,304,1008)"/>
<polygon class="arrowhead" points="312,992 300,986.4 300,997.6" fill="black" transform="rotate(0,304,992)"/>
<polygon class="arrowhead" points="312,832 300,826.4 300,837.6" fill="black" transform="rotate(0,304,832)"/>
<polygon class="arrowhead" points="312,816 300,810.4 300,821.6" fill="black" transform="rotate(0,304,816)"/>
<polygon class="arrowhead" points="312,576 300,570.4 300,581.6" fill="black" transform="rotate(0,304,576)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1664 172,1658.4 172,1669.6" fill="black" transform="rotate(180,176,1664)"/>
<polygon class="arrowhead" points="184,1488 172,1482.4 172,1493.6" fill="black" transform="rotate(180,176,1488)"/>
<polygon class="arrowhead" points="184,1024 172,1018.4 172,1029.6" fill="black" transform="rotate(180,176,1024)"/>
<polygon class="arrowhead" points="184,992 172,986.4 172,997.6" fill="black" transform="rotate(180,176,992)"/>
<polygon class="arrowhead" points="184,896 172,890.4 172,901.6" fill="black" transform="rotate(180,176,896)"/>
<polygon class="arrowhead" points="184,816 172,810.4 172,821.6" fill="black" transform="rotate(180,176,816)"/>
<polygon class="arrowhead" points="184,720 172,714.4 172,725.6" fill="black" transform="rotate(180,176,720)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1808 156,1802.4 156,1813.6" fill="black" transform="rotate(0,160,1808)"/>
<polygon class="arrowhead" points="168,1776 156,1770.4 156,1781.6" fill="black" transform="rotate(0,160,1776)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1360 156,1354.4 156,1365.6" fill="black" transform="rotate(0,160,1360)"/>
<polygon class="arrowhead" points="168,1248 156,1242.4 156,1253.6" fill="black" transform="rotate(0,160,1248)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,1120 156,1114.4 156,1125.6" fill="black" transform="rotate(0,160,1120)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1792 20,1786.4 20,1797.6" fill="black" transform="rotate(180,24,1792)"/>
<polygon class="arrowhead" points="32,1776 20,1770.4 20,1781.6" fill="black" transform="rotate(180,24,1776)"/>
<polygon class="arrowhead" points="32,1376 20,1370.4 20,1381.6" fill="black" transform="rotate(180,24,1376)"/>
<polygon class="arrowhead" points="32,1360 20,1354.4 20,1365.6" fill="black" transform="rotate(180,24,1360)"/>
<polygon class="arrowhead" points="32,1264 20,1258.4 20,1269.6" fill="black" transform="rotate(180,24,1264)"/>
<polygon class="arrowhead" points="32,1248 20,1242.4 20,1253.6" fill="black" transform="rotate(180,24,1248)"/>
<polygon class="arrowhead" points="32,1136 20,1130.4 20,1141.6" fill="black" transform="rotate(180,24,1136)"/>
<polygon class="arrowhead" points="32,1120 20,1114.4 20,1125.6" fill="black" transform="rotate(180,24,1120)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="344" y="484">backend</text>
<text x="428" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="548">[Registrar-Agent</text>
<text x="308" y="564">authenticated&amp;authorized?]</text>
<text x="240" y="580">PVR</text>
<text x="312" y="580">|</text>
<text x="280" y="596">[accept</text>
<text x="348" y="596">device?]</text>
<text x="284" y="612">[contact</text>
<text x="352" y="612">vendor]</text>
<text x="436" y="644">mTLS</text>
<text x="440" y="660">RVR</text>
<text x="460" y="676">[extract</text>
<text x="536" y="676">DomainID]</text>
<text x="456" y="692">[update</text>
<text x="512" y="692">audit</text>
<text x="556" y="692">log]</text>
<text x="440" y="708">Voucher</text>
<text x="240" y="724">Voucher</text>
<text x="16" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="16" y="772">(4)</text>
<text x="60" y="772">Supply</text>
<text x="104" y="772">PER</text>
<text x="132" y="772">to</text>
<text x="184" y="772">Registrar</text>
<text x="268" y="772">(including</text>
<text x="344" y="772">backend</text>
<text x="428" y="772">interaction)</text>
<text x="16" y="788">~</text>
<text x="168" y="788">~</text>
<text x="312" y="788">~</text>
<text x="456" y="788">~</text>
<text x="560" y="788">~</text>
<text x="236" y="820">mTLS</text>
<text x="240" y="836">PER</text>
<text x="380" y="852">mTLS</text>
<text x="384" y="868">RER</text>
<text x="384" y="884">Enroll-Resp</text>
<text x="240" y="900">Enroll-Resp</text>
<text x="16" y="932">~</text>
<text x="168" y="932">~</text>
<text x="312" y="932">~</text>
<text x="456" y="932">~</text>
<text x="560" y="932">~</text>
<text x="16" y="948">(5)</text>
<text x="64" y="948">Request</text>
<text x="108" y="948">CA</text>
<text x="172" y="948">Certificates</text>
<text x="16" y="964">~</text>
<text x="168" y="964">~</text>
<text x="312" y="964">~</text>
<text x="456" y="964">~</text>
<text x="560" y="964">~</text>
<text x="236" y="996">mTLS</text>
<text x="236" y="1012">cACert-Req</text>
<text x="240" y="1028">cACert-Resp</text>
<text x="16" y="1060">~</text>
<text x="168" y="1060">~</text>
<text x="312" y="1060">~</text>
<text x="456" y="1060">~</text>
<text x="560" y="1060">~</text>
<text x="16" y="1076">(6)</text>
<text x="60" y="1076">Supply</text>
<text x="120" y="1076">Voucher</text>
<text x="164" y="1076">to</text>
<text x="204" y="1076">Pledge</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="76" y="1124">opt.</text>
<text x="112" y="1124">TLS</text>
<text x="96" y="1140">Voucher</text>
<text x="96" y="1156">vStatus</text>
<text x="16" y="1188">~</text>
<text x="168" y="1188">~</text>
<text x="312" y="1188">~</text>
<text x="456" y="1188">~</text>
<text x="560" y="1188">~</text>
<text x="16" y="1204">(7)</text>
<text x="60" y="1204">Supply</text>
<text x="100" y="1204">CA</text>
<text x="164" y="1204">Certificates</text>
<text x="228" y="1204">to</text>
<text x="268" y="1204">Pledge</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="76" y="1252">opt.</text>
<text x="112" y="1252">TLS</text>
<text x="96" y="1268">cACerts</text>
<text x="16" y="1300">~</text>
<text x="168" y="1300">~</text>
<text x="312" y="1300">~</text>
<text x="456" y="1300">~</text>
<text x="560" y="1300">~</text>
<text x="16" y="1316">(8)</text>
<text x="60" y="1316">Supply</text>
<text x="152" y="1316">Enroll-Response</text>
<text x="228" y="1316">to</text>
<text x="268" y="1316">Pledge</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="76" y="1364">opt.</text>
<text x="112" y="1364">TLS</text>
<text x="96" y="1380">Enroll-Resp</text>
<text x="88" y="1396">eStatus</text>
<text x="16" y="1428">~</text>
<text x="168" y="1428">~</text>
<text x="312" y="1428">~</text>
<text x="456" y="1428">~</text>
<text x="560" y="1428">~</text>
<text x="16" y="1444">(9)</text>
<text x="64" y="1444">Voucher</text>
<text x="124" y="1444">Status</text>
<text x="192" y="1444">Telemetry</text>
<text x="276" y="1444">(including</text>
<text x="352" y="1444">backend</text>
<text x="436" y="1444">interaction)</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="236" y="1492">mTLS</text>
<text x="240" y="1508">vStatus</text>
<text x="436" y="1524">mTLS</text>
<text x="368" y="1540">req</text>
<text x="412" y="1540">device</text>
<text x="464" y="1540">audit</text>
<text x="504" y="1540">log</text>
<text x="396" y="1556">device</text>
<text x="448" y="1556">audit</text>
<text x="488" y="1556">log</text>
<text x="264" y="1572">[verify</text>
<text x="320" y="1572">audit</text>
<text x="364" y="1572">log]</text>
<text x="312" y="1588">|</text>
<text x="16" y="1604">~</text>
<text x="168" y="1604">~</text>
<text x="312" y="1604">~</text>
<text x="456" y="1604">~</text>
<text x="560" y="1604">~</text>
<text x="20" y="1620">(10)</text>
<text x="68" y="1620">Enroll</text>
<text x="124" y="1620">Status</text>
<text x="192" y="1620">Telemetry</text>
<text x="16" y="1636">~</text>
<text x="168" y="1636">~</text>
<text x="312" y="1636">~</text>
<text x="456" y="1636">~</text>
<text x="560" y="1636">~</text>
<text x="236" y="1668">mTLS</text>
<text x="240" y="1684">eStatus</text>
<text x="16" y="1716">~</text>
<text x="168" y="1716">~</text>
<text x="312" y="1716">~</text>
<text x="456" y="1716">~</text>
<text x="560" y="1716">~</text>
<text x="20" y="1732">(11)</text>
<text x="64" y="1732">Query</text>
<text x="116" y="1732">Pledge</text>
<text x="172" y="1732">Status</text>
<text x="16" y="1748">~</text>
<text x="168" y="1748">~</text>
<text x="312" y="1748">~</text>
<text x="456" y="1748">~</text>
<text x="560" y="1748">~</text>
<text x="76" y="1780">opt.</text>
<text x="112" y="1780">TLS</text>
<text x="96" y="1796">tStatus</text>
<text x="96" y="1812">pStatus</text>
<text x="16" y="1844">~</text>
<text x="168" y="1844">~</text>
<text x="312" y="1844">~</text>
<text x="456" y="1844">~</text>
<text x="560" y="1844">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers" type="1">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr-proc"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="req_cacerts"/> describes the retrival exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the certificate provisioning exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange (containing the LDevID (Pledge) certificate) initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>This exchange assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PVR via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field to <spanx style="verb">application/json</spanx>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact in the body of a 200 OK response.
The Content-Type field header of the response <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-voucher-request-trigger-tpvr"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters.
The following CDDL <xref target="RFC8610"/> explains the Pledge Voucher-Request Trigger structure.</t>

<figure title="CDDL for Pledge Voucher-Request Trigger" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">pledgevoucherrequesttrigger</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: X.509 v3 certificate structure of the domain registrar EE certificate (base64-encoded value); may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded JWS structure containing the SubjectKeyIdentifier of the EE (RegAgt) certificate and signing Data including the creation date and serial number of the pledge. Note that <xref target="I-D.ietf-anima-rfc8366bis"/> defines an opaque binary element for agent-signed data, for which the structure is defined in BRSKI-PRM.</t>
</list></t>

<figure title="JWS structure for the agent-signed-data member in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(prmasd)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The BRSKI-PRM Agent Signed Data structure <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="prmasd_CDDL_def"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains the BRSKI-PRM Agent Signed Data structure.</t>

<figure title="CDDL for BRSKI-PRM Agent Signed Data" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">prmasd</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: creation date and time as standard date/time string as defined in <xref target="RFC3339"/></t>
  <t><spanx style="verb">serial-number</spanx>: product-serial-number in the X520SerialNumber field of the IDevID certificate of the pledge as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
</list></t>

<t><xref target="prmasd_payload"/> below shows an example for unsigned BRSKI-PRM Agent Signed Data in JSON syntax.</t>

<figure title="Data example for prmasd" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> JWS structure <bcp14>MUST</bcp14> contain the following parameters (see <xref target="asd_header"/> for an example):</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<figure title="Protected Header example inside agent-signed-data" anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate.
Hence, the tPVR is an unsigned artifact and the pledge only accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

</section>
<section anchor="response-artifact-pledge-voucher-request-pvr"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact is a JWS Voucher Request as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
Its unsigned data <bcp14>SHALL</bcp14> be constructed similar to the Voucher-Request artifact defined in <xref target="RFC8995"/>.
It will contain additional data provided by the Registrar-Agent as specified in the following.</t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request:voucher as defined in <xref target="I-D.ietf-anima-rfc8366bis"/> and thus makes optional leaves in the YANG definition mandatory:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher data is extended with two additional parameters that <bcp14>MUST</bcp14> be included:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: base64-encoded registrar EE certificate (provided in tPVR by the Registrar-Agent); enables the registrar to verify that it is the desired registrar for handling the PVR</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded agent-signed-data (provided in tPVR by the Registrar-Agent); enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr_example"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "typ": "voucher-jws+json",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_2"/> shows the the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PER via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tper</spanx>.
As the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.
To avoid an empty request body an artifact is provided containing the description of the requested operation.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-enroll-request-trigger-tper"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>This document specifies the trigger for a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.</t>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters (tPER-data).
The following CDDL <xref target="RFC8610"/> explains the Pledge Enroll-Request Trigger structure.</t>

<figure title="CDDL for Pledge Enroll-Request Trigger" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork></figure>

<t>The enroll-type  allows for specifying arbitrary indications, which type of certificate is to be enrolled. 
BRSKI enris an enum, identifying what is being enrolled. 
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM defines only "enroll-generic-cert" for the enrollment of the generic LDevID certificate. 
Other specifications using this mechanism may define further values, e.g., to bootstrap application related certificates, e.g., indicated by a value "enroll-app-cert".</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="tper_CDDL_def"/>.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional data, like CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

</section>
<section anchor="per-resp-artifact"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact is a JWS-signed PKCS#10 Certificate Signing Request (CSR) utilizing the csr-grouping of the <spanx style="verb">ietf-ztp-types</spanx> YANG module as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.</t>

<t>The pledge constructs the Pledge Enroll-Request (PER) artifact as a JWS structure containing the PKCS#10 request wrapped in ietf-ztp-types YANG structrue as JWS payload.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10 and <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain.
This generic LDevID certificate can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the enrollment endpoint <spanx style="verb">requestenroll</spanx> specified in this document to provide the Pledge Enroll-Request artifact to the Registrar.</t>

<t>The JWS Protected Header of the PER <bcp14>MUST</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: base64-encoded pledge IDevID certificate;
it <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate; if the certificate chain is not included, it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate</t>
</list></t>

<t>The body of the Pledge Enroll-Request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">p10-csr</spanx>: base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per_example"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
If the pledge does not have synchronized time, it used the created-on time from the agent-signed-data during the creation of the PVR and should advance that value for use in PER creation.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including backend interaction)</name>

<t>Similar to BRSKI "requestvoucher" endpoint in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.</t>

<t>The Registrar-Agent has acquired one or more PVR and PER object pairs</t>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the exchanges for the Voucher Request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="416" width="576" viewBox="0 0 576 416" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,384" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,384" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,176" fill="none" stroke="black"/>
<path d="M 312,272 L 312,384" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,280" fill="none" stroke="black"/>
<path d="M 456,368 L 456,384" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,304" fill="none" stroke="black"/>
<path d="M 560,352 L 560,384" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,224 L 224,224" fill="none" stroke="black"/>
<path d="M 256,224 L 304,224" fill="none" stroke="black"/>
<path d="M 320,288 L 416,288" fill="none" stroke="black"/>
<path d="M 456,288 L 552,288" fill="none" stroke="black"/>
<path d="M 320,304 L 424,304" fill="none" stroke="black"/>
<path d="M 456,304 L 552,304" fill="none" stroke="black"/>
<path d="M 320,352 L 408,352" fill="none" stroke="black"/>
<path d="M 472,352 L 552,352" fill="none" stroke="black"/>
<path d="M 176,368 L 208,368" fill="none" stroke="black"/>
<path d="M 272,368 L 304,368" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,304 548,298.4 548,309.6" fill="black" transform="rotate(0,552,304)"/>
<polygon class="arrowhead" points="560,288 548,282.4 548,293.6" fill="black" transform="rotate(0,552,288)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(180,320,352)"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(180,320,288)"/>
<polygon class="arrowhead" points="312,224 300,218.4 300,229.6" fill="black" transform="rotate(0,304,224)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,368 172,362.4 172,373.6" fill="black" transform="rotate(180,176,368)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="196">[Registrar-Agent</text>
<text x="308" y="212">authenticated&amp;authorized?]</text>
<text x="240" y="228">PVR</text>
<text x="312" y="228">|</text>
<text x="280" y="244">[accept</text>
<text x="348" y="244">device?]</text>
<text x="284" y="260">[contact</text>
<text x="352" y="260">vendor]</text>
<text x="436" y="292">mTLS</text>
<text x="440" y="308">RVR</text>
<text x="460" y="324">[extract</text>
<text x="536" y="324">DomainID]</text>
<text x="456" y="340">[update</text>
<text x="512" y="340">audit</text>
<text x="556" y="340">log]</text>
<text x="440" y="356">Voucher</text>
<text x="240" y="372">Voucher</text>
<text x="16" y="404">~</text>
<text x="168" y="404">~</text>
<text x="312" y="404">~</text>
<text x="456" y="404">~</text>
<text x="560" y="404">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The HTTP request Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="tpvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the Voucher.</t>

<t>The HTTP response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> if no content negotiation is used.</t>

<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS".</t>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR, it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid or if the pledge-provided information could not be used with automated allowance.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref section="5.3" sectionFormat="of" target="RFC8995"/> followed by obtaining a voucher from the pledge's MASA according to <xref section="5.4" sectionFormat="of" target="RFC8995"/> with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Supply RVR to MASA (backend interaction)</name>

<t>The registrar needs to convert the PVR to an RVR and supply it to the MASA.</t>

<t>If the MASA address/URI is learned from the IDevID MASA URI extension (<xref section="2.3" sectionFormat="of" target="RFC8995"/>), then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC9052"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

<t>The registrar provides the EE certificate of the Registrar-Agent identified by the SubjectKeyIdentifier (SKID) in the header of the "agent-signed-data" from the PVR in its RVR (see also <xref target="rvr-proc"/>).</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-cert" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA may issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE certificate of the Registrar-Agent in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx response status codes as described in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
When successful, the Voucher will then be supplied via the registrar to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Issue Voucher by MASA (backend interaction)</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
{
  "ietf-voucher:voucher": {
    "assertion": "agent-proximity",
    "serial-number": "callee4711",
    "nonce": "base64encodedvalue==",
    "created-on": "2022-01-04T00:00:02.000Z",
    "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>Supply Voucher to Registrar (backend interaction)</name>

<t>After receiving the voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
The registrar then prepares the artifact to be provided via the registrar-agent to the pledge as described in the following section <xref target="exchanges_uc2_2_reg_signed_voucher"/>.</t>

</section>
<section anchor="exchanges_uc2_2_reg_signed_voucher"><name>Response Artifact: Registrar countersigned Voucher</name>
<t>The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key (of the Registrar) that the pledge received in the trigger for the PVR (see <xref target="tpvr_CDDL_def"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Reg))),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
{
  "ietf-voucher:voucher": {
     "assertion": "agent-proximity",
     "serial-number": "callee4711",
     "nonce": "base64encodedvalue==",
     "created-on": "2022-01-04T00:00:02.000Z",
     "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "typ": "voucher-jws+json",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor.
The registrar returns the voucher to the Registrar-Agent.</t>

</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including backend interaction)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,272" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 360,208" fill="none" stroke="black"/>
<path d="M 400,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 368,224" fill="none" stroke="black"/>
<path d="M 400,224 L 448,224" fill="none" stroke="black"/>
<path d="M 320,240 L 336,240" fill="none" stroke="black"/>
<path d="M 432,240 L 448,240" fill="none" stroke="black"/>
<path d="M 176,256 L 192,256" fill="none" stroke="black"/>
<path d="M 288,256 L 304,256" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,224 444,218.4 444,229.6" fill="black" transform="rotate(0,448,224)"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,256 172,250.4 172,261.6" fill="black" transform="rotate(180,176,256)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="380" y="212">mTLS</text>
<text x="384" y="228">RER</text>
<text x="384" y="244">Enroll-Resp</text>
<text x="240" y="260">Enroll-Resp</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>As specified in <xref target="tper"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per_example"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
</list></t>

</section>
<section anchor="enroll-pledge-by-domain-ca-backend-interaction"><name>Enroll Pledge by Domain CA (backend interaction)</name>

<t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the Enroll-Request with the corresponding domain CA.
It creates a Registrar Enroll-Request (RER) by utilizing the protocol expected by the domain CA.</t>

<t>The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.</t>

<t>The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>

</section>
<section anchor="response-artifact-enroll-response-enroll-resp"><name>Response Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="tper"/>).</t>

</section>
</section>
<section anchor="req_cacerts"><name>Request CA Certificates</name>

<t>As the pledge will verify it own LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the request and provisioning of CA certificates in the infrastructure. 
The following subsections describe the corresponding artifacts.</t>

<figure title="CA certificates retrieval exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 192,192" fill="none" stroke="black"/>
<path d="M 280,192 L 304,192" fill="none" stroke="black"/>
<path d="M 176,208 L 192,208" fill="none" stroke="black"/>
<path d="M 288,208 L 304,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,208 172,202.4 172,213.6" fill="black" transform="rotate(180,176,208)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="64" y="132">Request</text>
<text x="108" y="132">CA</text>
<text x="172" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="236" y="196">cACert-Req</text>
<text x="240" y="212">cACert-Resp</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-cacert-request-cacert-req"><name>Request Artifact: cACert-Request (cACert-Req)</name>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

</section>
<section anchor="response-artifact-cacert-response-cacert-resp"><name>Response Artifact: cACert-Response (cACert-Resp)</name>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64-encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in 
# General JWS Serialization syntax
{
  "payload": BASE64URL(certs),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="tpvr"/>.</t>
</list></t>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="tpvr"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.
<xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Voucher</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-voucher"><name>Request Artifact: Voucher</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers" type="1">
  <t>Verify MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the Pledge-Voucher-Request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="response-artifact-voucher-status-vstatus"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.
The reason-context is an arbitrary JSON object that may provide additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="vstat"/>.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": BASE64URL(pledge-voucher-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="voucher"/>.</t>

</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates acquired by the pledge-agent to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">cACerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact"><name>Request Artifact:</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64-encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers" type="1">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the received wrapped CA certificate object using the domain certificate contained in the voucher. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 403 Forbidden. It signals that the object could not be verified and has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"/>.</t>
</list></t>

<t>In case of success, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t><xref target="exchangesfig_uc2_8"/> shows the supply of the Enroll-Response to the pledge.
The following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the Enroll-Response to the pledge by HTTP(S) POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Content-Type header when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="response-artifact-enroll-status-estatus"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>After enrollment processing the pledge <bcp14>MUST</bcp14> reply with a enrollment status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The enroll-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the enroll-status using its new LDevID credentials as shown in <xref target="estat"/>.
In failure case, the pledge <bcp14>SHALL</bcp14> use its IDevID credentials.
<xref section="5.9.4" sectionFormat="of" target="RFC8995"/> specifies the enrollment status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="estat"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains enroll-status response structure. 
It is similar as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/> with the optional fields set to mandatory as described above.</t>

<figure title="CDDL for pledge-enrollment-status response" anchor="e_stat_res_def"><artwork type="cddl" align="left"><![CDATA[
enrollstatus-trigger = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": BASE64URL(pledge-enroll-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including backend interaction)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status (vStatus) and enroll status (eStatus) from pledge.</t>
</list></t>

<figure><artset><artwork  type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,240" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="464" y="228">audit</text>
<text x="504" y="228">log</text>
<text x="396" y="244">device</text>
<text x="448" y="244">audit</text>
<text x="488" y="244">log</text>
<text x="264" y="260">[verify</text>
<text x="320" y="260">audit</text>
<text x="364" y="260">log]</text>
<text x="312" y="276">|</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>
<t>{: #exchangesfig_uc2_9 title="Voucher Status telemetry exchange" artwork-align="center"}~~~~ aasvg</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with HTTP 4xx/5xx status codes.
The Registrar-Agent may use the response status code to signal success/failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the Enroll-Response (certificate) and holds the corresponding private key.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"/>.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes.</t>

<t>Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide the dedicated endpoint for the Query Pledge Status operation.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent queries the Pledge Status via HTTP POST request on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the JWS-signed Status Trigger (tStatus) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge provides the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> reply to this request with the Pledge Status (pStatus) artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-artifact-status-trigger-tstatus"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query artifact is a JWS structure signing information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> defines the structure of the unsigned Status Query data (i.e., JWS payload):</t>

<figure title="CDDL for unsigned Status Trigger data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "created-on": tdate,
      "serial-number": text,
      "status-type": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> field is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the version <bcp14>MUST</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">created-on</spanx> field contains a standard date/time string following <xref target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> field takes the product-serial-number corresponding to the X520SerialNumber field of the IDevID certificate of the pledge.</t>

<t>The <spanx style="verb">status-type</spanx> value defined for BRSKI-PRM Status Query is <spanx style="verb">bootstrap</spanx>.
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).</t>

<t>As the Status Query artifact is defined generic, it may be used by other specifications to request further status information using other status types, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req_data"/> below shows an example for unsigned Status Query data in JSON syntax using status-type <spanx style="verb">bootstrap</spanx>.</t>

<figure title="Example of unsigned Status Query data in JSON syntax using status-type bootstrap for the Status Query artifact" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

<t>The Status Query data <bcp14>MUST</bcp14> be signed by the Registrar-Agent using its private key corresponding to the EE (RegAgt) certificate.
When using a JWS signature, the Status Query artifact looks as shown in <xref target="stat_req"/> and the Content-Type response header <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>:</t>

<figure title="Status Query Representation in General JWS JSON Serialization Syntax" anchor="stat_req"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(status-query)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>For details on <spanx style="verb">JWS Protected Header</spanx> and <spanx style="verb">JWS Signature</spanx> see <xref target="I-D.ietf-anima-jws-voucher"/> or <xref target="RFC7515"/>.</t>

</section>
<section anchor="response-artifact-pledge-status-pstatus"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>When the pledge receives a Status Query with status-type <spanx style="verb">bootstrap</spanx> it <bcp14>SHALL</bcp14> respond with previously collected telemetry information (see <xref target="vstatus"/> and <xref target="estatus"/>) in a single Pledge Status artifact.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t>The following CDDL defines the structure of the Pledge Status (pStatus) data:</t>

<figure title="CDDL for unsigned Pledge Status data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="stat_res"/>.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(status-response)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Request wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply Voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misuse of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="4" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="3" month="June" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-ietf-anima-brski-ae/.

   Source for this draft and an issue tracker can be found at
   https://github.com/anima-wg/anima-brski-ae.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-11"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2472?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers" type="1">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers" type="1">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response.</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
  <t>Reordered description in section <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
  <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
  <t>Included statement in <xref target="per-resp-artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="req_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y963Ycx5Eu+h9PUQPN2gKs7iYuvMJjeyASsmFTIgeApJnt
NYcsdBeAMhtd7apqkDClWfMge691nuU8yjzJiWtmZFZWowFRtm60lw00urLy
EhnXLyKGw+FaW7bTYi/79Oj4T4fZ27K9yF5Oi8l5kZWz7Kho5tVsUtTZ59Wk
yDboS8OXR59vruWnp3VxJc/hR2uTajzLL2GoSZ2ftcOyaM+G+ay8zIendfOm
HM7ry+H27lpeF/le9mJe1HlbVrMmy2eT7PN8lp8Xl8WsXXt7vpftf3H4+X72
9e/XJnkLA+5s7dxfa1r44qt8Ws3gk7ZeFGvlvKafmnZna+vJ1s5aszi9LJsG
Rj25nsO3Dg9OPgvHu+nl47zdy5p2sjYv99ayrK3Ge9nH10XzMfwyri7n+bj1
HzTXl3Vx1pgPqroNP4Epzqq2PCuLCXw4q+hbbV36YfJFe1HVe2tD2G948HiU
fVaXRQPf4808bouzs2LmPq1qWM9xidNtsv3fwyd6EvIhv6Eo4A0v2rYa/iG/
mA2Pytl59hAXUbbXe9nni1k5vqA1TeAdHz/efrT7hNe4mLU1fOP3RX2Zz67h
o+IyL6e4KTSP0RnO418bftcI9gS+sqjLveyibefN3r17b9++HZk/39OVnYyy
r4t6VtRuaScX1WXe+E//UUtraR7DtzSPuyztYJQ9L3K/sINpWbX6Ea3qadmM
q+z4Gnbx0i7jCObalvBb3jRF9sit4ut8Oi2bYjotZm4pT/8wfLy7dd8u5Rju
69+KegpUDB/PL+hurH9yfzu7fz97/Ohx9gRuxrpf6RSm9K9jnAstT6b/+Yjm
kdeTppq5RXyOHxXT7Gn0Vz4leGMxhW3Mjquz9i1cq+zrqn7T+FddjutPkAX8
a6NfHY1zu6G6n+bP99bGFSysPF205krA7j4r//LG727zptJPaDKH1Qk81yym
wCHG16PZ1M+igO+OJvDdf4UTib40VDKsYAeLpskOxm+KutVRP1u0i7p4W5SG
UNriX8fN6CxfjCaF2b0/VVd52xDVyd7lbXtRAm2bvwTUfTy+gJH/xlQuo9Nu
vZEHRrOiXbsqZosC+dB5XS3mwsbwWiBXzfip9/TLv+LDI3jFt/htYOKL0z3+
2vDt+b2IC6/NKrgBbXlFYx999vTho4c7/sdd+fHR1u6W/vhg+4H8+Hj34UP9
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
haKgEzafpUsgK4F8FvS64V6NO7uP4aZMXMfRZpzPZk70/xu6eLCftocwJE/D
FojFvsKSq6h9I7Z3vsg+3dp6gIkk9PAxP/wFPcz00iwuL+F04qrgdo3O6eYA
Rz25tdJLprMZqsvsmQyJPtmzt5KQ7DbYshveSZWMuQZDaXoapu6RjLLqtOsK
ivh69FF32Di+8zi6J3tLb9Cy26MlbpmqY9MrXps09iXbq7mejS+AsbGKyT2Y
PivF85h0qIKVpLbjbSzGGw1G0oeBICeaNpNqhIpHCt9GjoxuTbonjFasuBP8
gtQyg9WLKl+fMCtp4RItVH2VF0UyqqfoQMcvGdcHsDUjyStJZhLX/Y+djGLi
WtYWvLKT9g4EjY6KJlWTS/JpbbPDq2UXApN+A2dFxYl9FI495QRRgfv0qkwD
62KdxOsIPMPSbgajgSIqe8rhh8hNeWPUWEiqk7PjQktUjNY+B26CMxj4vihG
EG+ESE1zZpsrpUEGy5HCEVrayWZKd5GXcq+HfK+HiXutJThNXYSOmzjIofnW
rlZz/Cg6Xk/MSUQxnyAoaosHyxLfv9/nro3vsv24ibbPwdLANv7dbUqjLUt8
dtFZwZUXG5CDG+Rkp1l6sHFY8bNsUiuQVG/f0HEkF4DyqzVTrpHCzAMTlEkl
A0tQlur9iSBQA2cxBzk4i4Cjmtgz52YukkDqFz0I8rbJwrN9ZbINPt6hswKH
/J3ajxH9DTSRZwQXpsoaugJToPAmBjQK3DVO5Ln4dYHJbK1EsMlzPnTvkchD
iimJDZcqxLGmbDV8QtHS133lK/pKrBg1h3ZVqo/6FzgMqMa7xPMzWtsPySJB
AgNW7g3m8PdH+8cvYZyGbPyO0nj3jfR7GPgUyLTF17DfT4F1/tuk8T189HAX
DS606T9HwPwYsyZxQvpnKUuq7ww0Gm8F2m/r9X/iXRp6G9lumZ3BJUOOqvcp
qsrAfblm3U3yXg4Xfc7tXxrJHgUTEaPtDfe5JUUomiowm60Us0lNDggH32FR
lqh2crcy73NHN4IpWalxSVUQpI8pzpgLSF5g4yJ0VHrPrDSF579bDrGR5O3O
0mfQJzmC1pPfHL1iypGDe9WO5yN6y/pIo6fdh1gcNqUiGAI9ytdwVk1EuxLb
eYepw3aAQWA+IPZlEBTKtaM4768PlNNTar2MsI8PG3HcgWHcweO3vYtsHRLI
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
OdUUle3u7iKV0QuCLXq911MQTeb37w92tviWcPFt0a2EZlK1kcMuik3frJSW
dka7cQED9HHJKQlNUmwNS7+xlws1bmmAfsZKHJ/RMrrSO8iXXImLuaDfcqCY
9Z2tne3h1v3h9sOTra09/O/2aGtr63+vMy+MCGx9jNUlivuPtrfX17pkJgtQ
dvWM83z93PlrS3lOio26S9sVj5E47Ji3/pZ69VAr0uOMWYcmllSbnd4UPWV6
DiQD/1vVILcvWVdW96ex0BxzV7X69cHxzoOHXYPQlLFgOnBchd73ppx0BT6p
fboF6T4X+Jf14LP17MXTk4OT7Pjk6PCL34vCc4MmEMhKWDSeN62DaQEmh5/w
7GRyNO5vfrMeySvZVuc9ic9TaaKkHqBdAdZLIV67EEWNWAEVB1bfgZqHonUG
7gMs34+GpW+I6lXGVBshKnpNLUSBbVRnQ/ivlGE37ubeEvW+sZHdY6nwQpPH
eUamjjOBQv84V93hnKe4p1Fi5h+sSaktyCQ1mxoq/ug9FWY3u5pI2WJhAXxH
2frysraW/TK11Oj2XHWcT6PlCiau3Yzq7ViJh+sy6ckEZei/oka9UkdBnCkS
SgFD+KyVar66L65Sipbp0+I5Lo54oyW8caMBvNG1e4mlaehPv5eqn9rvWDrE
doozozfDcvefPxdbh9klRiSl+YuEuuK5uVl11TgpvXMohbyU45qeJ/TWuC5S
opN10AMz4NhKfCJTNLgDV2Y1Lo8VMV3deeA1uFtRd+e94A70b29guTBhLhop
eObC+tMivypcG9L/2Ae2a5RaVwEtoffw4dgFjRd1LcWajSIEf7zOZ+d7+CnM
bDKkT9kDhxHK0J3oblu654S4FPHN2OLGmXo0KX6fKzPSudcDX7tSZqx+Dy8Y
czwrcnC9nmEZzM5Cc/jm9bytzut8DhYdsSqgDnQSzptiMamGNSwSpjDTTigJ
fa67d77nb0LRg4OOlTwe17VpS46pXTonhmtqWzfv4dGW8BseDsVGB/f5hYuT
4c3ZHAlpLyVJZp+Nr5rProO3lb1lhtxJKqotpjXVbutuiVSPfoeKLcxOYix9
wzd/LQVKb+jDx4V1id0XTVkHr0Ypip3Tp0a6r+os6QqkDzhzvJfT6lzr2fV0
d9YE46jhkBQe5KGClSFlSDcH7nwlDIw4yiUQ9dSb/ikKcm9qCmqyJ3zJ1k69
iccJfYp6InLE46d4BR83iQaCpoJQk717MPYUqsv444vjA3Fdq8L5UebedrPH
4gZXzrI79cNy8FBBMdKD97JnBdOrejfWly1jHQawDWe4YYCx93iLlg6xp0u+
0Rzc8eYgfp1YOX6zeNZ88sm9zxbP/vD7L2dH777YPdi+//TfwBbQby6zHfU7
jovi32M+6r60sgc9bZyE44Q+9R5zBk8pfULrKTJYj84Dnk+cSMqqgs/AqMTP
4mii/hkukSPTbPkK+1cTuRQxaqA2mHiEjkKCgssK9zHtAvp2LYmEiqCyCIQq
EAj1YuUS2MQBWirJ59SJIFAu5baL5UX/frDIpZ0AudSHXjo4+gWk9DMHKf1S
8+iXmkfBL0swSjvOy3bw98IoHXwojFKBGKV9SYiQ6samamxeXjbc9EQcEiwA
ynHYM3dWhY6jlhsNis7b137yxDVqnWFl5vY6BEph/17jlXGjRAFX5sXzED+t
tqLrSLYM4XSwAsLp4NYIJwdgssAscgT0ILOS8BmLU1kRq3TwXbBK99+9C/FK
+KXvGav0d4QHjTIsPS+K188NJRRpagb5c8A+UtueR72CTeBbohhNigcwfQEf
eHp8ZO9/390HWnbVeM3X1flmmUldaG/sCd3Ta7lF0nsbzRfv39SkrqP9e0/3
R4Hjt3/5HxD4xLtJts3m3UBQPdPsiVPzfjLH7sE/4b91/sYQiQhsmX82v6KV
ZX/P7v3GfV0Omo07i3kqbsY8pdfxHULado7aL4va1hMdXbPyfVqiIL3Wa4ba
unqH+AKdBcRVaictHhwZxBp30YQPmBIKMJ8H0nuA3/JWbuxpQalT/sn9IGkz
2CXM4/PhYoXeUEgpudnOvxRWf8dP9PZ1g04whWSpcPUbYfKKawlq6ocrjIPM
1cb0dnVpO7aPIDeeRUEc9Evnh5S9Se8Jdr7qCmEQXt2qF/PAXszvAeUSHdHd
ppU2bKNAzIAaAUfc0TXt8tXxJxQK4MrtUSgn7t/lTObgtEc3RciSRfqxt1fB
LVmHurJvl+3GRrgJGjVTpNjLPz09/mh7yxYCIiccsWYdAjZjU+rfO6hbUw/P
62oxN90/XpMb7W/tnK5+8zpww/bjvcEeRFThsMEnYVyFMNERSJoX5oRh/fSX
L146IImJHoeWvUgw71+dL07hTuA3qXmLntfAQxBVdfQdSLwLlz23A3j3oVVv
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
gmyfVAmzX/yVP2t/5aPNG6nzp+23ZOxFc3e/ZecbP0iH4yMHZorLGiknWcED
mXZBLnM9qiwgT1HRpgCaPuXARfw66PO7OyiBr6KHMgmEDddP5QkXY0Se00Ry
U5QDdBhM8CivtGhB8KTkCFDXQKk5NdAGwB03KNpEZImn9Tlco7dx6uJsympF
5I6KZapYXvHequn4QQwxUzqvU0wktMcQbeDidXcDzAQ2LNPSCqDnhgtgWQ9E
Jysq8u4E6/jY1Fjp+AA2ZpWTegLTCgbTPghN5Plkf0xs84sjZpR9jr2fpOc3
fokcpTgz0pzd6DwKuYg1FY08wsSoXV1Z9SAFE7vIPa6QnUBYRQmbCG2PsqcX
xfiN2prDVkqDp3QKIaYR5ubBVoTt1hPNMemqsqOfNblJcZZjbkrwpEsIKuMW
2gH4SlMzRpoZGAwSQ+NKBeanm7xLU6vI6yWJPsYVc3/7Qfalecx0nhIzB0h2
tLaju8j8SLpsqcNC0FxZpDRLiXQaxxkvPQ8PgsrnboL3t7ayT/OJ48h2TrvO
fevANUth9ze02wz8nuJ3pwn2FULGMjNlo54V8maeXku5fx0e6PKCp1c6sk4l
X3YaRilb0/Znulv9k5HNNz647ioy49p37mXfkkW6rSTpZGsb6MQkgZiTwE4+
xFOmJhs0qt6IF/SMTV/xmEr+NfEDyRPRkpsSLRqteQ99IvIk7HH5mfuTTlSE
7QuFpDZTXuvnYfZt2f3a2s0+q+rTcgKCJb1TMlNXejVoqcH9fRv5HGuQus15
MPIpxH2iQnpQNMX0TJqGwEUbFSOsEcq5dlwPNWaFA5PMcukIiSpyMZP10Sgr
iwYdm1TrQ98fbY92cRMN1HbkoePeD3nDjtqsRPyA0j89V8RM28gkjXMhrUnK
0LRX+njaNH0cmKaCrIuTcVPR5tEvZufP2Ox8vHkjBf6Uzc5b1f9JD0PnWni0
zE8aLvM4LCzkqeXOsJkVksBvANMs5W5qqm6A5noLa7VwcJoUWsY0aurkZTQG
SdyTRN+DKQ0zIzuQnCB5m3v3gZwmWzfA5SRgsxoZVsywNt3rFEeGNX8Jm0ii
eu6LjQfWn8kfdRI9FUzumI0aAJX9p7IX3fAnatguSnxDkFP1n4QlmdgFqZch
slveLK2wrn2smlo2V3EoKKtQGXxb8myi4MlNJQ5cjLqIYtQhqVjPe29U2jxy
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
r1Z/qtORdYFrXuC2iR8hiaDYPFX5PU4/tLElX7YD0GavCj+k9XqoPxbbF3pf
mFS2XMMJje2Kknm0N6SKcTeXxy2JR7LXvtawlkqN0Vw4vNo8jbZq4riQujne
MP3nn/+di/03EZL55fjAL1UeI6+o3abKbnKydkF5Nn7/Q10O7kS8AHLH5Obb
vYAtfHkY8Xu0GlbcJMphwYDNs4qYlVhInIZs98eGUvf2RroW69Nqpmy1f/NZ
uObVmJXmVHC1sZF7P3To8QmqlPHJjyqjbt0MQAF5xkOe49yheyc17VRayl9z
Lfz2Iy1t8tZfQtowQ9jMD+1cXLhxnZ/I5mm9whks05orrSmHQEg7j7d88zpU
hzzMPHyiOnC9NbFc+dfLfrAu+L0xny77SbDO5vHlXfD0DQK8/CDj8/7SkvuD
kVk39fHTpU6tILxa/B+rpzz7t3WaPUF29cM0RYNx3x6b1tk3wtWlPc9WYdA8
OBrbZ62ONym61YcbXiKqiT5dDuNltJ6n6OkqTJPgaVNl90bLx9Wli98dV1nn
lPEqnspGj8InDuuX/NB5XO83rLYBwiK+0VrTKRtfvb9uYBu0PAimSyO9gqxW
T4c5ejRY5fMlemTTqh+Ja01KC0FZ4MFRxv0nXqM9ZfTDu/U8fqRN+haBCV8W
wexwVi1v0hXc8yI9kn26OyyOi6Y7xwKtOe9OdaoLDoUXgbRq10FRyarPd4tz
TW+gkUbKF4zLTZ2j49m7xq7On3815uGKtk48zS/v57ypIeLzGD/S5sGvF2bV
vWPzr8+jBdWuvexUPgA/PKWoT4Fh+52VfvTBFaChc9oTjj9XV1e84E2t/XKz
nfzPf2p2llcnvjfx+VZzGCE1G5zf50h29tutBDuzqgOoPcqqZ8EmQSCaxcdb
uustu+9sfPrwwMyPl1eVMB+OOaNX+T375Z6E1m72xtlujhUQglZTb0fDiBZ+
fIa5vhq2WdHd0CmaZtc+paTmm98vr2+ubyHtkvYA8T3L/37+h/YnyL9f/vPX
f6Y1zrjaP8Z1DzYA+V2SAC9ffOnfL15sla82Ucd7rfCnZn4/9Z8j11j501EZ
5mwXuewQ9cVtmAs3UX4relKShfPRDZ5Pwo6RhUuzmEnXXy/m47mW+BJ7qp6+
vQ5csYiG6fy+rx38qVZ47racLVnp5Ww/Wqzm+kDe64eJaCzC67E12ozy7teL
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
nrNS2pfW/LlzJtg6AKuerQIzPtLlqlooWcdXJ87WauW3tvs7Ut5zD/N2ev1N
jPn8udXep9PSIpXkan2hWgKVjz/jfad8dx0jVOJ8mf/89XL0rcowVk/R1JZV
kmnWyh00HT7aXduNiq+YecsbU1aundelHvEgbBYfk+v18mUTkx3jv5r3bao0
KoCqCnUuY54PodUP3oXNkReQvDmXdtX7/uWHKoyvkzK1/qMN7t/4sggBZ0wr
VmK955f+LX2ss6G1j+HOkvwXvvEi37BpSUH6/TKlpMtx5PEyKlbzOm92dOyW
ee5muFr+8YY7v73+vS3WVnD3ASR9Q+nI582vl6tZNW0fW9/str95NLA6c3VO
LXhM/vIk3Kmlm9+P4HZE+G/zR440nWoJh+ei6Z8Lyo2TR/oBeWk1/dvvR/5a
2UWVFV4266eX576rUyeISH+gOvl8k4EQnDd5+3uDQi+JFrkbWs6LWtvN8ePG
u1Vkp/pwTqmEdsgFXsI9erO1/MSRKBPe+pbY+taJUX1rv+T47hJCyOOS8+MT
QFRZiPLyx2UJX86XKEALKTjZcXs5pm6rBaN6XjY/Sye7fzn2uB5760u/tb7U
PEsvb2sE4orVcZ38HVopfKaRUBwZcepXO966bKVVsdUmG7Ii0eKf6/05NW3P
Q10H8mV6sMUn69zdaZ/FMQtfdfONF0DcINp48pdmT0wa7y+3IAr0lXdeWZFi
/BARyQsu3fn95IDaPJr0t2mFMIq6+gslxVbr/VUUfwsAV7/UzPKNbgJK+gRg
USs/cOZ4K1KG7z/UG0jOHt+02+r+nW3VgE9+/rSMne2PW1d4bP0iIKu912y1
Kknvq9MQ2TyNG6m0HoYLL8N2IkcEiMnvBSgE+zkCpcd6LMWR4x5XwcKz0dap
2hbrO0bfmzeyWsJvL6ncZ07ljl7tZ33ZpqSVqVVBC0XVg0d/+LHd3rf5elO+
COpJdi+zisGmycxWsQIlej53Gy9ZZXEfwXaeZm8M6ubloH7jg+I9ba8kBlV0
gcHVdK4BvbPwnS/hwRGQXlfdbe/mgbrw4KZzczObbz61Up6Ucj9viSfAnx7z
ZnVh8+K97WRX68fHYqoQyjamBcBqlwlCIso5BI/rICcb2OR4I/X+OGe1++M2
8lpM3Zdiummlh3matd6bUc1JvKaXjCq1vQGL3CSrNQwkPlsAbGhFbUjENv6v
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
PoEDAwA=

-->

</rfc>

