<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.2 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-11" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by the Registrar Agent.
The Join Proxy may still be present, and there <bcp14>MAY</bcp14> be some situations in which the Join Proxy can be used by the Registrar-Agent to connect to the Registrar.
For example, the Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that this registrar-agent is authorized to perform the bootstrapping of the distinct pledge.
The registrar-agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites. 
Contrary, the registrar-agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar. 
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the registrar-agent.
To perform enrollment in this setup, multiple round trips of the registrar-agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the registrar-agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar. 
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a registrar-agent. 
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone registrar-agents by integrating the necessary functionality of the registrar-agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The registrar-agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The registrar-agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the registrar-agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its EE (RegAgt) certificate.
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a registrar-agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as registrar-agent and registrar are domain components and have a trust relation. 
Moreover, other communication (not part of this document) between the registrar-agent and the registrar is assumed, e.g., to exchange information about serial numbers of pledges to be discovered as outlined in <xref target="arch_nomadic"/>. 
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent in the context of this document describes the minimum discovery approach to be supported. 
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the registrar-agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledge's IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the registrar-agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.
In addition, the registrar-agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the serial numbers are not known in advance, the registrar-agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the registrar-agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the registrar-agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-agent and the pledge is established using TLS to enable the registrar-agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the registrar agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> re-sent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via registrar-agent and include the identity of the registrar-agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting registrar-agent from the authentication of the registrar-agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the registrar-agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the registrar-agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), may have a list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit registrar-agents, pledges are more subject to DoS attacks from registrar-agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the registrar-agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="20" month="October" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-06"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2246?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTPS between the Registrar-Agent and the Pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the registrar-agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTPS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which serial numbers, from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that serial number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A registrar-agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the registrar-agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the registrar-agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the registrar-agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of serial number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the registrar-agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on registrar-agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the registrar-agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
2GkeVxpYmXmd3T+dFm8Kt7ac32/N6/H1fURejbeecI0Xr6gcOl8/Pp0DahoO
xS6b6+p5gJqlnF+vqIb0Zu+nYUdV7R/OdviWJ4mHH8NrBZLviPMDp5SYAE96
NQ9MkwxO8erizbTiRekje93YHB/1O++xtPzKW2VcapGXl4cmVm/N/RQf5uvN
q6054i0nWP+ZJjUbg002k3Z1twkVw32XjlH9Ef6iwKuiI6cX/18XdX3RSLtq
1Plxv1NEG9T6/Qpch4b10RpWY8tpt4I4DH/1+PR0QxOYtLCWPvkfvAo1JcJ4
ZiY439Jr9PDNkORU0biVzKSNjvoA6ZxOIF483vm24+dq/6LHi0cz+H2euvD1
Yltlabbvp+fajr8ZYlOH6nTn6OV8avvccilWDriJooe1XA6n9HZ7uG+N4gNP
952kfZk8qW4n1XTi+9MqrFIOZI88T1ofPqmR6fIDzeWIuElxtlKE7Qv2308Z
wjPeXz4CxOX7Vh6oYlCnrWUezwb8aau40kjKzVeDfCMffu6ZrktfvA1CGtO8
ZtRugiYZN8ZcZ3ua0beOlvHrsw1zXfODB7yOz1vtBPwRpA/cPxOy84OcrXsl
leOpk+3PZ5lwg/K+Guq1jlXN4vdyW1XqvN7Pjl7tDb84rP2zkyiL7Zntvaq7
XScio9PloFOhr9Z3XrS+3G2bugbNcwbv8bbXx8pfP58FGveZk7q3xPBHlZ+r
dxK43PJKbs11ol+QQHWypT7shGHn1WZPdXqlrvG1fZqfg0YIISi2T1VGj7MO
bWLJ1+2oszlqxa8Ivp7mz0X2lfoLk8qGaxihufFTOnS0qQpst9enM7Unjtd+
Z7CWSo3NXDi87B7NtmritH26PT2A+o9//E++Bp9pw++30wfqOt55xei2VT6T
c7QrSq3xhzIW9IZk+zgPwO2Uznx7FLCBrw9j/t5QQ4abvDgsF7h4UYmpEguJ
05DtwcRQKoW5kbpi/Q6hKVutP3wRugLJU2mubVencrnLw3Aen6BIGV/6qDLl
aoemGjti8IxHOaeVw+CqZrvC55aCdn6in82Hqjjk+mtIx1QIk/n9s6srN66T
EtkirTc0g1VaU6QNJQ4IYRfxjt9RWKy4Z1mEUD1Q7w2RW/nT9SDYFDHFTR+u
J9sUfxnAA64QT0QfrkfxKtosUnx4HaZJ8LStkmrj1eP62sXfTvuaC0o0FU9l
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
V2/j2/KOv7ss9wpjBk0TfQGwJcbpfmYt+/rcZlu/dSTm5WOBGeXnVcrPx+o+
neZJENK7skt2Zw+1aZhFQxi3beSJ7LJwHzvQugesg+XN2CKUdTAsRYPv1wLw
OUcoFr6wf/KlZOHBdnTVXMLpMZYDPPjL7X38W3RiOi4a6Iqx1fNHIZYzD2v/
nwES6Ms7WXyju56x7hd285RvR/pdmkSWlWueUrL5TfC4HHakp1kxztT9zQ8m
fx4mwsc5MDYxzcNytS++CGP2l3IQza+T2Xh83HamXwYr/bH/+Pir4aKLmA1h
kIUh/bOR44dfCfjeDS//7Xpk2w8fqTraR6qQV5fUopouTdXylyU/eendpg55
VSEtKcuiLsPSVCqiZq1TG5f1TM7t8IqnVVun5/8WvKAorz0VbKsyX/XE8pgq
Yy+2+aerq4emfMzpSb00PiCA3MRV0aP6Hb2nVRRvsgOFdDS9phRSq5B38/oe
Fbuhj16Ws6zePqznVLdA/VL9msVzEB5O1XTq4LdVEJaP4w2BtkrKNjJ4VceT
JHkaCBVGqutYtaphv+hoURVbi+KC6hLhF09FXYD2VD6sboOmcZ7/pzeWrW4r
RxfBqSDyguo8hU+8s6qE6rn8X1UZavvn1ZX46frry2qej1UsXxdx5kVAsTzr
TRTzhxSjNQ3p0/W1y+srl1XFOqomx6sjUdUuXj62tTBVDbgwe+KSeLDuPpwK
PslfH6AoZbKO6hJ7we66eJpni5A05ENVEZ4XrLpO4qwgHat65JM+P8xYlejC
pJJF8TM9hvykakOpXlPSJ5LmgupAvlHz+GXN2UW5jbPvVcG4qnzYjShRCTcq
ZIjvNpOpi2zxim31qF+VZ+fVZoNrZTo0+DOe2zKmRySvqcjYyXra1Vg/1C91
tkdUNT3rSUKVczGqZR4aVFt7s8A44/pbOZVp5rZTFSjHqsa8zmI17XOxxpe2
n/CChPga9LACvOhU4rJquirHWKvY9kOFd3WvraKEvNR8vC+aKq3bOP5QPSdK
JeipVuu5HDgvp10pcmN+ddm34Fxfc11W5YzPVRCpUiu6PNRFvHiJQ5pT85UX
w9leU5EydJyQ6MnkeFH67ZqKGubrutrmS4HQULdJXTztlejr10Z/T57Q2R81
plBR+WTNqzLyCbdmyqW6yU/YeODmtC2DqqT0ghf1XdXV6uvK6HWNz6C8FP2n
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
aJz1y+zDp+vx9yq+rz5F+lBWId68xdxfTaHtd8VXJL3lvikmbmdVaERBtuUh
SpPaqrcIqtk1M3lzSTjN21ZJDaAcBkzWG/PohGyAD2l7Iha0Ipxmu+r94Pr3
SjB1iFQbD9rgfpEnJwl1Y8oWi/U5O/pv6Y86N1H7KO5kyf/hG7SMLf+4bUlF
+vM6pRDoJAkEZ8V6UUexJ2ZgmZfu6vXEd+EF/7jt/tkW95nnXv8O+r6lJMHz
9tP1el4t5x+tb/ba3zxZax1PXnKU7cWoaoV9xVMuxnXz5wk1Wx/8vnhsPlsl
WnnmiP5zSZkscnc/YUet5j//eaK8lWVVOZxVcCYmr0ZXZ5pI56Bu+WKL8DW6
bPb2zwbuXrI5TjGwzlHrGCh+3bjPt3ts0zahHbCBA3Hq0Bz95F9/JpJEOazW
t8TWt86s7fvrzuaYXzOYEpLJ45Kz8jPuUIatyjC8UVHsxeK2hwDVpSBnz43s
lH2pcr71Ym3/aRLb+1tpxLU0Wl/63PpS81kaRVtfNvHzOnxXCy7JrfCFpkbx
acQJaO37qx3Vj1bFlZsbX+vXQu9dhgJie7Eqh/WxJtynI70tgsudaXuz9JRk
e2vkvfllX1gVkH986bdmjzuND9c7MBj69ju9V4Qdv0S4dEnWxc6fZ7fY5vik
900rhH806t8oAb3eHD5G8fcAUPhbTXl/PmIg1YBwMmolJi5IQkUc0dRDvTd8
8fFtu63ev9hW7WeIk5z3rLLDaVeaR/UvAsfaac7X65IspTronC3SuBFQ68Pg
GGXYTiWJwEP5vTiKvEuOOO6xnktx4uGn1Hd4Mdtt5T5bzPQU92+v3qCbn1/S
zS+cbp6c56+6zG1J6eh1Qdnh6oMnt/tHu73vi82Wp3NrpGiS01YSFwAoGu7z
It7xLSn09MSrFdJimSA6vcYZfzXG+tfrR9Cup/kbk7p5OanPfFJ8pO3tg6CK
gDC5mno2MHmRZuB5e/gTUvFquO0Ne6gLD8A6NzfzxfZDw494Mg8SuWiJVjN4
eqQfamW77LedZWv9+lQ5EULZxZT1rzaSEbZRbiR43AQ52cA2R480+tOa1V6U
28hrMfVeiumGi8nhikNDazZiqzWJN9TJuFLbG9DZbbLewEDii6x/w15qQyJS
U0MxBgHjWHAmVGTrA5cJtdgAY8kZJM+sQwPODdWLfuY+tb2RGnJleTuPiabr
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
NuT60AIA

-->

</rfc>

