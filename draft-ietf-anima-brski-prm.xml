<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.26 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-08" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI) <xref target="RFC8995"/> to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the underlying enrollment protocol that connects the pledge and the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies relies for authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar; the registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
First, the IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevIDs do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security at the application layer.
Another reason is the support for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.
For EST <xref target="RFC7030"/> the domain registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; not a device.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
This component is co-located with the domain registrar, as in BRSKI <xref target="RFC8995"/></t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data. 
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) because the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., NFC).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>In general, the format of the bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/> to address the requirements stated in <xref target="req-sol"/> above.</t>

<t>In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure. 
It may be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols such as CoAP, NFC, or Bluetooth may be used, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge includes into the PVR.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>Order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar as defined in <xref target="exchanges_uc2_2_vs"/>, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tv</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/te</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge - Returns pledge voucher-status</c>
      <c>/sv</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/se</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/cc</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge - Returns pledge-status</c>
      <c>/ps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides connectivity between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> if suitable.
The EST <xref target="RFC7030"/> standard endpoints used by BRSKI do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification describes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,248 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,576" fill="none" stroke="black"/>
<path d="M 168,624 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,496 L 312,576" fill="none" stroke="black"/>
<path d="M 312,624 L 312,688" fill="none" stroke="black"/>
<path d="M 312,720 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,864" fill="none" stroke="black"/>
<path d="M 312,928 L 312,976" fill="none" stroke="black"/>
<path d="M 312,1008 L 312,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,320" fill="none" stroke="black"/>
<path d="M 432,384 L 432,480" fill="none" stroke="black"/>
<path d="M 432,560 L 432,576" fill="none" stroke="black"/>
<path d="M 432,624 L 432,688" fill="none" stroke="black"/>
<path d="M 432,720 L 432,736" fill="none" stroke="black"/>
<path d="M 432,800 L 432,864" fill="none" stroke="black"/>
<path d="M 432,928 L 432,944" fill="none" stroke="black"/>
<path d="M 432,1008 L 432,1040" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,320" fill="none" stroke="black"/>
<path d="M 536,384 L 536,496" fill="none" stroke="black"/>
<path d="M 536,544 L 536,576" fill="none" stroke="black"/>
<path d="M 536,624 L 536,688" fill="none" stroke="black"/>
<path d="M 536,720 L 536,736" fill="none" stroke="black"/>
<path d="M 536,800 L 536,864" fill="none" stroke="black"/>
<path d="M 536,928 L 536,976" fill="none" stroke="black"/>
<path d="M 536,1008 L 536,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 160,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 160,320" fill="none" stroke="black"/>
<path d="M 176,384 L 216,384" fill="none" stroke="black"/>
<path d="M 264,384 L 304,384" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 256,432 L 304,432" fill="none" stroke="black"/>
<path d="M 320,496 L 408,496" fill="none" stroke="black"/>
<path d="M 456,496 L 528,496" fill="none" stroke="black"/>
<path d="M 320,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 528,544" fill="none" stroke="black"/>
<path d="M 176,560 L 200,560" fill="none" stroke="black"/>
<path d="M 280,560 L 304,560" fill="none" stroke="black"/>
<path d="M 176,624 L 216,624" fill="none" stroke="black"/>
<path d="M 264,624 L 304,624" fill="none" stroke="black"/>
<path d="M 320,640 L 344,640" fill="none" stroke="black"/>
<path d="M 392,640 L 424,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 400,656 L 424,656" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 288,672 L 304,672" fill="none" stroke="black"/>
<path d="M 288,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,736 L 192,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 160,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 304,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 320,960 L 336,960" fill="none" stroke="black"/>
<path d="M 512,960 L 528,960" fill="none" stroke="black"/>
<path d="M 320,976 L 352,976" fill="none" stroke="black"/>
<path d="M 504,976 L 528,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 280,1024 L 304,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,960 524,954.4 524,965.6" fill="black" transform="rotate(0,528,960)"/>
<polygon class="arrowhead" points="536,496 524,490.4 524,501.6" fill="black" transform="rotate(0,528,496)"/>
<polygon class="arrowhead" points="432,640 420,634.4 420,645.6" fill="black" transform="rotate(0,424,640)"/>
<polygon class="arrowhead" points="328,976 316,970.4 316,981.6" fill="black" transform="rotate(180,320,976)"/>
<polygon class="arrowhead" points="328,656 316,650.4 316,661.6" fill="black" transform="rotate(180,320,656)"/>
<polygon class="arrowhead" points="328,544 316,538.4 316,549.6" fill="black" transform="rotate(180,320,544)"/>
<polygon class="arrowhead" points="312,1024 300,1018.4 300,1029.6" fill="black" transform="rotate(0,304,1024)"/>
<polygon class="arrowhead" points="312,944 300,938.4 300,949.6" fill="black" transform="rotate(0,304,944)"/>
<polygon class="arrowhead" points="312,928 300,922.4 300,933.6" fill="black" transform="rotate(0,304,928)"/>
<polygon class="arrowhead" points="312,720 300,714.4 300,725.6" fill="black" transform="rotate(0,304,720)"/>
<polygon class="arrowhead" points="312,624 300,618.4 300,629.6" fill="black" transform="rotate(0,304,624)"/>
<polygon class="arrowhead" points="312,432 300,426.4 300,437.6" fill="black" transform="rotate(0,304,432)"/>
<polygon class="arrowhead" points="312,384 300,378.4 300,389.6" fill="black" transform="rotate(0,304,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,736 172,730.4 172,741.6" fill="black" transform="rotate(180,176,736)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,320 156,314.4 156,325.6" fill="black" transform="rotate(0,160,320)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="432" y="340">~</text>
<text x="536" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="240" y="388">TLS</text>
<text x="312" y="388">|</text>
<text x="276" y="404">[Reg-Agt</text>
<text x="368" y="404">authenticated</text>
<text x="264" y="420">and</text>
<text x="332" y="420">authorized?]</text>
<text x="232" y="436">PVR</text>
<text x="312" y="436">|</text>
<text x="276" y="452">[Reg-Agt</text>
<text x="364" y="452">authorized?]</text>
<text x="272" y="468">[accept</text>
<text x="340" y="468">device?]</text>
<text x="276" y="484">[contact</text>
<text x="344" y="484">vendor]</text>
<text x="432" y="500">RVR</text>
<text x="436" y="516">[extract</text>
<text x="512" y="516">DomainID]</text>
<text x="432" y="532">[update</text>
<text x="488" y="532">audit</text>
<text x="532" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="240" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="240" y="628">PER</text>
<text x="368" y="644">CSR</text>
<text x="372" y="660">Cert</text>
<text x="240" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="236" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp--</text>
<text x="32" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="432" y="756">~</text>
<text x="536" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="112" y="852">Enroll-Resp--</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="168" y="884">~</text>
<text x="312" y="884">~</text>
<text x="432" y="884">~</text>
<text x="536" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="360" y="964">req</text>
<text x="404" y="964">device</text>
<text x="456" y="964">audit</text>
<text x="496" y="964">log</text>
<text x="388" y="980">device</text>
<text x="440" y="980">audit</text>
<text x="480" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="240" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons.
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="172" y="148">pledge</text>
<text x="264" y="148">voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="116" y="212">pledge</text>
<text x="208" y="212">voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="236" y="244">enrollment-request</text>
<text x="128" y="260">(empty)</text>
<text x="124" y="292">pledge</text>
<text x="228" y="292">enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pledge-voucher-request-pvr-trigger"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tv"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pledge-voucher-request-pvr-response"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the PVR.
Note that this is also an indication regarding the acceptable format of the voucher-response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/te"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="PER-response"><name>Pledge Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses its own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case is out of scope of this document how the MASA will obtain the domain CA certificate.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pledge-voucher-request-pvr-processing-by-registrar"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="registrar-voucher-request-rvr-processing-registrar-to-masa"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as in <xref target="RFC8995"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be enhanced with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar EE credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The expected voucher-response format for BRSKI-PRM (pledge-responder-mode) <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> <bcp14>SHOULD</bcp14> be applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar EE credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>The registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="216" y="260">enrollment-response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/sv".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/cc".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/se".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/ps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tv                 create pledge voucher-request     [THISRFC]
 te                 create pledge enrollment-request  [THISRFC]
 sv                 supply voucher-response           [THISRFC]
 se                 supply enrollment-response        [THISRFC]
 cc                 supply CA certificates to pledge  [THISRFC]
 ps                 query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved issues from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
zrNl6X5ExQrCS9fRArnhk3cFzguU9ppSV2BnI6MDF0n/F1QGfoHxYCTJDAiA
RjfWqMKX691owwnv3vYA1Wt4qqmB6tjkNTQ40d41PZdtXqCgELEDwJTdGRGa
n5I70z00WgXY761ZNbSVnZhKF2FcTcD8oSoZtDglr2U5+BdYETb9UHz2w7g2
Ciu1hCvDiVnaM7mRpPHpk90+FSvoT8i7b5UtwB3qjCwp3ckF57DMNMZXl0mV
gtssaxxfsymKS43YC6TCKpqtNM2EqUkuvYxvWFx0KwwAkK6wrn0qLkssDOqY
1inDNlYJP6eFJCDLLZyLG7Wx+IVUxLYSPR0fSiCr69tCNx8xKYNqe5bXcQGi
WjYPD2ctV26osK3lY22i9FBxtJgGn07jTyqaHXbFxpwPGQ+yaWmFdnBtbNgd
2vVG3MSsT5U+r0Z3cNJOBov2/5iSvVyTiNLQiV/UzC5Vd1QhU7j+Am+7ahEl
y1nJOPCmL72o+kw6WYCrtao6dZN4LK1ZCSl3jqLVYiaX1Oo0QuVb7arjwTNy
TN075nNs2GIdHC6JG8AmnDDsSFj2Za7hLZ4YNS+gjOHvD+TZndR01Mdzx+7P
QdxwbgTGl8YtSfal5KV6/lOVu60d2qp/XFVPscmqkXKTMVZH0zn37hWV4u2y
5nB2zyJdYl67LEc5YnmUEgVlRrbvm0odWQCVwrKJvX2j9HGf1Rb2oI5Hrcls
3Evy1WLNhSk+YPJuKAOGISgnv9OVlCvU0L7t6FAzUo3FmKWW8d5RF25RkgDR
1N8TY5tOQehb4zrKGGFcSWnEIgqYB4qD0r1jAcePwYlMkAQWcGJToImaQpeL
KuLvG3CVWrvvFFPlbMmth0+Bj5mw5wJdZ4KdcfSmE/V11nAQ6HYtFCS2Epeo
ShJubh1Fzzc2HqNZCD/GnBzkEkf0Md48RUc9p73uGfJ4/WGNA1+Hp9m46ySf
V6NsESYwCMukHJtgE4UaOyQjccUYbcNfR/06nQ2q+ELB4i7eb0eon9skHn1L
0zjN3fhKz0m07bYkCaveNELXuyXbc+/P/LvDlRWdAGqzQMBlz/AVffrGvQ6w
MvHKDPwg7LrCkqQn+AmWNqooRG8Y+UU17KRzniRfmMQYYGehoKWe0URsIqWS
ouu2p+Zd7hircD/WQeuLgI40qAboJvLd3xkoTXZNYx0dCZROmtip/DqzKi5+
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
wTk9K4Ofr5fblpUdY3ajhPjKacW6RK8HaSlCt5NDuzTwrJgbyvgX+yMjE+p1
BpLVfgTu8aDvWEwtXhW/mliYOUmYXavhtWcTV35vnqiaNFno2Flt7rNqtviZ
GabIpxtTZV0LRvfKhwU6awXu7MSoGctE7qzVOGP5jItkYoKDe3ZkYAVT58ez
ysQqu4DnrA/hRrDYYOQck+0FQeOqgfP0Bl3tOsCKZ+FzJYvfWvOeWaw1EKKr
X0gzZwkZUSHodqRGyw3NCASRO5BQCw/FklefzoGiYSahQJ0q+O4JlMWZ08dO
EUrNbhqNHarv4UaU4hmHqJN/1xgzpXk0A8rupeJuwupCXWmDUl+9T+awLLnB
LEm7P9IX5LApX7n+47chs6dlbrI9WG4vpkhPVakjajgQ2bGCXcNKyfyuS21z
iSot3ud4TnuuAScuawo+v9uWx/sHYr1Q7XuwZoDtOLfT4KJllqZn84uXNMNx
w9q53aSgAOoLKfFjOu/UswIqCTX5ME1zxTR9dMqT96rPrO7MFkVnOLIcHIWH
KCO0E7okW6FUVSm+qclIqAKOMR5bHUJjTJTIs6tZFT0Ufwo1VlM8DEbKJr2M
ijfmvRS/vtMmcBobDeO51PpJJ5J6izSZApysTrwwPUxc4i0MHuEy7c7qOkLN
a3xWEUMYu3zEqi1lwxHChvYApG3iw7sxzYGLZkAkJKFkqX5unCRqCuiSo51C
MOGPrimagtuSD9TNFkZxO8H9hCk1ShZ0BD2rYJQ4vTUp/kphscsGuRpeZcW5
huJHrXKsi0NIla/GK8bmR4Q+oojQfYovtptquSGrVgk3k73SpzbCXPuK7y+D
aVZmY5qaHBWYptuc06OrypzmR6q6mXeaZIps6UWv1oZ+apyQw6c4I4zrTAZF
lYRxs2AeWiEJnPn7zPXiLM9/3XtPXphFtgF2g9eC8ZE3B5GsngSkKd+AG3eq
5BijHldEmY4nyhhVWi1pzdc7QukvXjGGzvySLyfyii7OpZUuWy7+AjHWjX7s
LFstw4/Zw9mXCXZ0Q7L9SEcd6Fibsl+N410tsGbn6kEZiG4s7hHeuBaskdFZ
skaGXyIjoIstWRHj/vUvpC2lTh2x6k70sym10LUk00AxiXDNCMe9u4RcFSgc
VszkgO1qY67Tf9WvS7EWwZaoDjQJX86SKF7OMRkEQjekHgQAPh5pGS4wTIX5
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
PHLRVZXMFDTBzalIXW/rJor4wLFaoemrclf1Fkyqje2FVjTQCbn4w26KiYDe
UkDI1vm5ghf0xR9uPx55dNDMPSdLmP4DHtWr2q15JxUqV/KfdWpiFKMJTP62
PYt2gVgdisJySJ2/PyyS7PieJl1wK1MVcj0Cnjg02/H/YVjxeDybKJWMwC06
WJKgI8OuNxF0IGqoKzlFhU/doHMMFuUMx+xMDmyYjKZcWBZgGI/uqDyy6dAk
+WcxBy9/VxULND5xWIITJqbDukBGdMPDVK4ZrugPd19c+cbaoN6B3hhRgT/g
VfF3NYd9c5YkCAyzUYxZpdrZm0xUn2XvzKnoCMoxLs3UwjB8P8sn+i2P/dkG
guLz52AnJYXGjozQCsollj1AALTiydwrc/NV7qH783D/Qcq/2v8XaP86Q8Vn
jMvmnET/KUkndn8grSsGdP4ioPPfUwVRcS5Vvc7iJrpHrHJymmAFLxCnmK7b
fyTHbUt1vzkog+1e54UjVbrATOovoW7mIXsqtESIfZ+RGwvi4K/W7jzfb1K7
vVUUvAI7W9PVJk3szo1dEmfRtta9rsuqRzjgpPnUasWs8/nmdOF1Eq/t+Ber
83KgO6/1opfcrZP23VbCqeOKs8OiFmZVm3XUZnEvs54FCd73WYeb4708MB4E
rD7CxDCqAdtTzMpokgCqw0cjdYU894vp5iNfYWYd9kLmhPFoB1ERrmlBoTGm
Bht/rf4affrGK5PUmubj1h0IjJ+Rz3ltpfPLPhaX66UFOQdLvyeV3cXQaU9t
Qrmoojn51WyxkHxumMKKNBprryMHNW5ytwOMU+XJbftC51OEhkb4Okty5eJN
SjanKBbTLB2rbqG31PLhcI6vrsAQKzjqKFzdd8q7tkq6oHguv8u9VwKe6gPq
FlYoo+llLS6CZS3WncSmTlhwQyhqgMQ0qX9qnMfBV8zM9ohO1yApd2bDEk/O
aRya2dVUwyuWCN7q19g7i7mYydu2vUIqlkYdftU8FXNbn9wVY8OpGHCbDnaO
dpB2YAAeG56Khmces3IRbRstfckNLwoqjBiJV9sKlFBm7ztgsfh6atdxoc5i
xgKmXo1QwQF+PkARjQY8x/F+ovFOOwfFiqHxZjW6YKOy9+KrfkTLnpVhGf7X
UUG0jai8qfyVPS9eNoUmDfjv7ycvDrqAJ/+A75MF3wca4tjfF9X53Tqvxjpg
/tnfV+efUw+1+n2/X/e9X3AFLyZvyf5+WlS+5yhCpS4xW3H/Wd87vV+c+aW5
jLlOwe/d7gb0V+1JCTZaKJzvtZhZ6/gBSTm9ift3letzoH2aIqjIe33nPS9K
mK75neeNx/4m6419nXfL48RUZ6jQwZnEKnlo5udE7ZlmlxzTY8lTFgcxzaQ9
OgmfT+zucaP4zq4/szi6i/Vay7BiF8apBIRYTQ+ILbmBN+ijRgsGSgXKXhRP
uOCSr8JbPezIwU8EB604QB/ECoRMdBIMOy+KrJ8aawET1vE4LVQNJx2+r0tE
Lj/SwkhiHlx8E9TWBdd+k8Qjx/CDRTNU+E4IAk4vHjoRKsQqB+LYs+xiM0oL
8Kstmr6TJqCUCqOTb44ExgDMixnX/4O1YI30UUYNJKlY6l42Sm5a7+IMG2jF
/WuM6gNYrGRTVDILtHNkPY6cXln79CmbTONyiNyq0u5UBz/ZoUiiGxjG4Bnk
ZDkkTPIdMSb/ULpFUS1gqsptKuOO3QZcCtbG3OxJzDiVLHw0G6V+nAyetBQn
Vv015cYyZmCQlyszquBhFrwAIcxF172J8BlJ/6oLLG5JzFG0nRSzem7SPJtw
d68o2ik06n8RrogVLUfM/ajQ5RYkCJL4AZuvpT6avX82UiZxkXKBtCS+SYpB
nuEutZqhB5kkRJNpL0C/+vkdptfg4ttUYLj+df0yDZpixCEFockrrVsU1q4T
Lmc6YcLX2hJcLaLVnc7xg6O9CI42A5H7ak0WDiSBAs0wKLOFGKuR2EQr4eN1
QbqTdIymyvGUCR4PwjjARBpNxHKfMYbTwQQ1iMQb0AjOC+541agjOl4rZssb
303EUKBhebGreIDL9EDdAu7wC7Khz1UGaAqX/UYOqAdSLJCVS837qJsjHHrM
8uXX4IOM4WiFM5XvdCysfUO43yD+tDqdFUNMvEuUvsGsh3a19hV4Kwrbe8lE
avGpOhKre1l3LdohTEUaeSxv76VFPptqPqNc68kwvkmzXFHlruA4Xd9pTglg
AV+3CwF0GFhReFRZ2xpKolAu4+uq2shkYpTBa4tmkY6njKkkQ1vRz/LOqvUz
7wDPG9VaT0xvCru4nBUqhpFfFMcH4MHaeuP1BIYB9LhyHAN+dp+2CI5QbRQv
pAmb9mamcrmqM+YMKPwIm0aNgOaVlC+BdjUMEi6GSJ0odBbpNBo0TUQhA4Gi
Bz5M01x1OotJ/iCTHJALSRs6TAvpEBv3pdGZ4lEoQlfzh/D4gtG6RCQRKdJs
VozuLCXOHhBvrhTz3mlyQklZJuMpyQGyB5fMoHzAHzxfF6Yoreu4kmDit/60
MleH6Yh5rl2O5iT0qjQItEwRcowrtbWwVaz0RHN2IKD9IZU8LqhXYX096gOT
NNgMr726ICMzWhTKXDKcNJQtGhZaKhKLJZngr4FEfDe+I1pVcaXvMeUICJiO
fBEVjIoA4gEmV0zM1xqHIP8hq6/Zs27Im9bYtAu7ASEZ07ihpt8ghyPc/atl
Aob1s6YLqzkdkoUHV6EGFwkuUS+dqPKVum8nUU0mbJWtktA4w+VzmoTjv2aT
Rh1HtNnhqnJ1b26uP1qr3Gk/FWbXytIy3PgXWBZAuASujHkSSc5sd4zDoPBK
e6p2UOLYe7TFe3Br6g4Ig0Guq9Ga/r2gq+Vla0SpvY5uvcoB0jwmt3wYxHfU
VRHPHVferxTPV7zvCuMAww32+M7POVzd10FIIJ0cqNJKzIjy2UTL8BV7YUo6
ntyY1OrWE2UVHo0Z4lgeiby1qiK+qIfBVQR0Qr+X1zEiyx2Q2rHUaLWBJY06
bYqjlV6ZR9O6ORBKC+tYRPQHNC8rcW7AoTwFtSZ1lOXPXsJ4xvdZjF+mC+lK
xR69ohvBlKZZhtuZtCInwOTZ1cwoJbgclP9AQ6VET80SVToxLyk4u172gBsf
mCaiCB6K2LCE8XqINpXIQrYDlLvQT4Zg0GK/dhh5rUGt2sMnmbpktPCa7HCL
hVSs1gbqnv9tEtq+FrPHWV4xWGOjXaun+lx8UhZzUnRedcndUQyx7Ua1YpDc
HN0QvVIlWtcVrTab8BsPWdBTYoSlG8SC5RVCOt476pKEQi33dCauyta1aCm+
+Zk6uej+cLFJ1FAYGJR0da8OyxQ0iceJRBn1MEzFqakUZu1cvMCd0Ul8pvBv
6R2TFqzjFvXGDZu1qyWKXcMUkap0UuKbWUQAjhbzWKWD7KmOeLr+iL3c0Cqa
ZCzR0HZVTw5mF4nhcjbps8KGN5GsTOLDFJrkvqBiaRNlILIMLHYS5aW2rxja
7lYiIPiGtGiWkbSfhbTPmEphJIyFpWkCXLUmmpkxY85J9UaMUSUV7CFwk4m6
w6Irq9VbkQncWPiVDvOFMfCvwXFiqsRg9ZLGaB8rDJm5jpgqbwxM6BK92zn6
MTqEUwWY1VgG2PAojp5BxWnipRnMc8umhRHoKl19xIwz0LHkuui49Y03+vvb
QnWeUCmrdXJZtSJNtYYHiGk/RKs1YFhj64bYYQluY4abij5fAgLs5hWvOSx7
zKZyduVS/S4yveo0UgRCPC1mbA8hkePl6247sl3AymdPGSXVbc4H2Q7O1x/y
HRYygnsjl/UoGfDS+I6IPqdkObsukUBF6DEBBzVD2i0PodM/OG8b5/n06a90
Bj+gh3tFvyA9hcYsvRVsDSJ5rIGGCkqGVs3etLAFxE0bg8KrgDuwc3xANSOU
0KusinBzgS46ddwZLAjOo/bJ7uujfUaYJ1uPNqVuUafdtf7wdOMRNa7bV5l7
HMfVFGfv1QwQaURHP+CrzPZtXjto2CPSYvTJweJ42EcbP1gI+nAOfuL1JT1O
giz66L9FmkzpCo3GOTBvko5G6bW4zuPJtQhHOZoFkMKmyS0FsgLqIGdJ+4B6
IGbnKNm216PdOJ8mqBc1o9fFNfxlFzjgBPSGQTN6kUwGeXoNL2f962E8K9hQ
czC5yqJz+Jv2CqVoUp3OSnWU/RlRVLzheHQc88ShSICUl2gbNwZEXqMMcOt1
rXuJRwvLzWYfU1jRXjZOJ7CiE/RS8Gp2hzniDuymC/LnYIQxsl28v2S2BYCQ
5NourjPghO+vtUCNZUuSZKqm15X8xzQ9p5AA7aaa412h0ij8Z7teHznZGTm0
StXbGwcwYRrO+5U9vsjg5c4sjV6lNNQL0HMTePQyjfHksXJED/aLOKADEbCS
DP/IacSFLrNVSMr5iEJGqkWOfni2BfjXZSvWc7Sgj+JiCBrXSNmoVMyeeGH8
cJ4W2S5W7bo2tn+LBZI1P30sdWJWFaspdIWc2BrLCj2wtD4QkO3AVAqNcaJT
pcCZ8gEVGFhOBBDmxiVjQYdHTx49A5hT12PyJv/Z/RcdvT5pb0ff/vwtekWs
7h/AbCMAX4Twi7yP/tzwImI5ijK5ezm9eNsZv3p7cTM4P8ou3h6U/fHZh8H5
2cfB7uZtf7zxZDB+tvluazjqpwdP4P1h/+HRqD/pTHtbj35upK/Tl8OLrbMZ
v/3sUXy+OR28uE5f7b78ePH25fTd+W3Zm5yV78Zndwfvs/Rwr313+PHN5tH7
/qPX3YPiYPz458ZNb3w0wr+e7B297L6/yPovOgdvNkad3sbjR+/O99PXp8O3
b042nh2kt+m7hy9H7952Rhe7mzc9WNPB+4Pbw/cHPzfKw7035eH7i9PDvdMn
hyfv4P/7s6OPO4/PU5xnf3Jx/njj1dvnd72HF9OLH8+u+efhtHc+2ki6m3cX
54OfG9P+w87dO4DDu62zu8EujH+9+bJ7erARXx/tvTkbTS829h92T18+v9gY
vXhzNrw4+vgyfTeaHr05f/bizcbRh87m0c+No6O90e6b0829k9POWdI+e/Lm
7OXuxcbj8zfX+zcnp0f54clZpze6ePLurL/Z+/Hw48nbYfusvX/4Zjx4fXb9
8vm7jc2fG7ud68e3F+0BjNB58ub0sRrh6OT0ZXE6/vD+cPNl+/Ss8/zi9OLh
4YvRUad99hhmfD/YePzPzknn6Kw9/bkx7Ez6t8n1ZrvzFt748ejhyXi6f9Te
PO2O9486e51HnbfT56fXLycnAFPYxdGbreLD0dn+7GwyHZ59PCvefcQdwRpO
35x+UGt4D2v48WTy/Lqzefaos9F5frYhI5xuwqjPu4Pxy7edyfO0154W5+9f
Fsm483PjoDsevo+vX8bw9VFn4+Xj/ung5OTkzeM354P9zsbRnv797WC/227f
dk/3d9+MYT3XxU180n/c23z5cyPvfjy7AIx6c/FxeHa6efDo1cOzj4fnnTdn
56O4297c6G2VJxcv9l/B6se90eDjm/GbvH/28vBoc9C9GF+MzrbKnxuPAW/T
3sZ03D3/UAzevnwfnxxsDrYeZ/Hps/M3G4N/Xryd7h6dbu4etgfPD8/Orruj
/c7Zxubu6elg783DIzj9/Z8bZ53rlw9hN7sXW4M7OL19+L3zbqNz0GnvH/Np
Djuv24Av74f7eHZvNg42YHcngEvts9HBLUD+58Z+5+3gzVF7dP1ua/O8N95/
d/L++fve6cXjk/1hF/Hj9O3Z+8Pxh+LdaHAON/Xx4fno+s3Hs83z0fDkzcZw
1h1/+LkRwxtPLtrDn+Ifj6aHJ8/j8/aj25Px9WYy3n97NunEAI8nJ/uDnw7b
H8qj8w/XsMZXsMZJ/3yYx9fP3pzijtpwFq8B7u031xfP49OXj3o/dnbj/emH
w/bZ1tHp9PBw9PzubONoIzk73IrbnYuzj/uP32w8vTkd72++mzzfO0LcHXZP
O5Pu+fD5yf7RT+/Gg8PeeJC9GwMcPj6/frc5+PHs7OLm1dbgxcn7nRvgKU+6
QIZPt27vYsDI7tkwP+zCnbbu7dH0Yusx3vpruP1DpBYXb0c/DTZH73ovjtLD
64u8ez69ic+m73rt8j1g3sXZ+caHkzO40z/2917GnXHn+N37/dvzs6N3p+Np
ejbKNs6vL67Pts7K0+vO0fmPnX++G3WeHwKEL34s087GdPPsbNiNrzfL5MXZ
z42L3sn+23cnzx+d75+V8Y9l93D/4vZs7wChex4/nJ703g7js42Ln/qbgxzu
83XvdHp7utmJ4Z7lvb2j07OHz39u/HTRPv3QOTt7d3r9eNh78fz8bP+se3b9
OD88PbtIRtPj0+uz88OzTn46evka1gwjDF93xy/zo7dHF4fv9z++O4Ud/dRp
b747G5fnyTWsYetDBnOcvX77/AR2ARh3VhyNcISLo/jj6db5ZHoOIwBFOHsZ
vx1M3318WfTGgHVl5/3z63O4n+8ejl4CVf/Y3xq977anW0BzzuNx5wXM8DIe
P5sClhXdraOyMxqewWxv3p2d3QIC3sYvYC3vD89e/v/tvW1zo0rWLfi9foXj
nC/nTFRVA7Jcx8+NOxElCZCwQRaQieDWxAkEVCEBEpaw9dLR/33WTkAvLrtO
dfdzJ2JmOqK7q21LSebOvddea2cm6QWq7YTc0pzMYrNp79n3diFmeB1ogcfV
IOTFbuV7tufmMQcqeVyKLYtbU9gl5eS7fsAiGaOoMAo+08pxgMjmPJ7OdJkz
KT84Xnccaau95aWZowVdL7cMK8vXfqf0TCUdMgl98Uwt1ieuPbc7qcuLbGt5
9tRZ5swudjumdEOW58wDArCDZqOPupd1NWrR9P6QfcxdqMPr9ol6687cXHML
2UFfpvGQu3yR6+h1mBTc83I7mBWmxN3eGJb2IlWeA9VWjKfeTNF4oAF3GX7j
ON71LtAD+8GVKCe2ufIQevHTvUeZdDIf55u5i+meLBBzktXzhtoSCGEALb68
WzrwixnwyJXtngOMDTraKlTgJ5pmI34fJ05lsUzu2FwLbPyHsUqdTHuwH78z
PXM/I98FEnRvXK5uY8nqeMz2EOmEUA7XNUTDzmJF3LGLuGnBViduDjBNx6bG
R5QHbBd9Ubws9iJZ3QKtRsCYseuVBnINVAnQXFO3+NlKcsS51LWSLO+4mW2Y
yDzM7VmIoxuuwC69MZMdF/jOBAJqtoPsEandnLPVjnwzRgy7y9LCtzqTTtun
VEUOZT4icqYCXxy/E+ttC7Zq9+BNIVfsLbKVk/Dcd5BlzDyQ4Zl9L5P7Lov7
yVSDn0jSmGlLm+IIOH78Tcdmac9U894ki69nQ2McFKtDyI25tb/tM+824/uN
jKl/djvl6k7ByIf5LuaII8Pd306TRRzM5OiACFPRBz3RecfVgiLJrL3Fuoo9
UA9eoen+Ii6iQnu660y6s44dWDw2Q3UF64Z5eTPBXMB/hxMXXqTa6NPoOZY1
jfzB0WNgcyAysKNZFkYAm8TLSW4oM3kC1oYMm5uFr7gqt0ONdRw1fbzrBHf3
yqTjIMsHqsjRI+baGmYbMJRuEzzR6aSbSFWVsQ4rsuDLO0BFyuOia/BBYMed
WAPOimw1QybDz4NAzg0HczNBtuOwWyzlnYkSBw6rnr0svwkXwDrRa1uzevjX
YSxfYna71jKFBe1nBg7jLK3lTL01TR5cO2r8HMl2N1L5jhXBjalpikVxpLGh
L8FvDcYsL/FGe3uR3/CF9TR22Xqm7JZBFtwFcsm4xG8s3XZ95h/CYekwb3Tw
lrxvLnKMqIlAy2F5P8nswUTSfFuJqedgPegnT/0wS7ev5ERYveyZjLzu3/Rb
e0yIqZ77rZdzkafxLS2WUhE7XK86iHctAUuD7R5sVdpzJV24mfwYduIHriKm
r0Eh0ftb1XWNaZipa8C7FUvcbuL7HiNB9ufcWWjEHYgrjMEDbXMYD+r5REzb
DvrAcjv1NGODFpaxFCybFlRbVbucRrXocWDujc/YLs7LIV9aNthAhwOTuIoI
WPonVAJuXaCUNSGGlMELuL2xD70ilicHU7nNk3y1i4tqxDwjBx+Amph5q/Wk
uPXu5FKPlHIR5FrHzO2HUConoXq7dpWg5y9Z18/NXcTLcjzMU5v71zNwdUfZ
Pls5/MX3i+DaVeR+uDScqLD82cEIYrnEPFhN7Bjok1aMVT6AjYjHje4lQgSt
jT3wupfRN5GMN6LPJo8H7mlZJE2ew/kf60D+9mwpYM19Z8kXTv/Wn3mvRJ83
Umw3n8/yVJrNqxI6weDZ7XUymDxHy7wwFbD5KaGUiDblNkQMP8Lu5LMqk7Ve
LBuCYzG92zeH0Q5WlqMiBVcvO7ESPAKTlrael4kOvss9tgM5X3UDdt0NldsV
EhwPM63EuDuWlnVmQ/uaK/kklirJZKvurCi7QWaPZwNuxYyrkwJxVCXaCPot
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
a3Ene7jx+8tO1/eNT/u7TjfubKr96s/9av7w9e7zmwcRj2fQfuYs4l8cIPyp
44inbza3ctWnDunoGx2Dq48BvhdvQLy84uefeyHad/eHvfKUv37Izx3Gu3rz
zFwz2Prc3K1887//2NxrJ+Z+dEKuPR/35d2/81K09pVoX979Oy9Fa1+J9uXd
6aVoi29P1mGkiJrVslfOivqlSjNFTkPv+sVrz4wtndWecF4hPZPWPL74LNoG
bCc7/er8xWc/89qzL+/+6sVnP/Pas4vklT5wVZVdJArSma5rWUlW1smL3bKJ
S8cgONWZLFOSb8RrzzROrz0D1P/Fi89+/NqzS/VM576LXf26rsy2/8kz9dC9
rlIpoWyPYje1Z9rkgARyZ9I7qNxozTvWyFVGW87RuqSZsRpBy/B70KrH0OPX
5sB/ZvTKicDivbvQM5RAStlkXun3ssbCIs5najpMQFKdTq9DtTe/Y7mJpz2y
3O7bqtx3arWdibU4bTKns+m5hSQO2/jXEwlJYBqrQUMAmYrE/nq6aZMNKXkd
VJbJN8yzD3b/9vF+Xy29/h94vnGHWBrdy2kFYvFK7TMeOxm9ggx96YWkyodI
K/vKcNW4z9RcYso3yV/kU09PfXfJVxG3Jlb2be3Pb83J/rbgea6GuarMxItj
bKqVL7kzkaDrl+oh8dK+5abMA9/wl+Vo3K8eZno65dPgYaYZqikHWsTszJe1
Dr045l/XeUV1QyyS6/mFzgOz6YeZtfbe1nn/zMstVMEJ/92XW9BrHOjlFvR2
QHpb4IMIm9w2TFXWZzIFqijvaBRWcIYxft66Ygu1fWOzHaCgOpaIiSOD0GcI
k9xuS3oizGyVX/SBuaNuAp1jT3sIQasttgJuYiVuX1bRfMOem1IJGArCuLCn
EPXQWPmSyrWzwhCvy0iYYYLr09EVNuEYUR8M7lgkdOo39R1/pjf3gfEOJkxz
J4dgDlDrzTy+M3nQsYrcjnLjMKYjTFsvj9aWPgLMxd1Al6fRwRjCojrvxPMQ
6cEsuoanfju4HW3kyIE8Hpp7tgxKuPA4hFs59H6yvqOm0qSwSzvjobcM5pZy
e01c+S/eFnheCPny7tV3wDiuPfE84zoeWgewyz1augYflJKcPzMwPdaxuoG6
PUBVwgpdhHisW+OxB12npZNaNwWGv7Ce76TgwZQMhhRk2ksrdfLSwcxmVqd8
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
61t+0F562v8sbE8c4oWDod1fznpTB/Uv769+ObUiHn/8/dmH23Rz/GNSRR+P
llE+nT+Tclxb8AXYw0in5EYvJCZiU3Oh9pbNo08muzIPl0czCNvUl1GTaY8j
FOP+btprNDr7jXJyBHL7gbiLMb7IJMLx2kvZLy6HbuBjvqSnn7yw0z1/7t//
nuyimoz9+RQpf4qXMI8+W59fc6/Tl+oH/pmU//jHebI7XotHndokz6Ku3t5p
/eKpzY16/zijB63N2yo/FdtP3tuhmHxYPdQjJk+Hz2TJ/hJbLi72bvuFUC0w
gJCY5PuWpv3aUcSofr0+C4sOYi86ArF4iXJ9PfERlsXltHQtLxqN8jk84290
oTEAh/r1tblo8bd18vvJ+87iRfmu/ROJJigRHnZ2qfV3SaDm4EuKy42g782L
nvfoWBXVlyeHsGd1hZi5ulwgOb1IekW93M7xh3nVPDder8pz0tPcGrzKkpe3
a58Np/PdcM5a2KQUSXQrpWiguYqbrhA/u3m0zkzt1Dd3HYsPpQ3Cild1b/bL
CAlpSZD0/mqfVB/RC6dxsTNy2AiL2kBnNBVWhTvQvaLkafg3Dmdzuij54yv0
o/OSflwL+jFqrrG0a64D1DxddQntIpJW61yK8uHXGzhT/Xpyytz06nBMZ1LW
Zl9WyTe6njmmcdCtlbUNxb2r4tLV+j57urW2ZtdvEej6zexE129vKbbxCHRF
MNy6HVo9E+b6HqIEPzpD2F9aWPnl7BbzM2VwDEb5lIYvWF7tA6/dAI60kRMH
o9eQ46mUjfGPuPR8TreXAmqfTglY/nRsPzzdaFu3viT9l4vM3Ugbap/YQkS6
kPyjbeWPS+Me2eMlGIESfEiWzwR97Rdvz/I/ZL94VfxuX98JDJyspXNzl214
YVZSuFWyO5lKkY5Dqa+oLdvs0PC8/meKrc0J0sv8aXNEkiNVpS+Im0zr663F
AiLabJLJCSLaZNsE4Q/AvvOPf/yP+mr78Eio6mQlWE8LS8d+/fZWQ0pjiVcS
x+9HDr4+f6V9cyfrj8ZxMqAMAx7pSNwkwXA2I83RpKfjjeWNJhCd2FTiGuhT
Q8ols9hVJMPi453tFze4tt/p0A+1j++v8MkyuVAQZ9qgxqJL0XO6fvuFhHoF
dZSXqNM5k65nyZVILEXE1S/U+M21ICFJDBr7lPzP//mLMPiuG12tIjBFQVzP
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

-->

</rfc>

