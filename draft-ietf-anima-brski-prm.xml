<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.27 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI) <xref target="RFC8995"/> to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar; the registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
First, the IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevIDs do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security at the application layer.
Another reason is the support for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.
To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>. 
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data. 
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) because the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., NFC).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.<br />
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure. 
It <bcp14>MAY</bcp14>  be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols can be used as long as they support the exchange of the necessary data objects. 
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the LDevID by the registrar via the TLS handshake and includes that LDevID as the "proximity-registrar-cert" into the voucher request to allow for the MASA to decide whether or how to respond to the voucher-request. Until the pledge receives the voucher, the registrar certificate is accepted provisionally. 
In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and takes the LDevID provided by the registrar-agent from the PVR trigger message and includes it into his PVR. 
This allows not only the MASA, but also the registrar to decide whether or how to proceed with the BRSKI-PRM PVR. 
In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>. 
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER. 
It will also be triggered for processing of the responses and the generation of status information one the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge. 
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object. 
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI. 
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,320" fill="none" stroke="black"/>
<path d="M 32,376 L 32,576" fill="none" stroke="black"/>
<path d="M 32,616 L 32,696" fill="none" stroke="black"/>
<path d="M 32,712 L 32,736" fill="none" stroke="black"/>
<path d="M 32,792 L 32,864" fill="none" stroke="black"/>
<path d="M 32,920 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,368 L 168,576" fill="none" stroke="black"/>
<path d="M 168,608 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,496 L 312,576" fill="none" stroke="black"/>
<path d="M 312,624 L 312,688" fill="none" stroke="black"/>
<path d="M 312,720 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,864" fill="none" stroke="black"/>
<path d="M 312,928 L 312,976" fill="none" stroke="black"/>
<path d="M 312,1008 L 312,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,320" fill="none" stroke="black"/>
<path d="M 432,384 L 432,480" fill="none" stroke="black"/>
<path d="M 432,560 L 432,576" fill="none" stroke="black"/>
<path d="M 432,624 L 432,688" fill="none" stroke="black"/>
<path d="M 432,720 L 432,736" fill="none" stroke="black"/>
<path d="M 432,800 L 432,864" fill="none" stroke="black"/>
<path d="M 432,928 L 432,944" fill="none" stroke="black"/>
<path d="M 432,1008 L 432,1040" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,320" fill="none" stroke="black"/>
<path d="M 536,384 L 536,496" fill="none" stroke="black"/>
<path d="M 536,544 L 536,576" fill="none" stroke="black"/>
<path d="M 536,624 L 536,688" fill="none" stroke="black"/>
<path d="M 536,720 L 536,736" fill="none" stroke="black"/>
<path d="M 536,800 L 536,864" fill="none" stroke="black"/>
<path d="M 536,928 L 536,976" fill="none" stroke="black"/>
<path d="M 536,1008 L 536,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 160,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 160,320" fill="none" stroke="black"/>
<path d="M 176,384 L 216,384" fill="none" stroke="black"/>
<path d="M 264,384 L 304,384" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 256,432 L 304,432" fill="none" stroke="black"/>
<path d="M 320,496 L 408,496" fill="none" stroke="black"/>
<path d="M 456,496 L 528,496" fill="none" stroke="black"/>
<path d="M 320,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 528,544" fill="none" stroke="black"/>
<path d="M 176,560 L 200,560" fill="none" stroke="black"/>
<path d="M 280,560 L 304,560" fill="none" stroke="black"/>
<path d="M 176,624 L 216,624" fill="none" stroke="black"/>
<path d="M 264,624 L 304,624" fill="none" stroke="black"/>
<path d="M 320,640 L 344,640" fill="none" stroke="black"/>
<path d="M 392,640 L 424,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 400,656 L 424,656" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 288,672 L 304,672" fill="none" stroke="black"/>
<path d="M 288,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,736 L 192,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 160,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 304,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 320,960 L 336,960" fill="none" stroke="black"/>
<path d="M 512,960 L 528,960" fill="none" stroke="black"/>
<path d="M 320,976 L 352,976" fill="none" stroke="black"/>
<path d="M 504,976 L 528,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 280,1024 L 304,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,960 524,954.4 524,965.6" fill="black" transform="rotate(0,528,960)"/>
<polygon class="arrowhead" points="536,496 524,490.4 524,501.6" fill="black" transform="rotate(0,528,496)"/>
<polygon class="arrowhead" points="432,640 420,634.4 420,645.6" fill="black" transform="rotate(0,424,640)"/>
<polygon class="arrowhead" points="328,976 316,970.4 316,981.6" fill="black" transform="rotate(180,320,976)"/>
<polygon class="arrowhead" points="328,656 316,650.4 316,661.6" fill="black" transform="rotate(180,320,656)"/>
<polygon class="arrowhead" points="328,544 316,538.4 316,549.6" fill="black" transform="rotate(180,320,544)"/>
<polygon class="arrowhead" points="312,1024 300,1018.4 300,1029.6" fill="black" transform="rotate(0,304,1024)"/>
<polygon class="arrowhead" points="312,944 300,938.4 300,949.6" fill="black" transform="rotate(0,304,944)"/>
<polygon class="arrowhead" points="312,928 300,922.4 300,933.6" fill="black" transform="rotate(0,304,928)"/>
<polygon class="arrowhead" points="312,720 300,714.4 300,725.6" fill="black" transform="rotate(0,304,720)"/>
<polygon class="arrowhead" points="312,624 300,618.4 300,629.6" fill="black" transform="rotate(0,304,624)"/>
<polygon class="arrowhead" points="312,432 300,426.4 300,437.6" fill="black" transform="rotate(0,304,432)"/>
<polygon class="arrowhead" points="312,384 300,378.4 300,389.6" fill="black" transform="rotate(0,304,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,736 172,730.4 172,741.6" fill="black" transform="rotate(180,176,736)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,320 156,314.4 156,325.6" fill="black" transform="rotate(0,160,320)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,712 C 26,712 26,696 32,696" fill="none" stroke="black"/><circle cx="168" cy="368" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="608" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="432" y="340">~</text>
<text x="536" y="340">~</text>
<text x="40" y="372">(2)</text>
<text x="88" y="372">provide</text>
<text x="136" y="372">PVR</text>
<text x="160" y="372">t</text>
<text x="236" y="372">infrastructure</text>
<text x="240" y="388">TLS</text>
<text x="312" y="388">|</text>
<text x="276" y="404">[Reg-Agt</text>
<text x="368" y="404">authenticated</text>
<text x="264" y="420">and</text>
<text x="332" y="420">authorized?]</text>
<text x="232" y="436">PVR</text>
<text x="312" y="436">|</text>
<text x="276" y="452">[Reg-Agt</text>
<text x="364" y="452">authorized?]</text>
<text x="272" y="468">[accept</text>
<text x="340" y="468">device?]</text>
<text x="276" y="484">[contact</text>
<text x="344" y="484">vendor]</text>
<text x="432" y="500">RVR</text>
<text x="436" y="516">[extract</text>
<text x="512" y="516">DomainID]</text>
<text x="432" y="532">[update</text>
<text x="488" y="532">audit</text>
<text x="532" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="240" y="564">Voucher</text>
<text x="40" y="612">(2)</text>
<text x="88" y="612">provide</text>
<text x="136" y="612">PER</text>
<text x="160" y="612">t</text>
<text x="236" y="612">infrastructure</text>
<text x="240" y="628">PER</text>
<text x="368" y="644">CSR</text>
<text x="372" y="660">Cert</text>
<text x="240" y="676">Enroll-Resp</text>
<text x="44" y="708">2)</text>
<text x="80" y="708">query</text>
<text x="136" y="708">cACerts</text>
<text x="188" y="708">from</text>
<text x="268" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="236" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp--</text>
<text x="32" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="432" y="756">~</text>
<text x="536" y="756">~</text>
<text x="40" y="788">(3)</text>
<text x="88" y="788">provide</text>
<text x="152" y="788">voucher</text>
<text x="200" y="788">and</text>
<text x="264" y="788">certificate</text>
<text x="328" y="788">and</text>
<text x="376" y="788">collect</text>
<text x="436" y="788">status</text>
<text x="484" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="112" y="852">Enroll-Resp--</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="168" y="884">~</text>
<text x="312" y="884">~</text>
<text x="432" y="884">~</text>
<text x="536" y="884">~</text>
<text x="40" y="916">(4)</text>
<text x="88" y="916">provide</text>
<text x="152" y="916">voucher</text>
<text x="212" y="916">status</text>
<text x="256" y="916">and</text>
<text x="300" y="916">enroll</text>
<text x="356" y="916">status</text>
<text x="396" y="916">to</text>
<text x="448" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="360" y="964">req</text>
<text x="404" y="964">device</text>
<text x="456" y="964">audit</text>
<text x="496" y="964">log</text>
<text x="388" y="980">device</text>
<text x="440" y="980">audit</text>
<text x="480" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="240" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: <bcp14>MAY</bcp14> possess/trusts pledges IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons.</t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="172" y="148">pledge</text>
<text x="264" y="148">voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="116" y="212">pledge</text>
<text x="208" y="212">voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="236" y="244">enrollment-request</text>
<text x="128" y="260">(empty)</text>
<text x="124" y="292">pledge</text>
<text x="228" y="292">enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data" 

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge. 
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA. 
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification."</t>

</section>
<section anchor="PER-response"><name>Pledge Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. 
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation 
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation 
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID. 
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding. 
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation 
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTPS connection similar as described for the PER processing in Section 5.2 of <xref target="RFC8995"/>.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>The registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="216" y="260">enrollment-response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation 
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation 
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='13' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-04'/>
   
</reference>


<reference anchor='I-D.richardson-emu-eap-onboarding'>
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname='Alan DeKok' initials='A.' surname='DeKok'>
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='4' month='February' year='2023'/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-richardson-emu-eap-onboarding-02'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
ZUHZj/m0NaauocGGNUjKLIXVUd1ObcSztnoxlY3mkkal8Cj07qNHl1+jkHRO
/bDx/m2bkMtYucgc5xMKKorZenAmqa/NcR43IlG9jillFUzm4zrH0FFjLSN8
5jhNXMkq4mtYhfFUR0a5K8H5zPHNBaxaXK4t1Q3Ds9oOUPh5I+98XZ6t7u6s
+c/3D43t1MaSnd4EidgcU+bcra5CpI5gjBczlAAARidT4gWZ/uw283mkrhmn
+C5jU8RbjJzZsy0Zzwe811JCyydXDh5qeUXZpGF4ogu31ma28q6bhzbPvaJV
jSjzMK7qkIoVkukzN2GHDlXsJY2xG2cH9CLwuWpS8K6xxlBJUQzmgdMfVRfp
JdEBFRGYV+vNDRoJQoVzuMtsXb/+slStWZzPJED7tm5X9tGE4TiDakzodHYP
vGuqVExUhOHlDmsdpKPMtKvkbUXj7tp2UqWTrGnBa7MGJvmZRAci+JwhuAkG
CupAq3byHmee0czNwn5+wbQGv103vJ+WeZ3emOmYwxtZgqKPwtnE55hT6MLZ
fMxx+FXm2xmDw/PC3CilNSwsF9QZtQmC6DVSo+c1Za1iPWi6k5Ms5XpwXCgw
wDW5QzYxBw5MLBADRzP3pxLlOG4pJATrPcvHEukSOVh4k0uwt6OOkzbbKvDi
BbaH6Ep1aPHAH8tqbxT2ZALWA4kAyYEtrkDhAyaADmHmSXJx87U5OD8VxV5W
KxWcEkvimJQWFXFHjUuj2PJFjex5591xwukoq7mGVMzZiBZsvr4N56JdIhf+
JGxaE1YWw9VVLQ/jqx45tpKlCl6g2BQ/5mtVWAav4f/5P/7PylYftGyZCF0w
+xpWusmYhgX+zV+4FgNLu169NMsDnCXgnkmN4pq/BEpn1q3ZUrtmueOiKsR4
cFIs2BJuo0crfzPe32YNPqCvgBhG4ZhPqeEFFkylcgpaHCMXBAcCmuxvCn+3
winnLpmYSBUFr2MFzMJUjYbCFPMbojccZwziDjkW/is2PHYP7Sp2bDTix6/S
8/qXWfnht05nZSeMWswlaLuWPFpX74Cd5nqX6xF+5HnwUX+z59kqnASnFfrB
uXinktmDWs3RPdQ2wCdNrrMULfkuHpPccSpaVBVGUisxRZoecJ1AWxCaCkL4
YepKK1ez3Mwy3tGCgtA9L2FdR0QH+puRBeQvhMNKigjVABfe2evYMh+evULm
qnR0l9zlxuzm6DzZSBDC1lgHTJDvRTVxEO66M0f0WHG2BROdam0Tulyb3SiV
Eh2i/QP4JpEi+CvIJtr+V8fLYyevgY6N9calbkcVYnIbEuONoOuWiRBdSSBY
zwRaSAx3rqqpeKAWHt9aPsE/5hpgW+njuC3bwGYy4i01iQ8TNP+dB4eU1wx5
Cq07GVBRDic/U5rZdOwQjBMGbeVxz5TTeh6EeTqsVLU2oSkx9txkGYGQADTc
TwwSaIfmI30k3jEAIcYTzuvoyUYEVZ8R3acaWEeGTx3J0Tx0t14KDgLJOBy8
PNk/onpwhgSTGYesnYTZkhT3JAPZMC/IROXaXfBPXdv1oktdLz5+5eyAnEHn
DN2uBnd7nINNaglMVxxOwZVjTYUpO9wZm3y96pEmtszEROMTGVwEtqbPmSwK
sYVdUPaOVMjxx7b46g4XU3JtCwZZV6+zx+YUklRcXnZDa8SHSxUFpsp3pumB
F7piUeIsPyes2PSDGvTwtDETg9eWj+MhtDWROVOwMzv4YRLuDU9QW7mn6rBx
e54VLMeWYAs0Ke3qHCmZV9DNRmAIRf0Dr+oPsbrFF1nLx1xDg3KRsT5NpSUR
LNMw0skcNvasJjmHx8XVkknwFCA1ldiLFdXETEJ/qUdRZLe8vUxq6OBIXQoG
/sCsx9TYcUXTKXHPJq4CkIKOhfBeHtrqscLddqfzyeU/N11rnxJTMC/id/uU
7GV1moN69anzabvN6Qf/lvwjjJIcC0k3jDtg9WQsxJV2QQ/EZgtE2z8l9+rZ
VfmpQe8AszE44VPb3M0JI6ZENVV/kNBcFKMRm2zxXFjLCGi4odbIQHhWN0Ww
byFCMGl1FZvz/rJzevtyKUZt86vX1RKi28Yl3AZkWYSE91RqZhx2mA4/a2uv
5mjAlPW5rMJwM2YHONffZhUhbjjZQ57sT/4/ciBnsxn7dzeNB7kf1jXneb5O
fmsyROdCIMm9pWZ5o++T9jQY6WaWMv8yBoM7eRX260a7KO1GJXfFHQYMAv5a
Yz/XW+zz6gVVeZ6c5shCKXi55uKQ8eAv2wfGs7M0whkjwBY7QBV86lhBKIIa
3YtNxCZP1DAU25HIlH23vIxc4ShU6rqXqviPZHHaEa0lvhJFyccI3e1MrF4e
q75LbOOCWNbbIHtL8X6bWqGK/8drKlKpThvDHsSHO1F01aSQkyQVlBNfE9ti
Nc/RmJyZcjKqbwFXlmfPTLPEZ1e8DRqfOQbCifJyGl7rKUrjUT1+ImzDphwb
+V1kzyDGkSQvLVgoCbDNPRmm3Uc7NkTFIQv9P/S+mIiwQEL4u4gIwkyQGZNK
7MLL7pn0LDqNCJnf+gX2cbtMYGpqrgrY18JDUzzG1ord0cFVxC/lT8DeiOnF
lnM9TJfgPFuG8+zEDjpMayY+9LRp2WytX9h6j3MYXbyOwMd2zmvpQBaidGwA
0eexo8KcNUcq73hm2iO5okqGRBrqqErwmYyeCqvz4eWQnl5z49HUrgSqMem5
PY31CnQzuF5S3YLzqlm8HxNliS/dRlmUjkneVDgvkNlLCnCBnY2dLa/Khr+g
NvALjAcj1aazQMS4Kp1ZmvDl+kbWNca7116zdn3PdMUwLb+CjhjH1sZi59JW
Bi8aJoU7RoTmx+zGNZlNVgH2e2vKgGgM0FSqCuOaIkE5pnJFl1MwuyowYrE1
lNVSnVohJXu9jDyVKcSVACvgBcYH47UBxA47ussumTkoKkKVqcAd2gw8KdXK
BQax/jiGy9dZk4JrfjUhi5Yz+qgF+jWI192EuUsmPkuvWHBkKUS5k4Cn15mU
no8eYe3zEZI4lHaaheVTywwTa0BemY6u8xElB2RmvwvFKrFrySFQJSDmRcaM
JbdNJQTzvZW7x3tWe/WrZwBCnGNnh1xc2lj0Vh85Z4+nkszWeV1Jcr1xziy6
B61pJJW0bVJr9nxskYzFr61nSHmUzFEqr/Qtl1JZe4L7qVz9saLNyge/jr61
hl/N9bz1euFSXfi4qz5l23I6Kma1Cv/h8u+wO7SHj7nj35Cq2J6PbwCrvewr
6+5z5ai53haVWCDe2DK7VJQynirAOoG3rshFiaA+ToWSmqk9ZvNcuBKxqcE4
TSfSrZgu4M5BslrNhSCptjxUmlgX1o+ekZfIvuM+x+5G6uBwSdwTOeNkeE+a
1ISrhY8GIuOiwEOGfzhQYGQz01HT2x3doYY4/8IInc+NbZPMYsm5Dvzrpi6B
dROYZotNhUyzECfRZxOs/GfrSfhXVPoTyJrjiWm3KU2Lest5WiDL3pQOa2KR
O5pimj36qBSXw/T2HRnmpsRdbMuejrvT+eQ0K1erNR+m+IBZmaMMGKZigkC8
/r3siKJ960hkN1KLTZ4ltMnewRHcoiwDomm/JyY+m4GAu8Y1wuHDZjouFmBA
W0k6wkxnHJpuH4t0YaRW4kJpsEQZWz+dfR5dd6ZbRWgfN1r8U69cMOf7bt3/
Djj3yPbTqIbp1Mi2afJqkAxtXnwU9LraD5JciWA1pv/NrYPkycbGQ4w2wo8x
qQx5xQF9jPfPUNMgtMO6ZR/27reEedhARo3BXnmFZlw3wgQGYSmcI1g0aWgx
vTIqGzfaqbFxkXhtomxR5NCewYa1Xp+WjUr3Gn5EcEwKCzeO1TA0Sp7wL9N2
gtYNzTewiMcsBQ13FXkLUI2mWBoE/UZI77bfCajFsLHaLN/u4MqTHAU3d3vh
nV50n2m2v5El1Nw8x+pMyKt3vjxDwjOsmUqoXgKCgwHcz8CEmXz8yr/isHHx
5TX6jrcVgiU9L8x3jiH+A3uBO046M717CX+n2VJhmk2LaIRZx0L2Tp1OqUmw
qVbQtlEz7xL4Ej2BQ5v+cRv4kcK2gN/lkIQ7A/VXVyO3scFAx6WfpUl8davi
snXfPkLDPKHZC4ysHmJEGpJ/82cp52CRUesNx25RtlUACooYAgjSJVYFRbHL
4av02ua/a+KxGr0va652WwWLIxV+Jfpm7xfumycr+6Uezno0y0qL0o6p+iAB
4OW964jrHjzS8HqaiFzpUaqqNxjA2ChImLt1FnaPYygoMVpVWDMmBHR2/Eg0
tlEbGcBF52POAEXTE4t3GGYCxKRDSYQnWnnRL3UTbRqt4dO+aiN8SUR0M5zO
JYnBfI0Q3hZrDW6MTDV9bXUx1bW9SNdAZA1MW40+w2jY8oUsMlzihCyH9NF6
hdW48zqUcytsxW2LeRip1q6Kjd04xpv8aW6eV+vRls96XGNRw46a6XmJwStH
R6I1ByUdpNYdrWtW2GJnGOBVwh3D0PJi2s0m826WzrrF9LTgWFoO9JJ4W9MF
3W8/fZM8el68Odw5uDfJqovYouBvCYrtP3CgzbmKLPb3eNsptAepEC3fNZGs
TzW6dDqHgoV47b32n67vJ/V08dt+dmyGYD5Ngqb3QnLxcmYslYGQWcylgpDx
8lWRGB4TpvOgt0nM2UV4vp4hjdRkH4BY1GKL0EHjtbUGSOWrZnZoWnvskWUx
OkRq0LGKARCVs8iQ8gxXegyiZtVNa8oLaguTX6MlSOtKKWDmhbLZ1KCzBlgX
lNbGQAdKUfNCq1uikzFK5xTlBE1TaF14yH7Dab9NLQLWFDLy3ABsMTNXxcW5
+LUnOdcUxhheFBTOvX+Gs1a1NLpWZa9EyhejqFPKvUq5JuzN7jrifVo97A8o
Vrp2vRnDCpUSBqBv5hn1DGzulCuNPfGQZg/V8JcmW4faLWrfUd9mK378yg9z
Nd2ZnTjfEh/fIo+RlXOGlDozJSRVqpryp6IKueryi2GN96igCJMRm9SWZ9Va
6OSjZVlXMbly00pXXtuJdXAmJ+00G1sbFGYc62bNz4Gc9adZeY5B7c/7a5Ql
cZClJQjBY4SgNruuciFfdmmG+8IJeNekaErzrjKsHMcIVWD9lkZu960pTTB3
uDM1PBfZBwGB1d1TP/1ae1SpNL0pJGilH7cj11Kb3f03jvSkw7KQomC+TTpo
RNcacd1IWPU6ZS9X3Qrf3271xlYcjc8uYb5CXtLqQhuZ1gJiYqfuOdTUMrxe
tYuyB9eC5OnAxaEi38dZeqYK/JLg4OLNg+BmGX1Fbo/JAG6YJHVGV27bIcK2
qKSR78OyNmZlBgyBE/SCDLW0FjtCYfXPs6zmllpxo5ZVP1IxTgVJWUKgnP1E
B9poz0hscBfZ03CLBWVVXURlU7y2fUktsQytibfFAm/agPzbjg1xFcjkLXWx
Wwpii17DQ5mdYXB0eKRe6v9iS7vJrVfZAwsclga7L6gfpO2x3IC+F1qO8htc
/QH8uKryejD9nzrR40WwDl5OsoFZ5uXU5Rr44GzeyVg/SJx6tVFmeYWw0Cw2
MMytJMw7UDI8Gdjd3vUK88U3RVY5s8MuCU54xeRrrOA9WgF8OIeffcM2I7wt
5k09ZhjYNlEkVjrceA+3HTDxc0s0skiH7La744C2CGbrgcXTKEiLUM4DKw4r
6R0EN1nWAPF6Xzpyhnku0nONuh4FkBJwN4Hj5yAZx4//lmpkYqm8/ZuDvE6m
oSvJkhPJmBw+L+lQZTE9D1KIYInmxDleg4m4JBvR34NjttjiqIZpHF/42Wyc
trNHQoUU87fr5FFMjQXpUZXXukmRKoiT2jiw5MGHD4imD+H/srLERlYcRDik
MrIBZXRW9kdBIkSv8wYh5U5uXR8HB3KgAGHcjSQANCSR1uI7nUgwfjrG6qaO
SUwblUedXDGi2CqH8s7OXs1PzbZQdleV8rwSU0EhscbviX7b/fEbXTesUeMr
LBamHnzCn6WyHkY9uTAxv35YbFT4n90d89dP1j7ZGMXeXvk9WX022F1Ta3Fv
f+IcS3z1C8FFT6CXtfAJ/mobs30yY1iD2NJjuF/sOkSE+PwxyOzH7oXPHeOP
YTTfZ4wRDPEfnwuPBV/cOgYOsrq5ZtVv4tX1IfJcU0AHfkW1WycSTeUMFCgS
/Cj5faBIzBD/FFB4e+n//r30P38v/x1+0XgQPvF+/W8+1q01K3pSYiG6MXWl
vTjUBASoHUTR8k6Q/wvQrS4QrkAnvdvpkRHA1sb4z78uvw4fq77kXtxa7jaG
JB2yC8hs5Y5jGKXkinjOZ41hn2gCRIqBIkefcav+kn2oqS4D88b9vb9+ziDc
AAbgDBI4KmlLD+Kosul1YvfTsps/hu/+g0iuvpv9pe9mQFp+Hz57oya7RzFy
tfQYBEeMFW8CsR3yfTLcUjrtPwTyCQOeOf9wZ5ci2ElDXg748g0s+G/J5wH/
j3oQ3PU/iBXcd+im20lpXZCbKHHTbJWdZNmiviWfyxaTqyMe+TNZPK3DHNxn
riPEu8/cS5LZrfwTWfyD5rnK2bluYeaJzitZxPod7/8cDKcBFpzzZ5MoNJua
0AnLGe7Cpmh3jRGSBcxB/fwXYza8M09a8OsiEC5Ar78DZbSVhWOqu0nUsV14
JAXVejS75NG0n7bWFT5uVeeTajbOXX8w09ZlYYY/GxW8fiLWYeY1v6iL7U5n
sxfNbXbxkcoyb1M5hn+b51WuLU3R0h22ANtWc5Kt2yZRRRxcbPuSbUlVhbm4
8zEocWVtUEEE2e6OGG2di0L8qM1F8tIoHxHwIic36v3mvu839l1xihusLBi9
WsqBZ2MQ9DqjabQPmqt52FiNyTaVEVwSwHRk4uAondYrBBx1fi3hcaRoDZOA
Z7zLOz52hSFxhFlikAqczYC54WXizc2kvoXpzN3iM8KgAdtnSSwymYayn3Ng
AhsDz0skJlrKCbddVWOexoC8I6o9JiZeG1KL/Qtzm/2nk7lbHZWmTZnLjg3y
Q13wSliw+RCzeqZs5verlbvekhxqHy2cixEW8uI9KrNZ2TgvyaHxk6oIOgh7
pGmhVV41VztrRIjLNV3FAn1rQfvXuEOOHE9YfqM9wHvp2Pp4aVjcvY7Duj2Q
P58qCn2d3gDIsVyy83Gq8KxlAv7IKC2B7Da8nYZUSG3Dw6iPdVqObPRWJtmV
ZA1cCr1bx05FF3dxAGYSs6XBU1h9OiTLdZK0gFRCiagqZXUzHV6UxZTLgVJb
di+Oe5UjCSobmr6msNag4+1o2PTlOURcYGNv/+e3QvFM6u3/PLN42Gmi/SNl
W1/+I2VK/7w93T6Jnq/LpaDv+FXTF8gDkAJULy4nYwVamHxJf6n/uvZAxpd3
x93I6CTXLli0sTt1qxpTIw5PBp81j7HhCpRixW+6Ckby8Wo2mdlmIF94090F
MW3BpinE7a4ztUvvtryLET5Ew6dIrJD8mGWutQrwmLi8HSVdKCoYiCuma1gZ
mmDNj336Eb3JPWkP70qM25xo8kJiWNxYRYSktkwMhbnlwzydUlN3bBKwnlyR
NCUyHKVDjUmkwwrxTkbHrASp42b6IdvSCOT36NrySR+/oi4JIJzwgyCGxdV5
twEWla6FQgF2hy+xq8TUC4G02MAiy3asOhgVf1qJx0/pMoG7mLQH+HSMxSol
GiSvtpP/Uk15772viul/YWi17TmelsA+aipbr1tJi8/12dHLA5GvSCxakoxs
k4j36EE3myJP1kFQ/T7HG+nMUjuwIjiNIXAp3Xzaxf5tkq3Vkao1DIBAzNMN
mc2RZLPca1ZowcByx3ZHbhDcu2UjTFbg0HilslBqEf+nP62su0HUtlpf7/zm
bu8svcLwFHNhZ6B5wDAuxdtcL7tD2N/Cq8r3SZQAincm5Qtr+qmgJddORIER
pami1uEqC6N+jEgxpcDc4qwL/xFpRGmjvjalO1E3uyT7iTW1qwYbrS0ZWdKX
LzGpSzt6VRnnU5PfreDV5KV5jbGYJLOpGuSmp8It0WGBxs5l/RnkNUeA2wIb
JlgQsy+oho0Fv4o1pTIiInCKjgeC91kt9NtAxsaXm1KQcvsiu0OhvXlbxa6s
urVHEye3edjbwtnMQEyVxufb+D/Yxuti4mK9uZ6eIHiYUk1k5zIfbbOKJANy
+oBPeU5vatdyMx6KR8FT3rOV5OXucf84OToe7B98n9A1t2rWojR72v5pMbq5
ffMYP7NC5YgDKWq7SXdMy2QsOaWKkiwoaLxGsGUKM+rCyTQBZQsWjixmInGB
v97AndnGpzDwqEtP+YgJ7J5GGBk3nnOFIerI3OCmS3+qeG3wdRvztNW739s0
emuYwOWa2y/WWJvBdz893NrgHFdOcnYxivjX/SYJ8rRr0aY6XyUt92eafC82
Kbw9PJHJdwZtsE4/MIeapTfjIh0hS3myc9R/9OD14PlqDB2AeU2aKLHGLMpe
iAoG+gtJnB+lGx2mAtYkkPlzvD5++t0qru3Q/D35ge7rGo9J39px21kevoe6
9F+B+QE4+lw2dDvZy/jiyQaB5HgsEABEcgnDAoCL21h+3ytAwO/y+jbBY8Vd
BNzQ1sbWZnfjQXfz0fHGxjb+Z7O3sbHxTmCq8Qdfx0oYWfbg283NlZa9rsTg
uRJuHQb3dy+yyvgcZ+kfbT18xCsAwraUqJFWo3ZB47Nws1UQWUbgHhiDMEnc
JXxFSWC+qNLaBU2JLUc/7Dx/7tJwmawrohrrhKYCI025ZUOUVIEenad7Wz3v
MAnc43piW8WVnGJRoayNbwbLDEj2++vKIDKtPMzidDKJDw2SiS3nD0JNSWPh
2FIyqsVjPDlaYSQFmlz6A0oidlJPMWqUTJCMNJ7KFZYWmyJycuJCDzY2kidA
CQRftk23DdNLI5Nrg0lgNJQFNh6Vc4JIfDSa4mxvLyLe68k1RgZLKz7pGV0P
e6ih5t7XZoNwm3LWSpLsijwAtskIgtZ1n6YUgiojaMWUMdre/eRpUZ7mI5Af
WjfHhYak71dBbeAks0hpcTbOPywf31RSrzPJXqKtGAOlk0/IQhaTTnzhDIey
182y8LOoitm8cd8+3HzIOfUmERVRv5IWzjKF1kA/W9b78HC47QuggZwn8G7y
bzK0s2mjmNVGk/AEIcXsQV/Ip64UYBN8hq0p+DUkoDbwwW8WnVt5mKfNxAhc
Q7Jrnh9gFpnn7yLZAZR8zPXaKzUM2ZI1izNjmTArUNKaeD6LzQ1WtO5q0suK
m2pxKiTnD7CI6TALtwmCdHkzq4vzMp1dSLEqThBIZlU2HxXdErYIC5iaUjYN
ybUJt0VpTXggoezI1g+TWhAb0ZT9HCkttT3hZNV5Vojfi2cAjj7Bs1/roRPy
uAV7LOaQLU4KrzNLcAzQIeTdTEKmIo7NCmoohK1Go4hWv2p5b1p5djC7vBam
vNZmb7pNDWxKQ6vhBQNpCsv2ek36yId1lwUKlZD2QVzRUG782x1QJSeAWaqD
XuwcrUZTZVRneZylaOnQRXNvb2dDqxDLmaTjuRzwBUUCVV/SComu2rBsg4qH
MRPxlSHJTft7qD/y7F9f6TkU7tCuosizFdQGFqpGC9QcMwYrN7drN1tOu0lW
iJrie9le9c03957O9374/vV08OHgfn/zwe4rMX4uVoP4DUvJ8K8hLZNXvoAd
9o6G2C+tn8U0NHgGd8NiX7Jo9a1/pT/+VYYDWROnMKcNesE3KGH6luWrsl3d
W2RFNrfzBYq17GPI76CXICnwZN9wlf/V86yqXsFeEqPUxCJ+stHF9GQTumSZ
i5K/le+pp4mafbfRJcvkx+4ObrUIc/c7pdsmfefbG3j1Kqw/Sep6tEXkeM12
RE3DPMqIW003DUqpVRCWuzSRANbN5gyGyeGPu0dfbW5IQyjL1VH0uYXGc7li
21pbigHqaiBpPql0B/aUF5cP/WLF08I3aNewMVhNFrigguZwS/neIn7VL+uK
y1pdcf3PccWJcDVNyOnMFgosNZGdpfNxrQtEh8uXglNcaUd9rjt9qeIofrP5
dQ54wVB/BX1Sm2P9nCV8mC7TCv/SlZOVNGFMmi6zbuxvfOXin3HvRC+6s0zZ
jqE8cfIpTr+SbMeH0kQOh7DdTJiOx91mdGMWkDxd7srYcYLQzbM4kvO5AqIH
IG5B7gTNNi5kyL0fUS/xjkjZ7RFp6zesXpmiF8hQHU0zlXAHO/d2d2CeHyQQ
zCGSLpCjMCZYeGule6+mTG9laVKoLH3wxNbr+Y1S7n0N2L/YzHcMRU6rGCHy
b5XbK16QXtSmiNd3aUMivpzeUkbYuKgR+QmWEmaJMZml36tR+z99z6hgiRt1
Nj8FAoJvBrU4vIx/XJ8rKuAIOtPxdZh7X1dk63V+yKhcjK7qS81eMjLRsWjo
FwknSmUrCIW6CYkBv9YzurPKv3JeFnOqrkQWm6rseg9qA6o2wWKa1Rgj2K1w
aPic6EQjt36YztLTfNwoaUfmBlWYUR1ya4kptLiMuWExsU3DAxlBKUhVinbN
qdYUkzP4ZMinIZ+Rjio/yn2j+kAgxwpkndYeqa5l6YCfncREvH90vJ7svjjE
/zniQklHu/3D0BKsQ32x+h4plmIxbc5o6xCMsyuQLs6FCfklx6yv3ngBBdxw
hgZOCw9P2s45RkYCmYkTcDQvp9tqKmZrWDGzqmzdPQADsqLdF7sRcTJ6h+25
6uYFVDUNP6FKunkgJxE253VE9a00AbXhD7b4ty0SRfM7zHDU7DQDWGDVkaWN
+P3bjPgPPny45wpFfEFjfr9pzMe6FJ5BH6f7Oxvz8bztF/l0kVW+/8+zyq/m
Z5bcri1to0cU1SZ6WdWjBC5XskPxL3gy24GH4utK/mhlT9tRUfbOx4toRdIt
Ln0+tR0FerjrRJo4rptvpKEXVkPx4VVU2TcKaJsPk9duLNbbEpSEI8uMCspf
eLFfh4f7NVWydFVPfMFhPJbyutSpx8p2EQtkM60Af0NzG4fmrNsG4Z6AZfDW
FCJcVeuz0tRarDMCws9VXMXpVU/MmE7i29ZdYkTgk/RLTi4m2Uh+AIlLx8+s
uoHElwolvtilWpMx+m1cBYnX+kYalimHjy/BUCIIUF5/8x5jphK4te4/bXgD
azp2bUeqjm4WtkyTsBLlZMlLio7X5x5sJa4ORiSKGLKT+hZJaTG7amqN9rbF
XHHt4sxSDrp2/9z/Kq43HQKwCFjETp2f6BCOwkFpFSeQE1rTMCMZxhN9t2eb
G3hzbhVkOeloc2MxmAxahPFExxdZKLvfwWJvCZUKiTKahwIuHamqx9Ruxe9/
ESu+BeK/m83eLnwlGbSah4+0hd59IcFGgjZfyEh96ypagoi0gXqReboVamSa
XgHhtl7Z/ov2MZg/BE6Hre7G4+7m/cDp4Bmws0UG7AXWnDdGB5XEBzw112E9
njtX1WlZuzbUt3Yll5uIIoBFSN9arbfMJuiaHMVGNDijqgtnsK+LqWrAQMI2
ydps88aMzPISPkLQoudagIyDZFM0MFgJfoLhwRSajFy7Lgr2u5I86WcYk9G5
5Hqw0e2tucZYFK/hCnf3NjdtbTlmGBRC1dbDSQVHo5d/LGaPcdpo9UoiMHlT
s6u8mFfY69m2NzJFxUFZ7WW9dR08wMiQ/MefwocnLQ9FEg/kKFJdjMhDCtL5
lGLPpzck94jAhzwDp7NyPaXk+XIh2QZ8SJBKXtNgHJ6dS9QDqREkvKJeYcwb
3gyW9O9UUdRl3LJNIV135KDQ8J0aXKU6a4gyCEQpp2UFq7a6K8a159K+1nVK
OJ2PL4M67WhcJHPD2OZ6OvZFIFVVaj+vLUok/zr5wWR8N7Luw0xsmHbgoGHz
5/ds7nyYnm2qgTvLgr/jZh55bCuNwshI9iakkpuxIyOp02z28JHCDbaIPxVu
WGPKVhWTzHULrKLp0Y0UaJcnjZaRW/KahaphErNpdxGmMkvdep0TEc9h9YU5
zr695/XN8AmOSWtpFj+1bjcjBhr6IjLohTi+bmuOU1+UZHPwmrVKR1ebS2yi
7TDn+B7892ivLb2aqMSQ7f2enUGxL9WJbenU4N8FU0qsq2/PHI4eNayR7s7i
5ZnhY9PrGVZtvRuJGUQzelDTaF26zGITgkYyjTK/ryW2SXsRpvDjqyFK4ra6
1m/jamj4ikcsd9qmGjef+PU3g8Kk7uJxWmijGql+9ol+0RVJU68IaZBvbT93
lUgTvxSpX32U/tevP6r+Xz6P1CD9vL17Y6t/kWf4SJUc/YvBkG+UshcW7IsM
Bl/CHVtnIcS2cftr+5zqyzuuNvxSUpcntvhirLTUbXO21FxcZrXxSotffp9d
V06spZjaLXNy4sCd5lRPWio5LvNlvH7jMl/GqzY2l94O267+p5FEMGWJLwOo
3/6l99vqwEH91tVGnsWrQy7/ebQuZPxzVZ+3UQrS5f7/sfn3v/sdxxltAbq/
tZSPWzAneyjvNmdstQ1aE6n82IpN/g6W/pI3MGjbwOLVJgvKRbrz1G/FSwT+
Hc5zmFJJwjvSsj96X7YUNPxyq22vErEVVonQ5b4WaCi+ViO1GRaXf2sYzG3S
Mjp+gpYkjTY3qPYabzYW7orkgOIH0n0cR9vs3U9WqT/SdVauUYD7dFjM0beN
XYPpja3EvIB/H/Rfvd4f9PdMXEHDOpRjU7TI2C6Z2kkN4RgcpmWmVR7Su46I
4tWCwTgcZ9eB0vYB5GTgUMUFSNtHaxSLg+wKgw5sL3KvlWl7L/pGiTrU/YcX
eXalCyaFQF2gNWIhj4zTZgJ3ga5UtItRRIC803p8I+tt03bR75XbLvMEVNd6
nbR186Vf4LDZLjo0G8l56cZALUYaJ3iQ7c4cDplaWtEf528HPAO2HZA2MkTN
QPuOBAR4p6fqCvD18lsxOyS1TUHSc6//8hJ9TSRGl64nB0pZ6KlAFipEICY7
xiZsM+JA2cyoIPOvPVgvwssE0FaeRg2zNHMxq2ZNP1GpzoryGntG4h8nEXq1
H6FO8fkrdFIKkNhIr5ZkHUDigPrWN8myAXbj/oZU4MunIM7kYtHyElypu2YA
j3BPVTblDXGOqg6kkw2SAu8+Mx5m1umtZftULqKLqe3ooFoxt5iMBCZmEsIS
9ZmSDRx9beqAJCp36fclBnz7lqh00/Z9doXObxvwxLOw348MVqYj1dJpulEe
WGXibZDwDRPhrqMmun6YhDGPpjYaxIeBWbLLAeE4S6ZY4dMF8Mvj0TJNiN0R
DrdnhR96JUedvYJSxF27qk5nh4qWNMvaxIhbiPHsH5d+8wwx3Z3H35RqXN9o
qdNekFHmULbIaJKnbtT1GQl2xmlt//h1m5VOmcG02yjIg3DNlsJKso6JkRk0
2u6ulgz3tpy7wNuCGwiZptdXbsQJ2pYHLG4TF4gPIzGAmGZXWCNBe7HdKTRs
sfGl2dnCKi7r8The62lep+tEHVIlsMumzgYt1IyQm32Y2YDvBkqVGTkyFJXA
AU9wZDk4itUwBlIvpigoCmXesZAPS/v4LZ+lVy56sZKyOJ830cNxt+ZwhqnC
SNJgGTSG0xy/vrHmVxobjbKl7yXDKi+2c53tdw3Tw8Q13sToEVJvxCiq6NOL
909b1IWv2dWOsCtErNaaPhy46+gPQFoTIN4NNSQlT0C1HpEqxVUwJOt0ccsm
+SKtuirK5OGm+Ej4o2/Dpsiz7EOOvZ1hFA86uP0ehhS4wGi3IAzb4dxvrGk4
ii0pF+QczSmzB8XazFNRFumdbiaMvLEtdO2JYV3YFHP0iiqHFdy40FpPsFVl
u8QtbnnHFwquXTZU1snQKlo2FoWqSgLfHohqnBpBsb8wrvQBxZU+pShl3VHO
D3xVJQJdrtCQun9zBTI+TwbTvC4mNDV5fTGfudm6cxE3XRzv6kkrjr6LdhbE
wLYGkFqckMOnCCWMDs1GVYjQckEr6131NKCmLE77WE+O1BYZB3iZxanpiJra
5P7Axf91JY7m+Nje4A8cIwQ91RKPRoS5ZFqJ9OTEMGcMaEhig0ASc4YDXA/7
eD5+ZYe0MOW1s8f03usB5Z2Ms7SkcDmzU21QMLvZAlCJfk9j4LdUkqAykpXq
pMhtHGt6iQP3VYwn2bBGpEsqGc4LezUIhTeesJc0BVQTKKYJi/Uk3o5MRKpq
y9u08NAaU4U9sipuTPnjEdsYkI5x5KrBADOnDWFdBXS84LzLosoCS5e1Dpk9
z9BMwa7rroTMN07B900bJYHUOQE61xWEGwv43QtzHqNZUUFZk8GiCksaax+y
LoLv253z+KeZp7J9hoblh8cOlq1UEwZ14uzLRMP68fthKKyNhL1DnYvVCosA
r+7XkfDXqiEwtse/rkVLzwyWLD0TVp4Jy00sX2jm7mVlpPWvzTJS5VyGxSzX
dAQLRTdrtMRLsVgr4pKyfqSqXzWXA9alAP3YidWw3MsayCg1lZynC+ctieu1
aENYJChGiqgA4NOx1SsiwzQEUi1ySi/7M6eauQI0zSIzrgDNqRdDsxoUbFhr
glI1eM+97hykPVAqpM7E8HRuU4BOqaCe5NmQoWknixojbxsLmw31iZsGrM0H
CEnHEicLeq8wTsuNkcbgtM4F1XpEoifo3mpC0uVZtn2FWiwAC8R9IfELe0Ab
VaBBUgQTre3rg1ACj4XWrvIriJdlSoqnFxkcTKdSzalq8HSkosuJF11Ts24q
ImMouQl0IoWZeDDmT0zPx5kKfm8gP46gbg8+CojwopKsNNdkPq5zTCX31edS
1Zxwk0mGaF5Wnz2paxc+r2IXCKm8d18WuRk8Q07DnYDBvLXhWr7lYgHyyhIX
pBwsigxbMumgzCjVc7hE2sHg/y8eZPn7P7l40FZ3A+sHHW9sbd//dvv+497W
/Yf/lOJBi7jB0hWDTH0hqdSzsFDP4j/2ej06w7bj+8JFYL9Q/sYyhYXKRYWF
BrcUFgr1CnQ8WflUiAJRQutg0s6oeKmWwKvk2PhCF8ddChrd5jtq7o3VtKyO
mCeUQB54doxhPVLQKO7UUS/mt1VduqtOZesW0XF4JfQHxlp2uyNFGX+UGtgo
wtv0pShBy5kirK4ok4rOhqKeJwfgAhcTBMaDuzldLJfGsAtfaQDoM2J5+toi
bU9Ejapwsr7jj02+HYm3NmooVS6QY+mJdXYbcN8ORlk+bBh0jJdzVMjiLjLV
QrdRLvMROsJXrjDDos9YaMIPjQxAQhQoA07DIOlvd2eR26gJdLy/VL634NEi
8rZlGQrScVdHsyb9gsKe6xH7v8+//BLxiJurpHssg5BrrrsjDL5wYDnt48WS
PpcKsvm7Lgnau6ooNho/hz0YdmssruhofVnLaz6txghfGr3NnWFgH/LuKJD2
nWhuA1Zkl4RbOsbBhfanS9/iRSuRuhrAC9bdhIjMLIenCZqIS6q+MlZgJNbM
qSPA9cbF+TkImlR8y+xgxV32o/lp1/fjYO892rLpVzIEPU223VjpOkLTZq0t
0hsrdXlTtIrgtIiyuEViYRZ6bIBXLB2XKylsC2BlWBT6t0izXAXRZm3dFMZj
1TGuobF5X5n2z9J8XCmoR907U+vf8b002i3SDPLBa6cqp6uXmeZdIsO3OOWz
XscIHwVeEKmTOwFKYaok44jb6BlaR7cN/s8jdiA+2HxojPkmmHkfzgYdL3g6
uGGlWLLcXinnA+1elVqElXxRAULb0NlxpQK8ohIRkkpbR5psZ7etqMVlV5vD
0We40vQurZgrrhv8iGfLuAmB/tlszkg8DYc6ev6aBaYcineam4wsTB4OLryq
1/HxY3pe/zIrP5B89PEjArJLsUlYQo8awmSq4t2FjVWquFSdLNBXnMWjQVfY
7uCLKdL/5sqzU5hv1cLi30lG/63K6q0Kr9Oc2/uNtWvijTK+K7N8StIOEefF
NXT/l1NX5d60q6yRO7FQhRV9CBBw6nUUc6F1Jk9xLcI4mGLrOQ31bg9+CzKN
f7mqWkLgzJX2xRYhkRmCj7h4zWollqUD8gbA5SxKFDJI4ZqXswKJVEqVIMe3
861GLj1JHiOq66XqkTrpU2v6LoRDVs9WRUwKdSP6LWpxNq9mkClceHrjhTUV
ZQ47wpoJhL5Cv0Sw59e91ugqLHa0AOuXM3uagFLrS9Se0C2JcPqOQYdGa9u/
3tDzltkbgvNCxQ3OEA0m5NYral7a4gCg+cyWLCWyYWQ6T+w9XvRnHc3W0JbM
KRsSvBqjTms9KcrqTtn6l+5STnNxKKTj/G0NJnQvUxMfjB0bf/ttLYrzpgBX
EC3dpr1TTSg/pF8WgMFRKOtWF+klXRed2Am/2wj0ZvhRPKS+ZUXa/eMXL1PB
q+4QUF7yq1m2+Ii5KjG+egYSshf0H6hut5d77xnpZ9D/niUgDm2xGNEUhTwh
Fyi520J1u0AUdsFQUR2O5kyB//zri02Sk/050tP6750ZONhnTfzFxDY6o2Wl
tqV8DLc7Km4X3O4kuf3dRDdBjH9lCe4Oe0FU+2dupSFvMqW6k8y5DNlplUsb
lZFdZdIC9Gcb0c9VJAuKWPO4KxJ/Yyoi6QBW3AwDSalvNwyY10E8ZJgxwCVm
qR231U1ZDPCizQIe6tKQrCTbFmO7VO3xaBRjLP0xImQDpBZL2S2FxFwmVX/Q
FEN0yAOaKLzc1wpozTgNWhNbEQSGU64QTx7fasjjO0Hpz48fvdLrv5mqPxh6
aBMh7TymFnBSpteubvKi+lNXxViJTwaWDCJX4TIxRS+p1KJqfBig2XTkpXuE
9QxdDkuz8nKgs4C8Jv6sPohnOmkOcHM6wjwEVyx19V5F9bK5dMh6Ir+W6gHV
lQFxE3YOvw5TJMjVWiMi1PTS1rZ3m4InIhqqLakpZ41fc411e5+CgqXIMCSJ
Ip/qweBYcG8mXYDrtU2D07OVjhB2VI7I96TCn7zNr1iwrAfBPxMQSFnkcl2r
KMmXVo8IhauxiX2CDtnMpreS2onRq2lzi+FyiUCYLuBkMLN+YQ+kzQPwTckL
3May3/akQikwt6A+q1FWKCjKltNywYqxUYl9iBpgC7C6dE4uTExHrfuxufuf
evZ2Ve8rZXRgTF3TVez9/GzTpOA6LVV1Xj+9H0u6WU8r3dlolnQymluVXvLw
b3Ek4OGhimMUb2sDkKi9Zj4u+QcbGR3WLU39PRjjItBuPTnnfFXqjq0PHGus
4Me1BXlmfsDSH4IISXHcNPKcv/bCd6UqI5O6tXXruEF/IEoqXiDDutif4Xqx
1va+kKUIYnB3dx136dwjzuxugHtaYFE4TogIccbrABFSlYaWr2l7Qb0wkpXD
zY3An8gCuSmNu41lUAk1TMFshe+y2EgJ32tX7lNbAKwnShyAzgOis5ibzSCo
UolHzwRBqVsCyj8sewrR9qY5jt1IzFTKctrPCAj0EKsVSA55gPtNUk3UYwfd
fpH2Ps0OPqqLi+kR4/e9grGAdhqhxMT6xv2auBm4CGWRDi+4YKOYViLxvTL2
iMTQylBjQRk/GHSSTkFu8FpQeBUeB84cJ77F1oY0qpS5d9O8mug2wigqj8VS
3Rc3hoqxjYatNepi3NrYSF7+aEVAvpPsd0WcT/Mxv+/lm/meRcfU5ECNm4tE
mbDa/aJKtgDbRgV8Eb+a6GCiNzgBeGrQN4v0U2vpOOEI6O3keXY5rL7tTvJJ
9l8uXYmvxBuRhHZ3uoGz+87y/fUw/c3WVNUOQOEEwBjCcvARoxmFfhvrIXET
0qKmmFEWIUqBrdVJgtS3DA4hlFId3JrymkifWlTjY1Kh+E3zLtaklLI7rnKx
U0J6HSdUWZEyJqmFhSSJ2K8HqcIKtmJetNSOr4bNAW6koU6DQh/X6U1DXWQd
IboSPkvKRdSr8A2bvg4bqKzWJtyIrLCqUDPmor2tnbDihgKpap0YqpyXQc7l
qrq4OtMn2M7Co0Ei6TpvB/fTRuhwguJtp407NQe+UCxXUngoocepq8xnUHsR
YbcliXFYvDewRm1coDihU+rTpEHJWVMTZCcBzq1ZbvB9/7i3UCGoVTyAjUr8
e+oHIV34sjoCsfroEHnlhRg20UDDdjm/mBA9vfr4TXZYlqwqhWBtPUrXvJuH
RSPIWJeY/AuQnU9XtHQqtmTfHRAOSqFm/wh/ANsR/n3iJoTzLE4r+MjW1dPf
b13994hJ0Gbgw92d3Xb7bxPRl8W0VhMwlzsXkiT1zo+A2o9vvHACJx2J8TSU
jO5jRjcneFXVHBX/1mwjY0Pg3PZsFLEgWCJpbFeW6DWoEsW+pVNiUWNiaBOf
g1K0diPYwtXy5DBbMq1jNQhd3O4P1obWkBz1SMH1x+88FdG+KFRtlWHo2zZ4
Gbu8iFItIsbKRAbvigAWdsI9LhJTQ9Y9th37rFbJlcYDS33Qy9jWI6dTns1S
4CJYHqGyJTu8lDNzTJzYZhZhtQjblMArGK9ZEQfDNToo31ZT3uakTmN6KafQ
u/TohjwdL8FtKk43/nllqTufzJ2IFdukf15V7o5X/7rl/R1Xhnup91Xd7Tuv
f+HQSfIXDVtVHvvW7wziV64m5a0fuS3ZwqdcfFaut1lLs0Dv8mO6cr+2MDxr
y6pAMlxWQu/lx4b/mnL43qh6H2YXobyQfNY+/qhGjNKb3wUbaekcguZ3wsYb
tbmN3R2SEJJVc1nX7gyaBcVr7zvOajHTVbK5MF0+Iv0xAvrbxk2PL1zpv1Dc
t16YhjHG4At74u4/eiSCemg3pr8/3Ppuo7U8oKfBa7qMPIUrmQI1DhqZk33I
5k31tIt0WxUBl2043+hS1rMG3/WV27vb0aqrcqVl90vVKlwi4W0a5GO5egdO
U1BpIL1kxwUSwfDnObYVJebpgq+5jR8JGUZr0WTVvW2DlYIUPsdDo5GRoSOd
bHoUVTJGa6EZRMpfWdM/t9YIUwnMW64MUZqo7hpf2+JGtk2wlCBDwcNL7PO8
Bjb7wmkqRr0367PmIIcizXTBtmyksDhJUaKRsAO0Y7OXnLC9g07AC0xrSTZ8
1NsMQAPjbPWSfWPq0SaD1mjFeJRiwnhUiTgCA9+3C4xpiXdZJRdHrSn8z3ct
ex4oWyjZYHG0camGL6zyQY9LBpooyPjgYVDkkvF65nVxFYbBgSa00jpczHFz
17RlgwLXONsnJR6UzSpTGzw9BSGXK9FR2Ujnv3SG8fFNBDExIjafGoisHA5e
nuwf7b882Hkut2xFMrYMTEWB8fCnGUgc863Qwk3H42I4nJeVKYoXHpbu4KZ8
dsqCmFcuLRbL35XKHwnqWYXCvE6Ji8o2fkCN5RbJEXPU4wypQ13emIAY8/Wi
parJyMMKizMttVPDqmszsO2L3JYq9W005LxRV1mzKpmDG/8IP80pOlWVXPa9
zAlppD6Hi9f3s28Zw63Ho1oMgcad1SifIYEt/hHhQi/QB0GE4Qq3I6E9jbNF
F5kIWirsXKqG2RZbgCGFi9xlx9OZuRe+IWwluL0MyxV1YDDCubN3AVGp7mbx
ik7wb2QBawHQctYnuDcVR5pu8ob5622kJhk94ePFdZq7qOmXMdECFNTbXanY
Y0JagZpaEQNHwmXgDn/7d0ny0QY1wv92i1qUrDl0XWQ2c2RPuRd3ffPcctKy
cdKTcJPVER+D8rpbE0vDefr5MvUwHa64TpGBH8jKKmLYH5bzIWaD0EJSFTIK
yIlBDsD7hcF4X/JWqR7TaUaOy3VTVLEhuLvqzVHkxS16nY1b1GrDHL4IrXWu
iGbUapTyoinXamqf43bweBWDbwlHY8XZFlq6aATzBEXUvM18reJ7P68orR+W
uaBEbVNAicRQkXjE5S8tqgG2DC85T5srwG4+TF67gq2cn5zgMccrwdo9syyZ
G79xvP6r6+OOG9lIngAdH5h6cX7pW5OxTMCpbFyrKVppGLX1IXlkxItH/jx1
m80rX1Dbzlq17XCqiLItJe74DjVckZUyWsVjemIFncWygf1msK4oJ/ItigTh
UgdYHnMaFsaMGIqNlG5M5qZAQaTgXef1rOAgjpmrP+PdVuVjt5c1Jtg3rrkR
TNWZJk2xlArqGUjdInyaAsaRmx+Bgl/cWGa26oJ0eSCZgwvTXuc89dOd50f9
BWjd1AvU1r+AtP+49yAW0m4OlamIGOLW9YWRmRzdDx3l0dDS/aALqpQIueW8
faZmCyJZZ7k9S5fQiqESkWRAn99kRtKXOoxIHjlHo8oiyGlyDl2/qFizpFu0
hqV1hM/WfeL6hXdsgXrR6k5HZWNJ9cIb/99PuwjA8+WVC3en3an+f1zRyJZS
NHxifrueYcuphbwQ75D0Ws8sVzT2flv3JvAPeyqD4iLWtizrsp47Q8stxQ5N
PEgnGRnME9ssPRZaKW2HF0RYPvgtlDnZ9DmzhYZzL0H5drgY2h5zUxstYj+q
ijU/bMAxHnb+d3RwKzHAxyXak9WKFnaUTpqNlZdpKK0bN/s9pRf0k1aObPe1
P+SCdtLWq+01jfY6St+hm/Rd9r3A4fip+euiXtLJXxd86H7p/EXhm/KY3/7h
3ZYafmg97LpLcNiX9IvO2FWNdI+Me/l3zIjjAWHocqdl1/N3YbvixPb0DT9r
9zj/RQR69+rCeIYlQeGTz78j8Nsd4w8M33rit2n1HeN36tZK0rympo4ot9jc
IsXS8soR4ZFrNKRkWW4rI5TXc7154gg2Si1q18jllu6xyTVykXFRNfKZlulF
a7mpClKzjiYW1UPq39ruz2QFx2GGM2GOi+7lEtmMyibpYixXFxdMRoBY6K2N
yY4ZBGQBv4hw2OPw17ifnYrZpVW7pa0RbNaM2BCP9Cib5UPlobLuds/FES0V
HC1IssippR1SkuKY11Q7ZHpOaJpOnQNdiAesgzOLJl47U8Z74xsO63LKXiJ9
I5o1zf0Y8oYXbqel94/2hDU7w/1Tc45i+I6BB0Yv1SYNOrixXcc9q9u69hZ0
DKAYXEzzYQ7b4JIFTewWewh2ezW7o3B2JOeV/l3AM0xnXHoKz1frmVYojOAd
fUlEyWSsCPWj8HpVMysiYp7e6KQK654nntNFnmOFV45lkK23xwh81+yZtRTB
tlmmgc4SLWrZINMLaXRoO1z1slOo10MxjmZCqdJNy9JMf/n/eJLJ8xuC2Zoe
8g8kmFkLwQwzmtvopQfRXmdnbIokN2ivR0XVCHn12VQ03qxHthmxtt1GS4PN
RK8yXjsiANkVW1NV3dsolrl7kBpa5ZngUL5QPQWXshMb87fUNRBDZdNCTLiL
VsOGPY+N4e4wGs10miceIVBydkqdxRcdYto4yltNs8uwLfjuX4xxPdF4qY2s
wTLRLDrKhkxOU05xUw0X0SBWBXeCqqdI1B31Vq/IQKNT83vcZievolOyCf2q
kOivhpfhX4zhxg92KZbbUem90hxaNKhI2gqxzJbElYcNgxMnsIiNKY3CDBN1
ERYwf3mjLwrdIpuGEaa8S2AlQBzdsAhnrH8j3kLVEEpRCUIJoROBNa9Oy/Os
NuRSRYJ5uTSeewlx0pYEAOw0hSgsA0Pxloss84ZM/F0VmrRus1eZVBex4Kwn
oC1xMj7R7YTpduVMo6b2AII0Fw9Mar/ypQAVjFp6vm4zSEBZVcCpC+yzalqE
Tv7Beq/wyEzCkuzOptRqV4zNOzHJPevUZRVxBU7QfCnNV6lgBlPYqs1aF0/e
uFPmyZ3STu6Uc3KnhJM7ZZvI+Co1QHwa1jTNd757h7wAldvQGM3lSiw2FunR
2g0pD40h5dCbppFaEPNsi7zdZmRxLlVD6LrJsQTFxkztgoZxIdlLgvZBgqkC
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
meuIufLKwYQu0dudg++TF3CqALMW6wAbH8XZM2o4ToJ4v0Wu2bxyAl2ja5CY
ckY2vtwWLlffBKO/v65MMwuT3tomlzUjE5sFP0BM+5aEthgY1tjCIbZYgtuE
4WYi0peAALt6xXMOy56wuZzduVTsi8yvNuUUgZDOqjnbREjkePbyqJ9oN7Dx
21OWSXObi0G2g/MNL/gOCxnBvZHbepyNeGl8R0SnM7KcLmIkUBF6TMBB7ZB2
y0PYlBBO8sZ5Pn78TzqDb9HLvWJfkJ5FE5beKrYIkTzWQWMFJU6bbnJW2ALi
Zg1C8VXAHdg53KcCE0boNZZFuLlAF71S8AwWBOdB/3j35cFTRphHWw82pcjR
oH+k/vDdxgPqjPfUZPlxXNe6OHzP54BIYzr6EV9ltnHz2kHLHpMWY08OFsfD
Ptj4ViHo/QX4aV5ak0CLIfpwkSZTCkOn8waYN0lH4/xS3Ofp9FKEoxJNA0hh
8+yaglwBdZCz5ENAPRCzS5Rs+71kNy1nGepF68nL6hL+sgsccAp6w2g9+SGb
jsr8El4uhpcX6bxiY83+9LxI3sDfrGcoR7PqbF6boxzOiaLiDcej47gnDkcC
pDxD+7gzIvIaZYDroCveMzxaWG4x/zWHFe0Vk3wKKzpGTwWvZveiRNyB3RyB
/DkaY/zsEd5fMt0CQEhy7VeXBXDC95dWoMYaJ1k2M9PbZgATmp7TSoB2U9ny
I6HSKPwXu0GfOtkZObVq01EcB3ChGt77jT3+UMDLg3mePM9pqB9Az83g0bM8
xZPHMhOnsF8VJVhR2Rn+kVOOK1uTq5L09DGFjTQrIn37eAvxjy1ZT9CKPk6r
C9C4xsZOZeL2xBMThvR0yXaxqovgaB8XCyRrYUpZ7sWzGlZT2XI6qRpLhR8o
rQ8EZB20SuExXuSqVEMzfqAKg86JAMLcuGQs/vDg0YPHAHNqq0we5T/5/5KD
l8f97eTrn79Gz4jqIILRAwC+BOGXBB/9qRNEy3IkZXbzbPbup8Hk+U/vrkZv
Dop3P+3Xw8nJh9Gbk19Hu5vXw8nGo9Hk8ebbrYvxMN9/BO9fDO8fjIfTwex0
68HPnfxl/uzi3dbJnN9+/CB9szkb/XCZP9999uu7n57N3r65rk+nJ/XbycnN
/vsif7HXv3nx66vNg/fDBy+P9qv9ycOfO1enk4Mx/vV47+DZ0ft3xfCHwf6r
jfHgdOPhg7dvnuYvX1/89Op44/F+fp2/vf9s/Panwfjd7ubVKaxp//3+9Yv3
+z936hd7r+oX79+9frH3+tGL47fw3+H84Nedh29ynOfp9N2bhxvPf3pyc3r/
3ezd9yeX/PPF7PTNeCM72rx592b0c2c2vD+4eQtweLt1cjPahfEvN58dvd7f
SC8P9l6djGfvNp7eP3r97Mm7jfEPr04u3h38+ix/O54dvHrz+IdXGwcfBpsH
P3cODvbGu69eb+4dvx6cZP2TR69Onu2+23j45tXl06vj1wfli+OTwen43aO3
J8PN0+9f/Hr800X/pP/0xavJ6OXJ5bMnbzc2f+7sDi4fXr/rj2CEwaNXrx+a
EQ6OXz+rXk8+vH+x+az/+mTw5N3rd/df/DA+GPRPHsKM70cbD/82OB4cnPRn
P3cuBtPhdXa52R/8BG98f3D/eDJ7etDffH00eXow2Bs8GPw0e/L68tn0GGAK
uzh4tVV9ODh5Oj+Zzi5Ofj2p3v6KO4I1vH71+oNZw3tYw/fH0yeXg82TB4ON
wZOTDRnh9SaM+uRoNHn202D6JD/tz6o3759V2WTwc2f/aHLxPr18lsLXB4ON
Zw+Hr0fHx8evHr56M3o62DjYs7//NHp61O9fH71+uvtqAuu5rK7S4+HD081n
P3fKo19P3gFGvXr368XJ6839B8/vn/z64s3g1cmbcXrU39w43aqP3/3w9Dms
fnI6Hv36avKqHJ48e3GwOTp6N3k3Ptmqf+48BLzNTzdmk6M3H6rRT8/ep8f7
m6Oth0X6+vGbVxujv737abZ78Hpz90V/9OTFycnl0fjp4GRjc/f169Heq/sH
cPpPf+6cDC6f3Yfd7L7bGt3A6T2F3wdvNwb7g/7TQz7Ni8HLPuDL+4uneHav
NvY3YHfHgEv9k/H+NUD+587TwU+jVwf98eXbrc03p5Onb4/fP3l/+vrdw+On
F0eIH69/Onn/YvKhejsevYGb+vDFm/Hlq19PNt+ML45fbVzMjyYffu6k8Maj
d/2LH9PvD2Yvjp+kb/oPro8nl5vZ5OlPJ9NBCvB4dPx09OOL/of/t723bXIU
SbpEv9evSOv+0r3WVQMold35rO2alSRAQglKAREItq61IaAKCZBIiUy9jM1/
3+MB6CUrq7pmnmfX7N47ZjNTk5lSEOHhfvwcjwiisrx9hj4+oI+ryEs3YXY/
ZTQiFXMxgd3VaRb0QmbcznW7H2rl3lS5YrHSNPPegUuWlHBTCVU74EetO5X+
eGGFJvur3sAi300dZq8cL+25mjX2i9icF/HaL2CHYy/z5VjnPHh5UOKhu/z4
gpxy5wCGmbI7hPBIh6cb00FMX8StVQZKl6I+Q/SnhBbBLB/Hcu7Ph9bCzIKN
45UvIS/9uVot4XkB96S9yxHTejQwQruwH/2ltvO45bOiXPB8LXlZkHGFVyyz
LU+3n/zc7pmwcKBXC1sqZc5TJ8zkKhnyT++CuavNfLd362m8CvXKMbVgxwcj
sq4Xdkp3PktDLgXjSI43iOdszsodk+0QcbaZDyzGO71P78aByvY25z7Luul8
2PO4xh2edTcm40GSl48s457J7Q3LjQn6jBbSiVMYG2tmBeZSO/oMIxrbquzz
ovKSDH1Q9ms8g09mPRejgMfxrZVTC4EVHpnirUoPLQARuBHO4tI/Gtt5Aa+r
7GUv8xCffic3gOrHSMmXjloqwBwvLOwhnmCExX0JL9s6ilXZecrxtKnP+Q4O
uAuH6MvS5IYXqLYTcktzMovNZ70X39uHmOFNoAUeV4OQF/u179mem8ccqORx
KbYsbs1gl5ST7/oBi2SMosIo+FwrJwEim/N4NtdlzqT86HjdSaStD5aXZo4W
dL3cMqws3/id0jOVdMgk9MUztVifuvbC7qQuL7Kd5dkzZ5Uzu9jvmdINWZ4z
DwjAjpqNPupe1tWoRdP7Q/Yxd6EOrzsk6r07d3PNLWQHfZnFQ+7yZa6j12FS
cM/L7WBemBJ3exNY2otUeQFUWzOeenNF44EG3GX4jeN4t/tAD+xHV6Kc2ObK
Y+jFzw8eZdLpYpJvFy6me7pEzElWzxtqKyCEAbT49G7lwC/mwCNXtnsOMDbo
aOtQgZ9omo34fZo6lcUyuWNzLbDxH8YqdTrrwX58bHrmYU6+CyTo3rlc3cWS
1fGY7SHSCaEcrmuIhr3FirhjF3HTgq1O3Rxgmk5MjY8oD9gu+qJ4WexFsroD
Wo2AMRPXKw3kGqgSoLmm7vCzleSIc6lrJVnecTPbMJF5mNuzEEd3XIFdehMm
Oy7wnQkE1GwH2SNSuzln6z35ZowYdlelhW91pp22T6mKHMp8RORcBb44fifW
2xZs1e7Bm0Ku2DtkKyfhue8gy5h5IMMz+14m910W95OZBj+RpAnTVjbFEXD8
9JuOzdKeqea9aRbfzofGJCjWx5AbC+tw32fefcYPWxlT/+J2yvVYwciH+T7m
iCPDPdzPkmUczOXoiAhT0Qc90XnH1YIiyayDxbqKPVCPXqHp/jIuokJ7Hnem
3XnHDiwem6G6hnXDvLybYi7gv8OpCy9SbfRp9BLLmkb+4OgxsDkQGdjRLAsj
gE3i1TQ3lLk8BWtDhs3NwldclduhxjqOmj6NO8H4QZl2HGT5QBU5esRcW8Ns
A4bSXYInOp10G6mqMtFhRRZ8egeoSHlcdA0+COy4E2vAWZGt5shk+HkQyLnh
YG6myHYcdoulvDNV4sBh1YuX5XfhElgnem1rVg//OozlK8xu11qlsKD9wsBh
nJW1mqv3psmDW0eNXyLZ7kYq37MiuDM1TbEojjQ29CX4rcGY5SXe6GAv8zu+
tJ4nLtvMlf0qyIJxIJeMS/zO0m3XZ/4xHJYO80ZHb8X75jLHiJoItByW95PM
HkwlzbeVmHoO1oN+8tQPs3T3Rk6E1cueycjr/pN+a08IMdVLv/VyLvI0vqXF
Uipih+tVB/GuJWBpsN2jrUoHrqRLN5Ofwk78yFXE9C0oJHp/r7quMQszdQN4
t2KJ2018P2AkyP6cO0uNuANxhQl4oG0O40E9n4hp20EfWG6nnmZs0cIqloJV
04Jqq2qX06iWPQ7MvfMZ28d5OeQrywYb6HBgElcRASv/jErArSuUsqbEkDJ4
Abe39rFXxPL0aCr3eZKv93FRjZhn5OADUBNzb72ZFvfeWC71SCmXQa51zNx+
DKVyGqr3G1cJev6Kdf3c3Ee8LCfDPLW5fzsHV3eU3YuVw198vwhuXUXuhyvD
iQrLnx+NIJZLzIPVxI6BPmnFROUD2Ih43OhBIkTQ2tgDr3sdfVPJ+Eb02eTx
wD0ti6TpS7j4YxPIX14sBay576z40unf+3PvjejzRort5ot5nkrzRVVCJxg8
u79NBtOXaJUXpgI2PyOUEtGm3IeI4SfYnXxWZbLWi2VDcCymd/vmMNrDynJU
pODqZSdWgidg0srW8zLRwXe5x/Yg5+tuwG67oXK/RoLjYaaVGHfH0rLOfGjf
ciWfxlIlmWzdnRdlN8jsyXzArZhxdVogjqpEG0G/pRhzNWQzgz86Rvx5JrWH
8y4PWf6vt45Xkui8tTzznPYWFaO05zOrTXtIenHP07teuAIgIZXKvbkUX4C1
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
GPEfx5iPR2ve7SRrxf/ijNzVeOx/eue+DE22k3b7+118eLb40lp//PJw2Fqj
L+pLHuVV79vvhzixsZq9vE3HvqJSJ47zLzGx32p6tNhun5P4RF3qe1LOd4md
+dL5IoL/91O4b7/24JLCdSTp/w8UjjFj4czMveUaR6DyCz/GTsI101Otl+D4
VxQuq8QbzEDhzDvzGIHC+c/m8cvh3xTu3xTu3xTu3xTu3xTu3xTuv5TCxcN8
R0ntnCLlp7hjbsKVRanprdLbp3dvsTwnffL+eNbs7PnjbHRcfkx7t/N1bpqr
OPJ/1/2nzni+vr89vOjVsh/u1VlnCNPcYRDMVY0/s+d8Kuu/D1Yhu118GTzG
TK8ifv+Q7X76x28/tMZmP4kKvncduJ6WdczCWHjZNwO3zi0/mlnIQb+dW76R
WbS8zm6n97IjWC7ezK7Hx95dHai0NQYOmDEJ+XFML3SxhqmWZJrTZty5JA9o
2wqjhW+PtjpbHnKsJN8CCnquerHwnQWTSLeHfJYO4bCztgUXrZqaofh5rCNM
P73bOsX+8n3itKG/fs3dKm95AngEv+QNcGg+mro9Y4qQRH8+vVMcemle/d72
r97aTq+ci45axjReellqxfr9hin23pEjOSi6s0gysnFHo7euDuIZK4Ii4PEm
8eLcL+7HQZZvARYHX8kO1ix+DnWAXWYNwwKcZcnb7Sf1K/noLeDWNNfql/Kd
X8nXF1kLc2TjZ1pro7ehulK7XJ2KvGnXXtG3qAbeQeZu1raMPhrusIFtBLpV
8aKb0nqfr8h6wvZ+zXI0WbxtWzdmfMWXyN1loJqf3sn0rlgmWaN5dno7fv1u
fFfdifcuq93SmsHT5EACbMlJtp85y545d/k2uNgS8/plgTnV53Wqzyf6PpsW
aRjRe2WXfOwOjGmUxwMEt2sVqerxaJ8weN0j5sHxZ3wRqSYYlmYg9xsh+ByT
ykUg7Z8DJV34iB1Tt5dIepwXAA/x5vYe/i07CW0XDU3N2prFFylRcx9z/68A
CfzlG1V863Y947d/8LvnYjs0x1kaO05h+FrF53fhl+WgozzPylGu7++euPr7
IJXez4GxqW0flqt9+Yc04n9qB9n+OJmNRsdtZ/pHf2V+6X358qNy0YNmgwxy
0KV/Vjn+9iOC75vy8uebIT673oir3ftpuKLrzv4XKR8V7a03/0F3oIVbuseH
7l78f27+/jMU0p9p/SU08LhZ45v0ZbrIs6zwb5ycLy17906jjo5UV7uJN+Hn
6kb64+b9/7z6xb24FRt8aZ2/iPcU0l1eJMIS0QW6xkZI3O3pgrvTNYie/tC/
+aXWm82L/5qLVdFGTm2Ii/MgKO2EboiVG8FJ/1/59eKmGnxCXDAobtja0t1T
zc1FZX1f2H+7eS7r+xfFKxCTFV1u9u6N0f3+enR/XI/uR8e0rRZ0e1VJrwSs
P3iyy6+X7X1ebLbV+e6d06sKnTQp4TDx6XafbXstUX2J1qN98/Mf3dZaH62R
+fHmCxzpef7GoO5eD+p3MSjR09qGdaN0y2CxfjnfS95UBNqb1uo+thd50lVx
dXcXdIVU9Cxuq6KbdEh41/eL/dbegCtuj4NFrlqiyQyfv1xcRHT9XColRPlz
3N40/vodjzDKLkGj4ba5cCuBoy/CL5uwoCnfFngi9f40Z9F609ypvn3DTN3X
ZroTZmLCc6hr7S2Op0up8NcRze7Nz3e//1ZfU5usmmu7m7sTk1Us7gytrx/d
JGV9uZG4UJmifCFctczXh/pSLLQoxkytiGsD6bN0ydi5ofWraz7bl06SGwpn
Wb95xSKaPt+v27jVteM5an8wsm+ScCOu5Baf+IVeHLpYrfP1l8NNlIeb0wVr
mNyLaBC3TtXz+utfP2k0cf9rnvT1LN6+nsWumEUgb3ubW3zlrWn4kohL/pr7
27bNxWbtNVv17bHizi/hsHTxqIAm+uE85ZiZ+iZKcUP3ovaK3xU8+WNMk/mt
SwDpMc/ickVxZeiP33DZPqKLR/Rra+Extde9p+vqxO1pdbqpr9TCmJ/re+vO
3+4I0yDoxS167e2t4s7yJro3iy9fkvY+wPXNlsw1x9iRvilviVsw6fsNLuzF
jbbpZv38JQX+NdPXPk6izoo0Fd9cTjdZ4Xz56/XNr3jo9+5G/43Cf4EgWjf3
VdJF6PSlubhgr/7CqQd3d6cZoaA6XyGYJmFM9/uGAI+EcPyX+pbb+P169atA
XNW+vDfzM2ybrugeXXEBbHg173eXZj1lHPp6/2PvRltvngvqddvbpL4lWdwc
/f7RNk9zH4pradtGaabV9s7LZLMRIBLX95u2Xtv90P0gn77Suf8N37u9/N43
L6PERJabxUsYvf7TqbXu/RnvutL1Zd1ikJvmnjYKm/r27qS9QP3qJsNzM7e/
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
QZPG/zetOzJk/WcCAA==

-->

</rfc>

