<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.29 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI) <xref target="RFC8995"/> to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar; the registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
First, the IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevIDs do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security at the application layer.
Another reason is the support for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.
To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>. 
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data. 
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) because the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., NFC).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.<br />
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure. 
It <bcp14>MAY</bcp14>  be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols can be used as long as they support the exchange of the necessary data objects. 
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the LDevID by the registrar via the TLS handshake and includes that LDevID as the "proximity-registrar-cert" into the voucher request to allow for the MASA to decide whether or how to respond to the voucher-request. Until the pledge receives the voucher, the registrar certificate is accepted provisionally. 
In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and takes the LDevID provided by the registrar-agent from the PVR trigger message and includes it into his PVR. 
This allows not only the MASA, but also the registrar to decide whether or how to proceed with the BRSKI-PRM PVR. 
In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>. 
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER. 
It will also be triggered for processing of the responses and the generation of status information one the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge. 
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object. 
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI. 
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="560" viewBox="0 0 560 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,320" fill="none" stroke="black"/>
<path d="M 32,376 L 32,576" fill="none" stroke="black"/>
<path d="M 32,616 L 32,696" fill="none" stroke="black"/>
<path d="M 32,712 L 32,736" fill="none" stroke="black"/>
<path d="M 32,792 L 32,864" fill="none" stroke="black"/>
<path d="M 32,920 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,368 L 168,576" fill="none" stroke="black"/>
<path d="M 168,608 L 168,688" fill="none" stroke="black"/>
<path d="M 168,720 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,864" fill="none" stroke="black"/>
<path d="M 168,928 L 168,1040" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,496 L 312,576" fill="none" stroke="black"/>
<path d="M 312,624 L 312,688" fill="none" stroke="black"/>
<path d="M 312,720 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,864" fill="none" stroke="black"/>
<path d="M 312,928 L 312,976" fill="none" stroke="black"/>
<path d="M 312,1008 L 312,1040" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,320" fill="none" stroke="black"/>
<path d="M 432,384 L 432,480" fill="none" stroke="black"/>
<path d="M 432,560 L 432,576" fill="none" stroke="black"/>
<path d="M 432,624 L 432,688" fill="none" stroke="black"/>
<path d="M 432,720 L 432,736" fill="none" stroke="black"/>
<path d="M 432,800 L 432,864" fill="none" stroke="black"/>
<path d="M 432,928 L 432,944" fill="none" stroke="black"/>
<path d="M 432,1008 L 432,1040" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,320" fill="none" stroke="black"/>
<path d="M 536,384 L 536,496" fill="none" stroke="black"/>
<path d="M 536,544 L 536,576" fill="none" stroke="black"/>
<path d="M 536,624 L 536,688" fill="none" stroke="black"/>
<path d="M 536,720 L 536,736" fill="none" stroke="black"/>
<path d="M 536,800 L 536,864" fill="none" stroke="black"/>
<path d="M 536,928 L 536,976" fill="none" stroke="black"/>
<path d="M 536,1008 L 536,1040" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 160,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 160,320" fill="none" stroke="black"/>
<path d="M 176,384 L 216,384" fill="none" stroke="black"/>
<path d="M 264,384 L 304,384" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 256,432 L 304,432" fill="none" stroke="black"/>
<path d="M 320,496 L 408,496" fill="none" stroke="black"/>
<path d="M 456,496 L 528,496" fill="none" stroke="black"/>
<path d="M 320,544 L 392,544" fill="none" stroke="black"/>
<path d="M 472,544 L 528,544" fill="none" stroke="black"/>
<path d="M 176,560 L 200,560" fill="none" stroke="black"/>
<path d="M 280,560 L 304,560" fill="none" stroke="black"/>
<path d="M 176,624 L 216,624" fill="none" stroke="black"/>
<path d="M 264,624 L 304,624" fill="none" stroke="black"/>
<path d="M 320,640 L 344,640" fill="none" stroke="black"/>
<path d="M 392,640 L 424,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 400,656 L 424,656" fill="none" stroke="black"/>
<path d="M 176,672 L 192,672" fill="none" stroke="black"/>
<path d="M 288,672 L 304,672" fill="none" stroke="black"/>
<path d="M 288,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,736 L 192,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 160,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 160,864" fill="none" stroke="black"/>
<path d="M 176,928 L 224,928" fill="none" stroke="black"/>
<path d="M 272,928 L 304,928" fill="none" stroke="black"/>
<path d="M 176,944 L 200,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 320,960 L 336,960" fill="none" stroke="black"/>
<path d="M 512,960 L 528,960" fill="none" stroke="black"/>
<path d="M 320,976 L 352,976" fill="none" stroke="black"/>
<path d="M 504,976 L 528,976" fill="none" stroke="black"/>
<path d="M 176,1024 L 200,1024" fill="none" stroke="black"/>
<path d="M 280,1024 L 304,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,960 524,954.4 524,965.6" fill="black" transform="rotate(0,528,960)"/>
<polygon class="arrowhead" points="536,496 524,490.4 524,501.6" fill="black" transform="rotate(0,528,496)"/>
<polygon class="arrowhead" points="432,640 420,634.4 420,645.6" fill="black" transform="rotate(0,424,640)"/>
<polygon class="arrowhead" points="328,976 316,970.4 316,981.6" fill="black" transform="rotate(180,320,976)"/>
<polygon class="arrowhead" points="328,656 316,650.4 316,661.6" fill="black" transform="rotate(180,320,656)"/>
<polygon class="arrowhead" points="328,544 316,538.4 316,549.6" fill="black" transform="rotate(180,320,544)"/>
<polygon class="arrowhead" points="312,1024 300,1018.4 300,1029.6" fill="black" transform="rotate(0,304,1024)"/>
<polygon class="arrowhead" points="312,944 300,938.4 300,949.6" fill="black" transform="rotate(0,304,944)"/>
<polygon class="arrowhead" points="312,928 300,922.4 300,933.6" fill="black" transform="rotate(0,304,928)"/>
<polygon class="arrowhead" points="312,720 300,714.4 300,725.6" fill="black" transform="rotate(0,304,720)"/>
<polygon class="arrowhead" points="312,624 300,618.4 300,629.6" fill="black" transform="rotate(0,304,624)"/>
<polygon class="arrowhead" points="312,432 300,426.4 300,437.6" fill="black" transform="rotate(0,304,432)"/>
<polygon class="arrowhead" points="312,384 300,378.4 300,389.6" fill="black" transform="rotate(0,304,384)"/>
<polygon class="arrowhead" points="184,928 172,922.4 172,933.6" fill="black" transform="rotate(180,176,928)"/>
<polygon class="arrowhead" points="184,736 172,730.4 172,741.6" fill="black" transform="rotate(180,176,736)"/>
<polygon class="arrowhead" points="184,672 172,666.4 172,677.6" fill="black" transform="rotate(180,176,672)"/>
<polygon class="arrowhead" points="184,560 172,554.4 172,565.6" fill="black" transform="rotate(180,176,560)"/>
<polygon class="arrowhead" points="184,384 172,378.4 172,389.6" fill="black" transform="rotate(180,176,384)"/>
<polygon class="arrowhead" points="168,864 156,858.4 156,869.6" fill="black" transform="rotate(0,160,864)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,320 156,314.4 156,325.6" fill="black" transform="rotate(0,160,320)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,712 C 26,712 26,696 32,696" fill="none" stroke="black"/><circle cx="168" cy="368" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="608" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="432" y="340">~</text>
<text x="536" y="340">~</text>
<text x="40" y="372">(2)</text>
<text x="88" y="372">provide</text>
<text x="136" y="372">PVR</text>
<text x="160" y="372">t</text>
<text x="236" y="372">infrastructure</text>
<text x="240" y="388">TLS</text>
<text x="312" y="388">|</text>
<text x="276" y="404">[Reg-Agt</text>
<text x="368" y="404">authenticated</text>
<text x="264" y="420">and</text>
<text x="332" y="420">authorized?]</text>
<text x="232" y="436">PVR</text>
<text x="312" y="436">|</text>
<text x="276" y="452">[Reg-Agt</text>
<text x="364" y="452">authorized?]</text>
<text x="272" y="468">[accept</text>
<text x="340" y="468">device?]</text>
<text x="276" y="484">[contact</text>
<text x="344" y="484">vendor]</text>
<text x="432" y="500">RVR</text>
<text x="436" y="516">[extract</text>
<text x="512" y="516">DomainID]</text>
<text x="432" y="532">[update</text>
<text x="488" y="532">audit</text>
<text x="532" y="532">log]</text>
<text x="432" y="548">Voucher</text>
<text x="240" y="564">Voucher</text>
<text x="40" y="612">(2)</text>
<text x="88" y="612">provide</text>
<text x="136" y="612">PER</text>
<text x="160" y="612">t</text>
<text x="236" y="612">infrastructure</text>
<text x="240" y="628">PER</text>
<text x="368" y="644">CSR</text>
<text x="372" y="660">Cert</text>
<text x="240" y="676">Enroll-Resp</text>
<text x="44" y="708">2)</text>
<text x="80" y="708">query</text>
<text x="136" y="708">cACerts</text>
<text x="188" y="708">from</text>
<text x="268" y="708">infrastructure</text>
<text x="180" y="724">--</text>
<text x="236" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp--</text>
<text x="32" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="432" y="756">~</text>
<text x="536" y="756">~</text>
<text x="40" y="788">(3)</text>
<text x="88" y="788">provide</text>
<text x="152" y="788">voucher</text>
<text x="200" y="788">and</text>
<text x="264" y="788">certificate</text>
<text x="328" y="788">and</text>
<text x="376" y="788">collect</text>
<text x="436" y="788">status</text>
<text x="484" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="112" y="852">Enroll-Resp--</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="168" y="884">~</text>
<text x="312" y="884">~</text>
<text x="432" y="884">~</text>
<text x="536" y="884">~</text>
<text x="40" y="916">(4)</text>
<text x="88" y="916">provide</text>
<text x="152" y="916">voucher</text>
<text x="212" y="916">status</text>
<text x="256" y="916">and</text>
<text x="300" y="916">enroll</text>
<text x="356" y="916">status</text>
<text x="396" y="916">to</text>
<text x="448" y="916">registrar</text>
<text x="248" y="932">TLS</text>
<text x="248" y="948">vStatus</text>
<text x="360" y="964">req</text>
<text x="404" y="964">device</text>
<text x="456" y="964">audit</text>
<text x="496" y="964">log</text>
<text x="388" y="980">device</text>
<text x="440" y="980">audit</text>
<text x="480" y="980">log</text>
<text x="288" y="996">[verify</text>
<text x="344" y="996">audit</text>
<text x="388" y="996">log]</text>
<text x="240" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: <bcp14>MAY</bcp14> possess/trusts pledges IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons.</t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="172" y="148">pledge</text>
<text x="264" y="148">voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="116" y="212">pledge</text>
<text x="208" y="212">voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="236" y="244">enrollment-request</text>
<text x="128" y="260">(empty)</text>
<text x="124" y="292">pledge</text>
<text x="228" y="292">enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data" 

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge. 
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA. 
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification."</t>

</section>
<section anchor="PER-response"><name>Pledge Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. 
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation 
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation 
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID. 
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding. 
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher" 
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation 
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTPS connection similar as described for the PER processing in Section 5.2 of <xref target="RFC8995"/>.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="216" y="260">enrollment-response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation 
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation 
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation 
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation 
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='13' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-04'/>
   
</reference>


<reference anchor='I-D.richardson-emu-eap-onboarding'>
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname='Alan DeKok' initials='A.' surname='DeKok'>
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='2' month='April' year='2023'/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-richardson-emu-eap-onboarding-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y961YcR7Yw+L+eIgd/axlsqgToYpuv+3QjQDZqCUkFQrbs
Hp+kKoEUVZnVmVkgLPuseY35N88yjzJPMvsWETsiI4tCVp9ufzMsX6AqMy47
duz7pd/v95q8mWTbyePh0d8Okuu8uUheTrLxeZbkRTLM6llZjLMqeV6Os2SV
Huq/HD5f66Wnp1V2Je/hR71xOSrSKQw1rtKzpp9nzVk/LfJp2j+t6su8P6um
/Y1vemmVpdvJi1lWpU1eFnWSFuPkeVqk59k0K5re9fl2snN48HwnefNtb5w2
MODWxtb9Xt3Agz+nk7KAT5pqnvXyWUW/1c3WxsY3G1u9en46zesaRj2+mcFT
B/vHT/zxbpt8lDbbSd2Me7N8u5ckTTnaTj6/yerP4Y9ROZ2lo8Z9UN9Mq+ys
Vh+UVeN/AkssyiY/y7MxfFiU9FRT5W6YdN5clNV2rw/whhePBsmTKs9qeI6B
edRkZ2dZYT8tK9jPUY7LrZOdb+ETcxLyIc+QZTDDi6Yp+9+lF0V/mBfnySPc
RN7cbCfP50U+uqA9jWGOz7/e/Or+N7zHedFU8MS3WTVNixv4KJum+QSBQusY
nOE6/lrzXAOACTwyr/Lt5KJpZvX2vXvX19cD9fU9s7PjQfImq4qssls7viin
ae0+/VdtraF19K9pHR+ztf1B8ixL3cb2J3nZmI9oV7t5PSqToxuA4lRvYwhr
bXL4K63rLPnK7uJNOpnkdTaZZIXdyu53/a/vbzzQWzmC+/pLVk0Ai+Hj2QXd
jZUvH2wmDx4kX3/1dfIN3IwVt9MJLOmvI1wLbU+W/3xA60ircV0WdhPP8aNs
kuwG3/IpwYzZBMCYHJVnzTVcq+RNWV3WbqrpqPoSScBfa/PoYJRqgBp4qq/v
9UYlbCw/nTfqSgB09/J3lw669WVpPqHFHJTH8F49nwCFGN0MiolbRQbPDsbw
7F/hRIKH+gYNS4BgVtfJ/ugyq5rEDPtk3syr7DrLFaY02V9H9eAsnQ/GmR3g
edo0Fzlg8t/Kq7SpCfvkBYLApXw8KLKmd5UV8wxpy3lVzmdCmhDVkVIm/NYH
+uOv+PIAlvIbPg2EeX66zY/1r8/vBZS1V5SA1U1+RWMPn+w+3Pp6Q3599NWj
Lffrffn1q4375oGvHm4+lF+/3nhgPv36/qNH5tdHmxvuV/vsN9/Qrwf9vYGi
9u+u6/5VOR9dZJX3LeweTuCsX//SzPqjuoq8Wp2NcNbTvN7u5cVZsKWtb75+
ZHf3ld3S1oNNs4+th+bTrx9sfGV+/eob8+k3Gw/VrwYS32za3X2zdf/ryLoY
zGlmvqrshehn03k/S2f9sjgt4SMgRvTQ/v5+/+uNrcHmzhD/BlbCbBa/SOSL
5CgbAYYle9lVPsqSgzFwIGQVFb1gGAP+3hdEL2oYZt5kSXkGRCYbISdJJ8TE
+M8SiB8gcnGeF1lW1fSy4aGbX/c3HtEndYZEHAHMw/N6kVjKwpBeWsbeT0+R
QAHL0hv5fEc+dQ8mL6sSOGY5SV5cZdVVnl1/rhawM6vyCbLyLfqQD9fM//Lw
W0dmq/R6wPg+h5UiSQDAEMHtwv57cG+KezPY+z367Gf47OdSFjGYFed4p4tZ
2lzIHtLqHMnvipkS711ajS4A2Qbm2t3DD+5N6/N7dZqe35tuVt/Mywfvf/il
eDE6+/rh/s3lxvBi3jz85ut7KxoyKyMgi/APIAfOmAB1SJGygFxUzkBeSc/O
8tFf+BU+VhRTev1+PzGQ7vWOL/I6AYlqjmJJMs7O4EDrJCsugHqRqFKDcJI8
LssG35jNkAmmIK9NS8AOwau/ZTeAMmfAW0BIGiExEwluLfnwQe7vb7/hOFmR
nk6y5NQbDuS/cYmArZOzLIXX8cOihDXD1iY3ySSf5k02Bm5UFIB7+RVwruQ0
a64zEFfSZMZSJOJmc5HJUEmVnRO7qwa9gyapZ9kIMB5wGMaDK1Wcwybx6RzO
HAEBMloyBe43Sc6qcmpH7edF3uQpzo7fridAfAFXxrhm2uE67so+XbEYi+vn
x6+BNmU0kawSgA2vArYBziRVOckGvSewTyDr9fpdRWNcfFWO5yPYS5oU2TVJ
jsCai2ad5rQw6IPYiR9eXwA9Sc7SUT7JG9gVwwDemqIwQ5KqBawCqx0nGfPh
4Fv+Gc4u0hr2cgxHDPLzKcgUF/QUSc0wwOT2wdfVBYcXgHDA8Sfl6Ts4c4AY
YBqeO8jTAFMYGxAf3ioAOJX7GlYAk8KaqjKFnTI6jxM6BQB9el6UQNlGeGi4
uqyAI5gQ5s8MSYGRG4NqdRSjzNvy+e7OgC/VNB+PJ1mv9xlcBj4Y3HOvx8cK
mGOWAy/peyHISadYl5M5QQrIFu8qS0DwKvsNMrpkFYg1zAr4uBYcABDqMZH3
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
rlWU5EurR4TC1djEPkGHbGbTW0ntxOjVtL3FcLlEIEwXcDKYWb+wB9L2Afim
5AVuY9lvd1KhFJhbUJ/VKCsUFGXLablgxdioxD5EDbAFWF06JxcmpqPW/djc
/U89e7uq95UyOjCmrukq9n5+tmlScJ1Wqjqvn96PJd2sp5XubDRLOhnPrUov
efi3OBLw8FDFMYq3tQFI1F47H5f8g62MDuuWpv4ejHERaHeenHO+KnXH1geO
NVbw49qCPDM/YOmLIEJSHDetPOfPvfBdqcrIpG5t3Tpu0B+IkooXyLAu9me4
Xqy1vStlKYIY3N1dx10694gzuxvgnpZYFI4TIkKc8TpAhFSlpeVr2l5SL4xk
5eXmRuBPZIHclMbdxjKohBqmYLbCd1lspITvtSv3qS0A1hMlDkDnAdFZzO1m
EFSpxKNngqDULQHlH5Y9hWh70xzHbiRmKmU57WcMBHqE1QokhzzA/TapJuqx
g26/SHufdgcf1cXF9Ijx+17BWEA7jVBiYn3jfk3cDFyEqkxHF1ywUUwrkfhe
GXtMYmhtqLGgjB8MOk0LkBu8FhRehcehM8eJb7GzIY0qZe7dNK8muo0wispj
sVT3xY2hYmyjZWuNuhi3NjaSF3+zIiDfSfa7Is6n+YSf9/LNfM+iY2pyoMbN
RaJMWO1+USVbgG2rAr6IX210MNEbnABcGPTNIv3UOjpOOAJ6O3meXY7qr/rT
fJr9p0tX4ivxRiSh3Z1+4Oy+s3x/PUp/szVVtQNQOAEwhrAcfMRoRqHfxnpI
3IS0qAIzyiJEKbC1OkmQ+pbBIYRSqoNbW14T6VOLanxMKhS/bd7FmpRSdsdV
LnZKyKDnhCorUsYktbCQJBH79SBVWMFWzIuW2vHVsDnArTTUIij0cZ3etNRF
1hGiK+GzpFxEvQrfsOnrsIHKam3CrcgKqwq1Yy6629oJK24pkKrWiaHKeRXk
XK6qi6szfYLtLDwaJJKu83ZwP22EDico3nbauFNz4AvFciWFhxJ6nLrKfAa1
FxF2W5IYh8V7A2vUxgWKEzqlPk0alJw1NUV2EuDcmuUG3+4fDxYqBI2KB7BR
if9M/SCkC59WRyBWHx0ir70QwzYaaNgu5xcToqdXH7/JDsuSVaUQrK1H6Zp3
87BoBBnrEpN/AbLz6YqWTsWW7LsDwkEp1IwoVdwJ8HtcAGw6+OOESgizWZxJ
8IENqqe/36D6xwhD0Jbfl7s7u90m3zZuL0SuTlMvlzUX0iN1zY+Aqk9uvLAB
JwWJkTSUgO5j5jYnctX1HBX8zqwiYyvgHPZsHLEUWGJobFSWuLWoD8W4pQWx
ogkxrqnPKSkquxVU4Wp2cjgtmdCx6oMuYveFtZW1JEQ9UnDN8T1PFbQPCvVa
ZRj6Ngxexi4volKLADY7zibUYaGhvuwhcOKWYxHH+yKLhU1xj8vElJN1H9vm
fVbB5KLjgdE+aGtsS5MTIsxmKTAUrJRQ2+odXvaZOUnOcTOLsAqF7U/g1Y7X
XInj4lrNlG8rL2/TU4uYisrZ9C5TuiVax6txm+LTrR+vQnXvV3NtYnU36ccr
0N3zSmF3PL/jKnIv9bwqwX3n9S8cOkl+1LBVlbJvfc+gcu3KU976ktuSrYHK
dWiFApi1tGv1Lj+mq/xra8Sz4qxqJcN9JvRefmz411TG90bV+zC7CEWH5KP2
8Sc1YpQk/S7YSHfnEDS/EzbeqO1t7O6Q5JCsmsu6dmfQLKhje99xXIuZrqjN
hWn4EWmVEdDfLoZ7fOGqAIaSv3XItOwyBl/YKXf/0SOR2UMTMn3/cOvrjc5K
gZ4yr+kysh0uagrUOOhpTqYim0I10N7SbVUPXLbh3KRLGdJarNnXc+9uUquv
qpWO3S9VtnCJ3LciSM1ypQ+c0qAyQgbJjospguHPc+wwSszTxWFzRz+SQ4wC
o8mqe9rGLQXZfI6HRoMkQ586mfcowGSChkMziFTCsl4A7rIRZhWYp1xFojRR
jTY+t3WObMdgqUaGgoeX4+c5EEwXH6fAGEXfLM8ahhyGtBMHu/KSwjIlZYXm
wh6Qjs1BcsKWDzoAL0StI+3w0WCzVZuGytZS9WssGkzGH0zA9JrKaJvCqvhl
0EC+NUgOjL1IP9MZ8hgPdUwYA2sRZGDg+3ZvMa3zbhuk3lUUQ+j7pz03lq22
bPA/2v1UHw2s8sGA6w6aUMr44GFk5ZJBf+Zx8TeGEYYmPtN6bQymcOu1ZSML
1zhlKCXulc1qU2A8PQXxmMvZUe1J5wR11vXJTQSnMaw2LwxEVl4OX5wcHB28
ONx5JvdzRdK+DExFO/Lwpx2NHHPQ0MJN2+RyNJpXtamsFx6WbgOnHH/KDJnX
LrcWa+hVyqkJul+NaoDOq4tKRX5UjuUzyRHz4uMM6UpT3ZioGvP2oqWqychN
C4szfblTw+QbM7BtrtyVb/VVNG69VZxZMzmZg7sHCSfOKcRV1W32XdUJqbs+
b4wXCbRPGeuvx906rInGJ9aqwSHRMf4R4UIv0JFBhOEKtyPxQa2zRT+biGgq
dl1Kj9k+XYAhpQv/Ze/VmbkXvjVtJbi9DMsVdWAwwrmzoAFRqe9mQ4tO8Aey
qXUAaDl7FtybmsNVN3nD/PY2UpOMPuHjxXWau6jpl7HzAhTU030p+2PiYoGa
WuEER8Jl4A5/+6NkCmkTHeF/t40uStYcui6yyTmyp3yUu77Bbzk523j6SS7K
moijQrnurXGm5YH9eGl8lI5WXLvJwJlkZRXxDoyq+QhTSmghqYo7BeTESAng
/cJgvDd5q1TU6TQj7+e6qczYEvldCego8uIWvfbIHQq5YQ6fhNY6f0Y79NUn
uWgVtsrdxzgtPCbFcFvCTVlzroYWK1qhQEEJNm8Xn6vo4I8raesHdS4ocNuW
TCIRWCQXcfFMi2OAJqNLzvLm+rGbD5PXrtwrZzcneL7xOrJ2zyxE5sbrHK8e
67rA40Y2ksdAwIem2pxfONfkOxNwahsVa0peGg5tPVAe/fCimT9OQ2eLzCdU
0LNOBT2cKqKfS4E8vjwtR2at7FzxiKBYOWgxhmC3GqxKymmAi+JIuFACFtcs
wrKaEduyEc+Nld2UN4iUy+u9npUcAjJz1Wu826o89PayxiT61jU3Eqk606Qt
j1I5PgOpW6ROU/44cvMjUPBLI8vMMCvQdrh9VmGQZhGB/MGVbq9zXo378iyd
1Fk3yreVBQWWT6ACfDN4EAuWNwfOFMbz0wiGy0yOGYQu+GjQ6kHQX1WKj9yC
Cz6ns6WWrBvenrNLlcUgjEiaoc+LMiP+S4VHJJ2c/VFnEcQ12YyuE1WsDdMt
qsTSisNHK0RxpcM7tkDn6PTaowaypM7hjf/HUzkC8Hx6jcPdaXeq/x/XPrKl
tA+f0N+ufNhCbSGfxDskXdwzyzGN+8BW1AnczZ4eoTiMNVXLuqwj0IgvlmKH
dh+kk4wM5hPbhj0WtCkNjRfEbj74LZRH2R46syWMcy/1+Xa4GNoe83ob1eIg
qp+1X2zBMR7Q/k/0lysRwccl2pNVlRb2qk7aLZuXaVWtW0L73aoXdKpWfnH3
tj/kgkbV1knutaP2elXfoU/1Xfa9wH/5a/vPRV2qk78veNH90ftR4ZtywN/+
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
7jJ/tvv0l7ffP5398Oa6OS1Omh+mJzcH78r8+d7+zfNfXm0evhs9eHF0UB9M
H/7UuzqdHk7w2+O9w6dH796Wo++GB682JsPTjYcPfnjzJH/x+uL7V8cb3xzk
1/kP959Ofvh+OHm7u3l1Cms6eHdw/fzdwU+95vneq+b5u7evn++9fvT8+Af4
dzQ//GXn4Zsc53lSvH3zcOPZ949vTu+/nb399uSSf7+Ynb6ZbGRHmzdv34x/
6s1G94c3PwAcftg6uRnvwviXm0+PXh9spJeHe69OJrO3G0/uH71++vjtxuS7
VycXbw9/eZr/MJkdvnrzzXevNg7fDzcPf+odHu5Ndl+93tw7fj08yfZPHr06
ebr7duPhm1eXT66OXx9Wz49PhqeTt49+OBltnn77/Jfj7y/2T/afPH81Hb84
uXz6+IeNzZ96u8PLh9dv98cwwvDRq9cPzQiHx6+f1q+n798933y6//pk+Pjt
67f3n383ORzunzyEGd+NNx7+Y3g8PDzZn/3UuxgWo+vscnN/+D088e3h/ePp
7Mnh/ubro+mTw+He8MHw+9nj15dPi2OAKezi8NVW/f7w5Mn8pJhdnPxyUv/w
C+4I1vD61ev3Zg3vYA3fHhePL4ebJw+GG8PHJxsywutNGPXx0Xj69Pth8Tg/
3Z/Vb949rbPp8KfewdH04l16+TSFtw+HG08fjl6Pj4+PXz189Wb8ZLhxuGf/
/n785Gh///ro9ZPdV1NYz2V9lR6PHp5uPv2pVx39cvIWMOrV218uTl5vHjx4
dv/kl+dvhq9O3kzSo/3NjdOt5vjtd0+eweqnp5PxL6+mr6rRydPnh5vjo7fT
t5OTrean3kPA2/x0YzY9evO+Hn//9F16fLA53npYpq+/efNqY/yPt9/Pdg9f
b+4+3x8/fn5ycnk0eTI82djcff16vPfq/iGc/pOfeifDy6f3YTe7b7fGN3B6
T+Dv4Q8bw4Ph/pOXfJoXwxf7gC/vLp7g2b3aONiA3R0DLu2fTA6uAfI/9Z4M
vx+/OtyfXP6wtfnmdPrkh+N3j9+dvn778PjJxRHix+vvT949n76vf5iM38BN
ffj8zeTy1S8nm28mF8evNi7mR9P3P/VSeOL/be9tmxxFki7R7/Ur0rq/dK91
1QBKZXc+a7tmJQmQUIJSQASCrWttCKhCAiRSIlMvY/Pf93gAesnKqq6Z59k1
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
0UbQbynGXA3ZzOCPjhF/nkntYb3LQ5f/663jliQ6by3PPKe9RcUo7fnMatMe
kl7c8/SuF64ASEilcm8uxRdgbfQgokhm3E47Zc9pxQvP2dSrdKRDh89a0KoD
NUHYVSRnnpkiI1TXO3cVLOeZdmuvyh7PLsSLXu0i3aiC5vMcSQ/iRXMzuM2n
dwQbmm0gNFVvFk8QIjC7HSRqV5/jeUmxlRG6G/z9CSQQaQ8kVLY5YP5pmlsW
m1kdtCK3yRq9lMo+57bG6yRFUkMDlHZcblVI3qE57O38Qs5sfXR0VvE52QMa
qYVAi5V7fBp9yroqd41JUkQyQhkyMLAvQll2FG1meV137gEMlj0IC7uagx6X
IYL4n5NkR0gxPU9ZYfWRtpboC+N+fIwP3OMpnG7oZJrsDOxdeLQNa2AoPlqP
ZLaHcDFt1Rq4euWFQ2Sg5Wg/nwWpI1mK++nd7MvBcyrX9WJ7ogdFLO0OZmd9
5GruTXNIMs0GeMuDSDpJMCHAbC/uT5fpzNGifYgRmQd7ZkOaBpBD5rflj/6H
jLmz0WJ/0oq8WQyDyX0fI9J0O9fMMOveMW33wuTdC8JGDgFKISyMHIk0ES89
j+BEblI2ogk+1BQDjjb5CxJk0I8lKgaoki2pe+7ZKoC6P+vfdxgT4TwKpDfp
3crN0h5aUQ1t6uX92LU6EIxmJCHNDPjRdT92TPXLBk84JKzLrSJ+SLL9I+ZF
T7jhuMp+H7G0DKR85aEVq3KyPUsgEOJseoj0+wersG+tYrdHX+TEkxmEAaWl
AoIyBe31zdx4cSV2P8olEmNbkIMDFUW4ay6ZMlpJb56L/sn/c52G5ap4me+W
D89sEU16v1sfC0jZ3xdfep9Llmdj9uxYsf4+GYxuewiJw/MsUMLdfecYjOLb
rv37bP9x/F5W/PFof/f0sFw8Ls2dOJ989ZavphZY1+aaSmBTCPy8+CLW064P
/36vaPi9d3qdq47hZr5e0ELFedv8163ZpxLk+VPVWuytb0qP9FICqng3jYmr
AUQp+PN6HZ9eVlXXxMU2/mi9zpL4A131db2WVbWtndsIX73k5bR29guG+WvT
ehpu383rvaPNi/6bzXOnLp/eELs635J9dTH21advfvmp7uNPv55eqr9a75p9
6J/Xm124aU5V0Pcuzhl8qwx7bvqrcdg0jnN59rojF0/4wcLs9WUE7dZFUZZt
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
a7sfuh/k01c697/he7eX3/vmZZSYyHKzeAmj1386tda9P+NdV7q+rFsMctPc
00ZhU9/enbQXqF/dZHhu5vb3ur5cX8gbnW5PfXURcNPmlu62/Z4vtFe89j8K
+xNjeuVoaPunix7Vwf3Tbzc/nVsRXTj9/uLDbdo5/TGpog8n6yi/Xz6Tcl1b
3gbow1DnJEevXyYaVzO/9k7Rk18m+zIPVydTCPvUV2+TeU8jFOP+auprVLr4
jXJ2BnL9gbh5Mr7KKML52ivor67CbmBksaKnnz2x07187t//nuyjmnr++Rwp
f4pXTo8+Wh/fcrHzl+oH/pmU//jHZdI7XQJIndomL2IVob3B+9VTm/sD/3FB
E1qbt2satLRw9uAOxeXj+rEeMXk7fCZLDtcYc3WNedsvhGuBAYTEm39rOd3P
HUWM6ufbi9DoIP6iEyCLV0bXlzGf4FlcxUuXEKPRKF/AM/5G1zcDdKhfn5tr
JcGLfz1730XMKF+1f5YMBCfCwy6u8P4qGdSKY0WxuRVipXmt9QEdq6L6qugQ
9qxuEDM318tB59dmr6mXuwX+sKia58abdXlJfpo7ktdZ8vou8YvhdL4azkUL
25Qiie7gFA00F4/ThekX96zWGaqd+uZmZ/GhtEFZ8WLy7WEVITGtCJZ+uzkk
1Qf0wmlc7IIkNjKqNtAFXYVV4Q50iyp5Gv6Nw/mCroX+8AYN6bymIbeChoya
SzvtmvMAOc8Xe0KpicTVOpeivP/5Ds5Uv4ydMji9KB3TmZS12VdV8oUuo45p
HHRHZ21DccusuGJWSEpxR2/Nsr9FpOv30BNtv7+n2MYj0BXBdOt2SGIJc30N
UYInXSDsTy2s/HRxZ/uFQjgFo3xOxVdsr/aBt+47R+rIiYvRS9fxVMrI+Edc
8b6gu1oBtc/nJCz/fmo/PN/fW7e+IrWbi+zdSBxqnxhDRCqY/KNt5Y9r455Y
5DUYgRa8T1YvBH3tF+8vOMByvRAvxt8f6huQgZN1oaC5uTe8Mivp+SrZn02l
SKehXMja84Xy7/sfKba2Z0gv8+ftCUlOlJW+IO5trS/zFsulaLNJJmeIaBNu
E4TfAfvOP/7x35HNtutmCJRX6mQlmE8LS6d+/fKthpTGEm8kjl9PXHxz+QL/
5gba743jbECZSgAtJYmbJBjO56Q9mvR0up+90QbnWsIFCVOUa2axr0iOxacb
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

-->

</rfc>

