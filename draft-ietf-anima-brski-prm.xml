<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.34 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-09" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 116?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 124?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of the BRSKI registrar in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer site/domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer site/domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication. 
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher-request/response as known from BRSKI and the enrollment-request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure.
It <bcp14>MAY</bcp14>  be used as specified in BRSKI <xref target="RFC8995"/> by the registrar-agent to connect to the registrar.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="456" viewBox="0 0 456 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 40,48 L 40,232" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,432" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,432" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 40,48 L 72,48" fill="none" stroke="black"/>
<path d="M 168,48 L 200,48" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,432 L 424,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<polygon class="arrowhead" points="48,232 36,226.4 36,237.6" fill="black" transform="rotate(90,40,232)"/>
<g class="text">
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="412" y="180">BRSKI-</text>
<text x="404" y="196">MASA</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">EST</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="368" y="404">Certificate</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="332" y="420">Authority)</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="448" y="436">.</text>
<text x="288" y="452">.........................................</text>
<text x="236" y="468">&quot;Domain&quot;</text>
<text x="316" y="468">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    +---- Drop Ship -----| Vendor Service            |
    |                    +---------------+-----------+
    |                    | M anufacturer |           |
    |                    | A uthorized   | Ownership |
    |                    | S igning      | Tracker   |
    |                    | A uthority    |           |
    |                    +---------------+-----------+
    |                                         ^
    |                                         | BRSKI-
    |                                         | MASA
    |          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  EST   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI Certificate |  .
               .           |        Authority)      |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar LDevID certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the LDevID by the registrar via the TLS handshake and includes that LDevID as the "proximity-registrar-cert" into the voucher request to allow for the MASA to decide whether or how to respond to the voucher-request. Until the pledge receives the voucher, the registrar certificate is accepted provisionally.
In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and takes the LDevID provided by the registrar-agent from the PVR trigger message and includes it into his PVR.
This allows not only the MASA, but also the registrar to decide whether or how to proceed with the BRSKI-PRM PVR.
In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information one the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
In this case the registrar-agent needs to the IDevID CA certificates to verify the IdevID certificate and also the proof of possession of the IDevID private key by the pledge.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete LDEVID(RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar LDevID certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> section 4 with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is vendor dependent and may contain information regarding the vendor, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therfore needs to be sufficiently unique.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

<t>As an alternative discovery mechanism GRASP M_DISCOVERY multicast with M_RESPONSE, based on <xref target="RFC8990"/>, may be used.
The specification of this approach to discover a pledge from the registrar-agent is left for further study.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt), as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the LDevID(RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <contact fullname="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA can issue the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
This agent-proximity is similar to the proximity assertion by the MASA when using BRSKI.
It is a stronger assertion than "logged", but it is weaker than the assertion "verified", which relies on ownership tracking.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledges IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the registrar-agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a vendor specific approach, e.g., RF beacons.
If the serial numbers are not known in advance, the registrar-agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar LDevID credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to protect the interaction between the registrar-agent and the pledge.
If TLS is applied, the registrar-agent <bcp14>MUST</bcp14> use the provided product-serial-number of the pledge for verification against the X520serialnumber component of the IDevID certificate.
Based on the locally available IDevID CA certificate, the registrar-agent verifies the IDevID certificate as part of the TLS handshake.
Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification."</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own LDevID(RegAgt) credentials of the site domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar LDevID credentials of the site domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the LDevID(RegAgt) if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar LDevID credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar LDevID certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides POP of the private key corresponding to the registrar LDevID certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar LDevID credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar LDevID certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the registrar-agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information. 
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge. 
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-agent and the pledge is established using TLS to enable the registrar-agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used by the pledge:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the validation of the wrapping signature or another security check fails.</t>
  <t>415 Unsupported Media Type: if the Content-Type of the request is in an unknown or unsupported format.</t>
  <t>400 Bad Request: if the pledge detects errors in the encoding of the payload.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), may have a list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='22' month='February' year='2023'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that is signed using a Cryptographic Message Syntax
   (CMS) structure.  This document introduces a variant of the voucher
   artifact in which CMS is replaced by the JSON Object Signing and
   Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-06'/>
   
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='7' month='February' year='2023'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#39;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-07'/>
   
</reference>



<reference anchor='RFC2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC5272'>
<front>
<title>Certificate Management over CMS (CMC)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<author fullname='M. Myers' initials='M.' surname='Myers'><organization/></author>
<date month='June' year='2008'/>
<abstract><t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t><t>1.  The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t><t>2.  The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t><t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5272'/>
<seriesInfo name='DOI' value='10.17487/RFC5272'/>
</reference>



<reference anchor='RFC6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC8990'>
<front>
<title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<author fullname='B. Carpenter' initials='B.' role='editor' surname='Carpenter'><organization/></author>
<author fullname='B. Liu' initials='B.' role='editor' surname='Liu'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t></abstract>
</front>
<seriesInfo name='RFC' value='8990'/>
<seriesInfo name='DOI' value='10.17487/RFC8990'/>
</reference>



<reference anchor='RFC9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9053'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052). </t><t>This document, along with RFC 9052, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='RFC' value='9053'/>
<seriesInfo name='DOI' value='10.17487/RFC9053'/>
</reference>



<reference anchor='RFC9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='13' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-04'/>
   
</reference>


<reference anchor='I-D.richardson-emu-eap-onboarding'>
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname='Alan DeKok' initials='A.' surname='DeKok'>
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='2' month='April' year='2023'/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-richardson-emu-eap-onboarding-03'/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8971'>
<front>
<title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
<author fullname='S. Pallagatti' initials='S.' role='editor' surname='Pallagatti'><organization/></author>
<author fullname='G. Mirsky' initials='G.' role='editor' surname='Mirsky'><organization/></author>
<author fullname='S. Paragiri' initials='S.' surname='Paragiri'><organization/></author>
<author fullname='V. Govindan' initials='V.' surname='Govindan'><organization/></author>
<author fullname='M. Mudigonda' initials='M.' surname='Mudigonda'><organization/></author>
<date month='December' year='2020'/>
<abstract><t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8971'/>
<seriesInfo name='DOI' value='10.17487/RFC8971'/>
</reference>




    </references>


<?line 2058?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>,  and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the registrar-agent in {#exchanges_uc2_1}</t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR</t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on registrar-agent</t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1YjR7Y3+L+eIgd/axlsREHdbPN1n24MlI27bgaqqm13
j08iJZAuSalWpqBwVZ01rzH/zbPMo8yTzL5G7IiMlES5+nR75mP5AlJm3GPf
92/3+/1eUzajYjf7+vjkL0fZddlcZs9HxfCiyMpJdlzU02oyLGbZk2pYZOv0
UP/58ZONXn52Niuu5D38qDesBpN8DE0NZ/l50y+L5ryfT8px3j+b1a/L/nQ2
7m9/1ctnRb6bPZsWs7wpq0md5ZNh9iSf5BfFuJg0veuL3Wzv6dGTvezVN71h
3kCDd7fv3uvVDTz4cz6qJvBJM5sXvXI6o9/q5u729lfbd3v1/Gxc1jW0enoz
haeODk8fhe0t63yQN7tZ3Qx703K3l2VNNdjNPr0p6k/hj0E1nuaDxn9Q34xn
xXltPqhmTfgJDHFSNeV5WQzhw0lFTzWz0jeTz5vLarbb68N6w4snW9mjWVnU
8Bwv5klTnJ8XE/dpNYP5nJQ43Drb+wY+0Z2QD7mHooAenjVN1f82v5z0j8vJ
RfYQJ1E2N7vZk/mkHFzSnIbQx6df7nxx7yue43zSzOCJb4rZOJ/cwEfFOC9H
uCg0jq1zHMefa+5rC9YEHpnPyt3ssmmm9e6dO9fX11vm6zs6s9Ot7FUxmxQz
N7XTy2qc1/7Tf9XUGhpH/5rG8SFTO9zKHhe5n9jhqKwa/YhmtV/Wgyo7uYFV
HNtpHMNYmxL+yuu6yL5ws3iVj0ZlXYxGxcRNZf/b/pf3tu/bqZzAff21mI3g
FMPH00u6G2uf39/J7t/Pvvziy+wruBlrfqYjGNKfBzgWmp4M/8kWjSOfDetq
4ibxBD8qRtl+9C3vEvRYjGAZs5PqvLmGa5W9qmava9/VeDD7HEnAn2t9dGuQ
2wXV9TRf3+kNKphYeTZvzJWA1T0of3ntV7d+XeknNJij6hTeq+cjoBCDm63J
yI+igGe3hvDsn2FHoof6egwrWMGirrPDweti1mirj+bNfFZcF6U5KE3x50G9
dZ7Pt4aFe/9J3jSXJRzkv1RXeVPT4ZMXaAFey8dbk6LpXRWTeYGk5WJWzadC
mfCkI6HM+K239Mef8eUtGMp7fBro8vxslx/rX1/ciQhrb1LBoW7KK2r7+NH+
g7tfbsuvD794eNf/ek9+/WL7nj7wxYOdB/Lrl9v39dMv7z18qL8+3Nn2v7pn
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
xkg53TgZTAomUsmyaKVkuduLEybqqd8vfMpUITK2IfnOr7zNOKMryZITyZga
JkNw6NXkIkqzgxHqhnOwDtNwScij76NddofFEw2KlkNZL0z45NS2A5IppOqF
Gya3ojAkUl+uNKGnAWRU7oIAs/tv3uApfQD/K2YzLELH0bYDwluOCKP3sTyM
Eoa2eq9wofzGbdrd4CgelB/U2Uz8vyWIdMJT9RJZK/kIYYA9j5i0QHq9WDGk
wDp/4r2bpZ6f6bRQdDdYkgEIWwS11/o7s0/7Lz+3yHotFLwYTs988A5/F+xJ
DHnzMYIhwl6qVfjP/p5++86Zp1utuMsrf2fr3x3vb5ix+KffcRoyPvqR1sV2
YIe18BP80xVVfKdtONvHym34P9w4RIL48DbIsMnepQ9t4w9xKOcHtBE18R8f
uh4L3ljaBjayvrPhtG9i1c1zZLmKMQV/otZtM+4msge6FNW02SJx8kOnwcuZ
YcfZb1vOTJv4lyxnMJfD3z6Xww+fy3/Fb7Q+iD8J/vwvPhp3N5z0Shm86Am3
eJbpVZMlkBPRHv+tVv4noH19IH6RWnu73SM7goOg+dPfVx9HeKo+5lz8WG7X
hiT4shdRp3LLNlSvYY/dB7XhPrFEjHQLQ9I+4Fb9VLxpCP6E+evRwd8/pBGu
tgTrDEI86nkrN+IpuxYWcvPpmM0f4mf/m8i2vZuHK9/NiLT8tvMctJrtn6TI
1cpt0DpiskF7EbtX/pBsv5S6/t+y8hkvPEsPg719SoEgJXu1xZd3YMD/yD5s
8f9gG8FZ/zexgnv+uNnabXGimGDv2VTAjyom2Jv2oaw1uzrh0f2Wcejmf+A4
4rP7gXPJCjeVf6GYcL99NmT/fXk//cQmNy0SH7z88CG3hBpYsM8fTObQeqsR
PI673IbV0exaLWQLGIz5/Se1Xt6ary34c9ESLjhe/wTq6jDAUyYEzRZzZbMk
Z9w5VvvkWHWvdiKAn3aaFbJ6Oip9QT+tw7QQkoONG0HhH+e3C6rUNNVur7ez
lQQj8FG6xkHg8okG/5iXEqC1CGfHYSXebXdyd1knBnXFZ1isWNs4zBBO+EAj
NDpnC4sCGff3xHbsPSXizm0PkodGSbFwLkry5t5rz/tea94151nCyKLW65X8
iC4Uwo4zmfd+vz2aB63RaMqztOBTUSZDU9M3wuxO+uBWcHxS0IhmgaqTey88
XXFkJp0sMYxFPm84ufFl4slNBZAGYeYFfSs1QoxdcIXRxDJU2FUOM180vjZy
ACUi8wX5u+uqqpUc40JPCCZQLM0ushsLjpYuBdWiL3T6S7WuoE/RjpKUfQxN
jK3+HHPLJuxtCOsK+GKwnPCRwrgmWG4M9qCzU9whUNzaBdUlk/7JDwZUkXSk
o7YThyI70fGDcVmg0VF2AaMMwBogX54TzgXBNWnoq62XLQC9GLMJWzVXWtCN
QNAR/rQ43M7UmdSI35ziAymfLsiYxUXyq4nUPHaLmDqQ560MDSFQ64giuhFV
qk57RCUsCLGCukNUV85uSSNYe/SIVVNpyonhTtf5Tb1LcPCfGUezCQNcJbCU
XAOSTOJSTKRRc6ldICLG9Q7z2dDFxGmFdrLKrnS9F7Sea/iyC8jQbnRax49g
BvmAfAiwjVqv02QP1C68g0vg+cTtznro+LAmRuYevFisqpJz4/IW5kKcNToM
A2Xdt2ZWVHW+Y+vleBHIb30zGVzOqgmjK5fjIkr5WOegk9plsWwYyqL0Ik0n
cJxIpnEd2m5ff2UW+GO6f8LCUoH7pfsncKHEdXu6XzJ+mNVfMm6XD5vT8k5s
f31G1r/lW223MTeAdoJqqrAKGukcR32I0nGL/lzrfec16MitcioNTG1Fx334
uHWFLxrMLcfO2uWCQav1sl83mD4AHPCD18isUgqvrG/WSF5eL8ZTV7jpI0+6
vyC4Mpo0xVretqdu/c0hcqn4KXYiCgmMiZsOc6NbhYNTLNxPz/joxueoR4XZ
U1hCi+V7CnjATjh4G33gaeJPAT5zQV9yjDidHxEGhKKQEcQC5BjyXvOo//rg
7ja/bJN0bMZ2W2rb6n1t4z8oRwQxfVwmYpLEp6cVxPskBETMEYCt0cFEZQkM
qv4kO3wjmIdYDe0FiY3rh395seEgDV69ekWe76IF7SKcFYGntVBHaQMODVaB
XQbqfzfJNlFa1PsY7YWGBemvh/QrBr1sZUdRtRAH3EHREhi9OzKBa7nDfaNo
3HJQwjLgKcZ6P5vZFWlbouNRotOIVD4s9uJ1eEyeE1xWsXj2HX4P+Wf7Dg/x
7SdU8AhuhZc3wrBIKdni4sBqC25GccDPn2GBqEkQqe1oBas0uym4T0JzXEuH
eVrM331MLQdqc4rA0xK0Vta72X/S7eL9vvNLXU3+E5NcVJ1EeJxx0ahM5u6X
nILvTp49Ff2L1KYVmcwuqYAP7/eLCUqtNlbz8JAZZHCcPmuz2FYTOJR+Oelj
JVbNKRYYOl6ASA30m5K7LSmmZVB12C0DS+a7PaGvQJVXDYRbg03jkcpAQeub
F3/849qmb8RMq/Px3ntP26f5FUbRKTmfzooamvEJL3q93Axhfp2E3JAKpnyU
lkHGGQTpNbGVvjKYWUahECaqbmFwooqzk4px7PrwTxvHLrS2WDg7hyRrzoct
/td4ZPckVHRiSB8dMdrmowYoy/OJgpCY5WoLWmWDEeOkLphqIlodaUkMa2TQ
4wI9vOIN56k4SVRDmjENjnDW3OoHhoQjp+uIlg+a6Xkj5FsXxmXBKLSzLENi
dqjVti+ruK4o2rKObp+x6u1ys8uCbrUhJkqji138D9bjvBz7jBTGx5XzHeN+
ENV5XQ53WcDQ1Ft8NCI8ZzeNr52dDhimEM/gs7Xs2f7p4Wl2cnp89PSbjG65
s0QswoKh6Z9Vw5vlk0fev0aVBSIRe7dNdjJCEcWKIAFw1oLaBBu0tkxghn3Y
mfZCOQDioTuZSFvg2xu4Mrv4KTQ87NOnvMW07IHQlmg3LdxhIg3yNjR4caXJ
dJWPTReaeXfr3taOmnbiTFqlQPUSo047RBhFR0ZiYCQOH0ndIcsFYqko8r1P
so77M8m+EZM13h7uSEE56hsYyxtmUNP8ZlTlQ+QoX++dHD68/+L48XrqOADv
GrePxAZzKHchamjoJ1JH3kpZ2TUHmhr28eL00ZfrOLbnDlT1W7qvG9wmveva
7eZ4+Byamv4OvA+W45BhwHezg4IvnkwQSE7AAWGBSCzhtYDFxWmsPm8QpW7z
9C4tx5q/Bzifu9t3d/rb9/s7D0+3t3fxn52t7e3tH2VJ7fHBx1FNKIr7X+zs
rHVMdS21nGvRzKHtcO4iqIwusJPDk7sPHvIAgKytJGfk9bBbyvigk9kphawi
bR+rt4jE7Rm8RYmqoZzSWc3UyCwn3+49fuyhIpioG5Kaqmhqore1eIKSJIMh
Z5EVllXmiIFKAp4njhccyRni3hVdXDMaZkSwf7mu9RzTyONkei+RhKtBArHj
+1E8PKkrHABPNucO5wGFQw3F2+FTtFAOcZ0GWlEL1keyZrkrXyZCzA7Ix4kH
3d/ezr4GOiDnZVerZmlNrEJuDSaqUlNusXGrvIdUcjjQSu1qdBLp3syuMX1B
SuoCj8Gykc1gi7wywds6QXLt8FUsrsje4YqF4dIS4CNzq2tK0qXVSmliNL17
2aNqdlYOQXronBxj4Un9zorKuUr2o1HhXC5SXAimraFeF2KCp6mo7d5LJ2Sa
TckmoWiGTbnr5hj4eVK/bN+4Lx7sPGDcF02Wx6OPNMcgvVn184MlvTcPBruh
+BlJebLeKWtHhtYJPJTGEBaIQYbVg7JQTjxYbaDGyO1sP15qWTrN6mpWQLlq
m7cW2K1YZRF+arauJXp17Zy1RXVyz0CLStHWlkjZPjpwqMl1dhuR0nmZ9NIE
FRpbzhsBFcCe1a7ox8T9uYvU4oKbTgNSMtNWx3Ohdp/BICaDIp4mSPCzm2lT
Xczy6aVAOXICVTati/mw6s9gijCAiQK9tUTm9rotyvrEDYmFVra6aOpVqkXF
xB4a7bg7H2/dez1J1BBvGGx9hnu/sYXBEacdp8edHLIBijWTuZHnvf5A3s4U
pVfJXa+WJtpprEpYE9Yd28/rwP7mhtchD2x02bmW6Z9tQWw9vmAgyCGmfVDn
l7zLtxmgUAmpQMhwv3Ljf9gDHXYMJ8sU4U3to1Ol6oKKEIyKHC0sFlF+eUk8
GoVY7CRb2UNkLIDQNaXNa6T3ZsIyDYLWZP4VamGSuvvP0Lvks39/beu5cIdu
5Ug+w6YWqmQL9CttgrWq5WrVXa9WZWtETPG54qD+/PM7j+YH337zYnL85um9
w537+9+LzXWx/sVPOEKG38akTB75CObfW9p/P7JimFIN4TO4Ge7sZYsG3/kt
ffl3aQ6EXOxCNxsUks9RtA3t2Vezbj1zke1a7+YTlKfZs1HeQiFCQhAI3fEo
/zM05gZY9iS/mY5F7mVbjxZ1FarkWIsR/I3Ha8uSNPdsq86mggfsHy+1Q3P5
XKtUH3p/83EA5uO8WAJ6lFLlWjX7RD/EJPOEM8+WHsy54OCej31xzj1vp8ye
/2X/5JOdbSkq6Xg6Cj5LKDz7Oje1qqgA5VqopLwcS8y71E/hwZWD0Ak7qUI7
esNxc0Xk+IrKy67k8Uv4+j+uA7DodAAefogDUESrSUaBEGwaQRye4jyfjxrr
XY6HL4CDDENmXrfVQg1ylBfeWHSmMDRMYjKrX4V4lflZNW/MqvJlWuM/+rKz
gqGAiBKzop/6jq9c+jUuvhzEnM9yNqAY/5+8it2vZbvppiyRwyZcUTQm42ln
Hd2YBSTPxl+qASkKKD9PH3LeVzjo0RJ3HW7QmnwUn388odbiFZGCFBymccO6
lQICITv1JE1B4o/37iBO/LcSoOmPkcUOM+clGnZnCZgAbmtrbWVCaAyM8ImD
Mnvf4zJfVvsNrzVzHaXHeZ0iQ+Gd8nPF67GVNGXi5V3ZfokP50sA9j3Utqyl
hH5jnPgsrPVsfa6hN1bOiG91Oj8D8oFPRjBFARgKjs/jrXhyzlR8E/o+snic
cCoKQtKyePdUMa4gyyDLhWH5DKJTDlwt1ktICPi1mdKNNU6di1k1J+A5MhTV
s37wQaNL1SVWTIoGI3f7NTYNrxOVaOGODPJpflaOWoCmZGowmMVmkzvR99Da
MkJdUJimckA+oBQ4L3iGc4LhY2IGrwx4N+Q10k/lV7lvBJ0GQqysrNfYE8CD
jgyEWZdMwg9PTjez/SfP8T8njCF3sn/4PDZA2/QDxF4lpVIMte0eHUbLqLgC
2eJCWFCIxujiA9T1KMsNe6jrtHDzpHatZ2Mkjmlsgid5DL2stSTsWjGrqh3q
KiwDMqL9J/sJYTJ5h92+2qo+zuhHIPNlJCXRaS6bhNpbWwLqQi5cWQyHn0f9
+5PhqdlZAWuBgEwr+w4Ol/kO7r95c8eD6HxEH8Jh24eAmD2BHwG7+yf7ELJq
5t8oJ4ucAYf/OmfAennuyO3Gyq4BPKLWMyCjepjB5cr2KOYGd2Y3cox8WsuX
TvJ0ZZll7ry9eKw46B+GPp+4WjtbOOtMKkFv6jtSFRSRosL1quric7NoOw+y
F74t1toylIMTw0yKyR95sJ/Gm/spgfx6RKhQcBiNBHmeMiGcZJewPrZTnfAv
NLVxPJDiZkUClp5bxWhdN+Nz0tRGqmYQrp/H28buTWHtlEYS2tV9slbkCg3R
eBeTbCQ/cIhnnp85ZQOJL2HIPtknGN4U/XZuAlsSTgp5GjdTKMBQbhoQ3nDu
AV8m/HNazrAjybbxQzsxIOpFXEpUQlmMf6WcUTKI3fZ4JsmVTwgUqbNOulsi
y05n1VYZ3WVLOQC7pZmV3ILdXsH/5fD7LQ6/08sw5GHRNhEf986p53AI/P6s
Y69yNjbsbpHwFMjcu9OdbbyySyVozsDc2V68QXog4+ip08siVhpu4SZwFNIE
gKnKY/aJDpMByQtdB68uy1FhZLcmn10UTZeFCl2GfUPwfbSlZ1mxwc/Xgbwm
XM0YWjwmolTJDzR/JUi2P4/Hj0vlmJihh9qaq3KtXthWHpopOVk3Rd6KevMP
hnJFC4pTd9dD9Vp/zOFH8ce4k/l78764ga9lx12W/hPra/EvSLyaXMWP5G5Y
NoiOODTraljkaOhcM3IyrMGtaNZ2f7LOIv0i8h7d7W9/1d+5F3mPAldEscgV
scAu90rtCZJWJXnbguGXzvGpgS44qpCoLZco6XQq4pyvVx/4HeyU2ZnQkMNf
xbxzQgY6h3ldTkydKVKcSG9i7wVm/M9ew0u4tBiBIIuMjRQTNBY5bWyM8eUU
244SWFNV7D/X3HbjxiD3wYxhz5PT2/DlPynkx9en2NrZcRiqzP0pCq+rUqWJ
rsdojZGYsEZ5KweN1BnyihdXZTWv4VFfxFFrZwDt3Cq2Nm0QCB+G7D/+GH/4
suND0aoimZiECBVfSdm9mFDuwuSGZFgR3pENY3dOR6N04lDGd6TZN07mlYYa
4/j+UqJXSCUkRQR1RDVVBT04brpXJ48uny1X+fo8H6B1iySYAE//VmU8c5uT
SBkoYmChYUWjdnYITIwoqTaPrXl0Nh+9jsqRoKGYTEc+19tLBLSkJi33w6q/
JfA9sm8VUaSF6hIjfUC3x341HD7LgcNmieE/tOiFlzTCGbdxSlJTaeH/I9kb
k3lF2060ZHazXapQgIFcrRoCBtpgylZX48LXRK6T8BsxxIZBjkAr1xL0CKFq
CBWhhatiwAgpz2KTatL596F8zNgGd4IKWCHB0bSoNsa3c6CqZK30RRSKS3Fh
LqsB2FzOyH4U4GtI2XqH1aABm4jpcAf+PTnogrAgKjFg101gMzLsy9SbXRnW
4DetKSVmNstRD5Jb3fuM787i4Wnzqe5tD+sOT03CTtElEuHubVLOItfaaWVj
GVfKRkZcSLxaIT4MPhofSZxW37ngPEZTGLuZwn1wMAntT0Kc6QiA2188Tjpv
oW7bz97RHxZ5Ow/AtiOsCPe6R9zOQsjtEGWb/hvibJv/y+sJrO0Pm3vQtvlJ
fIYfGWjtn/SEfG40sBhUNtEYvAl3bJOFEKfW/727T/PmLUcbvynACGMHEJyC
LlzWZwcu8CqjTaMBf/x59j1cZQfg55I+OffkVn2aTzrQhld5M40xvMqbaWTh
9tC717Zvf+whkZOywpvRqi9/M/hr/div+tLRJj5LIxiv/noSuzj9usGhb8EV
e2SRP7S//6ffcezRAZz+owOedEGf7G2+XZ+p0bZoTQKduPM0hTNY+U2ewHHX
BBaPNlsAaez30z6VhqD9J+znICfI21vSsj8Eb3YA5n680XZj0NyNMWgsnOQC
DSXUagTbYzG8aMv74bLe0YkXYTC1qrlR/VKJTEBgyEQSMb4w93B8O1v3snUq
A3hdzDYoUWEyqOYYp4CFSemJu5k+gN8fH37/4uj48EBjRFrWoRJrfyba9vZh
LzXEbXDAnXZrvN23bRHFqwWNcWjVvl9KV9GXs8ljFRdW2n20QXFVyK4wgAS/
Yl3TVmynjWL3fQRN04JARd1/cFkWVxaOLl7UBVqjsVhHvh+LsraPEWFweKl6
NY+3S9stawGiu5jDetCikiHDa+v6Zgigu9EK/Y3NRrJftv5dh5HGCx5ku3Mg
ZPmi44/9dy88L2z3QrooH9MDzTsR3BHsngGm4Oulg+d+/SF1ta8IsMnU1Vte
vkuirel6ctCbWz0TlERIFmKy49OE1bT8UrYzY8j86zY2iNbTUOg60Kihl3Y6
b93GjBWV6ryaXWP1Z/xynKBXRwnqlO6/Ro+zLBIb6c2QnE9NfHpfhCZZNsBu
39sWhNdyAuJMKRatIEea6mRH6xHPqS4mPCFOc7ZBkTJBUuD9axotwDq9s2yf
yUX00dE9Gx4t5hZNLWFiJuFISQc42cDRn2Y2SOKrV35eovl3l+QXcBVAqv8H
S+qC17gXdqWSwUoLL66c6Z3kgbX6ICUUR3MVbARMPwx5UfNo7iJ7wjXQIftk
Ho6ZZYoVf7pg/cp05FN7xW65DsuBBZ4HkNbeXkEoA74qY6+3R6g3bVikFHGL
TzwHOyhCKa1YgDwXTMqXjrvXKh3XDXsrfRhbZDJZ19aj/IBESY0DcF9+2mWl
C8GOndsoymjxNQVjpHLPxMgMmqzq2ghIQlfuZORtwQnETDMonzrkHH/HAxZX
Q43Eh6EYQLSmI8Js2MAAvwstW2x6aK63GAZoMx2T7fzMm3SdqBC4BOllqWCT
0gu5xZupi91vHalZ8YuCOTp3fJa9xJZl48jlrwbSID4sAhXTZ9zKx9hQPqDK
lIRHL1Y2qy7m7ePhuVu7OWWq0FI1OasI83h2VuLbN878Sm2jUXYWeskQJsgV
aIUb+TP66X6G7qHjBm9icgupBHDyqNjdS5cJXVRstl28lU5XfLA6QaE4CNvT
H1hpS4B4NlR3mzwB9WZCqhRXwYCs09WSSfJFWvco/eThplhX+DLGHy/P4QRC
L5gHHa4OTh9H52Pc/XgwGJxT+BEwdZgaUSlnczinFC2UaotAQ1mkdvqeMJbJ
FYp3G4bA2znmWlZ1CSO48VHSgVxrYN8U8V1Zx0eKk1416tmL0CbwORVQbHDX
l8cUq08jwoqMQ4TvU4jwIwo4t4VTwxhmgzDpk75AkQYRQZBIaT95meZNNaau
yenLAOHddVjbzHRx6HIgrHjyLspZFM7cGQvszoRsPoUnYaBvMazjAy33s3bO
1UABaoviNI/N7MRMkc8AD7M607rfucNoiDz8n9biZ063HTR+3/NBUFMd7Wgl
C0jKnAhPXgrztoCWIHYcCWLeboDjYRfP209ck25NeezsML3z4phSiEZFTmUT
3EytPUFncxeWStR7agPfJWSJWgUrUzCYqxU39BDnYJh4XTJhDUmVNCJcWCah
9IgqdHpJUUAtgUKaCO7JTkiDi03t+bZ9h4aYm8Mjg+Lqy385YQsDkjGO+dMD
oF26aOR1OI2XnD9b1UVk53K2IZ3yFI0U7LjuS/JDaxNCz7SqCKTMyZozLCVc
WDjeW3HuajK/LQKnOV4E0WUP7QPWRPB5N3Nu/6wIFLYP0K/CSOfjVaGO4ihZ
7H2VwOYwYjKOanZBzbdAK1mvEWB8/ahJRDLXLXGxO5R5IwkgdLwigFCMHxSD
hqwOF3R7cCCpb+/yxQwoz6CalpaMIAh9G2mnE2hcI6hWkvQToJD1XDbYIkmG
kRPrMWjPBogoDRX0oAsXDIlRd6wZLBESI0HmsPAcodvVTEsctQIni34c+BbD
CLWhgjyM0FkQQbMe4W5stJfS1TOn82gFBtQdKKnV5tTEsfFO8xMFNJA7WxI0
zWQ6K6uZfhqDFKl9zQX6pA0DzuIDhKTniJNb+gDeqOPGYJC6MKhFmEsiz9Pq
LjUgWZCd3VCdFv1/gbAvJH7BE14RaJEUOYnO8vWmaRca4ry/XAyWs1lOamcQ
Fxx1ZyADCHMaSzO540q8SCLnEQpIKbmGOZG6TDwYA+0nF6PCZBO0Dj+2YG4P
fhQR4UWIvtTXeD5qSoQECJXnmcEO8Z1Jrm85qz+4Uzp3xLjndeoCtXJJFjkZ
AjNOy5mAobyNcq3QbrHg8MoQF+RwLIoLWzGLY1ZQ0u6gK4/DpBwc/y8IKMff
/7UQUHf724gCdbp9d/feF7v3vtq6e+/BvwQCahEzWBn3SVGiBHBpId7S4i+3
trZoC7t27+NiCH+k3I1V4KFmi+ChjpfAQ8VaBTqdnHQqJIHooHMuWUdUGnAn
8ih5Jr7QvXEbWKplfqP23FhJK5qEbcKI45FXR43qCViqtEPHPFguw866rUbl
0KdoO4LyC8dqKlvuRDGWH6MEtjCc234UI2Z5O4TTFKVT0dhQ0AukABzgYnrA
5+B2DhfHozHkIlQZYPX5YAXa2iJdTwSNuvKSvueOba6diLVWJZQQKGRb1DS7
C2ffNUYZPmwV9GyX81PI2i4S1UKXkeYR0nGEtzzAxqLXWGTCF1UCIBEKVAGv
X5Dsh7hD3S6j9qLj/SX054pbS0jbjmOYlU67OdoFDRaAs24mbP8h+wrrC+DZ
XCfNY5UDueErB0PjCxuW3T5dLOcz4pNLxPZ5ncFVRaFRfRxuY9ilsRiV0/mx
Vtd7Ok0RoSy6zJWhax+z7uQiHXnB3AWryCzpbNn4Bh/Wn698ixeNRJLHgRds
+g7xMLMUnmdoH54Ris7ILCOxZk4bAa43qi4uQMwkCDWdwZq/7Cfzs37ow8Ha
pjRlLXYzAC1Npt0a6SaupstYW6Q11uby5mgTwW7xyOIUiYW51WPru2HpOFxJ
X1uwVsqi0LdFeuU6iDYbmwpvyIpjWj9j276x65/n5ag2q5707Uyccyd00Vif
SDvAB6+dAd43DzPNe40M352pkPV6RvgwcoEI1vEYKIVmdmOLu+gW2kSfDf7n
ITsP7+88UEu+BjIfwd6g1wV3Byds1EoW22vjeaDZG8BMGMlHFSCsBZ29Via4
KykRIal0WOBkOVs2og5/XaObY/dwre1aWtMrbqtDiVtLfYRA/1wmZyKWhsMc
A2fNAkMOxTrNNRsLE4ejC29wV96+zS+an6ezNyQfvX2LC9mnuCQEQqRqQoXB
Lbx0cUo1Aw7KAEO1WfwZdIXdDD6aGv07V52drrtUCUu/Jrn8S1XVpequ15u7
S9V16+EtKOa1aTkhYYdo82Ic5P+vKatya7oV1sSNWKjAijaEteCDWnQ+qE4z
FDcSbIPpte1TaXd32FuUY/zzVd0R/KYXOhRahEAWuHzEwxtWKhFcEIgbLC7n
T6KIQerWfDatkETlhOc5Ws61Wln0JHcMCZ3NYMp62dPq+T56Q0bPFkVMB/Ut
hoW1sbcA+knhJ89ugoCmalbCjBAtgU6vUC8R6/lxl9QdrhmMuvvQr2by1FBS
50e0XtC7Etv0JS8dGqxb9Ww7em+JzQvVNthDNJeQS69qFBNmUejPfOpgZ4lq
qETXgivq/NrGsbV0Jd1lJcDrKeK0sSXAun6XnW/pNqCoi4MgPd/vKhFiq+Bq
ZDDW+nz/fiN55hVGLYqT7tLdCdorDOaXAQTlg8l7ZlI64W8Xe96OPEoH03eM
yLp+Qgg6E7bqNwGlpRCTtMM/zMjS+Og5yMdBuH+kuC1H7N9S2ef48BuWfziq
xZ2ItiAUiLhAyf0U6uXiUFzHxER0eJqDvO7fX2iSbOwPkZ02f2vPwME+qOOP
JbTxHq0qtK3kYFjupVgut91KcPunSW5yMP6NBbhbTAVP2r9wJi1pk+nUrSTO
VYhOp1TaQrf26LIV6M4ukp+RQCuKVQt4K5J+NRORbAAjbgeA5FTvHRosmygQ
Ms4UYJhgKuPu9FIWAoI4s4iD+vQjJ8d2BdeuhB+fDF9MpT0mRGxYqcUydgeA
mM+gOjxuCyE22AHNE32EhumHua9b2Suyk9MGMaKgokFDk8YV0uFauZvKUHGm
PSrzwRXCEc6wmAxXGlRyshh97bx3ggCYk02je27hjqOc6CCrGRDMh2LnpuUg
EsgzSPeMAb9Phn+ZSIqtzMGzlyKnSKhkgSvezCWG1iHZ5xx/NsIoe2PzITkJ
+3dB6EXfVS4v4tINGSYwB5C6b98GJQ3eKwITBoK6pFS/tIKxnc3ya49HvggL
7KoaGYFWzzcfWw8dmymaLO2dqWMaXf3JMEi9ieE6fT5RG9E80iJBghb/4iEI
zDaBEejFZIg5IR6EeP1OTTj0DOOymcmfM/MBYfyAAgAzhz8HObLIeqMVn2tO
vRO9XTqkCM0EqKkw8fg21y5wNC5CAkYWLgkt5cQ2BtuCc9PUDcbOm0S751Cn
cO0IGir0bMNXweTX3LJsRqFYY1ARWAj2leAo4ZpGjwcKR+OSLOU4FFOXakyG
AIwlzttTbON+nqI38ZxQ8eiyOz99sKTtDQhN+wvc+DLf7gRPAftbAHys6iOF
qDloMx86mmqVWLoDS22l1jLgN221rXHo6XEe+D8M9lrOx4FP6oatDhFSQi3+
cZ0rnCM+E0ItILye83zTnU1mrGfDuTOyCCbCEscObh4Sa6WoziojMZTt3Gjy
17bSa1yYAFXN4ROXWO3OnfPOcKOAOuDtVMGSMMowyvkLw8c+i/iPONJaOeef
BsHUgpDJpG5j0znS0D+L0mMQWLIp/gC4XswEfqlkKHIwcpIpbBSsd1d5N4gu
7lmFAH2cnRKfmaCySkxVWnYXS9srqjGTrT3f2Y78u6wiKfLzLiLS0tFQIHpz
3mWwCYTqaw+9am0yzjMoDlnvkbIZ5e0iK4QaE9AzOaBUhQRlUlYHhGgH3Zym
biRy7KKk+QyBQA8QOULy+aOz3ybVRD320A2bKJrVrotlqiNp6aWwmhy0BbRT
BUWNvE77mXEycBFmVQ5iCYFnirErEW0tbQ9JNaiVGsuRCUNzx/kE5IagtEuA
tnnsDaTi6+0s9GRKBBBY9fVvwt0WycqDbrdwtlMMTa9yDImdiGXpwMQOoycW
06E0OjYbCyVXNZTzNjqwAKJouKT+kIJkWFyKLsVSW56BpDv87vZ29uwvTjtg
esWKBNKDvBzx80FiZOgF9wxfDru6ZEnMiytsLEJchnPXqrohoml7ezXSiBPV
J3q1i0QFx44qN565LGdd09eD+ov+uBwX/+nz6vgQvBIpcX+vHwVm3FofvR7k
7x32r3VWy+kEphnXoEice0pSUFs3cVo6ohNMfUwQ7Mgz4KVkqpQImxBL8H7d
2rKsSOZWjOVtMkkjbWcEKpECD+URto1C2fO0xYnbKSk2BjwlRrgZpbSbtRVj
uOMEfDVcrnorXXoSAdIAcWqZN1h/So6E95KSZu0oQuoT2lwiE4vzYLSigJya
2I4P6i6kKWJKy+BhMHmUY5WzKDl43Vxcm5OWIqZdC4JEsnI5jtH9dNFknEm7
bLdxprrhC1UWo6HE2kuaukp/erQXEXYHnY3N4r2BMVpjGMW0nVFtOLuUnN83
RjYTnbkNxw2+OTzdWqgs8UzEOa0RtP9M3SmmCx9XfyIxKNlEWQfhsO1jYNd2
NS+uED07+vRN9qcsWzfK0sZmkq4FNw/BTci4nGmmEOgVZ2tWchfPR+i8ihul
sEiiVGmX1W9xWLFZ5fcT1iPMZnHSy1t2AJz9dgfA7yJmxjoqnu/v7Xd7KNpH
e+HZ6vRMMPq+UJ5nYixDqj4yAbgJWYgkYGY1sSx0D8EGOPmwrudoBunMhFOL
CsMuFMOEPcWRRbXkOTLXokMUmZlPePg08nHIMymXoBUM5FFmOQicnD8IVOLl
PXzvuktWtC1FFx7fCxRm96DQsXVew9DSw8PY50HMzCCA4Q6LEdUEgUnVRWtx
0j4PEcz7IpXFNYtPq0wBkP3HrnSoU8MZJj9yN0Ul1R2YPh2E6TQH1oLgHrUD
nAkyJnUnOS9TB+FUC1dRI6h2YPkTR3O2CrmnCyK4Q+YyqicpPZ4BIHxyfxKQ
v1ZtPw3Xb1GZTOZxR7GM4/hWqIXPFewwOI/CFVHeJpt+rlUnEliRAXiOoDd9
mlKiBesHHwvjWtpbHC72DmOVpPD0FT6+9RNgzPfeKRlJIefSTwCx3wvA7Due
3/OY+is9b0D0bz3+hU1n2U/2sBms+6Xv6dWuPcDs0pf8lByKMUIg62GOMXwN
2vZt24RWhcrq/NoI3qu36fHAXeUINlMYBHWgmURCVm8b/tV6GUGrfh46h/09
EkaydV2pjQ9fG20zSfZ/09pwi62l+Y1rE7TaW4BEfc8LI+5kelyqSy3Zkyh2
E1GmW4FQRzUjkZMI6RM5VgirraDU8memaFaqs8DQYTkVMmIGJoYO3cKpD5Rq
CUoq5JaNfNg1mP5yBHzIw0pGxpawEtoAbm9urK9max2zXwl6dIUc1kmUYukB
TLxCZTK7trI9Hx0IzV+UWPGZ9s3nU3CJVZLMVLmzhNU/7SIQo6xcL1Ukw53j
+BgyfbajCsTe7bxHXCknzg7SpzysWJ6ZYjmfOrAyV8FdEAVRFAtydQPHk1bi
MtEVVRix64xm/oS0E4C78gtjsKFqhqbUHtCUna3sJVuFaAOCYNOOGJeHWzst
hCmCniYEewT+JsMYJlIHhaGsvWVd/Hkoat3dyo7Ulmaf6QxeTgctZ5kLAEFy
Ag3f22JUTpWSvAM2lMnj+OMVQ2P1cfEBx3G4GsXsnBK6C1yacNX4W4Skuu82
KWVaiKJu1UNzuw2k+noU7RzGbQTu3cBfw3ltiWrb9uj1eidNMb0n3KSYZvcZ
opLgZA1otQ3hMLJvjFHUtYMua1cciBwEI7WjjG83tLDbAPbYOWHcGGpv55ig
IBjKyu4kgAErmhQjyr7LifMW01pLJuRnoD6Z6ftQAu+HGd0kbjimC5QTPcVr
z4+fvTw6OXr2dO+xUKs1SWbVHRDtObhN7SyLlJuTBj6RrMpqMJjPaqtAhAAD
vrClWWJjsC5rjxiAsKAzExowK/Ia1USbLZyU6MJ4Q8d1sxOWTU4LpLLN7Ebj
BfXtRUM1nVGwAwxudKNYoyL0NNqwFqbrzCL9IpmP04Kbtyxf+uB6aCKXlBS6
b5Dow4CPjMwhoaSQxj11T6mfIOD1HXZn9Sy3cIVEowy3CAd6iS4vIiNXOB2c
t4uIM3uL3mrVUXxOjsApusqDcEIqn9bAfs5zvReh3XUtore8lmtmw6CFC29r
BfpZ387amuzgd2R97ViglSyfcG1qjsLf4fnyy7tITAr6hHcXh6lX0ZIvdQjA
Ipin+4JkpuH+wP6cpIYt4TBwgu9/J/mP1pZLp7/bmJskav6wLjLeeqJnfNn7
oWV4NZ1Do2VIRiyahEPLhL84013LU//hmskgH6z58rmRRc3JbeJFGszmA4xN
oYHkJp4eziZGG4GsJuwleJOnSjB1ZwVx7U2Fmm2pPx7SPnl2cYrOQply9ihP
+Cgk1pSBb8Xyh5QW/QZOw/0Qr1bAm3jBVvBj15x6ZqWJVhxdJKkFs/jUpDt8
GDh3GBG9AKq7LZCkwoZQHGIcYHe44HwMXjNkBSNh7zzIXnjgaoZqyHB/04jY
bs4s7ZcalpDGwRa8VcHc3s6+Brp9rMCZIQS4gjfQ4tQupFzRe5UxOxdlQDiC
9IwPM1OwEekjWimKTitF3FXCSCEWd748LU93bUxz6XC6FLC9WISw7BYCLHNW
86JAI0Z9QZzgSYwQnPA5qFSuzhfFakkgf/ZeTCuOEZp6KK7gtpoQDndZU4J8
65qrIGr2NGuLoYQsqiu1RNhUIPfEzU+sQgjyLj1Dr0DU4fY5PUGq3kRyB4N2
X5c8Gv/lOSh9RfeRb+sIZlk+guT/1db9luy/V7sNZwoTuO/khEtPnhnEMRrJ
iO+jqFC0ICktOQshi3O4cS5Ow+2zz/zHKJ1E1nTIiwqV+gWsFkknp7PVReLg
anK2L6mXqie3RINYWV/4YD0orWsE2xapGp1hHah4rKhqBO3//jSNaHk+uqLh
r7Tf1P9/Kx3FSkpHSOaX6xwOczLmkniDgJOOtPZJ4EFx4GBRDEKgPhj+4qz1
Mi7nDVXhxdHr2NiDVJLPgn7yrbqmUjG9Upd9QWjv/fexNMom06nDYi8DHIfl
66KUPRUKoRrFUVIta7/YWsd0Lsg/L4jCyAfhUaIpOQUpFSFgnezxh51F5000
gC1sL/sovk33N//xkup6czSAiQ3wb4dNvkPVxjd1wsVz6W0XKGDfzta/O97f
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
+AhYvgzXL4te+mMvigzmuNHi5rvpj389Hj/+649Xw1dPqx//etQMxi/fDF+9
/HW4v3M9GG8/HI6/2vnh7uVoUB49hOcvB/eejgaT4+nZ3ft/65XPyu8uf7z7
cs5Pf3U/f7UzHX77uny8/92vP/71u+kPr66bs8nL5ofxy5ujX6ryycHhzZNf
v995+svg/rOTo/po/OBvvauz8dMRfnt68PS7k19+rAbfHh99vz06Ptt+cP+H
V4/KZy8u//r96fZXR+V1+cO970Y//PV49OP+ztUZjOnol6PrJ78c/a3XPDn4
vnnyy48vnhy8ePjk9Af4dzB/+uveg1cl9vNo8uOrB9uP//r1zdm9H6c/fvPy
Nf9+OT17NdouTnZufnw1/FtvOrh3fPMDrMMPd1/eDPeh/dc73528ONrOXz89
+P7laPrj9qN7Jy+++/rH7dG337+8/PHpr9+VP4ymT79/9dW3328/fXO88/Rv
vadPD0b737/YOTh9cfyyOHz58PuX3+3/uP3g1fevH12dvng6e3L68vhs9OPD
H14Ods6+efLr6V8vD18ePnry/Xj47OXr777+YXvnb73949cPrn88HP6/7b1t
c6NKtjX43b/CcfrLORNVdQFZPsf9xDMRJRmQkEFWQiaCpyZOIFAVEiBhSbZe
Ovq/z9oJ6MV21am+9z4TMTMd0d3VtqUkc+fea6+1M5NEC+x2xNtNC47HrTUv
dnNbtXQuWCfkYcvu5Q7TRRtPnCdK+4l5zBF6+eUqZYt4O81UnY3xCdNpeUVp
OLrK3cJw2D27YeOywzNr4cGmGIUz0tY7RxjPYlGm4iDWwYFGhD7wEd81fZij
D6a36GRMFTdMYR2h1C1wFa123KSwxmzRmU30cu3PrfW0YF+u+m6RzqPMivBt
hylWO+aJ53mj9shPDKY498efx4nh6vrW5UZ3VKA/2fol8uL2RLW+XK3cgwjh
UaPwkAqu9m8eWuJg+2wk/DxydVWZaBsv7BkP6H0xyZPDqBitYmHZjpq4YRHm
Qtt8uWrDb2cTpSxcf7dOxtY88vpqorWXEb/zR0ryFI7LrsPVrq0nHVuIzM0N
JhS1y3lyP2o5mH3jy5VgmdXCaLqhluwxewZ+ZoHC+kw3HqvZTNlQh7/MU4Pm
bqT0FYzOgy/pIu9vYfkvVwYbJyNHz7NAU/1JYQTevDOf8LDtGalL/sHHYm4X
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
uHehwfZG0soeb4PuotUOAuv3/aDVTlrrzX755345e/w6+Pzdg4jHM2g/cxbx
Lw4Q/tRxxNM367vHqlOHdPSNjsFVxwA/yDcgXt7z86+9EO3NLWnvPOWvH/Jz
h/Guv3tmrh5sdW7uTr39339s7r0Tcz86Idecj/ty9V95KVrzSrQvV/+Vl6I1
r0T7cnV6Kdr827Nz6GuyZrXolJOieqnSRFPTyL959doza0tntUdCbJCeSWse
X3wWb0O+U93u5vzFZz/z2rMvV3/14rOfee3ZRfJKH4Wuqx4SBelMz3OcaVZW
yYvf8ZFHxyAE1ZkcW1Fv5WvPDEGvPQPU/8WLz3782rNL9Uznvotd9bqujLF/
8Uw9dK+nbbRIZf3ES9nEGB2QQAY2vYPKi1ei5fQ9rb8VAq0rhp3oMbSMeACt
eop8cWPfBy+cXjkROqIziHxLC5WUj2Yb80E1eFQk+URPe1OQVLfVaVHtLWg5
3tQ3nnjOukxXu26ltjO5FmeMZnQ2PXeQxGGb4GakIAmMEz2sCSDXkdjfTzdN
siElb4LKcvWW++zAundPD/vNwu/+gedbA8RS/0FNNyAW79Q+k6Gb0SvI0JdO
RKq8h7Sy31iennS5nitc+6YE83zsm2ngLcQyFs7Iyb6tgtmdPdrfFSLP9SjX
tYl8cQyjWvlCuCMFun6hH6Z+2nW8lPvgG8Gi7A+7m8eJmY7FOHycGJZuq6ER
c5YFqtGiF8f853VesbklFinM/ELngdl0o8xZ+d/Xef/Kyy10yQn/qy+3oNc4
0Mst6O2A9LbARxk2ObNsXTUnKgWqLO8YFFZwhiF+3npyCzW7ZXwHKNgcS8TE
kUHoM4RJzpqSngwzpouLPnCv355C57BxByHoNMVWwE2iJc3LKupvsJmtlICh
MEoKNoaoh8bKF1SunRSWfF3GlFs2uD4dXeEjgRF1weCORUK3elPf8Wd6cx8Y
7/2IG97oEM4Aap2JL3a2CFtOkbM4tw5DOsK09fN45Zh9wFzSDk11HB+sHixq
ilYyi5Ae7KJt+fq3g9cy+q4aqsOeveeLsIQLDyO4lUvvJ+u6eqqMClayTET+
Ipw52t0NceW/eFvgeSHky9W774BxPTbyfesm6TkHsMs9WroBH1SmuXjhYHq8
5bRDfXuAqoQV2gjxxHSGQx+6zkhHlW4KrWDuvAyU8NFWLI4UZLOFk7p56WJm
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
6GfRt1VUUPSuCzyRen+cs9rVqys035ip/dpMt9JMXDoOda25xfZ4KR/+2q9c
9hbJQ17TPV1Mk/OL1RukqK5fXhGAVLetE+ogaGcSdcp8ua8uBUSLTRreSLim
z9Ili6eGlq+uOW5SK7mhdJblu1fMounT/eK1W106nqt37/vsehqt8n3ziV/P
oeuCtWByz6JB3rpXzetvf/2k/tD773nS21m8eT2LbTmLYJ7NbZbJhbem0ctU
XnJa31+5rpNbc81gdXu2vPNQOixdvCyzDP1wmvJzXvOhAbLfNTz5c0KT+b1L
UOkxz/JyWXll8s/f8Ns8oo1HdI/povK6j3Rdp7w9sqIP1ZWCGPNzdW/n6dst
aRoEvbxFtLm9+iOBfx3dq9m3b9PmPtTl9ZrMNcHYIV+It8tbgOn7NS7s5I3e
6Wr5/C2tk9f69DiFOivB+TInkhVOl19f3nwtGVvj6vX9uxf3glcJJVnW9/Uu
phUpmMgLRqsvHHtwe3ucEQqq0xWqKbIQ3W+O/F5MCcd/rW75Tj4uF79JxAWZ
Obs3+Ctsmy5kGqcLsKOLeb89N+sx4dDXu58718Zy9VxQr5veVunzusPcQf/j
I7OPcx/Ja7mbRmmm9Yb+TlcrCSJJdb9z47XtT+1P6vErrbsP+N7N+fe+exkv
MfUVUm78+k/H1tp3J7xrK2chPtlXg1zV91RS2DwjAcrL5U9U+3iT66mZm9+r
9bXXOf7VReh1m2u62/tHvtBccd39LO1PivGVo6HtX856VAX3Lx+ufzm1Irtw
/P3Zh5u0c/zjdBN/OlpH+/38mZTrmuU9gD4MdUpy9Pp5krGVKmnuVD765TmF
QnelfejRM2ne4wjluN9MfYVKZ7/RTs5Arn8vb95NLjKKdL46XU2Wyw1Zt1pG
rGFktqCnnzyx1T5/7mvCJV+53//sfH7PxU5fqh7457SUSuCY9I6XoFKn1tMX
uYpaWXz9+qn1/an/PKMJjc2bNV1aWj15cIvi8nH5WI14JQkmmP3+EmPOHeqo
iRGuBQYQUd3gQ8Pp/tbS5Kj+dnMWGq23Gqq6jP4Iz5VwiiWBifMZPOM/6Pp6
gA7162t9rS4kzm8XOrWJGe1N+6eSCcGJ9DAZUdX9A2+SQVVxWVBsrmWxptaj
e3RsE6fySxHsublGzFxfLoefrg1YUi+3M/xhtqmfm6yW5Tn5qe+IX2bT15L1
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
AgA=

-->

</rfc>

