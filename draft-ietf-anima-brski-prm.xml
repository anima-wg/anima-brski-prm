<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-13" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 131?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 139?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts including the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge that is in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname, as the latter is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>Either IDevID certificate or LDevID certificate of the EE.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enroll-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new Agent-Proximity Assertion value {#agt_prx} is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="196" y="324">EE</text>
<text x="228" y="324">cert</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |    EE cert |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to the following differences compared to BRSKI:  <list style="symbols">
      <t>The pledge is discovered by the Registrar-Agent as defined in {#discovery_uc2_ppa}.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_ep"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided by the Registrar-Agent in the voucher-request trigger as defined in <xref target="tpvr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different from those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected simultaneously and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: Provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.  <list style="symbols">
      <t>The Registrar-Agent triggers one or more pledges to create bootstrapping artifacts such as the voucher-request and the Enroll-Request.
It can then perform a (bulk) bootstrapping based on the collected data.</t>
      <t>The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, and IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on an LDevID, which is provided by the PKI responsible for the customer domain.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
In contrast to <xref target="RFC8995"/>, a BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent.</t>
  <t>Vendor Services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the Agent-Proximity Assertion {#agt_prx}.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>.</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
Agent-proximity is therefore a different assertion than "proximity", which is defined in <xref section="4" sectionFormat="of" target="RFC8366"/>.
Agent-proximity is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This assertion can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the registrar certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.
In a similar fashion, the pledge <bcp14>MUST</bcp14> accept the Registrar-Agent EE certificate provisionally.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For agent-proximity, the EE certificate of the Registrar-Agent <bcp14>MUST</bcp14> be an LDevID certificate signed by the domain owner.
Akin to the proximity assertion in the BRSKI case, the agent-proximity provides pledge proximity evidence to the MASA.
But additionally, agent-proximity allows the domain registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent, to which the registrar is connected to.</t>

<t>The provisioning of the Registrar-Agent LDevID certificate is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="domain-registrar"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
These endpoints accommodate for the signature-wrapped objects used by BRSKI-PRM for the Pledge Enroll-Request (PER) and the provisioning of CA certificates.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Request CA Certificates</c>
      <c><xref target="req_cacerts"/></c>
</texttable>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the Pledge Voucher-Request.
This behavior is retained in BRSKI-PRM.</t>

<t>The domain registrar <bcp14>MUST</bcp14> possess and trust the IDevID (root or issuing) CA certificate 
of the pledge vendor/manufacturer.</t>

<t>Further, the domain registrar <bcp14>MUST</bcp14> have its own EE credentials.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credential for client authentication during the TLS session establishment and switch switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the EE certificate of the Registrar-Agent.</t>

<t>Alternatively, this may be supported by using an LDevID certificate signed by the domain owner for the client authentication of the Registrar-Agent.
Using an LDevID certificate also allows the registrar to verify that a Registrar-Agent is authorized to perform the bootstrapping of a pledge.
See also agent-proximity assertion in <xref target="agt_prx"/>.</t>

<t>Using an LDevID certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the IDevID credential of the pledge is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="registrar-agent"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a secure message passing service between pledges in responder mode and the domain registrar.</t>

<t>It requires the EE certificate of the domain registrar for TLS server authentication when establishing a TLS session with the domain registrar and to provide the registrar EE certificate to the pledge for creating the Pledge Voucher-Request (PVR).</t>

<t>The Registrar-Agent uses its own EE certificate for TLS client authentication when establishing a TLS session with the domain registrar and for signing agent-signed data.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="tpvr"/>.</t>

<t>Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> has a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE certificate of the Registrar-Agent to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>In addition to the EE certificates, the Registrar-Agent is provided with the product serial number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product serial number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Domain registrar EE certificate: certificate of the domain registrar to be provided to the pledge.</t>
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to sign agent-signed-data.</t>
  <t>Serial number(s): product serial number(s) of pledge(s) to be bootstrapped for discovery.</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"&lt;product-serial-number&gt;._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_ep"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI "http://pledge.example.com/.well-known/brski/tpvr", it sets the Host header field to "pledge.example.com" and the absolute path "/.well-known/brski/tpbr".
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the IDevID of the pledge.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through data objects that are not bound to specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
Therefore, authenticated self-contained artifacts (e.g., JWS-signed JSON structures or COSE-signed CBOR structures) are used for the data exchanges between the pledge and the registrar via the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1856" width="576" viewBox="0 0 576 1856" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,736" fill="none" stroke="black"/>
<path d="M 16,800 L 16,912" fill="none" stroke="black"/>
<path d="M 16,976 L 16,1040" fill="none" stroke="black"/>
<path d="M 16,1104 L 16,1168" fill="none" stroke="black"/>
<path d="M 16,1232 L 16,1280" fill="none" stroke="black"/>
<path d="M 16,1344 L 16,1408" fill="none" stroke="black"/>
<path d="M 16,1472 L 16,1584" fill="none" stroke="black"/>
<path d="M 16,1648 L 16,1696" fill="none" stroke="black"/>
<path d="M 16,1760 L 16,1824" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,912" fill="none" stroke="black"/>
<path d="M 168,976 L 168,1040" fill="none" stroke="black"/>
<path d="M 168,1104 L 168,1168" fill="none" stroke="black"/>
<path d="M 168,1232 L 168,1280" fill="none" stroke="black"/>
<path d="M 168,1344 L 168,1408" fill="none" stroke="black"/>
<path d="M 168,1472 L 168,1584" fill="none" stroke="black"/>
<path d="M 168,1648 L 168,1696" fill="none" stroke="black"/>
<path d="M 168,1760 L 168,1824" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,528" fill="none" stroke="black"/>
<path d="M 312,624 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,912" fill="none" stroke="black"/>
<path d="M 312,976 L 312,1040" fill="none" stroke="black"/>
<path d="M 312,1104 L 312,1168" fill="none" stroke="black"/>
<path d="M 312,1232 L 312,1280" fill="none" stroke="black"/>
<path d="M 312,1344 L 312,1408" fill="none" stroke="black"/>
<path d="M 312,1472 L 312,1552" fill="none" stroke="black"/>
<path d="M 312,1648 L 312,1696" fill="none" stroke="black"/>
<path d="M 312,1760 L 312,1824" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,632" fill="none" stroke="black"/>
<path d="M 456,720 L 456,736" fill="none" stroke="black"/>
<path d="M 456,800 L 456,912" fill="none" stroke="black"/>
<path d="M 456,976 L 456,1040" fill="none" stroke="black"/>
<path d="M 456,1104 L 456,1168" fill="none" stroke="black"/>
<path d="M 456,1232 L 456,1280" fill="none" stroke="black"/>
<path d="M 456,1344 L 456,1408" fill="none" stroke="black"/>
<path d="M 456,1472 L 456,1512" fill="none" stroke="black"/>
<path d="M 456,1568 L 456,1584" fill="none" stroke="black"/>
<path d="M 456,1648 L 456,1696" fill="none" stroke="black"/>
<path d="M 456,1760 L 456,1824" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,656" fill="none" stroke="black"/>
<path d="M 560,704 L 560,736" fill="none" stroke="black"/>
<path d="M 560,800 L 560,912" fill="none" stroke="black"/>
<path d="M 560,976 L 560,1040" fill="none" stroke="black"/>
<path d="M 560,1104 L 560,1168" fill="none" stroke="black"/>
<path d="M 560,1232 L 560,1280" fill="none" stroke="black"/>
<path d="M 560,1344 L 560,1408" fill="none" stroke="black"/>
<path d="M 560,1472 L 560,1584" fill="none" stroke="black"/>
<path d="M 560,1648 L 560,1696" fill="none" stroke="black"/>
<path d="M 560,1760 L 560,1824" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,576 L 224,576" fill="none" stroke="black"/>
<path d="M 256,576 L 304,576" fill="none" stroke="black"/>
<path d="M 320,640 L 416,640" fill="none" stroke="black"/>
<path d="M 456,640 L 552,640" fill="none" stroke="black"/>
<path d="M 320,656 L 424,656" fill="none" stroke="black"/>
<path d="M 456,656 L 552,656" fill="none" stroke="black"/>
<path d="M 320,704 L 408,704" fill="none" stroke="black"/>
<path d="M 472,704 L 552,704" fill="none" stroke="black"/>
<path d="M 176,720 L 208,720" fill="none" stroke="black"/>
<path d="M 272,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,816 L 216,816" fill="none" stroke="black"/>
<path d="M 256,816 L 304,816" fill="none" stroke="black"/>
<path d="M 176,832 L 224,832" fill="none" stroke="black"/>
<path d="M 256,832 L 304,832" fill="none" stroke="black"/>
<path d="M 320,848 L 360,848" fill="none" stroke="black"/>
<path d="M 400,848 L 448,848" fill="none" stroke="black"/>
<path d="M 320,864 L 368,864" fill="none" stroke="black"/>
<path d="M 400,864 L 448,864" fill="none" stroke="black"/>
<path d="M 320,880 L 336,880" fill="none" stroke="black"/>
<path d="M 432,880 L 448,880" fill="none" stroke="black"/>
<path d="M 176,896 L 192,896" fill="none" stroke="black"/>
<path d="M 288,896 L 304,896" fill="none" stroke="black"/>
<path d="M 176,992 L 216,992" fill="none" stroke="black"/>
<path d="M 256,992 L 304,992" fill="none" stroke="black"/>
<path d="M 176,1008 L 192,1008" fill="none" stroke="black"/>
<path d="M 280,1008 L 304,1008" fill="none" stroke="black"/>
<path d="M 176,1024 L 192,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 304,1024" fill="none" stroke="black"/>
<path d="M 24,1120 L 56,1120" fill="none" stroke="black"/>
<path d="M 128,1120 L 160,1120" fill="none" stroke="black"/>
<path d="M 24,1136 L 64,1136" fill="none" stroke="black"/>
<path d="M 128,1136 L 160,1136" fill="none" stroke="black"/>
<path d="M 24,1152 L 64,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1248 L 56,1248" fill="none" stroke="black"/>
<path d="M 128,1248 L 160,1248" fill="none" stroke="black"/>
<path d="M 24,1264 L 64,1264" fill="none" stroke="black"/>
<path d="M 128,1264 L 160,1264" fill="none" stroke="black"/>
<path d="M 24,1360 L 56,1360" fill="none" stroke="black"/>
<path d="M 128,1360 L 160,1360" fill="none" stroke="black"/>
<path d="M 24,1376 L 48,1376" fill="none" stroke="black"/>
<path d="M 144,1376 L 160,1376" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 120,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 176,1488 L 216,1488" fill="none" stroke="black"/>
<path d="M 256,1488 L 304,1488" fill="none" stroke="black"/>
<path d="M 176,1504 L 208,1504" fill="none" stroke="black"/>
<path d="M 272,1504 L 304,1504" fill="none" stroke="black"/>
<path d="M 320,1520 L 416,1520" fill="none" stroke="black"/>
<path d="M 456,1520 L 552,1520" fill="none" stroke="black"/>
<path d="M 320,1536 L 352,1536" fill="none" stroke="black"/>
<path d="M 520,1536 L 552,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 368,1552" fill="none" stroke="black"/>
<path d="M 504,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 176,1664 L 216,1664" fill="none" stroke="black"/>
<path d="M 256,1664 L 304,1664" fill="none" stroke="black"/>
<path d="M 176,1680 L 208,1680" fill="none" stroke="black"/>
<path d="M 272,1680 L 304,1680" fill="none" stroke="black"/>
<path d="M 24,1776 L 56,1776" fill="none" stroke="black"/>
<path d="M 128,1776 L 160,1776" fill="none" stroke="black"/>
<path d="M 24,1792 L 64,1792" fill="none" stroke="black"/>
<path d="M 128,1792 L 160,1792" fill="none" stroke="black"/>
<path d="M 24,1808 L 64,1808" fill="none" stroke="black"/>
<path d="M 128,1808 L 160,1808" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1536 548,1530.4 548,1541.6" fill="black" transform="rotate(0,552,1536)"/>
<polygon class="arrowhead" points="560,1520 548,1514.4 548,1525.6" fill="black" transform="rotate(0,552,1520)"/>
<polygon class="arrowhead" points="560,656 548,650.4 548,661.6" fill="black" transform="rotate(0,552,656)"/>
<polygon class="arrowhead" points="560,640 548,634.4 548,645.6" fill="black" transform="rotate(0,552,640)"/>
<polygon class="arrowhead" points="456,864 444,858.4 444,869.6" fill="black" transform="rotate(0,448,864)"/>
<polygon class="arrowhead" points="456,848 444,842.4 444,853.6" fill="black" transform="rotate(0,448,848)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,1520 316,1514.4 316,1525.6" fill="black" transform="rotate(180,320,1520)"/>
<polygon class="arrowhead" points="328,880 316,874.4 316,885.6" fill="black" transform="rotate(180,320,880)"/>
<polygon class="arrowhead" points="328,848 316,842.4 316,853.6" fill="black" transform="rotate(180,320,848)"/>
<polygon class="arrowhead" points="328,704 316,698.4 316,709.6" fill="black" transform="rotate(180,320,704)"/>
<polygon class="arrowhead" points="328,640 316,634.4 316,645.6" fill="black" transform="rotate(180,320,640)"/>
<polygon class="arrowhead" points="312,1680 300,1674.4 300,1685.6" fill="black" transform="rotate(0,304,1680)"/>
<polygon class="arrowhead" points="312,1664 300,1658.4 300,1669.6" fill="black" transform="rotate(0,304,1664)"/>
<polygon class="arrowhead" points="312,1504 300,1498.4 300,1509.6" fill="black" transform="rotate(0,304,1504)"/>
<polygon class="arrowhead" points="312,1488 300,1482.4 300,1493.6" fill="black" transform="rotate(0,304,1488)"/>
<polygon class="arrowhead" points="312,1008 300,1002.4 300,1013.6" fill="black" transform="rotate(0,304,1008)"/>
<polygon class="arrowhead" points="312,992 300,986.4 300,997.6" fill="black" transform="rotate(0,304,992)"/>
<polygon class="arrowhead" points="312,832 300,826.4 300,837.6" fill="black" transform="rotate(0,304,832)"/>
<polygon class="arrowhead" points="312,816 300,810.4 300,821.6" fill="black" transform="rotate(0,304,816)"/>
<polygon class="arrowhead" points="312,576 300,570.4 300,581.6" fill="black" transform="rotate(0,304,576)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1664 172,1658.4 172,1669.6" fill="black" transform="rotate(180,176,1664)"/>
<polygon class="arrowhead" points="184,1488 172,1482.4 172,1493.6" fill="black" transform="rotate(180,176,1488)"/>
<polygon class="arrowhead" points="184,1024 172,1018.4 172,1029.6" fill="black" transform="rotate(180,176,1024)"/>
<polygon class="arrowhead" points="184,992 172,986.4 172,997.6" fill="black" transform="rotate(180,176,992)"/>
<polygon class="arrowhead" points="184,896 172,890.4 172,901.6" fill="black" transform="rotate(180,176,896)"/>
<polygon class="arrowhead" points="184,816 172,810.4 172,821.6" fill="black" transform="rotate(180,176,816)"/>
<polygon class="arrowhead" points="184,720 172,714.4 172,725.6" fill="black" transform="rotate(180,176,720)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1808 156,1802.4 156,1813.6" fill="black" transform="rotate(0,160,1808)"/>
<polygon class="arrowhead" points="168,1776 156,1770.4 156,1781.6" fill="black" transform="rotate(0,160,1776)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1360 156,1354.4 156,1365.6" fill="black" transform="rotate(0,160,1360)"/>
<polygon class="arrowhead" points="168,1248 156,1242.4 156,1253.6" fill="black" transform="rotate(0,160,1248)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,1120 156,1114.4 156,1125.6" fill="black" transform="rotate(0,160,1120)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1792 20,1786.4 20,1797.6" fill="black" transform="rotate(180,24,1792)"/>
<polygon class="arrowhead" points="32,1776 20,1770.4 20,1781.6" fill="black" transform="rotate(180,24,1776)"/>
<polygon class="arrowhead" points="32,1376 20,1370.4 20,1381.6" fill="black" transform="rotate(180,24,1376)"/>
<polygon class="arrowhead" points="32,1360 20,1354.4 20,1365.6" fill="black" transform="rotate(180,24,1360)"/>
<polygon class="arrowhead" points="32,1264 20,1258.4 20,1269.6" fill="black" transform="rotate(180,24,1264)"/>
<polygon class="arrowhead" points="32,1248 20,1242.4 20,1253.6" fill="black" transform="rotate(180,24,1248)"/>
<polygon class="arrowhead" points="32,1136 20,1130.4 20,1141.6" fill="black" transform="rotate(180,24,1136)"/>
<polygon class="arrowhead" points="32,1120 20,1114.4 20,1125.6" fill="black" transform="rotate(180,24,1120)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="344" y="484">backend</text>
<text x="428" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="548">[Registrar-Agent</text>
<text x="308" y="564">authenticated&amp;authorized?]</text>
<text x="240" y="580">PVR</text>
<text x="312" y="580">|</text>
<text x="280" y="596">[accept</text>
<text x="348" y="596">device?]</text>
<text x="284" y="612">[contact</text>
<text x="352" y="612">vendor]</text>
<text x="436" y="644">mTLS</text>
<text x="440" y="660">RVR</text>
<text x="460" y="676">[extract</text>
<text x="536" y="676">DomainID]</text>
<text x="456" y="692">[update</text>
<text x="512" y="692">audit</text>
<text x="556" y="692">log]</text>
<text x="440" y="708">Voucher</text>
<text x="240" y="724">Voucher</text>
<text x="16" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="16" y="772">(4)</text>
<text x="60" y="772">Supply</text>
<text x="104" y="772">PER</text>
<text x="132" y="772">to</text>
<text x="184" y="772">Registrar</text>
<text x="268" y="772">(including</text>
<text x="344" y="772">backend</text>
<text x="428" y="772">interaction)</text>
<text x="16" y="788">~</text>
<text x="168" y="788">~</text>
<text x="312" y="788">~</text>
<text x="456" y="788">~</text>
<text x="560" y="788">~</text>
<text x="236" y="820">mTLS</text>
<text x="240" y="836">PER</text>
<text x="380" y="852">mTLS</text>
<text x="384" y="868">RER</text>
<text x="384" y="884">Enroll-Resp</text>
<text x="240" y="900">Enroll-Resp</text>
<text x="16" y="932">~</text>
<text x="168" y="932">~</text>
<text x="312" y="932">~</text>
<text x="456" y="932">~</text>
<text x="560" y="932">~</text>
<text x="16" y="948">(5)</text>
<text x="64" y="948">Request</text>
<text x="108" y="948">CA</text>
<text x="172" y="948">Certificates</text>
<text x="16" y="964">~</text>
<text x="168" y="964">~</text>
<text x="312" y="964">~</text>
<text x="456" y="964">~</text>
<text x="560" y="964">~</text>
<text x="236" y="996">mTLS</text>
<text x="236" y="1012">cACert-Req</text>
<text x="240" y="1028">cACert-Resp</text>
<text x="16" y="1060">~</text>
<text x="168" y="1060">~</text>
<text x="312" y="1060">~</text>
<text x="456" y="1060">~</text>
<text x="560" y="1060">~</text>
<text x="16" y="1076">(6)</text>
<text x="60" y="1076">Supply</text>
<text x="120" y="1076">Voucher</text>
<text x="164" y="1076">to</text>
<text x="204" y="1076">Pledge</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="76" y="1124">opt.</text>
<text x="112" y="1124">TLS</text>
<text x="96" y="1140">Voucher</text>
<text x="96" y="1156">vStatus</text>
<text x="16" y="1188">~</text>
<text x="168" y="1188">~</text>
<text x="312" y="1188">~</text>
<text x="456" y="1188">~</text>
<text x="560" y="1188">~</text>
<text x="16" y="1204">(7)</text>
<text x="60" y="1204">Supply</text>
<text x="100" y="1204">CA</text>
<text x="164" y="1204">Certificates</text>
<text x="228" y="1204">to</text>
<text x="268" y="1204">Pledge</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="76" y="1252">opt.</text>
<text x="112" y="1252">TLS</text>
<text x="96" y="1268">cACerts</text>
<text x="16" y="1300">~</text>
<text x="168" y="1300">~</text>
<text x="312" y="1300">~</text>
<text x="456" y="1300">~</text>
<text x="560" y="1300">~</text>
<text x="16" y="1316">(8)</text>
<text x="60" y="1316">Supply</text>
<text x="152" y="1316">Enroll-Response</text>
<text x="228" y="1316">to</text>
<text x="268" y="1316">Pledge</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="76" y="1364">opt.</text>
<text x="112" y="1364">TLS</text>
<text x="96" y="1380">Enroll-Resp</text>
<text x="88" y="1396">eStatus</text>
<text x="16" y="1428">~</text>
<text x="168" y="1428">~</text>
<text x="312" y="1428">~</text>
<text x="456" y="1428">~</text>
<text x="560" y="1428">~</text>
<text x="16" y="1444">(9)</text>
<text x="64" y="1444">Voucher</text>
<text x="124" y="1444">Status</text>
<text x="192" y="1444">Telemetry</text>
<text x="276" y="1444">(including</text>
<text x="352" y="1444">backend</text>
<text x="436" y="1444">interaction)</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="236" y="1492">mTLS</text>
<text x="240" y="1508">vStatus</text>
<text x="436" y="1524">mTLS</text>
<text x="368" y="1540">req</text>
<text x="412" y="1540">device</text>
<text x="464" y="1540">audit</text>
<text x="504" y="1540">log</text>
<text x="396" y="1556">device</text>
<text x="448" y="1556">audit</text>
<text x="488" y="1556">log</text>
<text x="264" y="1572">[verify</text>
<text x="320" y="1572">audit</text>
<text x="364" y="1572">log]</text>
<text x="312" y="1588">|</text>
<text x="16" y="1604">~</text>
<text x="168" y="1604">~</text>
<text x="312" y="1604">~</text>
<text x="456" y="1604">~</text>
<text x="560" y="1604">~</text>
<text x="20" y="1620">(10)</text>
<text x="68" y="1620">Enroll</text>
<text x="124" y="1620">Status</text>
<text x="192" y="1620">Telemetry</text>
<text x="16" y="1636">~</text>
<text x="168" y="1636">~</text>
<text x="312" y="1636">~</text>
<text x="456" y="1636">~</text>
<text x="560" y="1636">~</text>
<text x="236" y="1668">mTLS</text>
<text x="240" y="1684">eStatus</text>
<text x="16" y="1716">~</text>
<text x="168" y="1716">~</text>
<text x="312" y="1716">~</text>
<text x="456" y="1716">~</text>
<text x="560" y="1716">~</text>
<text x="20" y="1732">(11)</text>
<text x="64" y="1732">Query</text>
<text x="116" y="1732">Pledge</text>
<text x="172" y="1732">Status</text>
<text x="16" y="1748">~</text>
<text x="168" y="1748">~</text>
<text x="312" y="1748">~</text>
<text x="456" y="1748">~</text>
<text x="560" y="1748">~</text>
<text x="76" y="1780">opt.</text>
<text x="112" y="1780">TLS</text>
<text x="96" y="1796">tStatus</text>
<text x="96" y="1812">pStatus</text>
<text x="16" y="1844">~</text>
<text x="168" y="1844">~</text>
<text x="312" y="1844">~</text>
<text x="456" y="1844">~</text>
<text x="560" y="1844">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr-proc"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="req_cacerts"/> describes the retrival exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the certificate provisioning exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange (containing the LDevID (Pledge) certificate) initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>This exchange assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PVR via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field to <spanx style="verb">application/json</spanx>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact in the body of a 200 OK response.
The Content-Type field header of the response <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-voucher-request-trigger-tpvr"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters.
The following CDDL <xref target="RFC8610"/> explains the Pledge Voucher-Request Trigger structure.</t>

<figure title="CDDL for Pledge Voucher-Request Trigger" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">pledgevoucherrequesttrigger</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: X.509 v3 certificate structure of the domain registrar EE certificate (base64-encoded value); may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded JWS structure containing the SubjectKeyIdentifier of the EE (RegAgt) certificate and signing Data including the creation date and serial number of the pledge. Note that <xref target="I-D.ietf-anima-rfc8366bis"/> defines an opaque binary element for agent-signed data, for which the structure is defined in BRSKI-PRM.</t>
</list></t>

<figure title="JWS structure for the agent-signed-data member in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(prmasd)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The BRSKI-PRM Agent Signed Data structure <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="prmasd_CDDL_def"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains the BRSKI-PRM Agent Signed Data structure.</t>

<figure title="CDDL for BRSKI-PRM Agent Signed Data" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">prmasd</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: creation date and time as standard date/time string as defined in <xref target="RFC3339"/></t>
  <t><spanx style="verb">serial-number</spanx>: product-serial-number in the X520SerialNumber field of the IDevID certificate of the pledge as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
</list></t>

<t><xref target="prmasd_payload"/> below shows an example for unsigned BRSKI-PRM Agent Signed Data in JSON syntax.</t>

<figure title="Data example for prmasd" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> JWS structure <bcp14>MUST</bcp14> contain the following parameters (see <xref target="asd_header"/> for an example):</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<figure title="Protected Header example inside agent-signed-data" anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate.
Hence, the tPVR is an unsigned artifact and the pledge only accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

</section>
<section anchor="response-artifact-pledge-voucher-request-pvr"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact is a JWS Voucher Request as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
Its unsigned data <bcp14>SHALL</bcp14> be constructed similar to the Voucher-Request artifact defined in <xref target="RFC8995"/>.
It will contain additional data provided by the Registrar-Agent as specified in the following.</t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request:voucher as defined in <xref target="I-D.ietf-anima-rfc8366bis"/> and thus makes optional leaves in the YANG definition mandatory:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher data is extended with two additional parameters that <bcp14>MUST</bcp14> be included:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: base64-encoded registrar EE certificate (provided in tPVR by the Registrar-Agent); enables the registrar to verify that it is the desired registrar for handling the PVR</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded agent-signed-data (provided in tPVR by the Registrar-Agent); enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr_example"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "typ": "voucher-jws+json",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_2"/> shows the the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PER via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tper</spanx>.
As the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.
To avoid an empty request body an artifact is provided containing the description of the requested operation.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-enroll-request-trigger-tper"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>This document specifies the trigger for a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.</t>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters (tPER-data).
The following CDDL <xref target="RFC8610"/> explains the Pledge Enroll-Request Trigger structure.</t>

<figure title="CDDL for Pledge Enroll-Request Trigger" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork></figure>

<t>The enroll-type  allows for specifying arbitrary indications, which type of certificate is to be enrolled. 
BRSKI enris an enum, identifying what is being enrolled. 
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM defines only "enroll-generic-cert" for the enrollment of the generic LDevID certificate. 
Other specifications using this mechanism may define further values, e.g., to bootstrap application related certificates, e.g., indicated by a value "enroll-app-cert".</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="tper_CDDL_def"/>.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional data, like CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

</section>
<section anchor="response-artifact-pledge-enroll-request-per"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact is a JWS-signed PKCS#10 Certificate Signing Request (CSR) utilizing the csr-grouping of the <spanx style="verb">ietf-ztp-types</spanx> YANG module as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.</t>

<t>The pledge constructs the Pledge Enroll-Request (PER) artifact as a JWS structure containing the PKCS#10 request wrapped in ietf-ztp-types YANG structrue as JWS payload.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10 and <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain.
This generic LDevID certificate can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the enrollment endpoint <spanx style="verb">requestenroll</spanx> specified in this document to provide the Pledge Enroll-Request artifact to the Registrar.</t>

<t>The JWS Protected Header of the PER <bcp14>MUST</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: base64-encoded pledge IDevID certificate;
it <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate; if the certificate chain is not included, it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate</t>
</list></t>

<t>The body of the Pledge Enroll-Request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">p10-csr</spanx>: base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per_example"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including backend interaction)</name>

<t>Similar to BRSKI "requestvoucher" endpoint in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.</t>

<t>The Registrar-Agent has acquired one or more PVR and PER object pairs</t>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the exchanges for the Voucher Request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="416" width="576" viewBox="0 0 576 416" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,384" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,384" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,176" fill="none" stroke="black"/>
<path d="M 312,272 L 312,384" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,280" fill="none" stroke="black"/>
<path d="M 456,368 L 456,384" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,304" fill="none" stroke="black"/>
<path d="M 560,352 L 560,384" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,224 L 224,224" fill="none" stroke="black"/>
<path d="M 256,224 L 304,224" fill="none" stroke="black"/>
<path d="M 320,288 L 416,288" fill="none" stroke="black"/>
<path d="M 456,288 L 552,288" fill="none" stroke="black"/>
<path d="M 320,304 L 424,304" fill="none" stroke="black"/>
<path d="M 456,304 L 552,304" fill="none" stroke="black"/>
<path d="M 320,352 L 408,352" fill="none" stroke="black"/>
<path d="M 472,352 L 552,352" fill="none" stroke="black"/>
<path d="M 176,368 L 208,368" fill="none" stroke="black"/>
<path d="M 272,368 L 304,368" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,304 548,298.4 548,309.6" fill="black" transform="rotate(0,552,304)"/>
<polygon class="arrowhead" points="560,288 548,282.4 548,293.6" fill="black" transform="rotate(0,552,288)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(180,320,352)"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(180,320,288)"/>
<polygon class="arrowhead" points="312,224 300,218.4 300,229.6" fill="black" transform="rotate(0,304,224)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,368 172,362.4 172,373.6" fill="black" transform="rotate(180,176,368)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="196">[Registrar-Agent</text>
<text x="308" y="212">authenticated&amp;authorized?]</text>
<text x="240" y="228">PVR</text>
<text x="312" y="228">|</text>
<text x="280" y="244">[accept</text>
<text x="348" y="244">device?]</text>
<text x="284" y="260">[contact</text>
<text x="352" y="260">vendor]</text>
<text x="436" y="292">mTLS</text>
<text x="440" y="308">RVR</text>
<text x="460" y="324">[extract</text>
<text x="536" y="324">DomainID]</text>
<text x="456" y="340">[update</text>
<text x="512" y="340">audit</text>
<text x="556" y="340">log]</text>
<text x="440" y="356">Voucher</text>
<text x="240" y="372">Voucher</text>
<text x="16" y="404">~</text>
<text x="168" y="404">~</text>
<text x="312" y="404">~</text>
<text x="456" y="404">~</text>
<text x="560" y="404">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The HTTP request Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="tpvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the Voucher.</t>

<t>The HTTP response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> if no content negotiation is used.</t>

<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS".</t>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR, it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid or if the pledge-provided information could not be used with automated allowance.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref section="5.3" sectionFormat="of" target="RFC8995"/> followed by obtaining a voucher from the pledge's MASA according to <xref section="5.4" sectionFormat="of" target="RFC8995"/> with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Supply RVR to MASA (backend interaction)</name>

<t>The registrar needs to convert the PVR to an RVR and supply it to the MASA.</t>

<t>If the MASA address/URI is learned from the IDevID MASA URI extension (<xref section="2.3" sectionFormat="of" target="RFC8995"/>), then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC9052"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

<t>The registrar provides the EE certificate of the Registrar-Agent identified by the SubjectKeyIdentifier (SKID) in the header of the "agent-signed-data" from the PVR in its RVR (see also <xref target="rvr-proc"/>).</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-cert" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA may issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE certificate of the Registrar-Agent in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx response status codes as described in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
When successful, the Voucher will then be supplied via the registrar to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Issue Voucher by MASA (backend interaction)</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
{
  "ietf-voucher:voucher": {
    "assertion": "agent-proximity",
    "serial-number": "callee4711",
    "nonce": "base64encodedvalue==",
    "created-on": "2022-01-04T00:00:02.000Z",
    "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>Supply Voucher to Registrar (backend interaction)</name>

<t>After receiving the voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
The registrar then prepares the artifact to be provided via the registrar-agent to the pledge as described in the following section <xref target="exchanges_uc2_2_reg_signed_voucher"/>.</t>

</section>
<section anchor="exchanges_uc2_2_reg_signed_voucher"><name>Response Artifact: Registrar countersigned Voucher</name>
<t>The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key (of the Registrar) that the pledge received in the trigger for the PVR (see <xref target="tpvr_CDDL_def"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Reg))),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
{
  "ietf-voucher:voucher": {
     "assertion": "agent-proximity",
     "serial-number": "callee4711",
     "nonce": "base64encodedvalue==",
     "created-on": "2022-01-04T00:00:02.000Z",
     "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "typ": "voucher-jws+json",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor.
The registrar returns the voucher to the Registrar-Agent.</t>

</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including backend interaction)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,272" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 360,208" fill="none" stroke="black"/>
<path d="M 400,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 368,224" fill="none" stroke="black"/>
<path d="M 400,224 L 448,224" fill="none" stroke="black"/>
<path d="M 320,240 L 336,240" fill="none" stroke="black"/>
<path d="M 432,240 L 448,240" fill="none" stroke="black"/>
<path d="M 176,256 L 192,256" fill="none" stroke="black"/>
<path d="M 288,256 L 304,256" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,224 444,218.4 444,229.6" fill="black" transform="rotate(0,448,224)"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,256 172,250.4 172,261.6" fill="black" transform="rotate(180,176,256)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="380" y="212">mTLS</text>
<text x="384" y="228">RER</text>
<text x="384" y="244">Enroll-Resp</text>
<text x="240" y="260">Enroll-Resp</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>As specified in <xref target="tper"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per_example"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
</list></t>

</section>
<section anchor="enroll-pledge-by-domain-ca-backend-interaction"><name>Enroll Pledge by Domain CA (backend interaction)</name>

<t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the Enroll-Request with the corresponding domain CA.
It creates a Registrar Enroll-Request (RER) by utilizing the protocol expected by the domain CA.</t>

<t>The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.</t>

<t>The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>

</section>
<section anchor="response-artifact-enroll-response-enroll-resp"><name>Response Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="tper"/>).</t>

</section>
</section>
<section anchor="req_cacerts"><name>Request CA Certificates</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the request and provisioning of CA certificates in the infrastructure. 
The following subsections describe the corresponding artifacts.</t>

<figure title="CA certificates retrival exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 192,192" fill="none" stroke="black"/>
<path d="M 280,192 L 304,192" fill="none" stroke="black"/>
<path d="M 176,208 L 192,208" fill="none" stroke="black"/>
<path d="M 288,208 L 304,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,208 172,202.4 172,213.6" fill="black" transform="rotate(180,176,208)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="64" y="132">Request</text>
<text x="108" y="132">CA</text>
<text x="172" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="236" y="196">cACert-Req</text>
<text x="240" y="212">cACert-Resp</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-cacert-request-cacert-req"><name>Request Artifact: cACert-Request (cACert-Req)</name>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

</section>
<section anchor="response-artifact-cacert-response-cacert-resp"><name>Response Artifact: cACert-Response (cACert-Resp)</name>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64-encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in 
# General JWS Serialization syntax
{
  "payload": BASE64URL(certs),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="tpvr"/>.</t>
</list></t>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="tpvr"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.
<xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Voucher</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-voucher"><name>Request Artifact: Voucher</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the Pledge-Voucher-Request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="response-artifact-voucher-status-vstatus"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.
The reason-context is an arbitrary JSON object that may provide additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="vstat"/>.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": BASE64URL(pledge-voucher-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="voucher"/>.</t>

</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates aquired by the pledge-agent to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">cACerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact"><name>Request Artifact:</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64-encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the received wrapped CA certificate object using the domain certificate contained in the voucher. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 403 Forbidden. It signals that the object could not be verified and has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"/>.</t>
</list></t>

<t>In case of success, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t><xref target="exchangesfig_uc2_8"/> shows the supply of the Enroll-Response to the pledge.
The following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the Enroll-Response to the pledge by HTTP(S) POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Content-Type header when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="response-artifact-enroll-status-estatus"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>After enrollment processing the pledge <bcp14>MUST</bcp14> reply with a enrollment status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The enroll-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the enroll-status using its new LDevID credentials as shown in <xref target="estat"/>.
In failure case, the pledge <bcp14>SHALL</bcp14> use its IDevID credentials.
<xref section="5.9.4" sectionFormat="of" target="RFC8995"/> specifies the enrollment status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="estat"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains enroll-status response structure. 
It is similar as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/> with the optional fields set to mandatory as described above.</t>

<figure title="CDDL for pledge-enrollment-status response" anchor="e_stat_res_def"><artwork type="cddl" align="left"><![CDATA[
enrollstatus-trigger = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": BASE64URL(pledge-enroll-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including backend interaction)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status (vStatus) and enroll status (eStatus) from pledge.</t>
</list></t>

<figure><artset><artwork  type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,240" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="464" y="228">audit</text>
<text x="504" y="228">log</text>
<text x="396" y="244">device</text>
<text x="448" y="244">audit</text>
<text x="488" y="244">log</text>
<text x="264" y="260">[verify</text>
<text x="320" y="260">audit</text>
<text x="364" y="260">log]</text>
<text x="312" y="276">|</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>
<t>{: #exchangesfig_uc2_9 title="Voucher Status telemetry exchange" artwork-align="center"}~~~~ aasvg</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with HTTP 4xx/5xx status codes.
The Registrar-Agent may use the response status code to signal success/failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the Enroll-Response (certificate) and holds the corresponding private key.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"/>.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes.</t>

<t>Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide the dedicated endpoint for the Query Pledge Status operation.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent queries the Pledge Status via HTTP POST request on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the JWS-signed Status Trigger (tStatus) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge provides the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> reply to this request with the Pledge Status (pStatus) artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-artifact-status-trigger-tstatus"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query artifact is a JWS structure signing information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> defines the structure of the unsigned Status Query data (i.e., JWS payload):</t>

<figure title="CDDL for unsigned Status Trigger data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "created-on": tdate,
      "serial-number": text,
      "status-type": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> field is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the version <bcp14>MUST</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">created-on</spanx> field contains a standard date/time string following <xref target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> field takes the product-serial-number corresponding to the X520SerialNumber field of the IDevID certificate of the pledge.</t>

<t>The <spanx style="verb">status-type</spanx> value defined for BRSKI-PRM Status Query is <spanx style="verb">bootstrap</spanx>.
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).</t>

<t>As the Status Query artifact is defined generic, it may be used by other specifications to request further status information using other status types, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req_data"/> below shows an example for unsigned Status Query data in JSON syntax using status-type <spanx style="verb">bootstrap</spanx>.</t>

<figure title="Example of unsigned Status Query data in JSON syntax using status-type bootstrap for the Status Query artifact" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

<t>The Status Query data <bcp14>MUST</bcp14> be signed by the Registrar-Agent using its private key corresponding to the EE (RegAgt) certificate.
When using a JWS signature, the Status Query artifact looks as shown in <xref target="stat_req"/> and the Content-Type response header <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>:</t>

<figure title="Status Query Representation in General JWS JSON Serialization Syntax" anchor="stat_req"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(status-query)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>For details on <spanx style="verb">JWS Protected Header</spanx> and <spanx style="verb">JWS Signature</spanx> see <xref target="I-D.ietf-anima-jws-voucher"/> or <xref target="RFC7515"/>.</t>

</section>
<section anchor="response-artifact-pledge-status-pstatus"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>When the pledge receives a Status Query with status-type <spanx style="verb">bootstrap</spanx> it <bcp14>SHALL</bcp14> respond with previously collected telemetry information (see <xref target="vstatus"/> and <xref target="estatus"/>) in a single Pledge Status artifact.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t>The following CDDL defines the structure of the Pledge Status (pStatus) data:</t>

<figure title="CDDL for unsigned Pledge Status data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="stat_res"/>.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(status-response)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Request wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply Voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="4" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="1" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

   This offers the following advantages.  The origin of requests and
   responses can be authenticated independently of message transfer.
   This supports end-to-end authentication (proof of origin) also over
   multiple hops, as well as asynchronous operation of certificate
   enrollment.  This in turn provides architectural flexibility where
   and when to ultimately authenticate and authorize certification
   requests while retaining full-strength integrity and authenticity of
   certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-10"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2470?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response.</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
  <t>Reordered description in section <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
  <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="req_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
qbxzxZUBAwA=

-->

</rfc>

