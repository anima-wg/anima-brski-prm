<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.2.3) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-brski-prm-22" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.28.1 -->
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-22"/>
    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>
    <date year="2025"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    <abstract>
      <?line 136?>

<t>This document defines enhancements to Bootstrapping Remote Secure Key Infrastructure (BRSKI, RFC8995) as BRSKI with Pledge in Responder Mode (BRSKI-PRM).
BRSKI-PRM supports the secure bootstrapping of devices, referred to as pledges, into a domain where direct communication with the registrar is either limited or not possible at all.
To facilitate interaction between a pledge and a domain registrar the registrar-agent is introduced as new component.
The registrar-agent supports the reversal of the interaction model from a pledge-initiated mode, to a pledge-responding mode, where the pledge is in a server role.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
This approach is agnostic to enrollment protocols that connect a domain registrar to a key infrastructure (e.g., domain Certification Authority).</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>
  </front>
  <middle>
    <?line 146?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated with a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>
      <t>Security information pertaining to the customer domain, specifically, the customer domain certificate, is exchanged and authenticated through the use of signed data objects, namely the voucher artifacts, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>
      <t>For the certificate enrollment of devices, BRSKI relies on Enrollment over Secure Transport (EST, <xref target="RFC7030"/>) to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and an EST server.</t>
      <t>BRSKI addresses scenarios in which a pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>
      <ul spacing="normal">
        <li>
          <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
        </li>
        <li>
          <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and a domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
        </li>
        <li>
          <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
        </li>
        <li>
          <t>allows the application of Registrar-Agent credentials to establish TLS connections to a domain registrar; these are different from the pledge IDevID credentials.</t>
        </li>
        <li>
          <t>also enables the usage of alternative transports, both IP-based and non-IP (e.g., Bluetooth-based or NFC-based communication), between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
        </li>
      </ul>
      <t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
      <t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>
      <t>There may be pledges that can support both modes, initiator and responder mode.
In these cases, BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="RFC9733"/> to allow for more bootstrapping flexibility.
Providing information about capabilities of BRSKI components like the pledge or registrar is handled as part of the discovery. BRSKI-PRM relies only on a minimum necessary set of capabilities for the interaction and leaves the definition of more advanced mechanisms allowing to signal specific capabilities to <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

<t>This document makes use of the terms defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>
      <dl>
        <dt>authenticated self-contained object:</dt>
        <dd>
          <t>Describes a data object, which is cryptographically bound to an end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
        </dd>
        <dt>CA:</dt>
        <dd>
          <t>Certification Authority.
An entity, which issues certificates and maintains certificate revocation information.</t>
        </dd>
        <dt>CMS:</dt>
        <dd>
          <t>Cryptographic Message Syntax, as defined in <xref target="RFC5652"/>.</t>
        </dd>
        <dt>Commissioning tool:</dt>
        <dd>
          <t>Tool to interact with devices to provide configuration data.</t>
        </dd>
        <dt>CSR:</dt>
        <dd>
          <t>Certificate Signing Request, as defined in <xref target="RFC2986"/>.</t>
        </dd>
        <dt>Domain registrar:</dt>
        <dd>
          <t>An entity in the customer domain, which facilitates the interaction of a pledge or Registrar-Agent with a manufacturer service (MASA).
It operates as BRSKI-EST server for the pledge when requesting vouchers and certificates and acts as the client BRSKI-MASA client when requesting vouchers from the MASA. This component was introduced in <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Drop ship:</dt>
        <dd>
          <t>delivery of a component or product. This component was introduced in <xref target="RFC8995"/>.</t>
        </dd>
        <dt>EE:</dt>
        <dd>
          <t>End entity, as defined in <xref target="RFC9483"/>.
Typically, a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
        </dd>
        <dt>EE certificate:</dt>
        <dd>
          <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
        </dd>
        <dt>endpoint:</dt>
        <dd>
          <t>Term equivalent to resource in HTTP <xref target="RFC9110"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
        </dd>
        <dt>IDevID:</dt>
        <dd>
          <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>LDevID:</dt>
        <dd>
          <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>mTLS:</dt>
        <dd>
          <t>mutual Transport Layer Security, refers to mutual authenticated TLS as specified in <xref target="RFC8446"/>.</t>
        </dd>
        <dt>PER:</dt>
        <dd>
          <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
        </dd>
        <dt>POI:</dt>
        <dd>
          <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>POP:</dt>
        <dd>
          <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>PVR:</dt>
        <dd>
          <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
        </dd>
        <dt>RA:</dt>
        <dd>
          <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Registrar-Agent:</dt>
        <dd>
          <t>Component facilitating the data exchange between a pledge in responder mode and a domain registrar.</t>
        </dd>
        <dt>RVR:</dt>
        <dd>
          <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>
      <dl>
        <dt>BASE64(OCTETS):</dt>
        <dd>
          <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
        </dd>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
      <t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <tt>base64encodedvalue==</tt> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.
Note, base64-encoded values are mainly used for fields related to certificates like:
x5bag, x5c, agent-provided-proximity-registrar-cert, p10-csr</t>
    </section>
    <section anchor="scope-of-solution">
      <name>Scope of Solution</name>
      <section anchor="sup-env">
        <name>Supported Environments and Use Case Examples</name>
        <t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to a domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>
        <t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>
        <section anchor="building-automation">
          <name>Building Automation</name>
          <t>In building automation, a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>
          <t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>
          <t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>
        </section>
        <section anchor="infrastructure-isolation-policy">
          <name>Infrastructure Isolation Policy</name>
          <t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>
        </section>
        <section anchor="less-operational-security-in-the-target-domain">
          <name>Less Operational Security in the Target-Domain</name>
          <t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate an RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>
        </section>
      </section>
      <section anchor="potential-limitations">
        <name>Potential Limitations</name>
        <t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with one another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>
      </section>
    </section>
    <section anchor="req-sol">
      <name>Requirements Discussion and Mapping to BRSKI-PRM Functional Elements</name>
      <t>Based on the intended target environment described in <xref target="sup-env"/>, the following boundary conditions are derived to support bootstrapping of pledges in responder mode (acting as server):</t>
      <ul spacing="normal">
        <li>
          <t>To facilitate the communication between a pledge in responder mode and a registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
        </li>
        <li>
          <t>The security of communication between the Registrar-Agent and the pledge does not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like Bluetooth Low Energy (BLE) or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
        </li>
        <li>
          <t>The use of authenticated self-contained objects addresses both, the TLS connection establishment challenges and the technology stack challenge.
Note that the chosen approach does not provide confidentiality for the self-contained object, which can be provided by employing TLS.</t>
        </li>
        <li>
          <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition, the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
        </li>
        <li>
          <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <tt>proximity</tt> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
        </li>
      </ul>
      <t>At least the following properties are required for the voucher and enrollment processing:</t>
      <ul spacing="normal">
        <li>
          <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
        </li>
        <li>
          <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
        </li>
      </ul>
      <t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>
      <ul spacing="normal">
        <li>
          <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
        </li>
        <li>
          <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
        </li>
      </ul>
      <section anchor="tls-support-required">
        <name>TLS support required</name>
        <t>As already stated in <xref target="RFC8995"/>, and required by <xref target="I-D.ietf-uta-require-tls13"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>
        <t><xref target="I-D.ietf-uta-require-tls13"/> allows for continued use of TLS 1.2 for operational reasons.
<xref target="RFC8995"/> specified TLS 1.2 was the minimum, consistent with <xref target="RFC8996"/>.
<xref target="RFC8995"/> requires mutual TLS, and many frameworks, embedded SDKs and hardware load balancers did not, at the time of writing, have APIs that permitted mutual TLS to be done consistently across TLS 1.2 and TLS 1.3.
While TLS 1.3 is common in browsers, the use of mutual TLS with 1.3 is uncommon in browsers, and so working support for mutual TLS in frameworks is also uncommon.</t>
        <t>On the Registrar and MASA side, mutual TLS authentication combined with hardware TLS offload requires specific support for extensions, such as those provided by
TLS 1.2 and TLS 1.3 do client authentication at a different point in the state machine.
Frameworks do not at the time of this writing support this.
Sometimes this is due to lack of support for <xref target="RFC9440"/> or an equivalent.</t>
        <t>Many security certification schemes, such as FIPS-140, do not certify source code, but rather the resulting binary executable.  Even while TLS 1.3 source code is available, and new software can be added to existing platforms, replacing the TLS libraries on many embedded systems requires that the SDK vendor recertify the platform first.
In industrial settings, these platforms have long lifecycles.</t>
        <t>Thus, <xref target="RFC8995"/> and this document can not turn off TLS 1.2 until all parts of the ecosystem can run TLS 1.3.
That does not stop any of the parts of this ecosystem from deploying TLS 1.3 when possible, and for each part of the two or three transactions from negotiating TLS 1.3 in preference to TLS 1.2.</t>
      </section>
    </section>
    <section anchor="architecture">
      <name>Solution Architecture</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>For BRSKI-PRM, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>
        <t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/>.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>
        <t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>
        <t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>
        <t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>
        <t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>
        <t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>
        <ul spacing="normal">
          <li>
            <t>uses existing endpoints where the required functionality is provided.</t>
          </li>
          <li>
            <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
          </li>
          <li>
            <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
          </li>
        </ul>
        <figure anchor="uc2figure">
          <name>BRSKI-PRM architecture overview using Registrar-Agent</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,240 L 8,384" fill="none" stroke="black"/>
                <path d="M 80,240 L 80,384" fill="none" stroke="black"/>
                <path d="M 152,240 L 152,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,368 L 224,416" fill="none" stroke="black"/>
                <path d="M 256,240 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,240 L 328,336" fill="none" stroke="black"/>
                <path d="M 336,64 L 336,144" fill="none" stroke="black"/>
                <path d="M 376,152 L 376,232" fill="none" stroke="black"/>
                <path d="M 376,336 L 376,368" fill="none" stroke="black"/>
                <path d="M 424,240 L 424,336" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,416" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,144" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 8,240 L 80,240" fill="none" stroke="black"/>
                <path d="M 152,240 L 256,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 424,240" fill="none" stroke="black"/>
                <path d="M 88,304 L 144,304" fill="none" stroke="black"/>
                <path d="M 264,304 L 320,304" fill="none" stroke="black"/>
                <path d="M 152,336 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 224,368 L 424,368" fill="none" stroke="black"/>
                <path d="M 8,384 L 80,384" fill="none" stroke="black"/>
                <path d="M 224,416 L 424,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
                <polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
                <polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
                <polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
                <polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
                <polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="224" y="84">M</text>
                  <text x="280" y="84">anufacturer</text>
                  <text x="40" y="100">:</text>
                  <text x="224" y="100">A</text>
                  <text x="272" y="100">uthorized</text>
                  <text x="384" y="100">Ownership</text>
                  <text x="40" y="116">:</text>
                  <text x="224" y="116">S</text>
                  <text x="260" y="116">igning</text>
                  <text x="376" y="116">Tracker</text>
                  <text x="40" y="132">:</text>
                  <text x="224" y="132">A</text>
                  <text x="268" y="132">uthority</text>
                  <text x="40" y="148">:</text>
                  <text x="40" y="164">:</text>
                  <text x="40" y="180">:</text>
                  <text x="412" y="180">BRSKI-</text>
                  <text x="40" y="196">:</text>
                  <text x="404" y="196">MASA</text>
                  <text x="40" y="212">:</text>
                  <text x="248" y="212">...............................</text>
                  <text x="416" y="212">.........</text>
                  <text x="40" y="228">V</text>
                  <text x="128" y="228">.</text>
                  <text x="448" y="228">.</text>
                  <text x="128" y="244">.</text>
                  <text x="448" y="244">.</text>
                  <text x="128" y="260">.</text>
                  <text x="448" y="260">.</text>
                  <text x="44" y="276">Pledge</text>
                  <text x="116" y="276">BRSKI-</text>
                  <text x="204" y="276">Registrar-</text>
                  <text x="292" y="276">BRSKI-</text>
                  <text x="364" y="276">Domain</text>
                  <text x="448" y="276">.</text>
                  <text x="112" y="292">PRM</text>
                  <text x="184" y="292">Agent</text>
                  <text x="288" y="292">PRM</text>
                  <text x="376" y="292">Registrar</text>
                  <text x="448" y="292">.</text>
                  <text x="448" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="188" y="324">EE</text>
                  <text x="224" y="324">cert.</text>
                  <text x="356" y="324">EE</text>
                  <text x="392" y="324">cert.</text>
                  <text x="448" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="448" y="340">.</text>
                  <text x="44" y="356">IDevID</text>
                  <text x="128" y="356">.</text>
                  <text x="448" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="448" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="248" y="388">Key</text>
                  <text x="324" y="388">Infrastructure</text>
                  <text x="448" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="260" y="404">(e.g.,</text>
                  <text x="304" y="404">PKI</text>
                  <text x="336" y="404">CA)</text>
                  <text x="448" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="448" y="420">.</text>
                  <text x="288" y="436">.........................................</text>
                  <text x="260" y="452">Customer</text>
                  <text x="324" y="452">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t><xref target="uc2figure"/> shows the relations between the following main components:</t>
        <ul spacing="normal">
          <li>
            <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to a Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocols to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by a Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
              </li>
              <li>
                <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that a Registrar-Agent can request data required for bootstrapping the pledge.</t>
              </li>
              <li>
                <t>The pledge includes additional data in the PVR, which is provided and signed by a Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
              </li>
              <li>
                <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and a domain registrar.
This is for situations in which a domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  </t>
            <ul spacing="normal">
              <li>
                <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
              </li>
              <li>
                <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
              </li>
              <li>
                <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
              </li>
              <li>
                <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
              </li>
              <li>
                <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
          </li>
          <li>
            <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
              </li>
              <li>
                <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  </t>
            <ul spacing="normal">
              <li>
                <t>The default format for voucher artifacts (including voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
              </li>
              <li>
                <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="arch_nomadic">
        <name>Nomadic Connectivity</name>
        <t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the building automation use case mentioned in <xref target="building-automation"/>.</t>
        <figure anchor="uc3figure">
          <name>Registrar-Agent nomadic connectivity example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="464" viewBox="0 0 464 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 24,128 L 24,176" fill="none" stroke="black"/>
                <path d="M 96,128 L 96,176" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,64" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,448" fill="none" stroke="black"/>
                <path d="M 336,320 L 336,368" fill="none" stroke="black"/>
                <path d="M 384,72 L 384,312" fill="none" stroke="black"/>
                <path d="M 384,368 L 384,400" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,64" fill="none" stroke="black"/>
                <path d="M 432,320 L 432,368" fill="none" stroke="black"/>
                <path d="M 432,400 L 432,448" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 24,128 L 96,128" fill="none" stroke="black"/>
                <path d="M 104,160 L 184,160" fill="none" stroke="black"/>
                <path d="M 24,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 336,320 L 432,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 328,352" fill="none" stroke="black"/>
                <path d="M 336,368 L 432,368" fill="none" stroke="black"/>
                <path d="M 224,400 L 432,400" fill="none" stroke="black"/>
                <path d="M 224,448 L 432,448" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="392,312 380,306.4 380,317.6" fill="black" transform="rotate(90,384,312)"/>
                <polygon class="arrowhead" points="392,72 380,66.4 380,77.6" fill="black" transform="rotate(270,384,72)"/>
                <polygon class="arrowhead" points="336,352 324,346.4 324,357.6" fill="black" transform="rotate(0,328,352)"/>
                <polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
                <polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
                <polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="164" y="100">........................................</text>
                  <text x="8" y="116">.</text>
                  <text x="40" y="116">v</text>
                  <text x="320" y="116">.</text>
                  <text x="8" y="132">.</text>
                  <text x="248" y="132">.-.-.-.-.-.-.-.</text>
                  <text x="320" y="132">.</text>
                  <text x="8" y="148">.</text>
                  <text x="144" y="148">BRSKI-PRM</text>
                  <text x="192" y="148">:</text>
                  <text x="244" y="148">Registrar-</text>
                  <text x="304" y="148">:</text>
                  <text x="320" y="148">.</text>
                  <text x="8" y="164">.</text>
                  <text x="60" y="164">Pledge</text>
                  <text x="192" y="164">:</text>
                  <text x="224" y="164">Agent</text>
                  <text x="304" y="164">:</text>
                  <text x="320" y="164">.</text>
                  <text x="8" y="180">.</text>
                  <text x="116" y="180">L2</text>
                  <text x="140" y="180">or</text>
                  <text x="164" y="180">L3</text>
                  <text x="248" y="180">:-.-.-.-.-.-.-:</text>
                  <text x="320" y="180">.</text>
                  <text x="420" y="180">BRSKI-</text>
                  <text x="8" y="196">.</text>
                  <text x="140" y="196">connectivity</text>
                  <text x="216" y="196">^</text>
                  <text x="320" y="196">.</text>
                  <text x="412" y="196">MASA</text>
                  <text x="164" y="212">..........................!.............</text>
                  <text x="52" y="228">Pledge</text>
                  <text x="132" y="228">Installation</text>
                  <text x="216" y="228">!</text>
                  <text x="60" y="244">Location</text>
                  <text x="216" y="244">!</text>
                  <text x="256" y="244">Nomadic</text>
                  <text x="216" y="260">!</text>
                  <text x="276" y="260">connectivity</text>
                  <text x="216" y="276">!</text>
                  <text x="252" y="292">...........!....................</text>
                  <text x="424" y="292">.........</text>
                  <text x="128" y="308">.</text>
                  <text x="216" y="308">v</text>
                  <text x="456" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="208" y="324">.-.-.-.-.-.-.-.</text>
                  <text x="300" y="324">BRSKI-</text>
                  <text x="456" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="152" y="340">:</text>
                  <text x="204" y="340">Registrar-</text>
                  <text x="264" y="340">:</text>
                  <text x="296" y="340">PRM</text>
                  <text x="372" y="340">Domain</text>
                  <text x="456" y="340">.</text>
                  <text x="128" y="356">.</text>
                  <text x="152" y="356">:</text>
                  <text x="184" y="356">Agent</text>
                  <text x="264" y="356">:</text>
                  <text x="384" y="356">Registrar</text>
                  <text x="456" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="208" y="372">:-.-.-.-.-.-.-:</text>
                  <text x="456" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="456" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="456" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="248" y="420">Key</text>
                  <text x="324" y="420">Infrastructure</text>
                  <text x="456" y="420">.</text>
                  <text x="128" y="436">.</text>
                  <text x="260" y="436">(e.g.,</text>
                  <text x="304" y="436">PKI</text>
                  <text x="336" y="436">CA)</text>
                  <text x="456" y="436">.</text>
                  <text x="128" y="452">.</text>
                  <text x="456" y="452">.</text>
                  <text x="292" y="468">..........................................</text>
                  <text x="260" y="484">Customer</text>
                  <text x="324" y="484">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                          ^
........................................       |
.   v                                  .       |
. +--------+           .-.-.-.-.-.-.-. .       |
. |        | BRSKI-PRM : Registrar-  : .       |
. | Pledge |<--------->: Agent       : .       |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .       | BRSKI-
.          connectivity   ^            .       | MASA
..........................!.............       |
   Pledge Installation    !                    |
   Location               ! Nomadic            |
                          ! connectivity       |
                          !                    |
               ...........!....................|.........
               .          v                    v        .
               .  .-.-.-.-.-.-.-. BRSKI- +-----------+  .
               .  : Registrar-  :  PRM   | Domain    |  .
               .  : Agent       :<------>| Registrar |  .
               .  :-.-.-.-.-.-.-:        +-----+-----+  .
               .                               |        .
               .           +-------------------+-----+  .
               .           | Key Infrastructure      |  .
               .           | (e.g., PKI CA)          |  .
               .           +-------------------------+  .
               ..........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>BRSKI-PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>
        <ol spacing="normal" type="1"><li>
            <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
          </li>
        </ol>
        <t>Variations of this setup include cases where the Registrar-Agent uses for example, WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>
      </section>
      <section anchor="colo-regagt">
        <name>Co-located Registrar-Agent and Domain Registrar</name>
        <t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously interact with a domain registrar during onboarding, through discovery, voucher exchange, and enrollment.
This may increase the load on the domain registrar, specifically, if a larger number of pledges onboards simultaneously.</t>
        <figure anchor="uc4figure">
          <name>Registrar-Agent integrated into Domain Registrar example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="464" viewBox="0 0 464 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,160 L 8,208" fill="none" stroke="black"/>
                <path d="M 80,160 L 80,208" fill="none" stroke="black"/>
                <path d="M 200,32 L 200,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 216,288" fill="none" stroke="black"/>
                <path d="M 368,72 L 368,136" fill="none" stroke="black"/>
                <path d="M 368,224 L 368,256" fill="none" stroke="black"/>
                <path d="M 416,144 L 416,224" fill="none" stroke="black"/>
                <path d="M 416,256 L 416,288" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,64" fill="none" stroke="black"/>
                <path d="M 200,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 200,64 L 424,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 416,144" fill="none" stroke="black"/>
                <path d="M 8,160 L 80,160" fill="none" stroke="black"/>
                <path d="M 88,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 8,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 208,224 L 416,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 416,256" fill="none" stroke="black"/>
                <path d="M 216,288 L 416,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
                <polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
                <g class="text">
                  <text x="48" y="52">.....</text>
                  <text x="92" y="52">Drop</text>
                  <text x="132" y="52">Ship</text>
                  <text x="176" y="52">.....</text>
                  <text x="236" y="52">Vendor</text>
                  <text x="296" y="52">Service</text>
                  <text x="32" y="68">:</text>
                  <text x="32" y="84">:</text>
                  <text x="32" y="100">:</text>
                  <text x="420" y="100">BRSKI-MASA</text>
                  <text x="32" y="116">:</text>
                  <text x="240" y="116">...............................</text>
                  <text x="408" y="116">.........</text>
                  <text x="32" y="132">:</text>
                  <text x="120" y="132">.</text>
                  <text x="440" y="132">.</text>
                  <text x="32" y="148">v</text>
                  <text x="120" y="148">.</text>
                  <text x="440" y="148">.</text>
                  <text x="120" y="164">.</text>
                  <text x="156" y="164">BRSKI-</text>
                  <text x="268" y="164">..............</text>
                  <text x="440" y="164">.</text>
                  <text x="120" y="180">.</text>
                  <text x="152" y="180">PRM</text>
                  <text x="216" y="180">.</text>
                  <text x="268" y="180">Registrar-</text>
                  <text x="320" y="180">.</text>
                  <text x="356" y="180">Domain</text>
                  <text x="440" y="180">.</text>
                  <text x="44" y="196">Pledge</text>
                  <text x="216" y="196">.</text>
                  <text x="248" y="196">Agent</text>
                  <text x="320" y="196">.</text>
                  <text x="368" y="196">Registrar</text>
                  <text x="440" y="196">.</text>
                  <text x="100" y="212">L2</text>
                  <text x="124" y="212">or</text>
                  <text x="148" y="212">L3</text>
                  <text x="268" y="212">..............</text>
                  <text x="440" y="212">.</text>
                  <text x="140" y="228">connectivity</text>
                  <text x="440" y="228">.</text>
                  <text x="120" y="244">.</text>
                  <text x="440" y="244">.</text>
                  <text x="120" y="260">.</text>
                  <text x="440" y="260">.</text>
                  <text x="120" y="276">.</text>
                  <text x="240" y="276">Key</text>
                  <text x="316" y="276">Infrastructure</text>
                  <text x="440" y="276">.</text>
                  <text x="120" y="292">.</text>
                  <text x="440" y="292">.</text>
                  <text x="280" y="308">.........................................</text>
                  <text x="252" y="324">Customer</text>
                  <text x="316" y="324">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         | BRSKI-MASA
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    . BRSKI-   |..............           |  .
 |        |    .  PRM     |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of stand-alone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>
      </section>
      <section anchor="agt_prx">
        <name>Agent Proximity Assertion</name>
        <t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicates via a Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <tt>agent-proximity</tt>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>
        <t>In BRSKI, the pledge verifies POP of the registrar end-entity (EE) credentials via the TLS handshake and pins that public key as the <tt>proximity-registrar-cert</tt> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>
        <t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>
        <t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>
      </section>
    </section>
    <section anchor="system-components">
      <name>System Components</name>
      <section anchor="agent_component">
        <name>Registrar-Agent</name>
        <t>The Registrar-Agent uses its own EE certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.</t>
        <t>The Registrar-Agent EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference within agent-signed data objects as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>
        <t>The SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate in agent-signed data objects to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>
        <t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short-lived Registrar-Agent EE certificates in the range of days or weeks.
This is to address the assumed nature of stand-alone Registrar-Agents as nomadic devices (see <xref target="arch_nomadic"/>) and to avoid potential misuse as outlined in <xref target="sec_cons_reg-agt"/>.</t>
        <t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>
        <t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow for the discovery of pledges by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an (out-of-band) interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number data record.</t>
        <t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before the interaction with a pledge:</t>
        <ul spacing="normal">
          <li>
            <t>Registrar-Agent EE certificate and corresponding private key: own operational credentials to authenticate and sign agent-signed data</t>
          </li>
          <li>
            <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
          </li>
          <li>
            <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
          </li>
        </ul>
        <t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.
In case the registrar-agent does not have synchronized time, it may not be able to verify the registrar EE certificate during the optional TLS handshake.
As the registrar-agent is recommended to utilize short-lived certificates in <xref target="sec_cons_reg-agt"/>, a registrar-agent may use the valid from time of its short-lived certificate for time synchronization.</t>
        <t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge manufacturer/vendor to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
        <section anchor="discovery_uc2_reg">
          <name>Discovery of the Registrar</name>
          <t>While the Registrar-Agent requires an IP address of a domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>
          <t>Moreover, the discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence that discovery is not applicable.</t>
          <t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
For further discussion, see <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
        </section>
        <section anchor="discovery_uc2_ppa">
          <name>Discovery of the Pledge</name>
          <t>The discovery of the pledge by the Registrar-Agent in the context of this document describes the minimum discovery approach that <bcp14>MUST</bcp14> be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS, is discussed in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref section="9" sectionFormat="of" target="RFC6762"/> provides support for conflict resolution in situations when a DNS-SD with mDNS responder receives an mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>
          <t>The pledge constructs a Service Instance Name based on device local information (manufacturer/vendor name and serial number), which results in <tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>.
The product-serial-number composition is manufacturer-dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance.
To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>
          <t>Note that the service name definition is not fully inline with the naming recommendation of <xref target="RFC6763"/> due to the positioning of <tt>_tcp</tt>. However, the definition of the <tt>product-serial-number</tt> has to align with the allowed character set (see <xref target="RFC6763"/>) to avoid discovery problems. This check is necessary as the <tt>product-serial-number</tt> is also contained in the certificate as X520SerialNumber, that has a larger allowed character set. Using the <tt>product-serial-number</tt> as part of the service name allows to discover specific instances of a pledge.</t>
          <t>The <tt>_brski-pledge._tcp</tt> service, however, targets machine-to-machine discovery.</t>
          <t>For discovery the Registrar-Agent <bcp14>MUST</bcp14> use</t>
          <ul spacing="normal">
            <li>
              <t><tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>, to discover a specific pledge, e.g., when connected to a local network</t>
            </li>
            <li>
              <t><tt>_brski-pledge._tcp.local</tt> to get a list of pledges to be bootstrapped</t>
            </li>
          </ul>
          <t>if it does not support a more general discovery such as defined in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>When supporting different options for discovery, as outlined in <xref target="I-D.ietf-anima-brski-discovery"/>, a manufacturer may support configuration of preferred options.</t>
          <t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer supports this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>
          <t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet, network connectivity can be provided, e.g., via a switch to an operational network or to a specific VLAN for bootstrapping, depending on an operators security policy.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.draft-ietf-emu-eap-arpa"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>
        </section>
      </section>
      <section anchor="pledge_component">
        <name>Pledge in Responder Mode</name>
        <t>In BRSKI-PRM, the pledge is triggered by a Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>
        <t>To enable interaction as responder with a Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints "tpvr", "tper", "svr", "scac", and "ser" defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> URI path.
The optional endpoint "qps" <bcp14>SHOULD</bcp14> be supported.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>
        <table anchor="pledge_ep_table">
          <name>Well-Known Endpoints on a Pledge in Responder Mode</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">
                <xref target="tpvr"/></td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">
                <xref target="tper"/></td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply Voucher to Pledge</td>
              <td align="left">
                <xref target="voucher"/></td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA Certificates to Pledge</td>
              <td align="left">
                <xref target="cacerts"/></td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to Pledge</td>
              <td align="left">
                <xref target="enroll_response"/></td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query Pledge Status</td>
              <td align="left">
                <xref target="query"/></td>
            </tr>
          </tbody>
        </table>
        <t>HTTP(S) uses the Host header field (or :authority in HTTP/2) to allow for name-based virtual hosting as explained in <xref section="7.2" sectionFormat="of" target="RFC9110"/>.
This header field is mandatory, and so a compliant HTTP(S) client is going to insert it, which may be just an IP address.
In the absence of a security policy the pledge <bcp14>MUST</bcp14> respond to all requests regardless of the Host header field provided by the client (i.e., ignore it).
A security policy  may include a rate limiting for requests to avoid susceptibility of the pledge to overload.
Note that there is no requirement for the pledge to operate its BRSKI-PRM service on port numbers 80 or 443, so there is no reason for name-based virtual hosting.</t>
        <t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <tt>http://pledge.example.com/.well-known/brski/tpvr</tt>, it sets the Host header field to <tt>pledge.example.com</tt> and the absolute path <tt>/.well-known/brski/tpbr</tt>.
In practice, however, the pledge is usually known by a <tt>.local</tt> hostname or only its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>
        <t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the voucher-requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>
        <section anchor="pledge-with-combined-functionality">
          <name>Pledge with Combined Functionality</name>
          <t>Pledges may support both initiator and responder mode.</t>
          <t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-like attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>
          <t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>
        </section>
        <section anchor="pledgestatus-reason-context-values">
          <name>Pledgestatus "reason-context" Values</name>
          <t>The following table provides an overview of "reason-context" values and further details of pledgestatus data objects:</t>
          <table anchor="reason-context_pstatus_table_uri">
            <name>Pledgestatus "reason-context" values and details</name>
            <thead>
              <tr>
                <th align="left">"reason-context" Value</th>
                <th align="left">Details</th>
                <th align="left">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">pbs-details</td>
                <td align="left">Â </td>
                <td align="left">Pledge bootstrap status details, <xref target="pstatus_data"/></td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">factory-default</td>
                <td align="left">Pledge has not been bootstrapped</td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">voucher-success</td>
                <td align="left">Pledge processed voucher exchange successfully</td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">voucher-error</td>
                <td align="left">Pledge voucher processing with error</td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">enroll-success</td>
                <td align="left">Pledge processed enrollment exchange successfully</td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">enroll-error</td>
                <td align="left">Pledge enrollment-response processing with error</td>
              </tr>
              <tr>
                <td align="left">pos-details</td>
                <td align="left">Â </td>
                <td align="left">Pledge operation status details, <xref target="pstatus_data"/></td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">connect-success</td>
                <td align="left">Pledge successfully establish connection to  peer</td>
              </tr>
              <tr>
                <td align="left">Â </td>
                <td align="left">connect-error</td>
                <td align="left">Pledge connection establishment with error</td>
              </tr>
            </tbody>
          </table>
        </section>
        <section anchor="voucher-status-and-enroll-status-telemetry-reason-context-values">
          <name>Voucher Status and Enroll Status Telemetry "reason-context" Values</name>
          <t>The following table provides an overview of "reason-context" values and further details of voucher status and enroll status telemetry data objects:</t>
          <table anchor="reason-context_tele_table_uri">
            <name>Voucher Status and Enroll Status Telemetry "reason-context" values and details</name>
            <thead>
              <tr>
                <th align="left">"reason-context" Value</th>
                <th align="left">Details type</th>
                <th align="left">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">pvs-details</td>
                <td align="left">STRING</td>
                <td align="left">Pledge voucher status details, <xref target="vstatus_artifact"/></td>
              </tr>
              <tr>
                <td align="left">pes-details</td>
                <td align="left">STRING</td>
                <td align="left">Pledge enroll status details, <xref target="estatus_artifact"/></td>
              </tr>
            </tbody>
          </table>
        </section>
      </section>
      <section anchor="registrar_component">
        <name>Domain Registrar</name>
        <t>The domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>
        <table anchor="registrar_ep_table">
          <name>Additional Well-Known Endpoints on a BRSKI-PRM Registrar</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to Registrar</td>
              <td align="left">
                <xref target="per"/></td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain CA Certificates</td>
              <td align="left">
                <xref target="obtain_cacerts"/></td>
            </tr>
          </tbody>
        </table>
        <t>For the supply of the PVR to the registrar, the pledge uses the endpoint "requestvoucher", defined in <xref target="RFC8995"/> as described in <xref target="pvr"/>.</t>
        <t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).</t>
        <t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, a domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>
        <t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>
        <t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>
        <section anchor="domain-registrar-with-combined-functionality">
          <name>Domain Registrar with Combined Functionality</name>
          <t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>
          <t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment that the connecting client is a Registrar-Agent.</t>
          <t>The registrar <bcp14>MAY</bcp14> be configured to only accept certain Registrar-Agents, which authenticate using the Registrar-Agent EE certificate.</t>
          <t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>
        </section>
      </section>
      <section anchor="masa">
        <name>MASA</name>
        <t>The Manufacturer Authorized Signing Authority (MASA) is a vendor service that generates and signs voucher artifacts for pledges by the same vendor.
When these pledges support BRSKI-PRM, the MASA needs to implement the following functionality in addition to BRSKI <xref target="RFC8995"/>.</t>
        <t>A MASA for pledges in responder mode <bcp14>MUST</bcp14> support the voucher format defined in <xref target="I-D.ietf-anima-jws-voucher"/> to parse and process JWS-signed voucher-request artifacts and generate JWS-signed voucher artifacts.</t>
        <t>Further, a MASA for pledges in responder mode <bcp14>MUST</bcp14> support the Agent Proximity Assertion (<xref target="agt_prx"/>) through the validation steps defined in <xref target="masa_interaction"/> based on the Pledge Voucher-Request (PVR) and Registrar Voucher-Request (RVR) artifact fields defined in <xref target="pvr_artifact"/> and <xref target="rvr_artifact"/>, respectively.</t>
      </section>
    </section>
    <section anchor="exchanges">
      <name>Exchanges and Artifacts</name>
      <t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>
      <t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>
      <t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>
      <figure anchor="exchangesfig_uc2_all">
        <name>Overview pledge-responder-mode exchanges</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
              <path d="M 16,88 L 16,192" fill="none" stroke="black"/>
              <path d="M 16,256 L 16,320" fill="none" stroke="black"/>
              <path d="M 16,384 L 16,448" fill="none" stroke="black"/>
              <path d="M 16,512 L 16,800" fill="none" stroke="black"/>
              <path d="M 16,864 L 16,960" fill="none" stroke="black"/>
              <path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
              <path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
              <path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
              <path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
              <path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
              <path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
              <path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
              <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
              <path d="M 168,88 L 168,192" fill="none" stroke="black"/>
              <path d="M 168,256 L 168,320" fill="none" stroke="black"/>
              <path d="M 168,384 L 168,448" fill="none" stroke="black"/>
              <path d="M 168,512 L 168,800" fill="none" stroke="black"/>
              <path d="M 168,864 L 168,960" fill="none" stroke="black"/>
              <path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
              <path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
              <path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
              <path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
              <path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
              <path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
              <path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
              <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
              <path d="M 312,88 L 312,192" fill="none" stroke="black"/>
              <path d="M 312,256 L 312,320" fill="none" stroke="black"/>
              <path d="M 312,384 L 312,448" fill="none" stroke="black"/>
              <path d="M 312,512 L 312,544" fill="none" stroke="black"/>
              <path d="M 312,592 L 312,624" fill="none" stroke="black"/>
              <path d="M 312,656 L 312,800" fill="none" stroke="black"/>
              <path d="M 312,864 L 312,960" fill="none" stroke="black"/>
              <path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
              <path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
              <path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
              <path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
              <path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
              <path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
              <path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
              <path d="M 456,88 L 456,192" fill="none" stroke="black"/>
              <path d="M 456,256 L 456,320" fill="none" stroke="black"/>
              <path d="M 456,384 L 456,448" fill="none" stroke="black"/>
              <path d="M 456,512 L 456,664" fill="none" stroke="black"/>
              <path d="M 456,784 L 456,800" fill="none" stroke="black"/>
              <path d="M 456,864 L 456,960" fill="none" stroke="black"/>
              <path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
              <path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
              <path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
              <path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
              <path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
              <path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
              <path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
              <path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
              <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
              <path d="M 560,88 L 560,192" fill="none" stroke="black"/>
              <path d="M 560,256 L 560,320" fill="none" stroke="black"/>
              <path d="M 560,384 L 560,448" fill="none" stroke="black"/>
              <path d="M 560,512 L 560,704" fill="none" stroke="black"/>
              <path d="M 560,752 L 560,800" fill="none" stroke="black"/>
              <path d="M 560,864 L 560,960" fill="none" stroke="black"/>
              <path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
              <path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
              <path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
              <path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
              <path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
              <path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
              <path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
              <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
              <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
              <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
              <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
              <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
              <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
              <path d="M 24,160 L 160,160" fill="none" stroke="black"/>
              <path d="M 24,176 L 160,176" fill="none" stroke="black"/>
              <path d="M 24,272 L 56,272" fill="none" stroke="black"/>
              <path d="M 128,272 L 160,272" fill="none" stroke="black"/>
              <path d="M 24,288 L 72,288" fill="none" stroke="black"/>
              <path d="M 112,288 L 160,288" fill="none" stroke="black"/>
              <path d="M 24,304 L 80,304" fill="none" stroke="black"/>
              <path d="M 112,304 L 160,304" fill="none" stroke="black"/>
              <path d="M 24,400 L 56,400" fill="none" stroke="black"/>
              <path d="M 128,400 L 160,400" fill="none" stroke="black"/>
              <path d="M 24,416 L 72,416" fill="none" stroke="black"/>
              <path d="M 112,416 L 160,416" fill="none" stroke="black"/>
              <path d="M 24,432 L 80,432" fill="none" stroke="black"/>
              <path d="M 112,432 L 160,432" fill="none" stroke="black"/>
              <path d="M 176,528 L 216,528" fill="none" stroke="black"/>
              <path d="M 256,528 L 304,528" fill="none" stroke="black"/>
              <path d="M 176,608 L 224,608" fill="none" stroke="black"/>
              <path d="M 256,608 L 304,608" fill="none" stroke="black"/>
              <path d="M 320,672 L 416,672" fill="none" stroke="black"/>
              <path d="M 456,672 L 552,672" fill="none" stroke="black"/>
              <path d="M 320,688 L 424,688" fill="none" stroke="black"/>
              <path d="M 456,688 L 552,688" fill="none" stroke="black"/>
              <path d="M 320,768 L 408,768" fill="none" stroke="black"/>
              <path d="M 472,768 L 552,768" fill="none" stroke="black"/>
              <path d="M 176,784 L 208,784" fill="none" stroke="black"/>
              <path d="M 280,784 L 304,784" fill="none" stroke="black"/>
              <path d="M 176,880 L 216,880" fill="none" stroke="black"/>
              <path d="M 256,880 L 304,880" fill="none" stroke="black"/>
              <path d="M 176,896 L 224,896" fill="none" stroke="black"/>
              <path d="M 256,896 L 304,896" fill="none" stroke="black"/>
              <path d="M 320,912 L 344,912" fill="none" stroke="black"/>
              <path d="M 424,912 L 448,912" fill="none" stroke="black"/>
              <path d="M 320,928 L 336,928" fill="none" stroke="black"/>
              <path d="M 176,944 L 192,944" fill="none" stroke="black"/>
              <path d="M 288,944 L 304,944" fill="none" stroke="black"/>
              <path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
              <path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
              <path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
              <path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
              <path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
              <path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
              <path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
              <path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
              <path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
              <path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
              <path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
              <path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
              <path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
              <path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
              <path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
              <path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
              <path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
              <path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
              <path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
              <path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
              <path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
              <path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
              <path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
              <path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
              <path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
              <path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
              <path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
              <path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
              <path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
              <path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
              <path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
              <path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
              <path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
              <path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
              <path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
              <path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
              <path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
              <path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
              <path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
              <path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
              <polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
              <polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
              <polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
              <polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
              <polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
              <polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
              <polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
              <polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
              <polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
              <polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
              <polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
              <polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
              <polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
              <polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
              <polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
              <polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
              <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
              <polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
              <polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
              <polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
              <polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
              <polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
              <polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
              <polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
              <polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
              <polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
              <polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
              <polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
              <polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
              <polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
              <polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
              <polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
              <polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
              <polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
              <polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
              <polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
              <polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
              <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
              <polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
              <polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
              <polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
              <polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
              <polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
              <polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
              <polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
              <polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
              <polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
              <polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
              <polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
              <polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
              <polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
              <g class="text">
                <text x="44" y="52">Pledge</text>
                <text x="172" y="52">Registrar-</text>
                <text x="308" y="52">Domain</text>
                <text x="432" y="52">Key</text>
                <text x="540" y="52">MASA</text>
                <text x="168" y="68">Agent</text>
                <text x="312" y="68">Registrar</text>
                <text x="436" y="68">Infra.</text>
                <text x="516" y="100">Internet</text>
                <text x="92" y="116">discover</text>
                <text x="92" y="132">pledge</text>
                <text x="68" y="148">mDNS</text>
                <text x="112" y="148">query</text>
                <text x="16" y="212">~</text>
                <text x="168" y="212">~</text>
                <text x="312" y="212">~</text>
                <text x="456" y="212">~</text>
                <text x="560" y="212">~</text>
                <text x="16" y="228">(1)</text>
                <text x="64" y="228">Trigger</text>
                <text x="124" y="228">Pledge</text>
                <text x="216" y="228">Voucher-Request</text>
                <text x="16" y="244">~</text>
                <text x="168" y="244">~</text>
                <text x="312" y="244">~</text>
                <text x="456" y="244">~</text>
                <text x="560" y="244">~</text>
                <text x="76" y="276">opt.</text>
                <text x="112" y="276">TLS</text>
                <text x="92" y="292">tPVR</text>
                <text x="96" y="308">PVR</text>
                <text x="16" y="340">~</text>
                <text x="168" y="340">~</text>
                <text x="312" y="340">~</text>
                <text x="456" y="340">~</text>
                <text x="560" y="340">~</text>
                <text x="16" y="356">(2)</text>
                <text x="64" y="356">Trigger</text>
                <text x="124" y="356">Pledge</text>
                <text x="212" y="356">Enroll-Request</text>
                <text x="16" y="372">~</text>
                <text x="168" y="372">~</text>
                <text x="312" y="372">~</text>
                <text x="456" y="372">~</text>
                <text x="560" y="372">~</text>
                <text x="76" y="404">opt.</text>
                <text x="112" y="404">TLS</text>
                <text x="92" y="420">tPER</text>
                <text x="96" y="436">PER</text>
                <text x="16" y="468">~</text>
                <text x="168" y="468">~</text>
                <text x="312" y="468">~</text>
                <text x="456" y="468">~</text>
                <text x="560" y="468">~</text>
                <text x="16" y="484">(3)</text>
                <text x="60" y="484">Supply</text>
                <text x="104" y="484">PVR</text>
                <text x="132" y="484">to</text>
                <text x="184" y="484">Registrar</text>
                <text x="268" y="484">(including</text>
                <text x="332" y="484">MASA</text>
                <text x="404" y="484">interaction)</text>
                <text x="16" y="500">~</text>
                <text x="168" y="500">~</text>
                <text x="312" y="500">~</text>
                <text x="456" y="500">~</text>
                <text x="560" y="500">~</text>
                <text x="236" y="532">mTLS</text>
                <text x="308" y="564">[Registrar-Agent</text>
                <text x="308" y="580">authenticated&amp;authorized?]</text>
                <text x="240" y="612">PVR</text>
                <text x="280" y="644">[accept</text>
                <text x="348" y="644">device?]</text>
                <text x="436" y="676">mTLS</text>
                <text x="440" y="692">RVR</text>
                <text x="456" y="708">~</text>
                <text x="460" y="724">[extract</text>
                <text x="536" y="724">DomainID]</text>
                <text x="456" y="740">[update</text>
                <text x="532" y="740">audit-log]</text>
                <text x="456" y="756">~</text>
                <text x="440" y="772">Voucher</text>
                <text x="244" y="788">Voucher'</text>
                <text x="16" y="820">~</text>
                <text x="168" y="820">~</text>
                <text x="312" y="820">~</text>
                <text x="456" y="820">~</text>
                <text x="560" y="820">~</text>
                <text x="16" y="836">(4)</text>
                <text x="60" y="836">Supply</text>
                <text x="104" y="836">PER</text>
                <text x="132" y="836">to</text>
                <text x="184" y="836">Registrar</text>
                <text x="268" y="836">(including</text>
                <text x="328" y="836">Key</text>
                <text x="404" y="836">Infrastructure</text>
                <text x="516" y="836">interaction)</text>
                <text x="16" y="852">~</text>
                <text x="168" y="852">~</text>
                <text x="312" y="852">~</text>
                <text x="456" y="852">~</text>
                <text x="560" y="852">~</text>
                <text x="236" y="884">mTLS</text>
                <text x="240" y="900">PER</text>
                <text x="384" y="916">[Request]</text>
                <text x="396" y="932">[Certificate]-</text>
                <text x="240" y="948">Enroll-Resp</text>
                <text x="16" y="980">~</text>
                <text x="168" y="980">~</text>
                <text x="312" y="980">~</text>
                <text x="456" y="980">~</text>
                <text x="560" y="980">~</text>
                <text x="16" y="996">(5)</text>
                <text x="60" y="996">Obtain</text>
                <text x="100" y="996">CA</text>
                <text x="164" y="996">Certificates</text>
                <text x="16" y="1012">~</text>
                <text x="168" y="1012">~</text>
                <text x="312" y="1012">~</text>
                <text x="456" y="1012">~</text>
                <text x="560" y="1012">~</text>
                <text x="236" y="1044">mTLS</text>
                <text x="240" y="1060">caCerts</text>
                <text x="16" y="1092">~</text>
                <text x="168" y="1092">~</text>
                <text x="312" y="1092">~</text>
                <text x="456" y="1092">~</text>
                <text x="560" y="1092">~</text>
                <text x="16" y="1108">(6)</text>
                <text x="60" y="1108">Supply</text>
                <text x="120" y="1108">Voucher</text>
                <text x="164" y="1108">to</text>
                <text x="204" y="1108">Pledge</text>
                <text x="16" y="1124">~</text>
                <text x="168" y="1124">~</text>
                <text x="312" y="1124">~</text>
                <text x="456" y="1124">~</text>
                <text x="560" y="1124">~</text>
                <text x="76" y="1156">opt.</text>
                <text x="112" y="1156">TLS</text>
                <text x="100" y="1172">Voucher'</text>
                <text x="96" y="1188">vStatus</text>
                <text x="16" y="1220">~</text>
                <text x="168" y="1220">~</text>
                <text x="312" y="1220">~</text>
                <text x="456" y="1220">~</text>
                <text x="560" y="1220">~</text>
                <text x="16" y="1236">(7)</text>
                <text x="60" y="1236">Supply</text>
                <text x="100" y="1236">CA</text>
                <text x="164" y="1236">Certificates</text>
                <text x="228" y="1236">to</text>
                <text x="268" y="1236">Pledge</text>
                <text x="16" y="1252">~</text>
                <text x="168" y="1252">~</text>
                <text x="312" y="1252">~</text>
                <text x="456" y="1252">~</text>
                <text x="560" y="1252">~</text>
                <text x="76" y="1284">opt.</text>
                <text x="112" y="1284">TLS</text>
                <text x="96" y="1300">caCerts</text>
                <text x="16" y="1332">~</text>
                <text x="168" y="1332">~</text>
                <text x="312" y="1332">~</text>
                <text x="456" y="1332">~</text>
                <text x="560" y="1332">~</text>
                <text x="16" y="1348">(8)</text>
                <text x="60" y="1348">Supply</text>
                <text x="152" y="1348">Enroll-Response</text>
                <text x="228" y="1348">to</text>
                <text x="268" y="1348">Pledge</text>
                <text x="16" y="1364">~</text>
                <text x="168" y="1364">~</text>
                <text x="312" y="1364">~</text>
                <text x="456" y="1364">~</text>
                <text x="560" y="1364">~</text>
                <text x="76" y="1396">opt.</text>
                <text x="112" y="1396">TLS</text>
                <text x="96" y="1412">Enroll-Resp</text>
                <text x="88" y="1428">eStatus</text>
                <text x="16" y="1460">~</text>
                <text x="168" y="1460">~</text>
                <text x="312" y="1460">~</text>
                <text x="456" y="1460">~</text>
                <text x="560" y="1460">~</text>
                <text x="16" y="1476">(9)</text>
                <text x="64" y="1476">Voucher</text>
                <text x="124" y="1476">Status</text>
                <text x="192" y="1476">Telemetry</text>
                <text x="276" y="1476">(including</text>
                <text x="352" y="1476">backend</text>
                <text x="436" y="1476">interaction)</text>
                <text x="16" y="1492">~</text>
                <text x="168" y="1492">~</text>
                <text x="312" y="1492">~</text>
                <text x="456" y="1492">~</text>
                <text x="560" y="1492">~</text>
                <text x="236" y="1524">mTLS</text>
                <text x="240" y="1540">vStatus</text>
                <text x="436" y="1556">mTLS</text>
                <text x="368" y="1572">req</text>
                <text x="412" y="1572">device</text>
                <text x="480" y="1572">audit-log</text>
                <text x="396" y="1588">device</text>
                <text x="464" y="1588">audit-log</text>
                <text x="264" y="1620">[verify</text>
                <text x="340" y="1620">audit-log]</text>
                <text x="312" y="1636">|</text>
                <text x="16" y="1652">~</text>
                <text x="168" y="1652">~</text>
                <text x="312" y="1652">~</text>
                <text x="456" y="1652">~</text>
                <text x="560" y="1652">~</text>
                <text x="20" y="1668">(10)</text>
                <text x="68" y="1668">Enroll</text>
                <text x="124" y="1668">Status</text>
                <text x="192" y="1668">Telemetry</text>
                <text x="16" y="1684">~</text>
                <text x="168" y="1684">~</text>
                <text x="312" y="1684">~</text>
                <text x="456" y="1684">~</text>
                <text x="560" y="1684">~</text>
                <text x="236" y="1716">mTLS</text>
                <text x="240" y="1732">eStatus</text>
                <text x="16" y="1764">~</text>
                <text x="168" y="1764">~</text>
                <text x="312" y="1764">~</text>
                <text x="456" y="1764">~</text>
                <text x="560" y="1764">~</text>
                <text x="20" y="1780">(11)</text>
                <text x="64" y="1780">Query</text>
                <text x="116" y="1780">Pledge</text>
                <text x="172" y="1780">Status</text>
                <text x="16" y="1796">~</text>
                <text x="168" y="1796">~</text>
                <text x="312" y="1796">~</text>
                <text x="456" y="1796">~</text>
                <text x="560" y="1796">~</text>
                <text x="76" y="1828">opt.</text>
                <text x="112" y="1828">TLS</text>
                <text x="96" y="1844">tStatus</text>
                <text x="96" y="1860">pStatus</text>
                <text x="16" y="1892">~</text>
                <text x="168" y="1892">~</text>
                <text x="312" y="1892">~</text>
                <text x="456" y="1892">~</text>
                <text x="560" y="1892">~</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
        </artset>
      </figure>
      <t>The following subsections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>
      <ol spacing="normal" type="1"><li>
          <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
        </li>
        <li>
          <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
        </li>
        <li>
          <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
        </li>
        <li>
          <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
        </li>
        <li>
          <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
        </li>
        <li>
          <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
        </li>
      </ol>
      <section anchor="tpvr">
        <name>Trigger Pledge Voucher-Request</name>
        <t>The Registrar-Agent begins the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide transport security, e.g., privacy and peer authentication, for the exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_1">
          <name>PVR acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(1)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="216" y="132">Voucher-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPVR</text>
                  <text x="96" y="212">PVR</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent triggers the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tpvr</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PVR, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).
The pledge will take the last received tPVR for the provisional accept of the received registrar EE certificate, if it does not have the capability to store more that one registrar EE certificate.</t>
        <t>If the pledge is unable to create the PVR, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <tt>application/json</tt>.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/voucher-jws+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tpvr_artifact">
          <name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>
          <t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>
          <t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>
          <figure anchor="tpvr_CDDL_def">
            <name>CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork>
          </figure>
          <t>The <tt>agent-provided-proximity-registrar-cert</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <tt>agent-signed-data</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>
          <figure anchor="tpvr_example">
            <name>tPVR Representation in JSON</name>
            <artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork>
          </figure>
          <section anchor="jws-asd">
            <name>JWS Agent-Signed Data</name>
            <t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <tt>agent-signed-data</tt> as binary.
For the JWS-signed JSON format used by this specification, the <tt>agent-signed-data</tt> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <tt>agent-signed-data</tt> member of the tPVR artifact:</t>
            <figure anchor="asd_representation">
              <name>JWS Agent-Signed Data in General JWS JSON Serialization Syntax</name>
              <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
            </figure>
            <t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
            <section anchor="prm-asd">
              <name>JSON Agent-Signed Data</name>
              <t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>
              <figure anchor="prmasd_CDDL_def">
                <name>CDDL for JSON Agent-Signed Data (prmasd)</name>
                <artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork>
              </figure>
              <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>
              <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>
              <t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>
              <figure anchor="prmasd_payload">
                <name>JSON Agent-Signed Data Example</name>
                <artwork type="json" align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "vendor-pledge4711"
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-protected-header">
              <name>JWS Protected Header</name>
              <t>The JWS Protected Header of the <tt>agent-signed-data</tt> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
              <ul spacing="normal">
                <li>
                  <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
                </li>
                <li>
                  <t><tt>kid</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/>.</t>
                </li>
              </ul>
              <t><xref target="asd_header"/> shows an example for this JWS Protected Header:</t>
              <figure anchor="asd_header">
                <name>JWS Protected Header Example for</name>
                <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-signature">
              <name>JWS Signature</name>
              <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <tt>agent-signed-data</tt> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            </section>
          </section>
        </section>
        <section anchor="pvr_artifact">
          <name>Response Artifact: Pledge Voucher-Request (PVR)</name>
          <t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>
          <figure anchor="pvr_representation">
            <name>PVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="pvr_data">
            <name>JSON PVR Data</name>
            <t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaf data nodes in the YANG definition mandatory for the PVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time.</t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a cryptographically strong random or pseudo-random number nonce (see <xref section="6.2" sectionFormat="of" target="RFC4086"/>).</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the assertion type <tt>agent-proximity</tt> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>).</t>
              </li>
              <li>
                <t><tt>agent-provided-proximity-registrar-cert</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion.</t>
              </li>
              <li>
                <t><tt>agent-signed-data</tt>: <bcp14>SHALL</bcp14> contain the same value as the <tt>agent-signed-data</tt> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge.</t>
              </li>
            </ul>
            <t><xref target="pvr_data_example"/> shows an example for the JSON PVR Data:</t>
            <figure anchor="pvr_data_example">
              <name>JSON PVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-1">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-1">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="tper">
        <name>Trigger Pledge Enroll-Request</name>
        <t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_2">
          <name>PER acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(2)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="212" y="132">Enroll-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPER</text>
                  <text x="96" y="212">PER</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent triggers the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tper</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PER, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the PER, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.
While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tper_artifact">
          <name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>
          <t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>
          <t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>
          <t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>
          <figure anchor="tper_CDDL_def">
            <name>CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
    "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork>
          </figure>
          <t>The <tt>enroll-type</tt> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <tt>enroll-generic-cert</tt> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>
        </section>
        <section anchor="per_artifact">
          <name>Response Artifact: Pledge Enroll-Request (PER)</name>
          <t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>
          <t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="per_representation">
            <name>PER Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="per_data">
            <name>JSON CSR Data</name>
            <t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <tt>csr-grouping</tt> of the <tt>ietf-ztp-types</tt> YANG module defined in <xref section="3.2" sectionFormat="of" target="RFC9646"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="RFC9646"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <tt>p10-csr</tt> case of the <tt>csr-grouping</tt> <bcp14>MUST</bcp14> be used.</t>
            <t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>
            <figure anchor="csr_example">
              <name>JSON CSR Data Example</name>
              <artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-2">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification.
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
              <li>
                <t><tt>crit</tt>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <tt>created-on</tt> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
            </ul>
            <t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time.</t>
              </li>
            </ul>
            <t>The new protected Header Parameter <tt>created-on</tt> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <tt>created-on</tt> of PER &gt;= <tt>created-on</tt> of PVR &gt;= <tt>created-on</tt> of PVR trigger.
The registrar <bcp14>MAY</bcp14> ignore any but the newest PER artifact from the same pledge in case the registrar has at any point in time more than one pending PER from the pledge.</t>
            <t><xref target="per_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="per_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2025-01-13T00:00:02.000Z"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-2">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            <t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported similarly.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>
          </section>
        </section>
      </section>
      <section anchor="pvr">
        <name>Supply PVR to Registrar (including MASA interaction)</name>
        <t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>
        <t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_3">
          <name>Voucher issuing exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,448" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,448" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,192" fill="none" stroke="black"/>
                <path d="M 312,240 L 312,272" fill="none" stroke="black"/>
                <path d="M 312,304 L 312,448" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,312" fill="none" stroke="black"/>
                <path d="M 456,432 L 456,448" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,352" fill="none" stroke="black"/>
                <path d="M 560,400 L 560,448" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,256 L 224,256" fill="none" stroke="black"/>
                <path d="M 256,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 320,320 L 416,320" fill="none" stroke="black"/>
                <path d="M 456,320 L 552,320" fill="none" stroke="black"/>
                <path d="M 320,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 456,336 L 552,336" fill="none" stroke="black"/>
                <path d="M 320,416 L 408,416" fill="none" stroke="black"/>
                <path d="M 472,416 L 552,416" fill="none" stroke="black"/>
                <path d="M 176,432 L 208,432" fill="none" stroke="black"/>
                <path d="M 280,432 L 304,432" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
                <polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
                <polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
                <polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
                <polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(3)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PVR</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="344" y="132">backend</text>
                  <text x="428" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="308" y="212">[Registrar-Agent</text>
                  <text x="308" y="228">authenticated&amp;authorized?]</text>
                  <text x="240" y="260">PVR</text>
                  <text x="280" y="292">[accept</text>
                  <text x="348" y="292">device?]</text>
                  <text x="436" y="324">mTLS</text>
                  <text x="440" y="340">RVR</text>
                  <text x="456" y="356">~</text>
                  <text x="460" y="372">[extract</text>
                  <text x="536" y="372">DomainID]</text>
                  <text x="456" y="388">[update</text>
                  <text x="532" y="388">audit-log]</text>
                  <text x="456" y="404">~</text>
                  <text x="440" y="420">Voucher</text>
                  <text x="244" y="436">Voucher'</text>
                  <text x="16" y="468">~</text>
                  <text x="168" y="468">~</text>
                  <text x="312" y="468">~</text>
                  <text x="456" y="468">~</text>
                  <text x="560" y="468">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>
        <ul spacing="normal">
          <li>
            <t>the <tt>agent-provided-proximity-registrar-cert</tt> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate.</t>
          </li>
          <li>
            <t>the <tt>agent-signed-data</tt> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header of the <tt>agent-signed-data</tt> field.</t>
          </li>
          <li>
            <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
          </li>
          <li>
            <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <tt>agent-signed-data</tt> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PVR, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar converts the PVR artifact to a Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>
        <t>The domain registrar can respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>
        <t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="masa_interaction">
          <name>MASA Interaction</name>
          <t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges consequently supports the same formats as supported by those pledges.</t>
          <t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> choose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <tt>prior-signed-voucher-request</tt> field of the RVR that</t>
          <ul spacing="normal">
            <li>
              <t>the <tt>agent-provided-proximity-registrar-cert</tt> field contains an EE certificate that is signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent.</t>
            </li>
            <li>
              <t>the registrar EE certificate in the <tt>agent-provided-proximity-registrar-cert</tt> field and the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR are signed by the same domain owner.</t>
            </li>
            <li>
              <t>the <tt>agent-signed-data</tt> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header in the <tt>agent-signed-data</tt> field.</t>
            </li>
            <li>
              <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of PVR and the <tt>serial-number</tt> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
            </li>
          </ul>
          <t>If the <tt>agent-sign-cert</tt> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>
          <t>If the verification fails, the MASA responds with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>
          <ul spacing="normal">
            <li>
              <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden.</t>
            </li>
            <li>
              <t>404 Not Found: if the request is for a device that is not known to the MASA.</t>
            </li>
            <li>
              <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type.</t>
            </li>
            <li>
              <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA.</t>
            </li>
          </ul>
          <t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        </section>
        <section anchor="supply-voucher-to-registrar-agent">
          <name>Supply Voucher to Registrar-Agent</name>
          <t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>
          <t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the registrar-countersigned Voucher artifact ('Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>If the domain registrar is unable to return the Voucher, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
          <ul spacing="normal">
            <li>
              <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure.</t>
            </li>
            <li>
              <t>502 Bad Gateway: if the registrar received an invalid response from the MASA.</t>
            </li>
            <li>
              <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>MUST</bcp14> include the <tt>Retry-After</tt> response header field with an appropriate value.</t>
            </li>
            <li>
              <t>504 Gateway Timeout: if the backend request to the MASA timed out.</t>
            </li>
          </ul>
        </section>
        <section anchor="request-artifact-pledge-voucher-request-pvr">
          <name>Request Artifact: Pledge Voucher-Request (PVR)</name>
          <t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>
        </section>
        <section anchor="rvr_artifact">
          <name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>
          <t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>
          <figure anchor="rvr_representation">
            <name>RVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="rvr_data">
            <name>JSON RVR Data</name>
            <t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a copy of the <tt>nonce</tt> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
              </li>
              <li>
                <t><tt>idevid-issuer</tt>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <tt>x5c</tt> field</t>
              </li>
              <li>
                <t><tt>prior-signed-voucher-request</tt>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
              </li>
            </ul>
            <t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>
            <ul spacing="normal">
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the value <tt>agent-proximity</tt> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar.</t>
              </li>
              <li>
                <t><tt>agent-sign-cert</tt>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <tt>agent-signed-data</tt> field of the contained PVR.</t>
              </li>
            </ul>
            <t>Note that the <tt>ietf-voucher-request</tt> YANG module defines the leaf <tt>agent-sign-cert</tt> as binary;
this specification refines it as a JSON array structure similar to the <tt>x5c</tt> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
            <t><xref target="rvr_data_example"/> shows an example for the JSON RVR Data:</t>
            <figure anchor="rvr_data_example">
              <name>JSON RVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2025-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-3">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-3">
            <name>JWS Signature</name>
            <t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
        <section anchor="voucher_artifact">
          <name>Backend Response Artifact: Voucher</name>
          <t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <tt>assertion</tt> field <bcp14>MAY</bcp14> contain the value <tt>agent-proximity</tt> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>
          <t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>
          <figure anchor="voucher_data_example">
            <name>JSON RVR Data Example</name>
            <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2025-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "vendor-pledge4711"
  }
}
]]></artwork>
          </figure>
        </section>
        <section anchor="rcv_artifact">
          <name>Response Artifact: Registrar-Countersigned Voucher</name>
          <t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>
          <t>For BRSKI-PRM, the domain registrar <bcp14>MUST</bcp14> add an JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>
          <figure anchor="rcv_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork>
          </figure>
          <t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <tt>pinned-domain-cert</tt> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>
          <t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>
          <t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>
          <section anchor="json-voucher-data">
            <name>JSON Voucher Data</name>
            <t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>
          </section>
          <section anchor="jws-protected-header-registrar">
            <name>JWS Protected Header (Registrar)</name>
            <t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data.</t>
              </li>
            </ul>
            <t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>
          </section>
          <section anchor="jws-signature-registrar">
            <name>JWS Signature (Registrar)</name>
            <t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
            <t>The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>
            <t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>
          </section>
        </section>
      </section>
      <section anchor="per">
        <name>Supply PER to Registrar (including Key Infrastructure interaction; requestenroll)</name>
        <t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>
        <t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER-request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>
        <figure anchor="exchangesfig_uc2_4">
          <name>Enroll exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,256" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,256" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,256" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,256" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 224,192" fill="none" stroke="black"/>
                <path d="M 256,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 344,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 448,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 336,224" fill="none" stroke="black"/>
                <path d="M 176,240 L 192,240" fill="none" stroke="black"/>
                <path d="M 288,240 L 304,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
                <polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(4)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PER</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="328" y="132">Key</text>
                  <text x="404" y="132">Infrastructure</text>
                  <text x="516" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">PER</text>
                  <text x="384" y="212">[Request]</text>
                  <text x="396" y="228">[Certificate]-</text>
                  <text x="240" y="244">Enroll-Resp</text>
                  <text x="16" y="276">~</text>
                  <text x="168" y="276">~</text>
                  <text x="312" y="276">~</text>
                  <text x="456" y="276">~</text>
                  <text x="560" y="276">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestenroll</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>
        <ul spacing="normal">
          <li>
            <t>the PER was signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
          </li>
          <li>
            <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PER, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the PER cannot be verified.</t>
          </li>
          <li>
            <t>404 Not Found: if the PER is for a device that is not known to the registrar.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>
        <t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate signed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> with an smime-type parameter <tt>certs-only</tt>, as specified in <xref target="RFC7030"/> and <xref target="RFC5273"/>.</t>
        <t>If the domain registrar is unable to return the Enroll-Resp, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure.</t>
          </li>
          <li>
            <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure.</t>
          </li>
          <li>
            <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>MUST</bcp14> include the Retry-After response header field with an appropriate value.</t>
          </li>
          <li>
            <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out.</t>
          </li>
        </ul>
        <t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported similarly with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>
        <section anchor="request-artifact-pledge-enroll-request-per">
          <name>Request Artifact: Pledge Enroll-Request (PER)</name>
          <t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>
        </section>
        <section anchor="er_artifact">
          <name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>
          <t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>
          <t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>
        </section>
      </section>
      <section anchor="obtain_cacerts">
        <name>Obtain CA Certificates (wrappedcacerts)</name>
        <t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>
        <t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>
        <t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>
        <t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_5">
          <name>CA certificates retrieval exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(5)</text>
                  <text x="60" y="132">Obtain</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <tt>/.well-known/brski/wrappedcacerts</tt>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a GET request at <tt>/.well-known/brski/wrappedcacerts</tt>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <section anchor="request-no-artifact">
          <name>Request (no artifact)</name>
          <t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.
As the caCerts artifact processing on the pledge may result in errors, signaled via HTTP status codes, the Registrar-Agent should log these for evaluation as outlined in <xref target="log_hints"/>.</t>
        </section>
        <section anchor="cacerts_artifact">
          <name>Response Artifact: CA-Certificates (caCerts)</name>
          <t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>
          <t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>
          <figure anchor="cacerts_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="cacerts_data">
            <name>JSON CA Data</name>
            <t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>
            <figure anchor="cacerts_CDDL_def">
              <name>CDDL for JSON CA Data (cacerts)</name>
              <artwork type="cddl" align="left"><![CDATA[
cacerts = {
    "x5bag": bytes / [2* bytes]
}
]]></artwork>
            </figure>
            <t>The <tt>x5bag</tt> member <bcp14>MUST</bcp14> follow the definition of the <tt>x5bag</tt> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>
            <t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>
            <t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>
            <figure anchor="cacerts_data_example">
              <name>JSON CA Data Example</name>
              <artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-4">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
              </li>
            </ul>
            <t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="cacerts_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-4">
            <name>JWS Signature</name>
            <t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="voucher">
        <name>Supply Voucher to Pledge (svr)</name>
        <t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>
        <ul spacing="normal">
          <li>
            <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
          </li>
          <li>
            <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
          </li>
          <li>
            <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
          </li>
        </ul>
        <t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> store information from the first connection with the pledge to optimize this process.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_6">
          <name>Voucher exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 136,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(6)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="120" y="132">Voucher</text>
                  <text x="164" y="132">to</text>
                  <text x="204" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="100" y="196">Voucher'</text>
                  <text x="96" y="212">vStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/svr</tt>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>,
to indicate the encoding of the vStatus response object status telemetry message.</t>
        <t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>
        <ol spacing="normal" type="1"><li>
            <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
          </li>
          <li>
            <t>Provisionally install the initial domain trust anchor contained in the <tt>pinned-domain-cert</tt> field of the voucher.</t>
          </li>
          <li>
            <t>Validate the registrar EE certificate received in the <tt>agent-provided-proximity-registrar-cert</tt> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
          </li>
          <li>
            <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but using the pinned domain certificate instead of the MASA certificate for the verification.</t>
          </li>
        </ol>
        <t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>
        <t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.
A manufacturer may opt to provide the acceptance of nonceless voucher  as configurable item.</t>
        <t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>
        <t>If the pledge did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>
        <section anchor="request-artifact-registrar-countersigned-voucher">
          <name>Request Artifact: Registrar-Countersigned Voucher</name>
          <t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>
        </section>
        <section anchor="vstatus_artifact">
          <name>Response Artifact: Voucher Status (vStatus)</name>
          <t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>
          <figure anchor="vstatus_representation">
            <name>vStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="vstatus_data">
            <name>JSON Voucher Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>voucherstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>version</tt>: contains a version number for the format and semantics of the other fields;
this specification assumes version <tt>1</tt> just like BRSKI <xref target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>status</tt>: contains the boolean value <tt>true</tt> in case of success and <tt>false</tt> in case of failure.</t>
              </li>
              <li>
                <t><tt>reason</tt>: contains a human-readable message;
should not provide information beneficial to an attacker.
As the pledge is not localized at this point in time language selection cannot be done.
Therefore, English is taken as a default here for this diagnostic messages.
The internationalization of text is expected to be done on another level.</t>
              </li>
              <li>
                <t><tt>reason-context</tt>: contains a JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, <bcp14>MUST</bcp14> be provided;</t>
              </li>
            </ul>
            <t>BRSKI-PRM implementations utilize the <tt>reason-context</tt> field to provide a distinguishable token, which enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pvs-details</tt>.</t>
            <t><xref target="vstatus_data_example_success"/> shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>
            <artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/jose+json
Content-Language: en
]]></artwork>
            <figure anchor="vstatus_data_example_success">
              <name>JSON Voucher Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed.",
  "reason-context": {
    "pvs-details": "Current date 5/23/2024"
  }
}
]]></artwork>
            </figure>
            <artwork><![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/jose+json
Content-Language: en
]]></artwork>
            <figure anchor="vstatus_data_example_error">
              <name>JSON Voucher Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate.",
  "reason-context": {
    "pvs-details": "Current date 1/1/1970 < valid from 1/1/2023"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-5">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification.
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="vstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="vstatus_header">
              <name>JWS Protected Header Example within vStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-5">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="cacerts">
        <name>Supply CA Certificates to Pledge (scac)</name>
        <t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certificate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by the pledge as reflected in the vStatus artifact.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_7">
          <name>Certificate provisioning exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(7)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/scac</tt>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>
        <t>If the pledge is unable to process the caCerts, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate).</t>
          </li>
          <li>
            <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates).</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="request-artifact-ca-certificates-cacerts">
          <name>Request Artifact: CA-Certificates (caCerts)</name>
          <t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>
        </section>
        <section anchor="response-no-artifact">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent. While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        </section>
      </section>
      <section anchor="enroll_response">
        <name>Supply Enroll-Response to Pledge (ser)</name>
        <t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_8">
          <name>Enroll-Response exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 48,192" fill="none" stroke="black"/>
                <path d="M 144,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 56,208" fill="none" stroke="black"/>
                <path d="M 120,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(8)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="152" y="132">Enroll-Response</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">Enroll-Resp</text>
                  <text x="88" y="212">eStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/ser</tt>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> with an smime-type parameter <tt>certs-only</tt>, as specified in <xref target="RFC7030"/> and <xref target="RFC5273"/>, and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>
        <section anchor="request-artifact-enroll-response-enroll-resp">
          <name>Request Artifact: Enroll-Response (Enroll-Resp)</name>
          <t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>
        </section>
        <section anchor="estatus_artifact">
          <name>Response Artifact: Enroll Status (eStatus)</name>
          <t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>
          <figure anchor="estatus_representation">
            <name>eStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="estatus_data">
            <name>JSON Enroll Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>enrollstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/> (including making <tt>reason-context</tt> mandatory).</t>
            <t>BRSKI-PRM implementations again utilize the <tt>reason-context</tt> field to provide a distinguishable token.
For eStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pes-details</tt>.</t>
            <t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>
            <figure anchor="estatus_data_example_success">
              <name>JSON Enroll Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Successfully enrolled"
  }
}
]]></artwork>
            </figure>
            <figure anchor="estatus_data_example_error">
              <name>JSON Enroll Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-6">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate.
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification.
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="estatus_header">
              <name>JWS Protected Header Example within eStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-6">
            <name>JWS Signature</name>
            <t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
      <section anchor="vstatus">
        <name>Voucher Status Telemetry (including MASA interaction)</name>
        <t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>
        <t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>
        <figure anchor="exchangesfig_uc2_9">
          <name>Voucher Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,288" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,288" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,200" fill="none" stroke="black"/>
                <path d="M 456,256 L 456,288" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,288" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 416,208" fill="none" stroke="black"/>
                <path d="M 456,208 L 552,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 352,224" fill="none" stroke="black"/>
                <path d="M 520,224 L 552,224" fill="none" stroke="black"/>
                <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                <path d="M 504,240 L 552,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
                <polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
                <polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
                <polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(9)</text>
                  <text x="64" y="132">Voucher</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="276" y="132">(including</text>
                  <text x="352" y="132">backend</text>
                  <text x="436" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">vStatus</text>
                  <text x="436" y="212">mTLS</text>
                  <text x="368" y="228">req</text>
                  <text x="412" y="228">device</text>
                  <text x="480" y="228">audit-log</text>
                  <text x="396" y="244">device</text>
                  <text x="464" y="244">audit-log</text>
                  <text x="264" y="276">[verify</text>
                  <text x="340" y="276">audit-log]</text>
                  <text x="312" y="292">|</text>
                  <text x="16" y="308">~</text>
                  <text x="168" y="308">~</text>
                  <text x="312" y="308">~</text>
                  <text x="456" y="308">~</text>
                  <text x="560" y="308">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/voucher_status</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>
        <t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>
        <section anchor="request-artifact-voucher-status-vstatus">
          <name>Request Artifact: Voucher Status (vStatus)</name>
          <t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-1">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="estatus">
        <name>Enroll Status Telemetry</name>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_10">
          <name>Enroll Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(10)</text>
                  <text x="68" y="132">Enroll</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">eStatus</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/enrollstatus</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>
        <t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK in the success case or can fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>
        <section anchor="request-artifact-enroll-status-estatus">
          <name>Request Artifact: Enroll Status (eStatus)</name>
          <t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-2">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="query">
        <name>Query Pledge Status (qps)</name>
        <t>The following assumes that a Registrar-Agent may need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_11">
          <name>Pledge Status exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(11)</text>
                  <text x="64" y="132">Query</text>
                  <text x="116" y="132">Pledge</text>
                  <text x="172" y="132">Status</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">tStatus</text>
                  <text x="96" y="212">pStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/qps</tt>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the pStatus artifact, the pledge responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tstatus_artifact">
          <name>Request Artifact: Status Trigger (tStatus)</name>
          <t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>
          <t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="tstatus_representation">
            <name>tStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="tstatus_data">
            <name>JSON Status Trigger Data</name>
            <t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>
            <figure anchor="stat_req_def">
              <name>CDDL for JSON Status Trigger Data (statustrigger)</name>
              <artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <tt>version</tt> <bcp14>SHALL</bcp14> be set to <tt>1</tt>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and emit an operational notification.</t>
            <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>
            <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>
            <t>The <tt>status-type</tt> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>
            <ul spacing="normal">
              <li>
                <t><tt>bootstrap</tt> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain).</t>
              </li>
              <li>
                <t><tt>operation</tt> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers).</t>
              </li>
            </ul>
            <t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>
            <t><xref target="stat_req_data"/> shows an example for the JSON Status Trigger Data using the status type <tt>bootstrap</tt>:</t>
            <figure anchor="stat_req_data">
              <name>JSON Status Trigger Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2025-01-12T02:37:39.235Z",
  "serial-number": "vendor-pledge4711",
  "status-type": "bootstrap"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-7">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
              </li>
            </ul>
            <t><xref target="tstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="tstatus_header">
              <name>JWS Protected Header Example within tStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-7">
            <name>JWS Signature</name>
            <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
        <section anchor="pstatus_artifact">
          <name>Response Artifact: Pledge Status (pStatus)</name>
          <t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <tt>status-type</tt>.</t>
          <t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="pstatus_representation">
            <name>pStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="pstatus_data">
            <name>JSON Pledge Status Data</name>
            <t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <tt>voucherstatus-post</tt> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the <tt>enrollstatus-post</tt> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
            <figure anchor="stat_res_def">
              <name>CDDL for JSON Pledge Status Data (pledgestatus)</name>
              <artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    "reason-context": { * $$arbitrary-map }
  }
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>
            <t>The <tt>reason</tt> and <tt>reason-context</tt> members follow the definitions in <xref target="vstatus_data"/>, i.e., in contrast to <xref target="RFC8995"/>, <tt>reason-context</tt> <bcp14>MUST</bcp14> be provided.</t>
            <t>The new pStatus artifact also utilizes the <tt>reason-context</tt> field to provide a distinguishable token.
For pStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain either the</t>
            <ul spacing="normal">
              <li>
                <t><tt>pbs-details</tt> member for status information corresponding to the status-type <tt>bootstrap</tt>, or the</t>
              </li>
              <li>
                <t><tt>pos-details</tt> member for status information corresponding to the status-type <tt>operation</tt> (see <xref target="tstatus_data"/>)</t>
              </li>
            </ul>
            <t>Other documents may add additional <tt>reason-context</tt> members correlating to other <tt>statustrigger</tt> status-types or to include further status information.</t>
            <t>For the <tt>pbs-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>factory-default</tt>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-success</tt>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-error</tt>: Pledge voucher processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-success</tt>: Pledge processed the enrollment exchange successfully.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-error</tt>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
            </ul>
            <t>The <tt>pbs-details</tt> values <bcp14>SHALL</bcp14> be cumulative in the sense that <tt>enroll-success</tt> and <tt>enroll-error</tt> imply <tt>voucher-success</tt>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_bootstrap">
              <name>status-bootstrap JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge processed enrollment exchange successfully.",
  "reason-context": {
    "pbs-details": "enroll-success"
  }
}
]]></artwork>
            </figure>
            <t>For the <tt>pos-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>connect-success</tt>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>connect-error</tt>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
            </ul>
            <t><xref target="stat_example_operation"/> provides an example for operational status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_operation">
              <name>status-operation JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "pos-details" : "connect-error"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-8">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact and
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate
The certificate chain <bcp14>MUST</bcp14> be available for certificate verification.
If it is not contained in the x5c Header Parameter it is provided to the relying party by other means such as configuration.</t>
              </li>
            </ul>
            <t><xref target="pstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="pstatus_header">
              <name>JWS Protected Header Example within pStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-8">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according to its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
Algorithms used for JWS signatures <bcp14>MUST</bcp14> support ES256 as recommended in <xref target="RFC7518"/> and <bcp14>MAY</bcp14> support further algorithms.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="log_hints">
      <name>Logging Considerations</name>
      <t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
Recommend key events for logging comprise:</t>
      <ul spacing="normal">
        <li>
          <t>Communication attempts between the pledge, Registrar-Agent, and registrar.</t>
        </li>
        <li>
          <t>Protocol handshakes and onboarding steps.</t>
        </li>
        <li>
          <t>Voucher requests and responses.</t>
        </li>
        <li>
          <t>Authentication successes or failures.</t>
        </li>
      </ul>
      <t>The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>
      <ul spacing="normal">
        <li>
          <t>PVR received from Registrar-Agent</t>
        </li>
        <li>
          <t>Acceptance of a pledge into the domain</t>
        </li>
        <li>
          <t>Voucher provided to Registrar-Agent</t>
        </li>
        <li>
          <t>PER received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate requested</t>
        </li>
        <li>
          <t>Pledge EE certificate received from Domain CA</t>
        </li>
        <li>
          <t>Pledge EE certificate provided to Registrar-Agent</t>
        </li>
        <li>
          <t>CA Certificates provided to Registrar-Agent</t>
        </li>
        <li>
          <t>Voucher Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Enroll Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate revoked</t>
        </li>
      </ul>
      <t>Furthermore, it is recommended to:</t>
      <ul spacing="normal">
        <li>
          <t>support adjustable logging levels (severity) to cater to different operational needs or failure situations.</t>
        </li>
        <li>
          <t>include meta information to distinguish logs that relate to different BRSKI approaches (e.g., BRSKI, BRSKI-AE, BRSKI-PRM, constraint BRSKI) that are likely supported in the same domain in parallel.</t>
        </li>
        <li>
          <t>include detailed error codes and diagnostics information as defined throughout the document or stemming from other used components or libraries also in the logging information.</t>
        </li>
        <li>
          <t>support synchronized time (e.g., via NTP) to include timestamps in logging to enable sequencing and  correlation of events.</t>
        </li>
        <li>
          <t>utilize standard logging formats (e.g., syslog) to allow for easy integration into log analysis tools and SIEM systems.</t>
        </li>
        <li>
          <t>utilize secure transmission of logs to centralized log servers, particularly in cloud or distributed environments (e.g., in case of syslog, <xref target="RFC9662"/> updates the utilized cipher suites for TLS and DTLS).</t>
        </li>
        <li>
          <t>allow for definition of key operational thresholds (e.g., high latency, failed onboarding attempts) to trigger alerts for proactive issue resolution.</t>
        </li>
        <li>
          <t>avoid inclusion of sensitive information (see also <xref target="priv_cons"/>)</t>
        </li>
      </ul>
      <t>For log analysis the following may be considered:</t>
      <ul spacing="normal">
        <li>
          <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
        </li>
        <li>
          <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
        </li>
        <li>
          <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in the EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
        </li>
      </ul>
      <t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different Registrar-Agents or if different registrars have been used.</t>
      <t>In order to protect the registrar from overload attacks, a rate-limiting may be used by logging events from the same type just once.</t>
    </section>
    <section anchor="op_cons">
      <name>Operational Considerations</name>
      <t>As outlined in <xref target="architecture"/>, BRSKI-PRM introduces an additional component with the Registrar-Agent in the BRSKI architecture in addition to new modes of interaction to facilitate the communication between the pledge and the registrar.
As outlined in <xref target="colo-regagt"/> the functional support of BRSKI-PRM can also be achieved using a Registrar-Agent co-located with the Registrar instead of a stand-alone Registrar-Agent, which may reduce operational complexity.</t>
      <t>This has an influence on the configuration and operation not only of the Registrar-Agent, but also for the registrar and the pledge.</t>
      <t>As outlined in <xref target="system-components"/>, there are additional configuration items dues to the introduction of the Registrar-Agent. This may increase operational complexity and potential misconfigurations in deploying and managing this entity:</t>
      <ul spacing="normal">
        <li>
          <t>A Registrar-Agent needs to be provided with a Registrar-Agent EE certificate, the domain registrar EE certificate and the list of pledges. BRSKI-PRM is open regarding the selected provisioning method, which may be automated or by configuration.</t>
        </li>
        <li>
          <t>Pledges may support either BRSKI-PRM only or combined with other modes of operation.</t>
        </li>
        <li>
          <t>Registrars may support either BRSKI-PRM only or combined with other BRSKI modes of operation. The distinction of BRSKI and BRSKI-PRM is done based on the provided endpoints of the registrar. An operator deploying pledges with a mixed set of operation need to ensure that the domain registrar supports all necessary options to ensure bootstrapping of pledges depending of the supported operational mode.</t>
        </li>
        <li>
          <t>In addition, registrars may  support a co-located Registrar-Agent, if nomadic operation of the Registrar-Agent is not required. This facilitates situations in which an operator wants to deploy BRSKI pledges acting as clients and BSKI pledges acting as servers.</t>
        </li>
      </ul>
      <t>With the Registrar-Agent enhancement a new component is introduced in the communication path between the pledge and the registrar.
This likely increases the latency of the communication between the pledge and the registrar.
The increase in latency due to this additional component may be neglected given that the Registrar-Agent operates with nomadic connectivity as outlined in <xref target="arch_nomadic"/>.</t>
      <t>BRSKI-PRM requires pledges to possess an IDevID to enable onboarding in new domains.
IDevID (and corresponding trust anchors) are expected to have a rather long lifetime.
This may allow for a longer period between device acquisition and initial onboarding.
Contrary, if devices that have been provided with an LDevID (and corresponding trust anchors) and temporarily taken out of service, immediate connectivity when bringing them back to operation may not be given, as the LDevIDs typically have a much shorter validity period compared to IDevIDs.
It is therefore recommended to onboard them as new devices to ensure they possess valid LDevIDs.</t>
      <t>The key infrastructure as part of the customer domain discussed in <xref target="architecture"/> may be operated locally by the operator of that domain or may be provided as a third party service.</t>
      <t>Requirements to the utilized credentials authenticating and artifact signatures on the registrar as outlined in <xref target="registrar_component"/> may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>
      <t>Besides the above, also consider the existing document on operational modes for BRSKI MASA in <xref target="I-D.richardson-anima-masa-considerations"/>.</t>
    </section>
    <section anchor="iana_con">
      <name>IANA Considerations</name>
      <t>This document requires the following IANA actions.</t>
      <section anchor="brski-well-known-uris">
        <name>BRSKI Well-Known URIs</name>
        <t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>
        <table anchor="iana_table_uri">
          <name>BRSKI Well-Known URIs Additions</name>
          <thead>
            <tr>
              <th align="left">Path Segment</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to registrar</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain wrapped CA certificates</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply voucher to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA certificates to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query pledge status</td>
              <td align="left">[THISRFC]</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sn_reg">
        <name>Service Name and Transport Protocol Port Number Registry</name>
        <t>IANA is requested to register the following service names:</t>
        <t><strong>Service Name:</strong> brski-pledge<br/>
          <strong>Transport Protocol(s):</strong> tcp<br/>
          <strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Contact:</strong> IETF Chair <eref target="mailto:chair@ietf.org">chair@ietf.org</eref><br/>
          <strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br/>
          <strong>Reference:</strong> [THISRFC]</t>
      </section>
    </section>
    <section anchor="priv_cons">
      <name>Privacy Considerations</name>
      <t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>potentially no usage of TLS between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <t><xref target="tpvr"/> describes to optionally apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>
      <t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>
      <t>As logging is recommended to better handle failure situations, it is necessary to avoid capturing  sensitive or personal data.
Privacy-preserving measures in logs <bcp14>SHOULD</bcp14> be applied, such as:</t>
      <ul spacing="normal">
        <li>
          <t>Avoid logging personally identifiable information unless unavoidable.</t>
        </li>
        <li>
          <t>Anonymize or pseudonymize data where possible.</t>
        </li>
      </ul>
      <t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>
      <ul spacing="normal">
        <li>
          <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is not encrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
        </li>
        <li>
          <t>the Timestamp data could reveal the activation time of the device.</t>
        </li>
        <li>
          <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
        </li>
      </ul>
    </section>
    <section anchor="sec_cons">
      <name>Security Considerations</name>
      <t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered in the following subsections related to:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent and related attack options.</t>
        </li>
        <li>
          <t>the reversal of the pledge communication direction (push mode, compared to BRSKI).</t>
        </li>
        <li>
          <t>no usage of TLS between Registrar-Agent and pledge and the resulting impact on transport of sensitive information (see <xref target="tpvr"/> regarding optional use of TLS to protect the communication between the Registrar-Agent and the pledge)</t>
        </li>
      </ul>
      <section anchor="sec_cons-dos">
        <name>Denial of Service (DoS) Attack on Pledge</name>
        <t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS-attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>
        <t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limit the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>
        <t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resend the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>
      </section>
      <section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent">
        <name>Misuse of acquired PVR and PER by Registrar-Agent</name>
        <t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <tt>proximity-registrar-cert</tt> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>
        <t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>
      </section>
      <section anchor="sec_cons_reg-agt">
        <name>Misuse of Registrar-Agent</name>
        <t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>
        <t>In addition, it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".</t>
        <t>Furthermore, the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent.
If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.
If the registrar detects a mismatch in the utilized certificates, it may conclude the usage of either an outdated "agent-signed-data" component in the PVR or a man-in-the-middle attack by a potentially unauthorized Registrar-Agent.</t>
      </section>
      <section anchor="sec_cons_mDNS">
        <name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>
        <t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>
        <t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>
      </section>
      <section anchor="yang-module-security-considerations">
        <name>YANG Module Security Considerations</name>
        <t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>
        <t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>
        <t>Documents that define exclusively modules following the extension in <xref target="RFC8971"/> are not required to include the YANG security template per guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>.</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC5272">
          <front>
            <title>Certificate Management over CMS (CMC)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
              <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
              <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
              <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5272"/>
          <seriesInfo name="DOI" value="10.17487/RFC5272"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
            <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
            <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
            <date month="October" year="2013"/>
            <abstract>
              <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC7518">
          <front>
            <title>JSON Web Algorithms (JWA)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>This specification registers cryptographic algorithms and identifiers to be used with the JSON Web Signature (JWS), JSON Web Encryption (JWE), and JSON Web Key (JWK) specifications. It defines several IANA registries for these identifiers.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7518"/>
          <seriesInfo name="DOI" value="10.17487/RFC7518"/>
        </reference>
        <reference anchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8615">
          <front>
            <title>Well-Known Uniform Resource Identifiers (URIs)</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
            <date month="May" year="2019"/>
            <abstract>
              <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
              <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8615"/>
          <seriesInfo name="DOI" value="10.17487/RFC8615"/>
        </reference>
        <reference anchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9360">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="February" year="2023"/>
            <abstract>
              <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9360"/>
          <seriesInfo name="DOI" value="10.17487/RFC9360"/>
        </reference>
        <reference anchor="RFC9646">
          <front>
            <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero-Touch Provisioning (SZTP) Bootstrapping Request</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>This document extends the input to the "get-bootstrapping-data" RPC defined in RFC 8572 to include an optional certificate signing request (CSR), enabling a bootstrapping device to additionally obtain an identity certificate (e.g., a Local Device Identifier (LDevID) from IEEE 802.1AR) as part of the "onboarding information" response provided in the RPC-reply.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9646"/>
          <seriesInfo name="DOI" value="10.17487/RFC9646"/>
        </reference>
        <reference anchor="I-D.ietf-anima-jws-voucher">
          <front>
            <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="15" month="January" year="2025"/>
            <abstract>
              <t>   This document introduces a variant of the RFC8366 voucher artifact in
   which CMS is replaced by the JSON Object Signing and Encryption
   (JOSE) mechanism described in RFC7515.  This supports deployments in
   which JOSE is preferred over CMS.  In addition to specifying the
   format, the "application/voucher-jws+json" media type is registered
   and examples are provided.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-16"/>
        </reference>
        <reference anchor="I-D.ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="1" month="April" year="2025"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a Pledge to an
   owner using an artifact signed, directly or indirectly, by the
   Pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the Pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, includes a number of desired
   extensions into the YANG.  The voucher request defined in RFC8995 is
   also now included in this document, as well as other YANG extensions
   needed for variants of BRSKI/RFC8995.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-14"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <author fullname="G. Klyne" initials="G." surname="Klyne"/>
            <author fullname="C. Newman" initials="C." surname="Newman"/>
            <date month="July" year="2002"/>
            <abstract>
              <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3339"/>
          <seriesInfo name="DOI" value="10.17487/RFC3339"/>
        </reference>
        <reference anchor="RFC4086">
          <front>
            <title>Randomness Requirements for Security</title>
            <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
            <author fullname="J. Schiller" initials="J." surname="Schiller"/>
            <author fullname="S. Crocker" initials="S." surname="Crocker"/>
            <date month="June" year="2005"/>
            <abstract>
              <t>Security systems are built on strong cryptographic algorithms that foil pattern analysis attempts. However, the security of these systems is dependent on generating secret quantities for passwords, cryptographic keys, and similar quantities. The use of pseudo-random processes to generate secret quantities can result in pseudo-security. A sophisticated attacker may find it easier to reproduce the environment that produced the secret quantities and to search the resulting small set of possibilities than to locate the quantities in the whole of the potential number space.</t>
              <t>Choosing random quantities to foil a resourceful and motivated adversary is surprisingly difficult. This document points out many pitfalls in using poor entropy sources or traditional pseudo-random number generation techniques for generating such quantities. It recommends the use of truly random hardware techniques and shows that the existing hardware on many systems can be used for this purpose. It provides suggestions to ameliorate the problem when a hardware solution is not available, and it gives examples of how large such quantities need to be for some applications. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="106"/>
          <seriesInfo name="RFC" value="4086"/>
          <seriesInfo name="DOI" value="10.17487/RFC4086"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
        <reference anchor="RFC5273">
          <front>
            <title>Certificate Management over CMS (CMC): Transport Protocols</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines a number of transport mechanisms that are used to move CMC (Certificate Management over CMS (Cryptographic Message Syntax)) messages. The transport mechanisms described in this document are HTTP, file, mail, and TCP. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5273"/>
          <seriesInfo name="DOI" value="10.17487/RFC5273"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC9525">
          <front>
            <title>Service Identity in TLS</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="R. Salz" initials="R." surname="Salz"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
              <t>This document obsoletes RFC 6125.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9525"/>
          <seriesInfo name="DOI" value="10.17487/RFC9525"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
            <author fullname="K. Hartke" initials="K." surname="Hartke"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
            <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9110">
          <front>
            <title>HTTP Semantics</title>
            <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
            <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
            <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
            <date month="June" year="2022"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
              <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="97"/>
          <seriesInfo name="RFC" value="9110"/>
          <seriesInfo name="DOI" value="10.17487/RFC9110"/>
        </reference>
        <reference anchor="RFC9238">
          <front>
            <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="J. Latour" initials="J." surname="Latour"/>
            <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
              <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9238"/>
          <seriesInfo name="DOI" value="10.17487/RFC9238"/>
        </reference>
        <reference anchor="RFC9662">
          <front>
            <title>Updates to the Cipher Suites in Secure Syslog</title>
            <author fullname="C. Lonvick" initials="C." surname="Lonvick"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="J. Salowey" initials="J." surname="Salowey"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>RFCs 5425 and 6012 describe using TLS and DTLS to securely transport syslog messages. This document updates the cipher suites required by RFC 5245 (TLS Transport Mapping for Syslog) and RFC 6012 (DTLS Transport Mapping for Syslog). It also updates the protocol recommended by RFC 6012 for secure datagram transport.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9662"/>
          <seriesInfo name="DOI" value="10.17487/RFC9662"/>
        </reference>
        <reference anchor="RFC9733">
          <front>
            <title>BRSKI with Alternative Enrollment (BRSKI-AE)</title>
            <author fullname="D. von Oheimb" initials="D." role="editor" surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <date month="March" year="2025"/>
            <abstract>
              <t>This document defines enhancements to the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol, known as BRSKI with Alternative Enrollment (BRSKI-AE). BRSKI-AE extends BRSKI to support certificate enrollment mechanisms instead of the originally specified use of Enrollment over Secure Transport (EST). It supports certificate enrollment protocols such as the Certificate Management Protocol (CMP) that use authenticated self-contained signed objects for certification messages, allowing for flexibility in network device onboarding scenarios. The enhancements address use cases where the existing enrollment mechanism may not be feasible or optimal, providing a framework for integrating suitable alternative enrollment protocols. This document also updates the BRSKI reference architecture to accommodate these alternative methods, ensuring secure and scalable deployment across a range of network environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9733"/>
          <seriesInfo name="DOI" value="10.17487/RFC9733"/>
        </reference>
        <reference anchor="I-D.ietf-uta-require-tls13">
          <front>
            <title>New Protocols Using TLS Must Require TLS 1.3</title>
            <author fullname="Rich Salz" initials="R." surname="Salz">
              <organization>Akamai Technologies</organization>
            </author>
            <author fullname="Nimrod Aviram" initials="N." surname="Aviram">
         </author>
            <date day="14" month="April" year="2025"/>
            <abstract>
              <t>   TLS 1.3 use is widespread, it has had comprehensive security proofs,
   and it improves both security and privacy over TLS 1.2.  Therefore,
   new protocols that use TLS must require TLS 1.3.  As DTLS 1.3 is not
   widely available or deployed, this prescription does not pertain to
   DTLS (in any DTLS version); it pertains to TLS only.

   This document updates RFC9325 and discusses post-quantum cryptography
   and the security and privacy improvements over TLS 1.2 as a rationale
   for that update.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-uta-require-tls13-12"/>
        </reference>
        <reference anchor="I-D.ietf-netmod-rfc8407bis">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="Andy Bierman" initials="A." surname="Bierman">
              <organization>YumaWorks</organization>
            </author>
            <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
              <organization>Orange</organization>
            </author>
            <author fullname="Qin Wu" initials="Q." surname="Wu">
              <organization>Huawei</organization>
            </author>
            <date day="5" month="May" year="2025"/>
            <abstract>
              <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF Protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-25"/>
        </reference>
        <reference anchor="I-D.draft-ietf-emu-eap-arpa">
          <front>
            <title>The eap.arpa domain and EAP provisioning</title>
            <author fullname="Alan DeKok" initials="A." surname="DeKok">
              <organization>InkBridge Networks</organization>
            </author>
            <date day="29" month="January" year="2025"/>
            <abstract>
              <t>   This document defines the eap.arpa domain as a way for Extensible
   Authentication Protocol (EAP) peers to signal to EAP servers that
   they wish to obtain limited, and unauthenticated, network access.
   EAP peers signal which kind of access is required via certain pre-
   defined identifiers which use the Network Access Identifier (NAI)
   format of RFC 7542.  A table of identifiers and meanings is defined,
   which includes entries for RFC 9140.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-emu-eap-arpa-06"/>
        </reference>
        <reference anchor="I-D.richardson-anima-masa-considerations">
          <front>
            <title>Operational Considerations for Voucher infrastructure for BRSKI MASA</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Manufacturer Authorized Signing Authority (MASA) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the MASA is
   deployed into.  This document does not change any protocol
   mechanisms.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-masa-considerations-09"/>
        </reference>
        <reference anchor="I-D.richardson-anima-registrar-considerations">
          <front>
            <title>Operational Considerations for BRSKI Registrar</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-09"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-discovery">
          <front>
            <title>BRSKI discovery and variations</title>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei USA</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators,
   especially in the face of variations in the protocols that can
   introduce non-interoperability when not equally supported by both
   responder and initiator.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-05"/>
        </reference>
        <reference anchor="IEEE-802.1AR">
          <front>
            <title>IEEE 802.1AR Secure Device Identifier</title>
            <author>
              <organization>Institute of Electrical and Electronics Engineers</organization>
            </author>
            <date year="2018" month="June"/>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="BRSKI-PRM-abstract" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00">
          <front>
            <title>Abstract BRSKI-PRM Protocol Overview</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="March"/>
          </front>
        </reference>
        <reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
          <front>
            <title>Android Developer: Connect devices wirelessly</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
        </reference>
        <reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
          <front>
            <title>Security with Network Protocols</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
        </reference>
        <reference anchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC4648">
          <front>
            <title>The Base16, Base32, and Base64 Data Encodings</title>
            <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
            <date month="October" year="2006"/>
            <abstract>
              <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4648"/>
          <seriesInfo name="DOI" value="10.17487/RFC4648"/>
        </reference>
        <reference anchor="RFC8996">
          <front>
            <title>Deprecating TLS 1.0 and TLS 1.1</title>
            <author fullname="K. Moriarty" initials="K." surname="Moriarty"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <date month="March" year="2021"/>
            <abstract>
              <t>This document formally deprecates Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346). Accordingly, those documents have been moved to Historic status. These versions lack support for current and recommended cryptographic algorithms and mechanisms, and various government and industry profiles of applications using TLS now mandate avoiding these old TLS versions. TLS version 1.2 became the recommended version for IETF protocols in 2008 (subsequently being obsoleted by TLS version 1.3 in 2018), providing sufficient time to transition away from older versions. Removing support for older versions from implementations reduces the attack surface, reduces opportunity for misconfiguration, and streamlines library and product maintenance.</t>
              <t>This document also deprecates Datagram TLS (DTLS) version 1.0 (RFC 4347) but not DTLS version 1.2, and there is no DTLS version 1.1.</t>
              <t>This document updates many RFCs that normatively refer to TLS version 1.0 or TLS version 1.1, as described herein. This document also updates the best practices for TLS usage in RFC 7525; hence, it is part of BCP 195.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="195"/>
          <seriesInfo name="RFC" value="8996"/>
          <seriesInfo name="DOI" value="10.17487/RFC8996"/>
        </reference>
        <reference anchor="RFC9440">
          <front>
            <title>Client-Cert HTTP Header Field</title>
            <author fullname="B. Campbell" initials="B." surname="Campbell"/>
            <author fullname="M. Bishop" initials="M." surname="Bishop"/>
            <date month="July" year="2023"/>
            <abstract>
              <t>This document describes HTTP extension header fields that allow a TLS terminating reverse proxy (TTRP) to convey the client certificate information of a mutually authenticated TLS connection to the origin server in a common and predictable manner.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9440"/>
          <seriesInfo name="DOI" value="10.17487/RFC9440"/>
        </reference>
        <reference anchor="RFC8971">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
            <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
            <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
            <author fullname="V. Govindan" initials="V." surname="Govindan"/>
            <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8971"/>
          <seriesInfo name="DOI" value="10.17487/RFC8971"/>
        </reference>
        <reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
          <front>
            <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="7" month="May" year="2025"/>
            <abstract>
              <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-08"/>
        </reference>
      </references>
    </references>
    <?line 2926?>

<section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent">
        <name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>
        <t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge-Voucher-Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Registrar Voucher-Request (RVR) - from Registrar to MASA</name>
        <t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>
        <figure anchor="ExampleRegistrarVoucherRequestfigure">
          <name>Example Registrar-Voucher-Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher-Response from MASA</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>
        <figure anchor="ExampleVoucherResponseWithRegSignfigure">
          <name>Example Voucher-Response from MASA, with additional Registrar signature</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="pledgehttps">
      <name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>
      <t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>
      <t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependent upon the security of the TLS connection.</t>
      <t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>
      <ol spacing="normal" type="1"><li>
          <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do not help as there is no previous relationship between the Registrar-Agent and the pledge.</t>
        </li>
        <li>
          <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
        </li>
      </ol>
      <t>If the Registrar-Agent has a pre-configured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>
      <t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QR codes may help automate this in some cases.</t>
      <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="of" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTP-over-TLS connection without performing WebPKI verification.
The application will then have to do its own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involves use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures (see <xref target="androidtrustfail"/>).</t>
      <t>Also note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge IDevID certificate.
IDevID certificates are intended to be widely usable and EKU does not support that use.</t>
    </section>
    <section anchor="app_history">
      <name>History of Changes "RFC Editor: please delete"</name>
      <t>Proof of Concept Code available</t>
      <t>From IETF draft 21 -&gt; IETF draft 22:</t>
      <ul spacing="normal">
        <li>
          <t>addressed remaining issues from telechat
          </t>
          <ul spacing="normal">
            <li>
              <t>included overview subsections for reason-context definition and usage in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>updated status detail examples to correctly use the defined types in the status structure.</t>
            </li>
          </ul>
        </li>
      </ul>
      <t>From IETF draft 20 -&gt; IETF draft 21:</t>
      <ul spacing="normal">
        <li>
          <t>addressed remaining issues from telechat
          </t>
          <ul spacing="normal">
            <li>
              <t>RetryAfter response to be always provided in case of 503 Service unavailable response</t>
            </li>
          </ul>
        </li>
      </ul>
      <t>From IETF draft 19 -&gt; IETF draft 20:</t>
      <ul spacing="normal">
        <li>
          <t>addressed last comments and nits before telechat</t>
        </li>
      </ul>
      <t>From IETF draft 18 -&gt; IETF draft 19:</t>
      <ul spacing="normal">
        <li>
          <t>addressed DISCUSS received during telechat preparation:
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 136: included hint for reaction on HTTP requests to avoid DoS (rate limiting) in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>issue 137: HTTP error handling BCP RFC 9205: removed normative language for HTTP status codes</t>
            </li>
            <li>
              <t>issue 139: usage of TLS 1.3 emphasized by also referencing UTA draft in <xref target="pvr"/></t>
            </li>
            <li>
              <t>issue 140: provided hint for time synchronization of registrar-agent in <xref target="agent_component"/></t>
            </li>
            <li>
              <t>issue 145: clarified language tagging in status information in <xref target="vstatus_data"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>addressed COMMENT, NITS, received during telechat preparation, specifically
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 140: synchronized time</t>
            </li>
            <li>
              <t>issue 141: config options for discovery and nonceless vouchers in <xref target="voucher"/> and <xref target="agent_component"/></t>
            </li>
            <li>
              <t>issue 142: addressed TTL of provisional accept state by utilizing the last received tPVR for the binding in <xref target="tpvr"/></t>
            </li>
            <li>
              <t>issue 144: clarified usage of "<bcp14>MUST</bcp14> ...unless" in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>issue 146: added MTI algorithm for JWS signatures</t>
            </li>
            <li>
              <t>issue 147: definitions of reason-context in status objects</t>
            </li>
          </ul>
        </li>
        <li>
          <t>updated reference of BRSKI-AE (now RFC 9733).</t>
        </li>
        <li>
          <t>removed unused references</t>
        </li>
      </ul>
      <t>From IETF draft 17 -&gt; IETF draft 18:</t>
      <ul spacing="normal">
        <li>
          <t>addressed nits received from the GenART review</t>
        </li>
        <li>
          <t>addressed comment from IANA to update contact for service name registration from IESG to IETF Chair in <xref target="sn_reg"/></t>
        </li>
        <li>
          <t>SECDIR review: included reasoning for short lived certificates in <xref target="agent_component"/></t>
        </li>
        <li>
          <t>SECDIR review: enhanced reasoning for optional TLS usage in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for handling if the accept header is not used in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for response body encoding in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint regarding IDevID and LDevID validity in <xref target="op_cons"/></t>
        </li>
        <li>
          <t>DNSDIR review: renamed <xref target="sn_reg"/> to Service Name and Transport Protocol Port Number Registry</t>
        </li>
        <li>
          <t>from IANA expert review: included registered service names in headings</t>
        </li>
      </ul>
      <t>From IETF draft 16 -&gt; IETF draft 17:</t>
      <ul spacing="normal">
        <li>
          <t>updated formatting of key events in <xref target="log_hints"/></t>
        </li>
        <li>
          <t>updated reference to corresponding sections for JWS Header and Signature in <xref target="I-D.ietf-anima-jws-voucher"/> in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
        <li>
          <t>simplified description for JWS Protected Header aligning with the update in draft-ietf-anima-jws-voucher-15 to always include the certificate chain in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
      </ul>
      <t>From IETF draft 15 -&gt; IETF draft 16:</t>
      <ul spacing="normal">
        <li>
          <t>issue #135: corrections from IOTDIR review (clarification regarding minimum supported discovery in <xref target="discovery_uc2_ppa"/>, clarification regarding CDDl notation in <xref target="cacerts_CDDL_def"/> and editorial nits.</t>
        </li>
        <li>
          <t>updated references (draft-ietf-netconf-sztp-csr became RFC 9646, included RFC 9662, operational considerations drafts for registrar and MASA)</t>
        </li>
        <li>
          <t>AD review: included term Registrar-Agent in Terminology section</t>
        </li>
        <li>
          <t>AD review: enhanced interaction information in <xref target="uc2figure"/> and <xref target="uc3figure"/></t>
        </li>
        <li>
          <t>AD review: included new section on <xref target="op_cons"/> to outline operational considerations</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="log_hints"/> with more detailed recommendations on logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="priv_cons"/> with enhanced recommendations concerning logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="sec_cons_reg-agt"/> with more information about misuse of the Registrar-Agent</t>
        </li>
        <li>
          <t>IOTDIR/OPSDIR/AD review: addressed various nits received throughout the draft</t>
        </li>
      </ul>
      <t>From IETF draft 14 -&gt; IETF draft 15:</t>
      <ul spacing="normal">
        <li>
          <t>issue #134: editorial clarifications on references to <xref target="I-D.ietf-anima-brski-discovery"/> in <xref target="discovery_uc2_reg"/> and  <xref target="discovery_uc2_ppa"/></t>
        </li>
      </ul>
      <t>From IETF draft 13 -&gt; IETF draft 14:</t>
      <ul spacing="normal">
        <li>
          <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
        </li>
        <li>
          <t>Changes incorporated based on Shepherd review PR #133:
          </t>
          <ul spacing="normal">
            <li>
              <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
            </li>
            <li>
              <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
            </li>
            <li>
              <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
            </li>
            <li>
              <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
            </li>
            <li>
              <t>Included MASA component in description of affected components in <xref target="system-components"/></t>
            </li>
            <li>
              <t>Moved host header field handling from <xref target="pledgehttps"/> to <xref target="pledge_component"/> as generally applicable</t>
            </li>
            <li>
              <t>Updated status artifacts (vStatus, eStatus, pStatus) to align with BRSKI CDDL definition, but made reason-context mandatory  to have distinguishable objects for the registrar-agent</t>
            </li>
            <li>
              <t>Correction of terminology of local host name vs. service instance name in <xref target="discovery_uc2_ppa"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>Update of informative references and nits</t>
        </li>
      </ul>
      <t>From IETF draft 12 -&gt; IETF draft 13:</t>
      <ul spacing="normal">
        <li>
          <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
        </li>
        <li>
          <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
        </li>
        <li>
          <t>Updated CDDL source code integration to allow for automatic verification</t>
        </li>
        <li>
          <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
        </li>
        <li>
          <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
        </li>
        <li>
          <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
        </li>
      </ul>
      <t>From IETF draft 11 -&gt; IETF draft 12:</t>
      <ul spacing="normal">
        <li>
          <t>Updated acknowledgments to reflect early reviews</t>
        </li>
        <li>
          <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
        </li>
      </ul>
      <t>From IETF draft 10 -&gt; IETF draft 11:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
        </li>
        <li>
          <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
        </li>
        <li>
          <t>removed unused reference RFC 5280</t>
        </li>
        <li>
          <t>removed site terminology</t>
        </li>
        <li>
          <t>deleted duplicated text in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
        </li>
        <li>
          <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
        </li>
        <li>
          <t>addressed comments from SECDIR early review</t>
        </li>
      </ul>
      <t>From IETF draft 09 -&gt; IETF draft 10:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
        </li>
        <li>
          <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
        </li>
        <li>
          <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
        </li>
        <li>
          <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
        </li>
        <li>
          <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
        </li>
        <li>
          <t>issue #130, aligned the usage of site and domain throughout the document</t>
        </li>
        <li>
          <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
        </li>
        <li>
          <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
        </li>
        <li>
          <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
        </li>
      </ul>
      <t>From IETF draft 08 -&gt; IETF draft 09:</t>
      <ul spacing="normal">
        <li>
          <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
        </li>
        <li>
          <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
        </li>
        <li>
          <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
        </li>
        <li>
          <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
        </li>
        <li>
          <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
        </li>
        <li>
          <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
        </li>
        <li>
          <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
        </li>
        <li>
          <t>issue #94: clarified terminology (possess vs. obtained)</t>
        </li>
        <li>
          <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
        </li>
        <li>
          <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
        </li>
        <li>
          <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
        </li>
        <li>
          <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
        </li>
        <li>
          <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
        </li>
        <li>
          <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
        </li>
        <li>
          <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
        </li>
        <li>
          <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
        </li>
        <li>
          <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
        </li>
        <li>
          <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
        </li>
        <li>
          <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
        </li>
        <li>
          <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
        </li>
        <li>
          <t>updated references</t>
        </li>
      </ul>
      <t>From IETF draft 07 -&gt; IETF draft 08:</t>
      <ul spacing="normal">
        <li>
          <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
        </li>
        <li>
          <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
        </li>
      </ul>
      <t>From IETF draft 06 -&gt; IETF draft 07:</t>
      <ul spacing="normal">
        <li>
          <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
        </li>
        <li>
          <t>smaller editorial corrections</t>
        </li>
      </ul>
      <t>From IETF draft 05 -&gt; IETF draft 06:</t>
      <ul spacing="normal">
        <li>
          <t>Update of list of reviewers</t>
        </li>
        <li>
          <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
        </li>
        <li>
          <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
        </li>
        <li>
          <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
        <li>
          <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
      </ul>
      <t>From IETF draft 04 -&gt; IETF draft 05:</t>
      <ul spacing="normal">
        <li>
          <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
        </li>
        <li>
          <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
        </li>
        <li>
          <t>Clarified pledge-status responses are cumulative, issue #73</t>
        </li>
        <li>
          <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
        </li>
        <li>
          <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
        </li>
        <li>
          <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
        </li>
        <li>
          <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
        </li>
        <li>
          <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
        </li>
        <li>
          <t>Enhanced security considerations and privacy considerations, issue #59</t>
        </li>
        <li>
          <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
        </li>
        <li>
          <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
        </li>
        <li>
          <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
        </li>
        <li>
          <t>Reworked all message representations to align with encoding</t>
        </li>
        <li>
          <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
        </li>
        <li>
          <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
        </li>
        <li>
          <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
        </li>
        <li>
          <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
        </li>
        <li>
          <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
        </li>
        <li>
          <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
        </li>
        <li>
          <t>Several editorial changes and enhancements to increasing readability.</t>
        </li>
      </ul>
      <t>From IETF draft 03 -&gt; IETF draft 04:</t>
      <ul spacing="normal">
        <li>
          <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
        </li>
        <li>
          <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
        </li>
        <li>
          <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
        </li>
        <li>
          <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
        </li>
        <li>
          <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
        </li>
        <li>
          <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
        </li>
        <li>
          <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
        </li>
        <li>
          <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
        </li>
        <li>
          <t>utilized defined abbreviations in the document consistently, issue #22</t>
        </li>
        <li>
          <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
        </li>
        <li>
          <t>Added several clarifications based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
        </li>
        <li>
          <t>Include link to SVG graphic as general overview</t>
        </li>
        <li>
          <t>Restructuring of section 5 to flatten hierarchy</t>
        </li>
        <li>
          <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
        </li>
        <li>
          <t>Several editorial improvements based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
        </li>
        <li>
          <t>Included representation for General JWS JSON Serialization for examples</t>
        </li>
        <li>
          <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
        </li>
        <li>
          <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
        </li>
        <li>
          <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
        </li>
        <li>
          <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
        </li>
        <li>
          <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
        </li>
        <li>
          <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
        </li>
        <li>
          <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
        </li>
        <li>
          <t>Reworked text in from introduction to section pledge-responder-mode</t>
        </li>
        <li>
          <t>Fixed "serial-number" encoding in PVR/RVR</t>
        </li>
        <li>
          <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
        </li>
        <li>
          <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
        </li>
        <li>
          <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
        </li>
        <li>
          <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
        </li>
        <li>
          <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
        </li>
        <li>
          <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
        </li>
        <li>
          <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
        </li>
        <li>
          <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
        </li>
        <li>
          <t>Addressed YANG warning (issue #1)</t>
        </li>
        <li>
          <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and a Pledge Enroll-Request.</t>
        </li>
      </ul>
      <t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>
      <ul spacing="normal">
        <li>
          <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
        </li>
        <li>
          <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
        </li>
        <li>
          <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
        </li>
        <li>
          <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
        </li>
        <li>
          <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
        </li>
        <li>
          <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
        </li>
        <li>
          <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
        </li>
        <li>
          <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
        </li>
        <li>
          <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
        </li>
        <li>
          <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
        </li>
        <li>
          <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
        </li>
        <li>
          <t>First description of exchanged object types (needs more work)</t>
        </li>
        <li>
          <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
        </li>
        <li>
          <t>Updated references.</t>
        </li>
        <li>
          <t>Included Thomas Werner as additional author for the document.</t>
        </li>
      </ul>
      <t>From individual version 03 -&gt; IETF draft 00:</t>
      <ul spacing="normal">
        <li>
          <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
        </li>
        <li>
          <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
        </li>
        <li>
          <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
        </li>
        <li>
          <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
        </li>
        <li>
          <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
        </li>
        <li>
          <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
        </li>
      </ul>
      <t>From individual version 02 -&gt; 03:</t>
      <ul spacing="normal">
        <li>
          <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
        </li>
        <li>
          <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
        </li>
        <li>
          <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
        </li>
      </ul>
      <t>From individual version 01 -&gt; 02:</t>
      <ul spacing="normal">
        <li>
          <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
        </li>
        <li>
          <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
        </li>
      </ul>
      <t>From individual version 00 -&gt; 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
        </li>
        <li>
          <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
        </li>
        <li>
          <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
        </li>
      </ul>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization>IoTconsultancy.nl</organization>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei</organization>
        <address>
          <email>tte@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
        <organization>Siemens Schweiz AG</organization>
        <address>
          <email>ietf@kovatsch.net</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+y9+3obx5UH+L++z+/QofZbkzEA8aJ7JpmhJTrWRLI0JG3P
bDYrNoEm2RGIRtAN0oyseZZ9ln2yPdeqU9XVAEhJtuxYmW8sAejqupw69/M7
/X7/s1tN2YyLx9mX+wd/eZZdls1Z9mpcjE6LrJxk+0U9rSajYpa9qEZFtk4/
6r/af7Hx2a38+HhWXMiD+Nlnt0bVcJKfw2CjWX7S9MuiOennk/I87x/P6jdl
fzo7729vw6OzIn+cvZwWs7wpq0md5ZNR9iKf5KfFeTFpPrt1efo42/3m2Yvd
7Ps/w7B5A2Nub27f++xW3cBvX+fjagIfNbN58dmtcjqjv9bN9ubmo00Yv54f
n5d1DUMfXk3hd8/2Dr+KB106h2HePM7qZvTZrWn5+LNbWdZUw8fZ51dF/Tn+
a1idT/NhYz6pr85nxUltP6lmTfQRTHZSNeVJWYzg00nFv2tmpRkqnzdn1Qze
2YczgIcPBtlXs7Ko8ae8vwdNcXJSTPzH1QwWd1Di1Ots98/4kZ6PfCrvKQp4
z8umqfpf52eT/n45Oc3u03rK5upx9mI+KYdnvL4RvOjzh1sPdh7JgueTZga/
+XMxO88nV/hZcZ6XY9wlms7gBKfzHzW/cAA7hL+Zz8rH2VnTTOvHd+5cXl4O
zPd33BoPB9n3xWxSzPwiD8+q87w2H/+8i2xoOv1Lms7NFrk3yJ4XuVni3ris
GvcZre9JWQ+r7OAK9vQ8WM8+zLkp4V95XRfZA7+c7/PxuKyL8biY+DU9+br/
cGfzbrCmA7jd/yxmY6B0/Hx6Rpdo7Yu7W9ndu9nDBw+zR3CD1syaxzCz/xji
jHihso4XA5pNPhvV1cSv5gV+VoyzJ/HXfHDw2mIMm5odVCfNJdy/7Ptq9qY2
rzsfzr5ApvEftf52MMyD7dXdNd/D9g4rWGB5PG/srYHNflr+/Y3Z7PpN5T6i
KT2rDuHRej4GpjK8GkzGZi4F/Howgl//BxxR/Ku+kmgF21nUdbY3fFPMGjfw
V/NmPisui9LST1P8x7AenOTzwaiwW/mX6iJvaiZI2ci8ac5KoH37VUD9B8Mz
GP2fcgvkDbR1b+SRwaSA+VwUk3lB3Ot0Vs2nwgDp5iBfzvjBt/SP/8DnB/Ca
d/R7kATz48f8u/7l6Z2IkX92a1LBFWnKCx5//6sn97YfbPu/P9zUv99/cH/b
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
bD/gbwslFtXuJjqcy0oz41ETIZNo8cQthBGUGdjs+VQ4sVsQXTYZ+7gY5nhH
ZHXaINurTyo1A6VkSGDVxBUlcDy58shoDnI+UliFOysQW9Mqau15GZ04++zb
w6/6Dx19E7G7dk6CY7B97xGCCuBhIXoGQTl5n/bTp8/1h/e3qKEk7ixGiMYJ
3Rh//ho+fvfusfMnDEejMZgxsg/CJoXPKdjyH7O3+JMsW+NT1EuKf2Gi6fv+
r3j2a49hO4Aj9oLH+ID6OEX9AX7/zlo/wTw1FkbLRGpfdssWLGKjFSgbFyeN
t5GOVlzaUXZeEEnyMVpLBmni/t2+HmfnjYCf//fg3uaj7GInW3+KgHxMR4Ng
Jma3Vn/nf35/wPe5f8C34SmBO0XqKqqneT0i1VRIQxoPoJtrfn6ez6gQW+RF
ibXwzHaV/kOSdtQEw+GJXoNM1ngBMn8CnfzjH9d6ZpSQar7cPdi7f3cdLs7D
9eRiNzY+u9WmKFmeEhTNft909Ga0N1zZAjK5jYIjvcNvb+ueho2jEtXmzBL+
Z/ebP+M9nVN3qTamSLI2n/TzIj9JkghCvJeTfKat0uiookr6FflVanh6bzfr
gl2xNQjZ2p/F747f0LsPAkI6uIJ9/2GtExTtwWCb0f8Rgu3eFgILKrieo8H2
MYTG7ezcUDn87fUsOPGY1ss6WobaPQsupOjli2/DNL/C3iqOer/dfy4EnFzF
xgaTv5M+NTz5V+akwodx0FnVUG/LxLCwilf6dfY16aoyKD3qBg4exacO9JsN
/vE7/M/fogvV3kl1UKXvBhzGqsSwiEF3HLka7iE9UkdHUCxZVa5gIxoR2bQ5
fCAtBEsmNGHD9ofU4ZHhm5lfzWfjfvpdQD5IpMTJfKtbHseRTXfPix3uixRP
hlbg+gnxWqMzkO9Sh0+YJDebuI6kU5f5KEwR76cjG9yoG73HkaR5DzPc210H
//a2XvAlFGKY1jINS52ThMJ1Ay0LZoS3Y6GeRT8xKhW7KUb9agLXscGKO9Wa
AhUYvyx+aFoKU/TKlsrUsSnr/NxSrcjPboESMpzPKAtopPo+Kd2ogCNfpCHE
ZsOQ4iifkQVQ3KGfCT10o2PeV3TMnZ2dRwZI9ijqkNw5vbRJkYBu8nBtrdih
+iwrA8pT8IpmbFceem+NkNEsavUS94cW/wFMpA0Lp9AxcrzCQCj/CvuucSwS
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
jXwtiLy/Ghbyt/6q++P6yNXTXxtE3l2FyOM1XgMZT832jwWNZ0TrTwGNx/rQ
cnyCTvS61Rt2f1D0Ot9P+QN0LG+DApquT+od2YPJiLK+uYM9SN0OB9XoPTUV
g52xro/+JYJ7k4H0NQa+erF7Kg+eXYQdF5YV41PY1vzaEGHJNkE3Ljfc84BU
CoOgtaCkSKiZEhmyCh3ThvDLclLRbXoOQzkZr1C4rqjk8X1wohY2Rv914kR5
c9x0BvJlc1qouaCQEB9YuYgwTJL6hXdtx5V3lfctrOMzguL6U1sALCVYv8KT
Vm7UarybuCSx00OGvqEtp3lwbPHWVL5ohXsQJTuQOaa6yKDAq1L8wKgkXsDi
K1Vaj1KmTX0Tw6Y9gR4DQ3S1zda2ibT5u5Y3JbWBhM58iUU6wFawqIpyctNb
FSIFBJgO60wo7c7HGy2T/hqVbUbroyDyuvmgXcIWVoz+RBVswUWYvhnWD/rn
5Xlx5Jhzjf/k/txT0/MKAdb6mHbCLmbtXm/9cCza8ej5g3vbD3ZuWH5m9u0X
UYLWQafujGCdNyk5C7bhUyg7SzKbn7oILVupAs0UoP1U9WcJCgir0byyfPle
vZ/ERZfo/eR5ETD6YuqQkZmrr9rwKc1OS4cLEPSTSWTgdzbIXDf4pA16kclT
Lao8iuGChXwYx708K0SSB+hg3VqvMyS6u0AtEg5O5w4QDHLvQ3avdi53B9Kg
wNlLSw9TnebTlYd2AxfbiIeJm9WqLtzbj8sULE7W8jSoJVLu7e1UKuQSyZhK
gAragQCvHp/0vTElPaW6D7GnlhdbhUmKNnmG6SRCM8lUIqEXitjIGLRB4nOv
/vLM7986qY0P2sLfhGU1KAvychtTP72Aiu3mjcDVXTacBxpUO3TYoxpjTQZi
Fc2FgrK276tjJtirzT9lGou9pFob/N7oxXW2Lnb6MKc9QqrgqpzX8okjjAUR
2jCajOrkRDw9LhnDJiugful+kWghdlhlIEbwe3rK2sgTwevzXTjR0EbTJ95H
yw/wCekI17KiZeRw39ZrPMBdEB/UnCza1IiYbRQMg+guDVwxGYOOoWG6R5Td
4W57azqZzQta9Sg6/D5srQrcELKVltenG3qws90aU00dhT4XxwU/lahgfL4S
fjIRYxciVG1HWJCH/mlxW9R+QM0gQjcjUbvZrqjcvaCNGvkf69J6gNp08d5R
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
FUjFBHl2Zl8nX7dC9vV75EjHKtJNc6WLIDv3wI7ClwRkUioPd9EOB5m4iX1c
PVP6fZOY410a/v/svWlz29qVNvq9q/o/8Dpdt+2U5BCkKFvu6YoSwUEiJGLY
INHvWw5IwAKIgTABikM6//2utQcMHCT72Cc5neRUqmKR4MYe1vCsYa+VX0sp
d4H9zk1SFsBH2cyj9lzJgvv2fTrMVz6yS3+hdOXjePBvL135F2Qrv1ZB82Dr
/pGpfDxTWTDBz6n9+dfIV66u4Hvyld1fmK9c9TLksfmXXEzV8LTwMZwm1yLR
GbtpHZQP7cdCYVEFdpjYQkf2X0yY/kcZUjjbPaSn56Z/CbHRKFGpRU+pxMHr
1UlnqKfprk2BJQ9vxlE3Tbn0Nm81ecZE1X7+Gv99OdrKJcCBrxh3Uyy+SJk4
AwZ/8uO4Utn0VFGP9zz2/s3N4n52k7ijUc6rb66GeWS3crcY22fa4W9/IT8c
8+REWCWbf8RB/xbioFfvvklmiP7HZbHxW4yPHhkHQ51vWUe4d98SoTw1Dj3C
7yia+e1xzX8viKc80XMeUP3mcejzS/crbcs5wzpwjp+dh4un7xyHz+fYKBgo
/pXPS/zjv3lUI3////1l43zPfH79+PHVfilSbd9J/02BZBkzj1/qoHekROlB
OOBAURz2zytHlL+9gR5/42deLOLV+DLihWOB48P7ma+WSfsLZonbB/M729sn
EWikLgg/exFNHlZrul2dyk8WBlXkO07oHn0rPCHKNbyYoJ4vgWIE1mMaTab4
KRUFM0SRQC4PKplXNeYW53XI/sgCH+esUslercwjF3IPLMRvuOzMyv/NAKg4
vFD7i2UlqltzPC385dxZMTfhcWIetiU1WF5JL88JPz+av1LmbXUW3GNACdMt
9fzOJW3OO/ydFE+xGpGsLsxJKv54JIp4PGJ8qnba0WDx64XWDuPE5Zr8r4mM
b4kUH5Tz+F+f6ZtbjVWXYAEA8yDJK8lLeelTRqBw1LykZ5Emi3OvNq+gZMcm
KUiXuYFPKqpjLd7pdgizSKTurz0386qtGZg7tnxd5CAB4Xu7VLAuj94iPNoP
nmbLwu8D9/vNzl+rR/lR85MGoF62P6vn8hc3P/9haf4tWJpS/d0pQfP3aEm6
v4Yl+fo4v76FI9WrKbK/0MI5rW1Kps0rCuPnWzblaP4vt2sOozmvJi7+Je2a
+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
1b7akR/hbzhRT33oAN3MPRlPcFTv12GB+ogg+XVI2F/DCcjq2BkpnTCYNCRz
GskTfd6eTw2rpcuehnRijMl8GG3SSeiYwLatoRkGox2RzBCG8fRR3Vtp0caG
Ry6tjndnd5VkqLdts3Ox1qNAciN5TGLVhj251GXnbtjZZIq5CWCW9zDLeIZU
7C3t4GpkELkDJ/IAu98ZBVbbNgYX0656Y8vJZtghDcVIhsOwvSV1pe6SYcPu
qBbZya1R/eOzgVQsS5O4favUJU8z1FgzvbYuK3eTyBlOI2cxiWAvdu1gIjld
Qqzn+4bT0+fXz6DkLjWQzEZjvbVvYRj1QiPecqiVuVhJrEYLhUAAwsBD4WGN
wztHCifTnuIPA2upmcmzTZLJtJPNVaTitkXM+kYnTnd2O7DVSH2czOW1SZSJ
ESU+CRd1M7AC0iCZEaiK2VW/TkK1PYRttrqZr9YTieBJeZodSJnbI9ZUl8cT
vX1hyiSzu5k2lK01ue3jFpt2M9GnY88mdetuJjlL4O5gaiRrQ1Jtje7Ncnqr
GKTZvrM6xkY1OzsjaHl2s20CKWkkaC3hWziB5JEEpDskqmkEiUIiFYbwHrRo
sFTGKIut4VzeTQznTu1IExJlphvALBqbBXA2eRi3dVgIkB5JlVBdGqGl2DuQ
iHFiwhAgHcjAxmGcZLIbpNNokKnzdmB2knTSDAcg6HezRjjXOkkDZJBpR2oP
XjGwo6vEDL1UayiZGnoEXjea4N6QNQkt2eq0FGBDa2KQC9IYdM3QQXK713X5
jhA11ULPVMMEKGhj243+VgeZBATwoJsgNnEYZQx745FoM7GMmQQLyWAhZCon
DxbwOSHOeNqViFEPd5rZepjJi61ieoEmWy0zVAZKEC4d1FOhRToDWEhiWsFm
bPUUi8yDtT6XybAjwXAgmqLNAE5EG4XDDQkdYGErglkCn402hi77QxmGsUyT
kAdHJv1RkAFfqVujDkdavzL1QLKJbEkTM9iAfOlOZRVIr5XqkrpwZXmsxeqD
XZ+sLRxmuFHD/sYINtbwlmiaebGxupY67KT+l3H9zff2/UHtfaGYQ/8hTH3d
CAcjPzNA9bQnhhKDVBmAhIk1w2mb3ZZpx2xbDak9raPAkntGvV5/ACUGmggF
9cWombQ1If9JaIzMrGsEkkZAAgNXgXSSVQ0EPAzjdjLUByujIaUOWaz12JpP
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
uHBWxtM2mEjwKIG1oBHb/2/v1INbZ6MDAA==

-->

</rfc>
