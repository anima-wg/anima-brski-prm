<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.2 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-11" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by the Registrar Agent.
The Join Proxy may still be present, and there <bcp14>MAY</bcp14> be some situations in which the Join Proxy can be used by the Registrar-Agent to connect to the Registrar.
For example, the Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that this registrar-agent is authorized to perform the bootstrapping of the distinct pledge.
The registrar-agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites. 
Contrary, the registrar-agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="nomadic-connectivity"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar. 
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the registrar-agent.
To perform enrollment in this setup, multiple round trips of the registrar-agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the registrar-agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar. 
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a registrar-agent. 
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone registrar-agents by integrating the necessary functionality of the registrar-agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The registrar-agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The registrar-agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the registrar-agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<t>When the registrar-agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its EE (RegAgt) certificate.
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a registrar-agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as registrar-agent and registrar are domain components and have a trust relation. 
Moreover, other communication (not part of this document) between the registrar-agent and the registrar is assumed, e.g., to exchange information about serial numbers of pledges to be discovered. 
Therefore, standard discovery as described in section 4 and the appendix A.2 of <xref target="RFC8995"/> is not required, respectively may not support the discovery of a registrar with supporting BRSK-PRM.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

<t>As an alternative discovery mechanism GRASP M_DISCOVERY multicast with M_RESPONSE, based on <xref target="RFC8990"/>, may be used.
The specification of this approach to discover a pledge from the registrar-agent is left for further study.
Note that <xref target="RFC8990"/> does not support conflict resolution as mDNS, which may be a limitation for its application.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledge's IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the registrar-agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.
In addition, the registrar-agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the serial numbers are not known in advance, the registrar-agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the registrar-agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the registrar-agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-agent and the pledge is established using TLS to enable the registrar-agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the registrar agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> re-sent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via registrar-agent and include the identity of the registrar-agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting registrar-agent from the authentication of the registrar-agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the registrar-agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the registrar-agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), may have a list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit registrar-agents, pledges are more subject to DoS attacks from registrar-agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the registrar-agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="20" month="October" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-06"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2252?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTPS between the Registrar-Agent and the Pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the registrar-agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTPS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which serial numbers, from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that serial number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A registrar-agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the registrar-agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the registrar-agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of serial number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the registrar-agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on registrar-agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the registrar-agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
PatvT+ef5ktgeH5wSeN53NMUiQ5qGlRjLJ8QXpy+FY/8/e/xPqyEzjvXCYFu
565JX36vGTy+hWGd6l7DfwcRfOwpcDpXAr/0klwAwSZMFpShA6zSTfXnoKAq
XkpyJkFWtTpNfLgjtnrREeiVkpcAx6NUc72xtfOc8IroJJ75Zpsu/jhba1xx
ofOT9X31b/YUkBp8xLySEJo5eVpxOsRv1Y+hYnzJsSd9EVrPbBdldfn+YrXO
1o+H11on3L7UOuF9rftrqsbv1m9m53WR8e9PfBX53FZdSbuq/0rFuSFG8CZe
AJh36S9o623nw8++SZwWylaSZ11nT00Z8JzmjLqrml+th7e+UxTBheYJ7e/8
67bAv/hTVRduWh9s5Wm42EmNgCZrLqu8cWabcwoHloFo9NS1Nz7XvfiaiK+d
CpsP11bNmYtGYH//O+jIH1RJ/GO03l7apNDq6KlgNXWmTjnUqk/uo/G0tYc9
da165I+4uGxZ+tDg5iKrUxEXYcbFhK9XLQFUJnRW4DcEIF5+C/M7OD3+xH0Y
sUWwsc2qKhff5GqqT3KNRaOb581HGs5la90PkGBlfyc4KhYr4lpV1fkL1YiI
5Ae8Rb594Pa211bqV12X/nh+8b1eA9lUXjxePSKIIEqG8Wyrj58STVQXusos
VVD4WP5RbPZ1Ke8XH7r4BqEezwPGUZ3eqmXEsYZXsK5GViab9dMjDxs4NavT
P2iqajoibKSp5ymgZsba8uC4e89d/K+Ieb8+lr/xYtTy9enHi9zIn3zwet+b
0/v4J3h8o7bzbedG4EN9KqrMFd86cqoLDZhsp32v+18t+abrmPe/0jYTq/nL
b29g7JcXGCvctjH2i9AyujcBqAoHazUOT3pe5efahnAqw01as60VjoNb63Ni
63ON/zpFeYCRkqLmRU0AuQX9UdUP+YMK17cakloWf8qzNpnSOnao/S/V935a
NX0HGKWntNirABZjqLGi9jIXnYSpxT8+AsXJY7+hrJcG/aVzIdsH2TxtMHpb
12FU4A6NyFfrKue2iT+e2Umr9c9t73jidpcOqHzfrb/seKvlL62WP5zz1LwQ
N4fK582mHgEGVf3uxegovUIOOmic9ctw+9P1+HsV0FZPkT6UVUwzb1HVV0No
+13xFSttuW8KAttpBOpRkG05J29yOXVOvBpdM5I3p4Tzmm0VxQPl0GGy3pjT
cbIB3qXtiVjQjHBe6ar3g+tfK8HUMUFtPGiD+0WejSPUjSk9KtYby+i/ESGf
K9ITYyAnS/4Pb9A0tvzjtiUV6ffrlDj/SRKIRgpEwFXYdmIGlnnprl4PfBde
8I/b7u9tcZ+J3fWv4Ktbioqft5+u1/NqOn9rvdlrv3my1jqAuuQo24te1Qr7
iqdc9Ovm9xNqth78vnhsnq0yizxVQv+5pNQNubufsKNW859/r+OsqHa7VdJi
FZyJyave1akV0jmoW77YIl6LLpu9/b2Bu5dsjlMMzHPU2veIXzfu8+0vtmmb
0I5QwIE4dWj2OvLXn4kkUdKm9ZbYeuvM2r6//tgc42s6U0IyeVxyVn7GHUop
VSH1GyW0XkxuuwtQXVq92HMjO6UbqiRnPVnbf5rE9v5UGnEtjdZLn1svNc9S
L9r6somf1+G7WnBJboUvNDQKyCJOQGvfXy0hfrQqrtwccVq/FnrvMhQQ25NV
OayPNeE+7WFtEVzuTNurg6es0ls9780vv4VZAfnHS780i7ppfLjegcHQ2+98
vSLs+CXCpUuyLnZ+P7vFNscnvW9aIfyjXv9CGdf15vAxir8HgMJfasr78x4D
qQaEk1ErEr8gCRVxRFMP9WLoxePbdlu9f7Gt2s8QJzkv0mSH0zIsX657ETjW
TnO+XpdkKdXO3myRxo2AWg+DY5RhO3ciAg/l9+Io8i454rjHeizFiYefcr3h
xWi3lftsMdNT0L+9eoNufn5JN79wunlynn/VZW5Lyr+uC0qHVg+e3O5v7fa+
LzZbnr+skaLJxlpJXACgqLvPi3jH12DwpSdeno8mywTR6TXO+Ksx1r9eP4J2
Pc3fGNTNy0F95oPiPW3ny4MqAsLgaurZwORFmoEnquFPSMWr7rZXqKEuPADr
3NzMF9sPDT/i2StI5KIlms3g6ZF+qJXt8rvttFLr16dSgRDKLqY0d7VyirCN
ciPB4ybIyQa2Ob5IvT/NWe1FuY28FlPvpZhuuJgcrjjUtWblsZqTeEMfGVdq
ewM6u03WGxhIfJHmbthLbUhEamooRidgHAvOhIpsfeAyoRYbYCw5g+SpZGjA
uaF60s/cp7Y3UkOuLG8n7tB0nTSPT2p1qXiWPBiOzes42PCFFP7Er22mdBFG
YXJb1pCTX6vm9bc//9J4Yv/XfOn1LHZfzmKPz6IJhdk88XxldKGt9dI9rSBC
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

-->

</rfc>

