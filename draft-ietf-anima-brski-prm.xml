<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-14" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 132?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces new endpoints for the Domain Registrar and pledge, and a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the Key Infrastructure (e.g., domain CA).</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 140?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing signed data objects, the voucher artifacts as defined in <xref target="RFC8995"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the pledge IDevID credentials.</t>
  <t>also enables the usage of alternative transports, both IP-based and non-IP, between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes a data object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>IDevID:</dt>
  <dd>
    <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
  </dd>
  <dt>LDevID:</dt>
  <dd>
    <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64(OCTETS):</dt>
  <dd>
    <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
  </dd>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <spanx style="verb">base64encodedvalue==</spanx> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <spanx style="verb">proximity</spanx> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="188" y="324">EE</text>
<text x="224" y="324">cert.</text>
<text x="356" y="324">EE</text>
<text x="392" y="324">cert.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocol to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  <list style="symbols">
      <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by the Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided and signed by the Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
      <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
    </list></t>
  <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
This is for situations in which the domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  <list style="symbols">
      <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  <list style="symbols">
      <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
      <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
    </list></t>
  <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  <list style="symbols">
      <t>The default format for voucher artifacts (incl. voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
      <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
    </list></t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers" type="1">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="448" viewBox="0 0 448 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent Proximity Assertion</name>

<t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicated via the Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <spanx style="verb">agent-proximity</spanx>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar EE credentials via the TLS handshake and pins that public key as the <spanx style="verb">proximity-registrar-cert</spanx> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>

<t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="registrar_component"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <spanx style="verb">/.well-known/brski/</spanx> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Obtain CA Certificates</c>
      <c><xref target="obtain_cacerts"/></c>
</texttable>

<t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).
Overall, this may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>

<t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>

<t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment, that the connecting client is a Registrar-Agent.</t>

<t>The registrar <bcp14>MAY</bcp14> be restricted by configuration, if it accepts every Registrar-Agent, which can authenticate with a domain issued certificate or only explicitly authorized ones.</t>

<t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="agent_component"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a store and forward communication path with secure message passing between pledges in responder mode and the domain registrar.</t>

<t>It uses its own EE certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference in the context of the agent-signed data object as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>

<t>In BRSKI-PRM, the SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>

<t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short lived Registrar-Agent EE certificates in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration or a repository.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>

<t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to authenticate and sign agent-signed data</t>
  <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
  <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>While the Registrar-Agent requires the IP address of the domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>

<t>Moreover, the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in <spanx style="verb">&lt;product-serial-number&gt;._brski-pledge._tcp.local</spanx>.
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.ietf-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14> use</t>

<t><list style="symbols">
  <t><spanx style="verb">&lt;product-serial-number&gt;._brski-pledge._tcp.local</spanx>, to discover a specific pledge, e.g., when connected to a local network.</t>
  <t><spanx style="verb">_brski-pledge._tcp.local</spanx> to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_component"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <spanx style="verb">/.well-known/brski/</spanx> URI path, except for the <bcp14>OPTIONAL</bcp14> endpoint "qps".
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <spanx style="verb">http://pledge.example.com/.well-known/brski/tpvr</spanx>, it sets the Host header field to <spanx style="verb">pledge.example.com</spanx> and the absolute path <spanx style="verb">/.well-known/brski/tpbr</spanx>.
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,800" fill="none" stroke="black"/>
<path d="M 16,864 L 16,960" fill="none" stroke="black"/>
<path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
<path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
<path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
<path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
<path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
<path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
<path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,800" fill="none" stroke="black"/>
<path d="M 168,864 L 168,960" fill="none" stroke="black"/>
<path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
<path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
<path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
<path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
<path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
<path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
<path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,544" fill="none" stroke="black"/>
<path d="M 312,592 L 312,624" fill="none" stroke="black"/>
<path d="M 312,656 L 312,800" fill="none" stroke="black"/>
<path d="M 312,864 L 312,960" fill="none" stroke="black"/>
<path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
<path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
<path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
<path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
<path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
<path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
<path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,664" fill="none" stroke="black"/>
<path d="M 456,784 L 456,800" fill="none" stroke="black"/>
<path d="M 456,864 L 456,960" fill="none" stroke="black"/>
<path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
<path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
<path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
<path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
<path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
<path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
<path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
<path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,704" fill="none" stroke="black"/>
<path d="M 560,752 L 560,800" fill="none" stroke="black"/>
<path d="M 560,864 L 560,960" fill="none" stroke="black"/>
<path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
<path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
<path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
<path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
<path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
<path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
<path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,608 L 224,608" fill="none" stroke="black"/>
<path d="M 256,608 L 304,608" fill="none" stroke="black"/>
<path d="M 320,672 L 416,672" fill="none" stroke="black"/>
<path d="M 456,672 L 552,672" fill="none" stroke="black"/>
<path d="M 320,688 L 424,688" fill="none" stroke="black"/>
<path d="M 456,688 L 552,688" fill="none" stroke="black"/>
<path d="M 320,768 L 408,768" fill="none" stroke="black"/>
<path d="M 472,768 L 552,768" fill="none" stroke="black"/>
<path d="M 176,784 L 208,784" fill="none" stroke="black"/>
<path d="M 280,784 L 304,784" fill="none" stroke="black"/>
<path d="M 176,880 L 216,880" fill="none" stroke="black"/>
<path d="M 256,880 L 304,880" fill="none" stroke="black"/>
<path d="M 176,896 L 224,896" fill="none" stroke="black"/>
<path d="M 256,896 L 304,896" fill="none" stroke="black"/>
<path d="M 320,912 L 344,912" fill="none" stroke="black"/>
<path d="M 424,912 L 448,912" fill="none" stroke="black"/>
<path d="M 320,928 L 336,928" fill="none" stroke="black"/>
<path d="M 176,944 L 192,944" fill="none" stroke="black"/>
<path d="M 288,944 L 304,944" fill="none" stroke="black"/>
<path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
<path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
<path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
<path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
<path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
<path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
<path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
<path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
<path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
<path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
<path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
<path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
<path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
<path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
<path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
<path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
<path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
<path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
<path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
<path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
<path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
<path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
<path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
<path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
<path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
<path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
<path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
<path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
<path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
<path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
<path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
<path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
<path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
<polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
<polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
<polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
<polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
<polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
<polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
<polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
<polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
<polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
<polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
<polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
<polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
<polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
<polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
<polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
<polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
<polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
<polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
<polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
<polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
<polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
<polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
<polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
<polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
<polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
<polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
<polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
<polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
<polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="332" y="484">MASA</text>
<text x="404" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="564">[Registrar-Agent</text>
<text x="308" y="580">authenticated&amp;authorized?]</text>
<text x="240" y="612">PVR</text>
<text x="280" y="644">[accept</text>
<text x="348" y="644">device?]</text>
<text x="436" y="676">mTLS</text>
<text x="440" y="692">RVR</text>
<text x="456" y="708">~</text>
<text x="460" y="724">[extract</text>
<text x="536" y="724">DomainID]</text>
<text x="456" y="740">[update</text>
<text x="532" y="740">audit-log]</text>
<text x="456" y="756">~</text>
<text x="440" y="772">Voucher</text>
<text x="244" y="788">Voucher'</text>
<text x="16" y="820">~</text>
<text x="168" y="820">~</text>
<text x="312" y="820">~</text>
<text x="456" y="820">~</text>
<text x="560" y="820">~</text>
<text x="16" y="836">(4)</text>
<text x="60" y="836">Supply</text>
<text x="104" y="836">PER</text>
<text x="132" y="836">to</text>
<text x="184" y="836">Registrar</text>
<text x="268" y="836">(including</text>
<text x="328" y="836">Key</text>
<text x="404" y="836">Infrastructure</text>
<text x="516" y="836">interaction)</text>
<text x="16" y="852">~</text>
<text x="168" y="852">~</text>
<text x="312" y="852">~</text>
<text x="456" y="852">~</text>
<text x="560" y="852">~</text>
<text x="236" y="884">mTLS</text>
<text x="240" y="900">PER</text>
<text x="384" y="916">[Request]</text>
<text x="396" y="932">[Certificate]-</text>
<text x="240" y="948">Enroll-Resp</text>
<text x="16" y="980">~</text>
<text x="168" y="980">~</text>
<text x="312" y="980">~</text>
<text x="456" y="980">~</text>
<text x="560" y="980">~</text>
<text x="16" y="996">(5)</text>
<text x="60" y="996">Obtain</text>
<text x="100" y="996">CA</text>
<text x="164" y="996">Certificates</text>
<text x="16" y="1012">~</text>
<text x="168" y="1012">~</text>
<text x="312" y="1012">~</text>
<text x="456" y="1012">~</text>
<text x="560" y="1012">~</text>
<text x="236" y="1044">mTLS</text>
<text x="240" y="1060">caCerts</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="16" y="1108">(6)</text>
<text x="60" y="1108">Supply</text>
<text x="120" y="1108">Voucher</text>
<text x="164" y="1108">to</text>
<text x="204" y="1108">Pledge</text>
<text x="16" y="1124">~</text>
<text x="168" y="1124">~</text>
<text x="312" y="1124">~</text>
<text x="456" y="1124">~</text>
<text x="560" y="1124">~</text>
<text x="76" y="1156">opt.</text>
<text x="112" y="1156">TLS</text>
<text x="100" y="1172">Voucher'</text>
<text x="96" y="1188">vStatus</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="16" y="1236">(7)</text>
<text x="60" y="1236">Supply</text>
<text x="100" y="1236">CA</text>
<text x="164" y="1236">Certificates</text>
<text x="228" y="1236">to</text>
<text x="268" y="1236">Pledge</text>
<text x="16" y="1252">~</text>
<text x="168" y="1252">~</text>
<text x="312" y="1252">~</text>
<text x="456" y="1252">~</text>
<text x="560" y="1252">~</text>
<text x="76" y="1284">opt.</text>
<text x="112" y="1284">TLS</text>
<text x="96" y="1300">caCerts</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="16" y="1348">(8)</text>
<text x="60" y="1348">Supply</text>
<text x="152" y="1348">Enroll-Response</text>
<text x="228" y="1348">to</text>
<text x="268" y="1348">Pledge</text>
<text x="16" y="1364">~</text>
<text x="168" y="1364">~</text>
<text x="312" y="1364">~</text>
<text x="456" y="1364">~</text>
<text x="560" y="1364">~</text>
<text x="76" y="1396">opt.</text>
<text x="112" y="1396">TLS</text>
<text x="96" y="1412">Enroll-Resp</text>
<text x="88" y="1428">eStatus</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="16" y="1476">(9)</text>
<text x="64" y="1476">Voucher</text>
<text x="124" y="1476">Status</text>
<text x="192" y="1476">Telemetry</text>
<text x="276" y="1476">(including</text>
<text x="352" y="1476">backend</text>
<text x="436" y="1476">interaction)</text>
<text x="16" y="1492">~</text>
<text x="168" y="1492">~</text>
<text x="312" y="1492">~</text>
<text x="456" y="1492">~</text>
<text x="560" y="1492">~</text>
<text x="236" y="1524">mTLS</text>
<text x="240" y="1540">vStatus</text>
<text x="436" y="1556">mTLS</text>
<text x="368" y="1572">req</text>
<text x="412" y="1572">device</text>
<text x="480" y="1572">audit-log</text>
<text x="396" y="1588">device</text>
<text x="464" y="1588">audit-log</text>
<text x="264" y="1620">[verify</text>
<text x="340" y="1620">audit-log]</text>
<text x="312" y="1636">|</text>
<text x="16" y="1652">~</text>
<text x="168" y="1652">~</text>
<text x="312" y="1652">~</text>
<text x="456" y="1652">~</text>
<text x="560" y="1652">~</text>
<text x="20" y="1668">(10)</text>
<text x="68" y="1668">Enroll</text>
<text x="124" y="1668">Status</text>
<text x="192" y="1668">Telemetry</text>
<text x="16" y="1684">~</text>
<text x="168" y="1684">~</text>
<text x="312" y="1684">~</text>
<text x="456" y="1684">~</text>
<text x="560" y="1684">~</text>
<text x="236" y="1716">mTLS</text>
<text x="240" y="1732">eStatus</text>
<text x="16" y="1764">~</text>
<text x="168" y="1764">~</text>
<text x="312" y="1764">~</text>
<text x="456" y="1764">~</text>
<text x="560" y="1764">~</text>
<text x="20" y="1780">(11)</text>
<text x="64" y="1780">Query</text>
<text x="116" y="1780">Pledge</text>
<text x="172" y="1780">Status</text>
<text x="16" y="1796">~</text>
<text x="168" y="1796">~</text>
<text x="312" y="1796">~</text>
<text x="456" y="1796">~</text>
<text x="560" y="1796">~</text>
<text x="76" y="1828">opt.</text>
<text x="112" y="1828">TLS</text>
<text x="96" y="1844">tStatus</text>
<text x="96" y="1860">pStatus</text>
<text x="16" y="1892">~</text>
<text x="168" y="1892">~</text>
<text x="312" y="1892">~</text>
<text x="456" y="1892">~</text>
<text x="560" y="1892">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers" type="1">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> begin the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <spanx style="verb">application/json</spanx></t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/voucher-jws+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tpvr_artifact"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>

<t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>

<figure title="CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <spanx style="verb">agent-signed-data</spanx> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>

<figure title="tPVR Representation in JSON" anchor="tpvr_example"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork></figure>

<section anchor="jws-asd"><name>JWS Agent-Signed Data</name>

<t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <spanx style="verb">agent-signed-data</spanx> as binary.
For the JWS-signed JSON format used by this specification, the <spanx style="verb">agent-signed-data</spanx> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <spanx style="verb">agent-signed-data</spanx> member of the tPVR artifact:</t>

<figure title="JWS Agent-Signed Data in General JWS JSON Serialization Syntax" anchor="asd_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="prm-asd"><name>JSON Agent-Signed Data</name>

<t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>

<figure title="CDDL for JSON Agent-Signed Data (prmasd)" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">created-on</spanx> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>

<t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>

<figure title="JSON Agent-Signed Data Example" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/></t>
</list></t>

<t><xref target="asd_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example for " anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="jws-signature"><name>JWS Signature</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <spanx style="verb">agent-signed-data</spanx> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="pvr_artifact"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <spanx style="verb">ietf-voucher-request</spanx> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>

<figure title="PVR Representation in General JWS JSON Serialization Syntax" anchor="pvr_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<section anchor="pvr_data"><name>JSON PVR Data</name>

<t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <spanx style="verb">ietf-voucher-request</spanx> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the PVR artifact:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <spanx style="verb">created-on</spanx> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the assertion type <spanx style="verb">agent-proximity</spanx> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>)</t>
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion</t>
  <t><spanx style="verb">agent-signed-data</spanx>: <bcp14>SHALL</bcp14> contain the same value as the <spanx style="verb">agent-signed-data</spanx> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge</t>
</list></t>

<t><xref target="pvr_data_example"/> below shows an example for the JSON PVR Data:</t>

<figure title="JSON PVR Data Example" anchor="pvr_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-1"><name>JWS Protected Header</name>

<t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
If the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification of the pledge IDevID certificate.</t>

</section>
<section anchor="jws-signature-1"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/tper</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tper_artifact"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

<t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>

<figure title="CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork></figure>

<t>The <spanx style="verb">enroll-type</spanx> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <spanx style="verb">enroll-generic-cert</spanx> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>

</section>
<section anchor="per_artifact"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>

<t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="PER Representation in General JWS JSON Serialization Syntax" anchor="per_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="per_data"><name>JSON CSR Data</name>

<t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <spanx style="verb">csr-grouping</spanx> of the <spanx style="verb">ietf-ztp-types</spanx> YANG module defined in <xref section="3.2" sectionFormat="of" target="I-D.ietf-netconf-sztp-csr"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <spanx style="verb">p10-csr</spanx> case of the <spanx style="verb">csr-grouping</spanx> <bcp14>MUST</bcp14> be used.</t>

<t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>

<figure title="JSON CSR Data Example" anchor="csr_example"><artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-2"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
  <t><spanx style="verb">crit</spanx>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <spanx style="verb">created-on</spanx> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/></t>
</list></t>

<t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <spanx style="verb">created-on</spanx> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time</t>
</list></t>

<t>The new protected Header Parameter <spanx style="verb">created-on</spanx> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <spanx style="verb">created-on</spanx> of PER &gt;= <spanx style="verb">created-on</spanx> of PVR &gt;= <spanx style="verb">created-on</spanx> of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER artifact from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t><xref target="per_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within PER" anchor="per_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-2"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported in a similar way.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>

</section>
</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including MASA interaction)</name>

<t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>

<t>The registrar <bcp14>SHOULD</bcp14> verify the TLS client authentication of the Registrar-Agent, in particular if the TLS session is used to obtain the Registrar-Agent EE certificate (see <xref target="registrar_component"/>).
Note that authentication and authorization is of the pledge verified during the TLS session based on the signatures inside the PVR artifact.</t>

<t>As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,448" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,448" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,192" fill="none" stroke="black"/>
<path d="M 312,240 L 312,272" fill="none" stroke="black"/>
<path d="M 312,304 L 312,448" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,312" fill="none" stroke="black"/>
<path d="M 456,432 L 456,448" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,352" fill="none" stroke="black"/>
<path d="M 560,400 L 560,448" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,256 L 224,256" fill="none" stroke="black"/>
<path d="M 256,256 L 304,256" fill="none" stroke="black"/>
<path d="M 320,320 L 416,320" fill="none" stroke="black"/>
<path d="M 456,320 L 552,320" fill="none" stroke="black"/>
<path d="M 320,336 L 424,336" fill="none" stroke="black"/>
<path d="M 456,336 L 552,336" fill="none" stroke="black"/>
<path d="M 320,416 L 408,416" fill="none" stroke="black"/>
<path d="M 472,416 L 552,416" fill="none" stroke="black"/>
<path d="M 176,432 L 208,432" fill="none" stroke="black"/>
<path d="M 280,432 L 304,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
<polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
<polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
<polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="212">[Registrar-Agent</text>
<text x="308" y="228">authenticated&amp;authorized?]</text>
<text x="240" y="260">PVR</text>
<text x="280" y="292">[accept</text>
<text x="348" y="292">device?]</text>
<text x="436" y="324">mTLS</text>
<text x="440" y="340">RVR</text>
<text x="456" y="356">~</text>
<text x="460" y="372">[extract</text>
<text x="536" y="372">DomainID]</text>
<text x="456" y="388">[update</text>
<text x="532" y="388">audit-log]</text>
<text x="456" y="404">~</text>
<text x="440" y="420">Voucher</text>
<text x="244" y="436">Voucher'</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/requestvoucher</spanx>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>

<t><list style="symbols">
  <t>the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate</t>
  <t>the <spanx style="verb">agent-signed-data</spanx> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <spanx style="verb">kid</spanx> Header Parameter of the JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> field.</t>
  <t>the product-serial-number inside the <spanx style="verb">agent-signed-data</spanx> is equal to the <spanx style="verb">serial-number</spanx> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
  <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <spanx style="verb">agent-signed-data</spanx> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
</list></t>

<t>If the registrar is unable to process the request or validate the PVR, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
  <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported</t>
</list></t>

<t>Otherwise, the registrar converts the PVR artifact to an Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>

<t>Optionally, the domain registrar <bcp14>MAY</bcp14> respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>

<t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="masa_interaction"><name>MASA Interaction</name>

<t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <spanx style="verb">/.well-known/brski/requestvoucher</spanx>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges <bcp14>MUST</bcp14> support the same formats as supported by those pledges.</t>

<t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> chose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <spanx style="verb">prior-signed-voucher-request</spanx> field of the RVR that</t>

<t><list style="symbols">
  <t>the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field contains an EE certificate that signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent</t>
  <t>the registrar EE certificate in the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field and the Registrar-Agent EE certificate in the <spanx style="verb">agent-sign-cert</spanx> field of the RVR are signed by the same domain owner.</t>
  <t>the <spanx style="verb">agent-signed-data</spanx> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <spanx style="verb">agent-sign-cert</spanx> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <spanx style="verb">kid</spanx> Header Parameter of the JWS Protected Header in the <spanx style="verb">agent-signed-data</spanx> field.</t>
  <t>the product-serial-number inside the <spanx style="verb">agent-signed-data</spanx> is equal to the <spanx style="verb">serial-number</spanx> field of PVR and the <spanx style="verb">serial-number</spanx> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
</list></t>

<t>If the <spanx style="verb">agent-sign-cert</spanx> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>

<t>If the verification fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden</t>
  <t>404 Not Found: if the request is for a device that is not known to the MASA</t>
  <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type</t>
  <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA</t>
</list></t>

<t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="supply-voucher-to-registrar-agent"><name>Supply Voucher to Registrar-Agent</name>

<t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>

<t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Registrar-Countersigned Voucher artifact (Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the domain registrar is unable to return the Voucher, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure</t>
  <t>502 Bad Gateway: if the registrar received an invalid response from the MASA</t>
  <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <spanx style="verb">Retry-After</spanx> response header field with an appropriate value</t>
  <t>504 Gateway Timeout: if the backend request to the MASA timed out</t>
</list></t>

</section>
<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>

</section>
<section anchor="rvr_artifact"><name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>

<t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <spanx style="verb">ietf-voucher-request</spanx> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>

<figure title="RVR Representation in General JWS JSON Serialization Syntax" anchor="rvr_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<section anchor="rvr_data"><name>JSON RVR Data</name>

<t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <spanx style="verb">ietf-voucher-request</spanx> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a copy of the <spanx style="verb">nonce</spanx> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
  <t><spanx style="verb">idevid-issuer</spanx>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <spanx style="verb">x5c</spanx> field</t>
  <t><spanx style="verb">prior-signed-voucher-request</spanx>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>

<t><list style="symbols">
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the value <spanx style="verb">agent-proximity</spanx> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar</t>
  <t><spanx style="verb">agent-sign-cert</spanx>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <spanx style="verb">agent-signed-data</spanx> field of the contained PVR</t>
</list></t>

<t>Note that the <spanx style="verb">ietf-voucher-request</spanx> YANG module defines the leaf <spanx style="verb">agent-sign-cert</spanx> as binary;
this specification refines it as a JSON array structure similar to the <spanx style="verb">x5c</spanx> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>

<t><xref target="rvr_data_example"/> below shows an example for the JSON RVR Data:</t>

<figure title="JSON RVR Data Example" anchor="rvr_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-3"><name>JWS Protected Header</name>

<t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.
However, the <spanx style="verb">x5c</spanx> Header Parameter <bcp14>MUST</bcp14> also contain the certificate chain for verification at the MASA.</t>

</section>
<section anchor="jws-signature-3"><name>JWS Signature</name>

<t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.4" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
</section>
<section anchor="voucher_artifact"><name>Backend Response Artifact: Voucher</name>

<t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <spanx style="verb">assertion</spanx> field <bcp14>MAY</bcp14> contain the value <spanx style="verb">agent-proximity</spanx> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>

<t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>

<figure title="JSON RVR Data Example" anchor="voucher_data_example"><artwork align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "callee4711"
  }
}
]]></artwork></figure>

</section>
<section anchor="rcv_artifact"><name>Response Artifact: Registrar-Countersigned Voucher</name>

<t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>

<t>For BRSKi-PRM, the domain registrar <bcp14>MUST</bcp14> add an additional JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>

<figure title="Voucher' Representation in General JWS JSON Serialization Syntax" anchor="rcv_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork></figure>

<t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <spanx style="verb">pinned-domain-cert</spanx> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>

<t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>

<t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>

<section anchor="json-voucher-data"><name>JSON Voucher Data</name>

<t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>

</section>
<section anchor="jws-protected-header-registrar"><name>JWS Protected Header (Registrar)</name>

<t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data</t>
</list></t>

<t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>

</section>
<section anchor="jws-signature-registrar"><name>JWS Signature (Registrar)</name>

<t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>

<t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>

</section>
</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including Key Infrastructure interaction)</name>

<t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>

<t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,256" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,256" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,256" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,256" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,256" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 344,208" fill="none" stroke="black"/>
<path d="M 424,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 336,224" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 288,240 L 304,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="328" y="132">Key</text>
<text x="404" y="132">Infrastructure</text>
<text x="516" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="384" y="212">[Request]</text>
<text x="396" y="228">[Certificate]-</text>
<text x="240" y="244">Enroll-Resp</text>
<text x="16" y="276">~</text>
<text x="168" y="276">~</text>
<text x="312" y="276">~</text>
<text x="456" y="276">~</text>
<text x="560" y="276">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/requestenroll</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>

<t><list style="symbols">
  <t>the PER was signed signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
  <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
</list></t>

<t>If the registrar is unable to process the request or validate the PER, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the PER cannot be verified</t>
  <t>404 Not Found: if the PER is for a device that is not known to the registrar</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>

<t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate singed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>If the domain registrar is unable to return the Enroll-Resp, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure</t>
  <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure</t>
  <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>SHOULD</bcp14> include the Retry-After response header field with an appropriate value</t>
  <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out</t>
</list></t>

<t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>

</section>
<section anchor="er_artifact"><name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>

<t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>

<t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>

</section>
</section>
<section anchor="obtain_cacerts"><name>Obtain CA Certificates</name>

<t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>

<t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>

<t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>

<figure title="CA certificates retrieval exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="60" y="132">Obtain</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">caCerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <spanx style="verb">/.well-known/brski/wrappedcacerts</spanx>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a GET request at <spanx style="verb">/.well-known/brski/wrappedcacerts</spanx>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-no-artifact"><name>Request (no artifact)</name>

<t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.</t>

</section>
<section anchor="cacerts_artifact"><name>Response Artifact: CA-Certificates (caCerts)</name>

<t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>

<t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>

<figure title="Voucher' Representation in General JWS JSON Serialization Syntax" anchor="cacerts_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="cacerts_data"><name>JSON CA Data</name>

<t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>

<figure title="CDDL for JSON CA Data (cacerts)" anchor="cacerts_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [+ bytes]
}
]]></artwork></figure>

<t>The <spanx style="verb">x5bag</spanx> member <bcp14>MUST</bcp14> follow the definition of the <spanx style="verb">x5bag</spanx> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>

<t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>

<t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>

<figure title="JSON CA Data Example" anchor="cacerts_data_example"><artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-4"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
</list></t>

<t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within PER" anchor="cacerts_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-4"><name>JWS Signature</name>

<t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>

<t><list style="symbols">
  <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
  <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
  <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
</list></t>

<t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> stored information from the first connection with the pledge to optimize.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 136,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="100" y="196">Voucher'</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/svr</spanx>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"></xref> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers" type="1">
  <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
  <t>Provisionally install the initial domain trust anchor contained in the <spanx style="verb">pinned-domain-cert</spanx> field of the voucher.</t>
  <t>Validate the registrar EE certificate received in the <spanx style="verb">agent-provided-proximity-registrar-cert</spanx> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
  <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but use the pinned domain certificate instead of the MASA certificate for the verification.</t>
</list></t>

<t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>

<t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.</t>

<t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>

<section anchor="request-artifact-registrar-countersigned-voucher"><name>Request Artifact: Registrar-Countersigned Voucher</name>

<t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>

</section>
<section anchor="vstatus_artifact"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>

<figure title="vStatus Representation in General JWS JSON Serialization Syntax" anchor="vstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="vstatus_data"><name>JSON Voucher Status Data</name>

<t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <spanx style="verb">voucherstatus-post</spanx> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">version</spanx>: contains a version number for the format and semantics of the other fields;
this specification assumes version <spanx style="verb">1</spanx> just like BRSKI <xref target="RFC8995"/></t>
  <t><spanx style="verb">status</spanx>: contains the boolean value <spanx style="verb">true</spanx> in case of success and <spanx style="verb">false</spanx> in case of failure</t>
  <t><spanx style="verb">reason</spanx>: contains a human-readable message;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/> <bcp14>MUST</bcp14> be provided;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
  <t><spanx style="verb">reason-context</spanx>: contain an arbitrary JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/> <bcp14>MUST</bcp14> be provided;</t>
</list></t>

<t>BRSKI-PRM implementations <bcp14>MUST</bcp14> utilize the reason-context to provide a distinguishable token that enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus the reason-context <bcp14>MUST</bcp14> be "pvs-details".</t>

<t><xref target="vstatus_data_example_success"/> below shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>

<figure title="JSON Voucher Status Data Success Example" anchor="vstatus_data_example_success"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed."
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}
]]></artwork></figure>

<figure title="JSON Voucher Status Data Failure Example" anchor="vstatus_data_example_error"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate
             because it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-5"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
</list></t>

<t><xref target="vstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within vStatus" anchor="vstatus_header"><artwork align="left"><![CDATA[
# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-5"><name>JWS Signature</name>

<t>The plege <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certficate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done, if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by pledge as reflected in the vStatus artifact.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">caCerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/scac</spanx>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>

<t>If the pledge is unable to process the caCerts, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate)</t>
  <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates)</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="request-artifact-ca-certificates-cacerts"><name>Request Artifact: CA-Certificates (caCerts)</name>

<t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/ser</spanx>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/pkcs7-mime</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>

</section>
<section anchor="estatus_artifact"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>

<t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>

<figure title="eStatus Representation in General JWS JSON Serialization Syntax" anchor="estatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="estatus_data"><name>JSON Enroll Status Data</name>

<t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <spanx style="verb">enrollstatus-post</spanx> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/>.</t>

<t>BRSKI-PRM implementations <bcp14>MUST</bcp14> utilize the reason-context to provide a distinguishable token that enables the registrar to detect status artifacts provided to the wrong endpoint.
For eStatus the reason-context <bcp14>MUST</bcp14> be "pes-details".</t>

<t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>

<figure title="JSON Enroll Status Data Success Example" anchor="estatus_data_example_success"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork></figure>

<figure title="JSON Enroll Status Data Failure Example" anchor="estatus_data_example_error"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-6"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <spanx style="verb">x5c</spanx> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
</list></t>

<t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within eStatus" anchor="estatus_header"><artwork align="left"><![CDATA[
# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-6"><name>JWS Signature</name>

<t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

<dl>
  <dt>Implementation Note:</dt>
  <dd>
    <t>Due to similar JSON Data, in a failure case the resulting eStatus artifact is not distinguishable from a vStatus artifact defined in <xref target="vstatus_artifact"/> (both are signed using the pledge IDevID credential).
Hence, Registrar-Agents need to carefully manage from which exchange/endpoint they receive a status artifact and ensure to only send it to the corresponding endpoint on the domain registrar.
BRSKI-PRM implementations <bcp14>MAY</bcp14> utilize the <spanx style="verb">reason-context</spanx> to provide a distinguishable token that enables the registrar to detect status artifacts provided to the wrong endpoint, e.g., using the <spanx style="verb">reason-context</spanx> object key <spanx style="verb">pvs-details</spanx> for vStatus and <spanx style="verb">pes-details</spanx> for eStatus.
Standardization of this mechanism is out of scope of this document.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including MASA interaction)</name>

<t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>

<t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>

<t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>

<figure title="Voucher Status telemetry exchange" anchor="exchangesfig_uc2_9"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,288" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,288" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,256" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,288" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,288" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="480" y="228">audit-log</text>
<text x="396" y="244">device</text>
<text x="464" y="244">audit-log</text>
<text x="264" y="276">[verify</text>
<text x="340" y="276">audit-log]</text>
<text x="312" y="292">|</text>
<text x="16" y="308">~</text>
<text x="168" y="308">~</text>
<text x="312" y="308">~</text>
<text x="456" y="308">~</text>
<text x="560" y="308">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/voucher_status</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <spanx style="verb">serial-number</spanx> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>

<t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>

<t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>Second, the Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <spanx style="verb">/.well-known/brski/enrollstatus</spanx>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <spanx style="verb">serial-number</spanx> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or <bcp14>MAY</bcp14> fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>

<t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent <bcp14>MAY</bcp14> need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>

<t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="432" y="52">Key</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">Infra.</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx> and the Accept field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the pStatus artifact, the pledge <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
  <t>401 Unauthorized: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx></t>
</list></t>

<t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>

<section anchor="tstatus_artifact"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>

<t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="tStatus Representation in General JWS JSON Serialization Syntax" anchor="tstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="tstatus_data"><name>JSON Status Trigger Data</name>

<t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>

<figure title="CDDL for JSON Status Trigger Data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <spanx style="verb">version</spanx> <bcp14>SHALL</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">serial-number</spanx> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>

<t>The <spanx style="verb">created-on</spanx> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>

<t>The <spanx style="verb">status-type</spanx> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>

<t><list style="symbols">
  <t><spanx style="verb">bootstrap</spanx> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain)</t>
  <t><spanx style="verb">operation</spanx> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers)</t>
</list></t>

<t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>

<t><xref target="stat_req_data"/> below shows an example for the JSON Status Trigger Data using the status type <spanx style="verb">bootstrap</spanx>:</t>

<figure title="JSON Status Trigger Data Example" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-7"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
</list></t>

<t><xref target="tstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within tStatus" anchor="tstatus_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-7"><name>JWS Signature</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
<section anchor="pstatus_artifact"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <spanx style="verb">status-type</spanx>.</t>

<t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>

<figure title="pStatus Representation in General JWS JSON Serialization Syntax" anchor="pstatus_representation"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <spanx style="verb">protected</spanx> member.
The generated JWS Signature is base64url-encoded to become the string value of the <spanx style="verb">signature</spanx> member.</t>

<section anchor="pstatus_data"><name>JSON Pledge Status Data</name>

<t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <spanx style="verb">voucherstatus-post</spanx> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the  <spanx style="verb">enrollstatus-post</spanx> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>

<figure title="CDDL for JSON Pledge Status Data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>

<t>The <spanx style="verb">reason</spanx> and <spanx style="verb">reason-context</spanx> members follow the definitions in <xref target="vstatus_data"/> (same as in JSON Voucher Status Data).</t>

<t>BRSKI-PRM implementations <bcp14>MUST</bcp14> utilize the reason-context to provide a distinguishable token that enables the registrar to detect status artifacts provided to the wrong endpoint.
For pStatus the reason-context <bcp14>MUST</bcp14> be either
* "pbs-details" for bootstrapping related status information or
* "pos-details" for operation related status information</t>

<t>Other documents may enhance the reason-context to reflect further status information or add additional values correlating to other <spanx style="verb">statustrigger</spanx> status-types (see <xref target="tstatus_data"/>).</t>

<t>For the "pbs-details" reason-context the following status values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the <spanx style="verb">reason</spanx> member:</t>

<t><list style="symbols">
  <t><spanx style="verb">factory-default</spanx>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">voucher-success</spanx>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">voucher-error</spanx>: Pledge voucher processing terminated with error.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
  <t><spanx style="verb">enroll-success</spanx>: Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
  <t><spanx style="verb">enroll-error</spanx>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <spanx style="verb">reason</spanx> or <spanx style="verb">reason-context</spanx> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
</list></t>

<t>The status-bootstrap status values <bcp14>SHALL</bcp14> be cumulative in the sense that <spanx style="verb">enroll-success</spanx> and <spanx style="verb">enroll-error</spanx> imply <spanx style="verb">voucher-success</spanx>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>

<figure title="status-bootstrap JSON Pledge Status Data Example" anchor="stat_example_bootstrap"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge has processed the enrollment exchange successfully."
  "reason-context": {
    "pbs-details": "Pledge has processed the enrollment exchange successfully."
  }
}
]]></artwork></figure>

<t>For the "pos-details" reason-context the following status values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the <spanx style="verb">reason</spanx> member:</t>

<t><list style="symbols">
  <t><spanx style="verb">connect-success</spanx>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
  <t><spanx style="verb">connect-error</spanx>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
</list></t>

<t><xref target="stat_example_operation"/> below provides an example for operational status information in the JSON Pledge Status Data:</t>

<figure title="status-operation JSON Pledge Status Data Example" anchor="stat_example_operation"><artwork align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "connect-error" : "Pledge connection establishment terminated with error."
  }
}
]]></artwork></figure>

</section>
<section anchor="jws-protected-header-8"><name>JWS Protected Header</name>

<t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the x5c Header Parameter, it <bcp14>MUST</bcp14> be available at the Registrar-Agent for verification</t>
</list></t>

<t><xref target="pstatus_header"/> below shows an example for this JWS Protected Header:</t>

<figure title="JWS Protected Header Example within pStatus" anchor="pstatus_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="jws-signature-8"><name>JWS Signature</name>

<t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>

</section>
</section>
</section>
</section>
<section anchor="log_hints"><name>Logging Considerations</name>

<t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>

<t><list style="symbols">
  <t>PVR received from Registrar-Agent</t>
  <t>Acceptance of a pledge into the domain</t>
  <t>Voucher provided to Registrar-Agent</t>
  <t>PER received from Registrar-Agent</t>
  <t>Pledge EE certificate requested</t>
  <t>Pledge EE certificate received from Domain CA</t>
  <t>Pledge EE certificate provided to Registrar-Agent</t>
  <t>CA Certificates provided to Registrar-Agent</t>
  <t>Voucher Status received from Registrar-Agent</t>
  <t>Enroll Status received from Registrar-Agent</t>
  <t>Pledge Status received from Registrar-Agent</t>
  <t>Pledge EE certificate revoked</t>
</list></t>

<t>For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
  <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
</list></t>

<t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different registrar-agents or if different registrars have been used.</t>

</section>
<section anchor="iana_con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table_uri">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Obtain wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query pledge status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <spanx style="verb">proximity-registrar-cert</spanx> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>

<t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="18" month="June" year="2024"/>
      <abstract>
	 <t>   [I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact called
   voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-10"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="8" month="July" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-12"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>

<reference anchor="RFC7951">
  <front>
    <title>JSON Encoding of Data Modeled with YANG</title>
    <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
    <date month="August" year="2016"/>
    <abstract>
      <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7951"/>
  <seriesInfo name="DOI" value="10.17487/RFC7951"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8126">
  <front>
    <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
    <author fullname="M. Cotton" initials="M." surname="Cotton"/>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <author fullname="T. Narten" initials="T." surname="Narten"/>
    <date month="June" year="2017"/>
    <abstract>
      <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
      <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
      <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="26"/>
  <seriesInfo name="RFC" value="8126"/>
  <seriesInfo name="DOI" value="10.17487/RFC8126"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="5" month="July" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-ietf-anima-brski-ae/.

   Source for this draft and an issue tracker can be found at
   https://github.com/anima-wg/anima-brski-ae.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-12"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.ietf-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="7" month="July" year="2024"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-03"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>

<reference anchor="RFC4648">
  <front>
    <title>The Base16, Base32, and Base64 Data Encodings</title>
    <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
    <date month="October" year="2006"/>
    <abstract>
      <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4648"/>
  <seriesInfo name="DOI" value="10.17487/RFC4648"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2738?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>

<t><list style="numbers" type="1">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers" type="1">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 13 -&gt; IETF draft 14:</t>

<t><list style="symbols">
  <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
  <t>Changes incorporated based on Shepherd review PR #133:
  <list style="symbols">
      <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
      <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
      <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
      <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
    </list></t>
  <t>Update of informative references</t>
</list></t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
  <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
  <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
  <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgments to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_component"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+X4bx7U/+D+fokPdz5iMAYiLVjpOQlNUzBvZUkjavvl5
PGITaJIdAWiku0GZkX2fZZ5lnmzOWltXYyGpxbKUfBIJQFdXnTp16qzf0+12
V+q8HmY7yVeHR38/SF7n9UXyYpgNzrMkHyeHWTUpxoOsTL4pBlmyRj/qvjj8
Zn0lPT0ts0t5Dj9aGRT9cTqCoQZlelZ386w+66bjfJR2T8vqVd6dlKPu5r2V
tMzSneT5JCvTOi/GVZKOB8k36Tg9z0bZuF55fb6T7H578M1u8sPfVgZpDQNu
bWzdW6lq+OHLdFiM4ZO6nGYr+aSkv1X11sbG442tlWp6OsqrCkY9vprArw72
j5/64817eT+td5KqHqxM8p2VJKmL/k7y2VVWfQb/6BejSdqv7QfV1ajMzirn
g6Ks/U9giuOizs/ybAAfjgv6VV3mdph0Wl8U5c5KF+gNDx71kqdlnlXwOybm
UZ2dnWVj82lRwnqOcpxulez+DT7RnZAP+Q1ZBm94XtdF9+v0Ytw9zMfnyQNc
RF5f7STfTMd5/4LWNIB3fPZo8+H2Y17jdFyX8Iu/ZeUoHV/BR9kozYdIFJpH
7wzn8deK39UDmsBPpmW+k1zU9aTauXv39evXPefru7qy417yQ1aOs9Is7fii
GKWV/fR9La2meXRf0zyus7T9XvIsS+3C9od5UetHtKq9vOoXydEVUHHkLuMQ
5lrn8K+0qrLkoVnFD+lwmFfZcJiNzVL2vu4+2t645y7lCM7rf7JyCFwMH08u
6Gysfn5vM7l3L3n08FHyGE7Gql3pEKb01z7OhZYn0/+mR/NIy0FVjM0ivsGP
smGyF3zLuwRvzIZAxuSoOKtfw7FKfijKV5V91ahffo4i4K+V/rTXT12CKj2d
r++u9AtYWH46rZ0jAdR9kv/rlaVu9arQT2gyB8UxPFdNhyAh+le98dDOIoPf
9gbw27/CjgQ/6iobFkDBrKqS/f6rrKx11KfTelpmr7PcYZQ6+2u/6p2l094g
c6j39+IyrSviOqFdWtcXOfC2843H3Uf9Cxj5P8zlMjpR65U80Btn9cplNp5m
KIfOy2I6ETGGxwKlasJPvaF//BUf7sErfsVfgxCfnu7wz7qvz+8GUnhlXMAJ
qPNLGvvw6d79rYdb5q+PNuSvDx4+2LJ/3Za/PtzY1h88vL95X/766MHmhv2r
+fTxY/3r4+0H9IOD7pOeczP863XVvSym/Yus9L6F1cNunXWr/9STbr8qI4+W
Z/1H2w8enObVzko+PguWtPX40QP56/aDrcc6i/tbOqEHW/c2dR1b93Whjzbu
mXXc23iof93c0sEePXy8ZVenv328YUZ4vGko8Xhr+1Fk4rwPaaZfleZ0dbPR
tJulk24xPi3gI5Bsrc8P8BRfZiAF8Bf7+/vdRxtbvc3dQ/w33Fx8q+MXiXyR
HGV94OjkSXaZ97PkYAAXHt5MJT2g9xD+vSvnalzBMNM6S4ozkGlZHy+udEh3
Jv+zAFkL52Z8no+zrKzoYb2yNx91Nx7QJ1WGdwbuEQ/P80XZzBND6WzUiG56
iuIQLkh3HZ/tyqf2h8mLsoD7uRgmz4EMl3n2+jPn/d+kZf8CFYct+pDZQ1//
4slTK9Th9ykODWe/p6fo7gikM1D/7ubm9l14EBaQDqu71TAfZFUXPpStmE7w
bbBdsimoPnUnpD5183G3VPWpOwIJ7qhBGxsoEMaTtL6QZablOd4HqzorPNy4
BOBoOyv84O6oOr9bpSnMcbN8PC3u/fzP/4yf988e3d+/erVxeDGt7z9+dHfV
Jd5qH+Q0/BemiW9MQDjRckFRKyagQKVnZ3n/L/wIbzzqTShm4Af5YFwN/Eka
ymWX2bAAXaonv6RLEcbLx0g7OMBjYJLugPgN7te8zFDODq+8ye3ys8iWPBrc
dPxkIk8m9klnkn8rivNh1sJgq0K7ASx21bnAs9OeUhUJCv++CzyyvWH+/PHu
baxOniDd9AzF9HXol5Z13och71Z4bkEt6MLoHumO5AtW27/N6tdwB5tzUb0t
Ym1vgYjffrz9cFFaxVey0u12Ez3tKyvHF3mVgA0xRUUctv4MZEqVZOMLuK9J
Oa9AHU++Kooan5hMUO1LwUIZFSCgRLT9PbsCqXUG2hSQvo/3t9gsHb2O1nGQ
bJyeDrPk1BsLzJ0B6IFwpydnWQrP4ofjAugHB2d4lQzzUV4DjWTj80sk/CnQ
PAPtPE341JNsrC8yGSops3PS7sreykGdVJOsDxIXZCiMB0J/fA4rxF/nYxAx
QAUwSRIUFcPkrCxGZlSQJXmdp/h2/LaTgGYxreBf8AZZHqzK/FrEDs6ff/4a
rteMXiSzBErDo8AJIDmTshhmvZWnsE7QWarOspYgTr4sBlM8qOPsNRB3MCly
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
e5O4thPzxgtN6Et2TXpdQ7e3Gb4OF1zC4R3IdVJnkyYzjNIqfemEhilqhgkE
38p1tucKKs40eClX3a9UR4sXoqnylcpPkywROkbCWN22+jr0nLIuFIW958Bg
31RANjF0DZCn2rHuEy0QHRZ3hmNnJJikvIsyVzB9ZsT10W7Zr1M1bGqF1968
0e+79nuyu34DUYLm25ZxiS/qeNNp4V8uZ45Jf5zfB15J+b7r/cf9fdTdvOP6
leFf3u/VCf0nQ4c/77juZP/3znyebeFl/WwbfuHNx/u9+eNxN9Auvt7WP3+I
0hP+R6Z/4CqR8OcPEbLS75/p0fD//MGc/eD3LX/+EC5o7u9b5uP+aV0v/wnC
HO6D9q8x9nLCHM0HQ2biP40wR/PBkKtkUWG0Ivagx17MeH9uRCsiDwZ85k71
81lTnfXHiR3MeHB27GDGg7/32MG2HzsINUA1IL3TJDfrjJABaTDielDdRl3l
dCup1hkdvy1F57jQ6lk3LU0LKausnk46CTpJcrz3S04VLfNJ1ZYqEfFmRBtj
zECldjL94ULdhI32lBOEDm5YOIwiItgVafWqcnTGwIpBNd4FNohkd9m6qQ7X
95QZLDq7TKlMdZhzIaXRSAuhXW9lKzLZWVTY0ZH9FGtutmGrIfVNmmPaMegR
piTB97rGMd/YLxbFx6ucDH0n2GXbxnhGPfu1aTT8B+qyoPtsL7BTnYT6qda6
gGxg67EdAljqdiyFTE1MsNjvnSoQsyr+6fpSy3JXNWEF/d6SG9oxFQE6beuQ
87p+OGwT81pqCsoy0zd2RQf+0U/RV1aRD5UWxO96qUTExd1fZsOUykc8MUts
khhH15guL9FQPNN/w6H/Pi1zcaSrjCNZpKGbud4YSnVyIQx+yJ/mkXS82F4a
nCVKTGdsmDBdTskVDNe0Or5C36SLeO868Ny6cSybGZ8PHUtGgmDkpOGqauMK
9ebrYkCxRUhIC2jd7VmvYMztGjbRIpxe4yrxnHfSEkxZ1XGIxgDH4Wc1Fnai
WwDB9g3ytZZjY8CjZlyJ08xp+uF+iyVFzRvrYByECNzmDpj6ra+wUGAUYGEh
41xyUsfSZHgbc8H69CFdh9ggpspLksaeP6vCaBJ6bdlvrhuKUdJhYRLRm7nl
79BOdId8Z3bicr9vTGuOahbYBe6Ds18U2AWO6eA82E4J1id9C9V58Bd/lu4C
6UHfVPUedC2LXsOgiNms+OfP8KBjWfQaBkXUeF1kqs4f3+yLEeejs0Q+LIPi
3myDwunkA38tmq0R5xsX6IM8zcag9jLEWEOmw/3NykyG6K0uNKqHWEiS/2cx
OCiUxpG0YMoVIZjLtFVjcAqIY5i7EUd6irGqKV2fbaBnoSPynk268rtXuU5x
Z/W+qA/6tvEd2+67fXNH3bYrK6v8M1OzvSqwvxjNsjaXDVTj39URbfJh7Loc
bJoZkdz2WIPpX2RSEIK1HdSC5SiFhW7SgVP8jaBHq6oc2cU56TNRvN3tsDPD
14xAO7sTnqaI1xdeSnhYF08JIl1bHS+u3+BnwtguYIJPYgJ1wUiEgCNargjr
wW29eW/FAEl7KA7ylsqtPbVvwsC2U1eo24nxTaDvoLrA2gtSL7i6F7NdbK22
RGMtHEDXjNxFG+DEHg9lKFM9GSYl0XoNAgKvwDB2EzjJUZq8qF9qSz+pcx0G
SMICEFyFH6X3KYerV+hzAnIcV2BWoWpKFlbFez8Fmg3doQW02m/MaFf04vkB
75GFocgd5G93JAnCtgLRBpyCzVgQjm0iWvsUy3eyQbDNThmgswxsHkQLyev4
AppxdWPsOYujPAinBp2LW1xytU4ml3CfVuqGnafSYeGgq83NPfFSeqR/LeEY
s5Rmks6L31v/RzQ5qLdylEmw1wqW+75gQVtp1SUAydtVp/tlq/SOp18EZPN7
AQdfKqyIn5lC5pzL+MCB5MYgDhL8BunAV2j7aM2oGfcvCk1syP2qUhDtCIa7
+yo3pHSadzfuppZ8q5kksTl2ckSsbMjwc4wIerjzX6EXy6k1nze+I4liPVOR
lqQH6X2Il6U5aC05mZIrSQjz1unUXq9nw41eup4tsDy98qE++LppNqs1uNpc
Wr1nsrZJa2goaQgR1gzYrzQaE8RalzkQuW5CgNQMByW3zulYU6QwsoXDvmnr
4l+ppjkWqHLFpAUpAlnFLCsOL//lLakI2eQljYU9sUCJ9PIE9ZGTu73X2DLl
FbZMuUstx+6eBF1UKIdTcUydJffp2AxcmJ2FBFYj18HtPhTvKLL2Yv9w3e1B
LOnBQYMRv8ZsRk+MX7SJjLVeDEZm01z4JdnX7FV88a6ZBtjSv+wEVkvjg8W+
hJGMX4Y9lVjNheftihIpgUSWf2lO4jfFObQNCmMKbcRFies8rbk7uAuSU+mQ
BX370ng0cfQv/T9kKDW5TC2mXassOmxkm/ZQea3derOoz371wUdLB19HGjDF
boT2hlqUjOeADpEEGSiaC2nddKYU8okuC2f4u66eGA5WmApnV3eSRKWY+49T
lrk2L+xEChI29giu2kQjODWl7F++1KcpDvCcMmCHUnJu0Pk9OOiRqW2ubB9W
T+BqiAZspH4qoJAIUczA4A19yHZ92+5R64i/oCVR5th7Y1AVY7UnrGosCiVP
gjEAQHqUChvi6BS9wFyZ10HS1ZI9QJRmlYIIQSSrZtC58JDxOI7tgOxIYVEc
8CmpI3N1hrVqXcMlZVEQhBWC0eIUfAkFP1wPNH3uKwVf3HV7eK1h/j4jwWSw
vzmNiFGP1AMNkbyxA14jCBFKDrIdtL0bp4WwrFujoueuUn4WCtjQ6LW7+Dg0
Olee5o5aEn+t+8bZyiCSGHVxTsXKInpByjg7eq2EXXp8SfPN7j+NGHAFjDFY
xSzV3uS+IHAuV0cYVK3ojl+saMyXAab949igREwrFfaKbsu6uY3nKNS+7RnT
b+enSDe3BWnpogvhJey3FJQkaVhjXhfllSJVN7Q0ot+edlR96jqqEEi/9H9o
Wq8KnMV44NwyvpcLpzjICBEsjwG15KYLdgOYxbhwGNqHdnBdEG2bgn/N9e3h
Dz2BI2B0gyS8aOJsNrD9Idw7x0c0oRsO6CFqtXsPENQPKZ88dU3QFalhcJZP
MwdPgJZlwP3H6Yh7W9DgR7vfwr00ZevVbfcMP4O12oz+Fq+izzumdGK2XZL9
jLdZjlsgW6iqd+Q+9mjTsbaM08FBaE0OwhioSigmqBSgwh4rQh6PtzvIUHkt
zokKPbjlVRN/n1eKXjGvoYCoD7LsJoA5NVHAyJ5DhNTCBACxKw+fRYCbGnoT
8hg5BKJ81obLUUmXTgeZzrdnY/mjkVaV6v6obTpM62TU7xtOBr29fmVaCy5K
s74tcEFdo5pNOtD00TweoRsdrfOU6780Jacd8nkGBtaBxNIXVnddwSFXgtuz
cM5GN9TSFuO6Et0jmA5dVJojkIKtQj/+e3bltK5sUxDu9bZ6Ts/g+1uPSCMx
jmxNXU+5SQR3ZIuULsdufnGnha/GbPAUwXZ6HoKR9B70AOocNCxuviPa23wh
1lvxbP4LBs1mEPbGsE3HtNertumMiJI4t6iZZ+llwc0uiKOdmhDKEVhAH3Bt
elICWxH22RuHOGZwqY0Hr/MBYdEQijjdYd65aSD2ht4NrnvUal18GBRhR9KY
KwvVtDgdnPX70M3ABOfYTzyXhqKXRT7wWgYScGrq4isZN6ZTijOHepjtPiW2
rKi525mYDU5zFaxX0fJS2yJJTzsvkTqvkDrhViRpP03vstHAkdMDXCnEfUaG
5G+aPW9TP1pq5f4gvaLKVpBjr0jFh2UN7TkCwfcSueIlsG43PWe4taeMOBfX
ET2Y9FYPblRZdyJki+roYurEdfR0LHX7w6bd7s0upqOH61pGU29T0WeRY2nl
vHWwa+jkvuZz8MLABcIvL4qqRh3Pq9i31auNkdGLa5LVDK6B11YkWqGkXg8f
CgFmxeUfBy7IeIhunFXxTXOnbKUSITLCNZJh073ueDo6JaPbN87F6Dx1zQVM
m9ViFxtUN2D//oJNpiWO1OIVZ0I9+faoe/SEJziCf8QpQaAQ67xXlCgbIrti
e8QSvQXpAPEu8T2koLNQabEScRBsj4HfuXmiyDR0fiL9C/ScPvVa1XE3763t
RxRPZhdShS6mscrVNPnHYYJ9ODtOfmF0N1x0dzrApPKatk+bW98mX21s3MdQ
Bz6M+Vh4yr+lh5lZquloBLsTtvRw10hHGlMwTDisBR1DWsE1iKFVijsRuIWl
3Jc7dCe49ptpet/oQyZezaYu5M4hePtOrOt9SyAo7E3GS4TBhcjmvOzMPEmz
TtEXNiRqeHzOtXL09fPvnj1hf2d1BdIWdBNiCumn6DmcGrIbJGLEjbcWOOzW
A8Ed9dZ5rjrPLeWM7A2CJIZf4zZhWI3DjH3pVmfaceMNNSXrwsmv9/UqEQv8
3UVdTyojELArABy4qdp0Mo/QhRcHIGpoMyFQkAskTboMOQq4xU+opYh7xxWD
3ivBmmtK+JWVHwwc+0yFwr2a2rlY0Xpgks7Fz900qZghkNMNF7m0jMM0HtFy
qcw2vOxaZtB+fwpMU28lFgHwCzVkVAfAlavsxf8hTUtY+1Bwqw5bUREQElLt
3AbRl7PEANrCnrO9YMwISlGjPOShJj+bS6Fp4ZrzbHq3ubzsF4s4zLa+EKaF
t11CVgWqdAFomsUf84WWAoq7oE6hYuyV8aJS/A3cEIXWy0uGXjlw+KwlrHIv
yKvQBb55s8udpX9Odq3tLD8yVfOaXCcwR45XxxCo0hZrFlX8LGNEaezavkZl
OPVF5tY+uUjmOKELzkCgaoHmygRzx7aixogPJxHCSxQfoZKeEx0bmI6qh5I+
RjXlcg2pqTCdgAowDgpatOJ4wm3oBDbELr9j7Cn8HXll3I54yRpvetd4brr8
m9KOEXwHMvcJ1TERvJiuwAFhnidPe57/1Vy4sbJ2CtJ3zVu0ujwiYSWiFYpX
VBtX9I7wn9AirobPch5wnKPfEU0FXd2+wFSmaG6JeJjBkPGZIsIAHfZFOHUQ
fzvcPXoB41Tkt2toy9clo6Wg5yUkpxy+hN33mupvf02K7oOHD7YxCwqtz2+w
iq+PTXZwOvr1FmeQ6Ts9zdn6pNxfq0h4bJ2UeibZyTI+gwOG4l7PEs7cgcbi
bqLjJomsV9IkwaXuN5W4o/MxBW8xK4Fx4BpTBQG0ERNAsckB2+A7AqytlHus
2rgtukQcSG51yqgGJN3XccYMkI0XKkUdbICFMaHke1c6rEWl/bpOictQyCty
8qfoT//ce8m8I1v3su5PevSeE5MEGLFf6Nqu2Fqlk+7ojLZLhapVkjXjzdyH
i3EH6Lh2E6XcdrxGAO4oJpijyrw8pWZbD7sPsvXKjaX6jSrBdiOtNjnMbgsU
23mFki/zf0/Fv0kO3NMqE3iLtE0SzAH6aBzldncNHGW0zJbf2o53cp2YmKLH
saJB581rEKA8alCD4O2tb+G2hjWdiEbha8PxgKLTZSMud1O/g83/5RKvIiIF
LIm1zCA3DSqaDCyJXH4qc9rStt3Qqn0FeqmwosiHx1uQLRRA0L8Q/arFL4kL
I2m+r9E/htOLFBUGIEvzbB703/pOHkrPCqnKbpB9PAvYiDr3nU7Y+hRTcq7c
KCTOwsyQ9SUcgwop5fOq489dlCJ3XG3UAjp9Nz0vsTbv6Ahsvgi6v7Rbo3mB
WHIPlpPHk42m3SyddIvxacGih8DyNVnK3OkuPizM48Gz4ocXu9/eHWXVRWxS
8F2Cfdq+Rk4FhncBurw1zteaODzY2oDnzZ0G7Kl3l1D/5DnArLbTFulUFtxQ
/e+knNhhzhjMVqoUrDHJt6pt3yjtS0W4NmHw4cD24/bvBVludGsPgsGNQ8xa
Q9gg3QC0ycS4Q4q0PHCdWDSykrAtgaUzI7wpufm1heGtbM7+Aumrsl/Xz13V
hNUOWnxYIaCu9ucvjg+ef7v7zLw5Wf33pFplfnbSWp1uTBzppVgKahfSxbUq
GrmvqOJMy37WdeNlBpZy5ReT/zg70XROuqmXbTozz3TOTzDZFHEF5HXHgu4Z
z4CTzFDBIQimOjP3FNEK4q8I0nvNK7JlX1HJImyy7Pe2DkVeZunqlnIs/op+
2vdfEebO2lf94qIBLPGKLFxFgK0QvKKBLzD/FcDq+op/TPHCl+EETCBgwDdv
/j1lTSrci1gycHBmNRO4Pf23TV5/lhBeu1o9D9nLQb2jNjfRyMDOOGxhfo0q
/0WW4qNneTZEtRkjxgU6+OGE5jV3Zk+HrzGeaRsK9Vz5T1JJ0ds5apPgytFl
wOr20HEsNt8Zto7mRAspebGBEJN12/RkwvWZ8S0n+vgqHrRVK6SKmW2+betN
BMFE2XeCbuCdu3dFuZR61B7Iq4i4xHedUAC+yuo2wsLETpqjnZiLDDR4tO8y
zo6JSeV6clqeUNB/QhcN0uTCAZO0eOYIF5cL8i6NQNWrMDXHg0p3lLjPye1s
tVhFlVFr7rU0k5I0FaNxNhbJ/qnA5F+ommEJCGvpASjtEgPlU3uImtIswYoJ
dEf87rUmKtpOihlsS3HlY7HHGkpK7afe38T/7DgeJwcSGX/CprOTW6FYOA4W
IBNypPExvKCcXM4XDuJoWwbnC53D7j+Nok9VdeKrL0rxgQdgubvOabA/pdMA
VzUGCYfkruCc/fG4mEo3QU3WqmaktN/jhHY3c/m7CboTXE8ZnMeiZoq6m4uK
vmkKQDvdbPWQ1q4/fDdAHUnWULeobJYKZf2AmTUsyrzqpjW1+W5F/V2nOUhc
TPqaGtGGQ4mSWqnO4koSb9RQy36OqqgRQ36+rW+XoW56iufBNfQ4dR72WRRD
yUcjzBgLEgKUVYeFF6LieIvaLDaTwO9CzWhSMEb/ogD2BWlDmZjcT85vgik5
6KLkOaCl5paqjUJvb6toSVJRut5ot1O1XNyuaYTrja1Qq9f2Daa7r/e9uWOr
ydl8cVX2FpDfWFifwAUoHQys4kw7RTsI9wpZ7qQTMmFpSncL28vOgOHDVanF
CeoTEQhPTm+uTO8R9uIQAmxtm68+r51WlVqmgpPl/fESi535qQcf24d0nB4h
z8Cm3AfD6hxTtJ/tw5HAriEZ2EFP6TLb82NO3z7dW9fSNmd0ej+RRaBrBFI3
0lAWs26b/VnmBqnQAtP3OcP2M67skPwG09d64UJgnCV6YU2nYcdVZRbo1Bpj
7kCdOuWytvo4kvpqzEsNgLegIYT1xZgXuQjawN43PsJvZbtkp5WLG2xLqEwI
UxBk59JpNrOGGMP+DCIIxk4O/TKszCOoJF5yCZb7nx/t63T3vnp+6Ey3h5q0
kRtn+TnFfuDyBnLbjOdxowGrbSwxwPoie9c7KTPV9LSyDSkdeCUfrafZjOvz
1g/cf33uNi9LvE5jXf3EwvboBwg/Y/5F4Aq/BO268H8Mgk84sn5ACDY9+wCZ
Pbe1Lr95mzO1BT45QJmPDsVfdBjjYl1mGPsPM5uJYydfexjyJ5PVeO1hfLwl
/HOtYRqj/PkGtFnioegw/9scpvnRnE/+d2Vtc32Ol+a23nRb6+bNLCZ1DxNu
rr8LwhP1i+8Pb4MnzDAfAU9sNXjCV1E/epbYvx2W2P94WGJ73WAGfB9gBqyx
DwSvb7ocHRNi/YPjlMgwvOsj4Zz5u3V7ezNzmB9D1XfpYTyF7/+y9Xx/+eld
L2pZGfmOSJz8KFhPHFARury32egnnrZi+VJJt+gwvqpyaK65JYdpfOIdzWsO
82P2c00deFjZPnjy0zXHmU64pAzkT90dFufXHCe57rLcvVLFyf6ZJXHk1599
Nv+a+eBug3vrrQgyzm0Qge38Ld4Na2t4BtfXbyC4llUIljrjP4pW9lNj4GW4
+Ecn8PhTd0HaOD7J3yAX319vwSz6rXBmlznzJixFw/RTXH21iMb7wW3ig/XW
+PwHt423aqYscX/Eh2FRdMlx+o/ETHm4PjeV4uPmiiWOcnyYxi/e53Y+Wp+b
tvIxb+dS12t8GGKEzJ7xj+GQP14P+5gcZ9hIsi6vXPXzFJtWjge/SZ3zFm72
ZaX7tUweZ5rL2pX08zL7txZUGBNuuWFkNrFB2g2wZT+ZM8yPAqhgrdBrDbPE
bG7L+b+xLpK1cZJ+byclewsnZe4wt7WNm+ux3MsPbgtvVdOpnUvtBvrv5GPS
f027kVh4XrNnn2tcPl6Mah6d02nEC9onGrVPqskwV4gPc+96/TtaUgfcJBeb
OOTUpGMDhB1qJWhyxv3a0LT/72kuhXCmKFuT9FtS0DWvblaRhltNic0BTT75
8q8PUr2Wfvt2z3S481+uSGKNF6umtOir3LRDo0rV8cywACgTP6IIkM2kO/z+
EMGFL0sHXJiqgzCTV+uk9Su3uIUnSbDgNRVaw+Lv9Qw0tb94wbV2CvGXXOu1
lrrnLhT9oNdc1v1eDB7bX6FtXdnYYIPqEQCKeEhjYaO8xeiztwvTe9Dzqhv8
eSl3LU36IKHZpF03q5VgCg97XvWDP4Vg2decCbzlUS9aAOG/LbRDr7vwNUm9
4hK2sZHGAZjO+oIUetzzejHGN0lUvNoYS9c/MNcXDtgMdqPndoqMUvg2J4uv
pFtDS0/8F/r1KuY1jOBh6+mGQdY1NSFZnsuorHBOXdSbO3S/xZFHBUnqXHLn
KnxGypxthh3WgmZjsz0t79FprGESzLrtsDSlirSLFoQqwp4UaBgHtsSussOl
9lKkEsmJj4CN2fp6KXol+FCCt8Qs8YltPoIoOwI7Z9BeJUuaUK76VxYh0Wzm
Ihm0ejLjyEexnMdN7EB2oeiS7v3v42SEdF9Dcpv3RrMfDckkYdYF8zIpqp9S
JJdZ101UdTdF8lPi3afEu3dtvm2K8bZKVeIRQ2N1trHWhLjbffbMVKI40s/W
pKeU6YV5+Fpm8eI53Dy+GmOKCeGuiNfnXZYnivnJwu+0gHuDLjGFIsHxMCVe
UHAWuqysdh1CeOArHWujp3Ag+n4uzuNKnT0EHRrX3WPsJcg1iQrUiHhVWJ/o
oMXc/VdVjG114i7nDvFjUhvV8qD2GvzX6+pzGSSY9R+CIgYElTZKN8h5qhXj
0nxWGQkKMEFaeIWOUneKIROjdhHPtJHLp5Zm5NMmYUHamHY/2drYSJ7/3cAB
OEQVPfgGVL05cVzYbUMJvzOf4ub7mmmAm2nLIYQMSN45Tf1EXdAeoYwfG6J/
TBkPoQH44JbVaUWdIqgR3bOyREWIVVOEM22BVewFLhmpg2s8XjmMitoToYne
g839KkU8ZzohO9q7QjtTUDcEKung8UzVBpWqGHWfHtZiOsJtgYnQ9neS1yXW
/hCKOoIIVfCzut8jfErvccV3Y+6mOhkCAkQImfOLJnf5h1qY7TXV47UcX1rv
gwRYRg4w7oxZspzp6LBYXSvdabj5KPdHxN3lgmJYzXRs8McMFAr/mIEJqdXq
bO7HCW7eT76zIyXfZAMQw7hgM9H5VHg70+UpepXuDny2EQckP4D+VEc8xKoi
9IDcPUvz4ZRgMLAAyGCEVoJ7RqV/eT9PDT5tHBu/x7XAejNoPePOglcHm1dW
6vFylrx2+AY9pdJMIGOjTUAnwMq38D6ICgomrVbLKlrLbFNtzX87lWkZidfe
izHSH9eB/pTeuDsrM6UilSi2d0hMHE8GSY0oxhNjmmIpMkij0YTllVkOcaV2
2Mz6KfKTrI2qlwlkUe8+Fczevden+mwSHRKLG1/ZKnanVaijaIgAU3ChulG8
17GXQGTfk++On3YfgQqEglWElUF0kurprfuPCTQsZdQ6aixmHYhPnjzTHz4g
FAoiK3rhhxGdBn/+Ej7+9dcdsfv6g8FwRausRJCILFDV7svkDTUsXzX9lKng
3zZWDvoMr+4AKRDj3H2Kd6aLs9Pv4etfrb7qzU/jDLQ85PB5J2vG/NcbQYhh
dlarVnuy4KJOklFGXMib5+qdyAkP7nV1E1sPAfz8f3r3Nx4nl9vJ2hMs0Gbu
6bkTcei0+Cv/+4cjPsDdIz4AT6jLWHuTEWEHQcxAFwTBj1ORqUhTQjFPpbk3
87zPxsJBK8gcS7DGKs9dpg6X9DT78svVzkoLp3y1e7T/4N4anJNHa9Flrq+v
hFwky1ImolkfOmDCDESJK2pljTt4OcTJ+uaOEtLFqYqUz/LR/+fut3+z7emX
aGw+zNKzKFcgiEE+ThHQwkikoDB4QbEUG51e2y6hgCRuKnay+jfxbOI39O4j
j3eOroDkP6+2Ntt5iM12UDhj77/7m4gWrC1/DNs198A3P8qR5Wv4y8vS2+uQ
u/MqWIVGQWacQFFQ2/l/kl4Ni3RgGPa7w2fCs9EFrK8Tw5vLpYIHfyRxyaI2
oWbVNeE0RsaE6b/Qr5OvSWPjEelJM6r3JD50pN+s029/hf/9yT09TeKpzyB+
FID8i25/uwRu2WI193z+I5zGfjFiXbEAAtRyExNReBd89jCMxXLW/R0BNzLk
BUulaTnsxl+FePXAkySvlB1OZNcNm7RDt2wzWlQwF5q/QXDilQb0l+9iW05w
Ctebt46kM+fpiBopxDTMgmS61msMI9rXkGC907bnb+7oWZ7JGo50mqcxqZOI
OrldQ2uC+eChaNeb6HurIrFtPugWYzh8NdYViRbkqbL4XfZz7StAwasaKlAL
Mdb4uTlajp3XDK2iPy1LQVKWsCoqzqhEo9yjIQSG0aKqYy9i+plwQHvX1QeK
XbS9vf2YfC40M48wMyYXtwki+DK2zV8jSqNhqcKBD8l4PSW1XT62PgnhnDJA
Kfqf+1sbLOK4e4tYyraHRYCdY1hIZAVlqSAKLgd90CEi2sqZY10099m7bTwu
W93a2Nrsbtzrbj443tjYwf9u9jY2Nv4PK1Uh4632ESMru/dwc3N1pcl+Mk0j
9+NMt89zbpXrd4z+FAqtFSuEQ3GmYqP9Gm64fJ24l3KkDPbCWsghSxohTJ6r
k3R4frITYTj4vCiBoUbszdBAoeN9M/JNHR8n+0db9x+cdGa0FtwMtB2cwat8
EJ1BoOU/3zveP06Ojg8PQKP0JG2059xineGaV1bYvJJQD5E12DU0j4FFvQp3
17cWhufIiUQt5lIgQattEGoo4qJyNJMGK+07U1qASc1VNyNcTk2M5vCn7ZmH
VLb9L63m4V2q9r41iPvxe16iBa7q0q5q3A84TGHvTL7JXF/Xmri4FvdwrbU7
thaADErUbeN2M+64TiHiMmmwEb7bvNWE/11abIWIebgKi6pGrWiygfYa4faR
KojISlPnqjgVTjyDzsXjnWfcuQ6k65lrnhPJdAMjttD8HGvVLBUAUUjKaEyN
3hsxu4A7kPttxMfhTzTF8AezTbHQ0WCVXY8817S6dNofqLHVJI+qfHF/xUKW
1hyHhrebfMBpCx1123w947IlnWepczK7R4J7TL5YGfsdcBlW16QoDrP00jYG
pZfQ0BzLNji7NmvWZ54/erpw7NZt1YLfghL8BTBFECnTTiXx1nES7cM5a8DE
0+1ZLTBIeC3qm8FnNxaR76DGVStSJ1zDDPWe1jK6kbN40XH/iD783yvu5nA2
RImulDf0wskj8ccIHN+gewo/vJrUxXmZTkAQUbgVaIkBv0mVTQdFt4Q5waJY
jcWBfLshtpFxi0G+bNfjnc2ItMczxkLrJm/1tkOcVlIzNaASVzZNuIWUTeuV
ZjfqCbeJG0j7VTtDDdut2XR3pyWxh79Kk1jQ2b2ANtrq5nYbGxnWimc2Ivuz
/zSMqmtcKWg12xqlsotz9bLYMghHkhlZkqxnKHTuEkKg47e2FhyJAHLjw8Eo
w+JcLuxQVcW4NbXhgwX367AH6sqKvbYd5/8iBqleC979GxP8O/JvuA/lep1r
rm5ZcxV/TiICf5k9qT7//O7T6ZOv//bd+PDnb7f3N+/t/UOiBTGnimvb6m/M
ycLvg2Nlf3QL4Yu2WFeLUYMaQaANuNuiuoB/J4tdMz9ssYTZTfc83+203fY2
pRve9WFuk1ibnUkjiSuNptCalhGinZ/8fL9/0rDaGZS5reFtowcksioHqPue
Jtkqx3sOrQLrz82CMkafdz1aM68BYu4oSXNoeW8BWkYzvYP6H8xEyDDR+/nC
HVlwMUBeDOzH0/fUMJ2NL/3hJlVvzU2q3j/8lDv9+86d/gRQ+Qmg0vvHjNTp
LZM6vf+uUqdVSt04eTq7bvJ0IPKdJLb92bnT2QeXO/2voso4M3JWGvT+AmnQ
+7PSoLP3nQbtrXPBDOL995FB7OgJt54+/KFl59pN+ZSWe+O03NlCiXXhlphF
+6PXTsp1m7yYeKPUQJqkBHHkZ9I4Slwp2JxVH+GmEax15/2OoNl0NTbxrOmF
ouM5LpK9I5BHmOh4OkV2MC6KoGIURIHps+H8XB2ernurZJ7LS+Qb+PaKHZHc
HzUfoy1tXSCKGNBE6ewtSHrvKmmxHtLBIBfnb5TgtuGERw3TwtM2wBkQO/PP
7aC0uWE3T2OqeHGYGyYB70fjN+8yBzhrzQFmXmECtyQA459V/kUXRcnqTvJf
zj9X4Ly5/07ufml+LrzNXhQ3XTObn/Tbxj3tM56TDOPM0aZuccNgfC1vHfUr
k1ySK27v6iXzas9gHox6xXsQJQGtO07QkeSAm+qZjWG3pe8muyZPInQ7MR45
vy9VralbC8mOlk4wCkOB1dvKok53GE2Tw5nyFCu9VpAMWtXuNkY3c/D9w8K4
zvkLj+28cHW019WbOwtL/jVf6tx+sDp58fe9ozubGy56JHmZ8FszC1g2TPsN
NpDcevzogcamiRpSGo8JS9jc58XzF8ajha4UGO5VdhW4JUTm2/lOpqewF/hL
UjKV4h0bwFGV1rbqs2gk4tryHGkdmMmB2/TvFmLaDZmoGseimcULphXPDnEj
1SMh7mxeiDu7rRD3/rVC3DrtDzXE3SCPCXHv336I+7ixmZ9yiD/aHOJgp1n8
h7kM5usZGcMLJQx7CpVujtwAJ/2q7J6XxRQhXU78pIj/1BNSMyo/HSIqsmR7
bUhgnNU4kW6Fo8BLYIqmWTkpHkxEK7LL6TALs36QWx7f30RusSXObjZQ7C3U
RdwqRBSyqYSTgKZkOTgBZ+kWp6J+75sXNNG9b/a4QsVch/hoKj+EIThIjT81
upHUpUw2N3AuJ0kfeMaQ1Ce00gFHozAAfL1kUFP5oxnUNBvnhDFlUrNCen5M
z5mQF84zbPk2wnluhMO7Vz++vFmMHC6QqRBFxTLzsiE+h2KUl+N3q/VShBrB
TWMuOl85yT3vNxrKSU+5TevwMkkosZJOd/haP7WoxoQE1EfF3QT2wRTdyUBK
RH6s6qIY0GEmf6qLZyXBx3L29gb766usrffXkuzevtgb5obtf8oNWyo3bD/M
DSOJRiB24Ra38GNOcJ6U48UnWcc/A93nYozN2C1zgAVU65XWSKdxknJwKkOx
rIY8OzdE7fv/gRKgZ13mhYP5BmYxNyf25goTwUf//GXz4+9bPxZnhkZvdMLo
JQOerPIBN6qAvSsw33d8lZwK2hyQEU1Mb7Zm3ykBynYpJ7ZOjZdX30IIbTWN
ygGmnPcJVBiWAGNsLpxMBCEOXxX03+XiF9DK3mbdAIhLY+rMSs1pvbF/6nBB
TY7JPT+6qUr6TZC7tNXdeNzd3A5yl0Krx6tR+GxmjQKeMyAuUHC+HrBQqsr+
Yqkq77so4YeLfOim4tdpeZ4JvA5DIrr+3g7wZtfxewkqhY2kUBapwP0lr9Mr
CazhlQxb70f2JK6BZBGJ3gEur5kuiPTT4sWyaT6ITAh0wDXF84DaNAumujrO
EXgU3U5VVfRzvZD9hWoEKEjl8504KoZg7jh0NpDe2dhensObvvbjGgOpCT7j
v+bcMdTvnlyfVvhnyTCFCXLoKX5Dtl4LxGNpgm294S9wcvJioJ4aUrskGFHh
dxXIJrV13EFkKly8kfbLosKEJ3JKag7VdRpPcoL8vMwqSgcoaXUZBt5IPtKN
CYvHnRe34STNy4quaNANSsPnFvPUGpuBPtdb2UMPc5/WPpoO6xzFBo2nV9rp
dPgqwBbFSEZ2Se4U3t/KsRTpDqgQUNh9sdf/PbJckjMIvnI6zCvYH0r50lEa
eMg07GhaT2EGjl+VoigHnKKKASN8ULOVTbIyH1ccXmLI/gB4eqvojjQgN8wx
dY5OLB1wD33NCINaYy5bVK3GkzpgFpzi+nnWEoboCoprwRDo604aNkk3/ZmP
lL4ulLYvEdXKUUnaqRCv8ENcXYyOwc+mKAtFh3T3Kq+M+cOg0YvQUvLvzFTd
EsF1T6D4syTYHmkcKp6+KtgQgy00mJbKou58PVlnnZy4vRjYIxn7vStjMRaj
TnQC2XXcIS6HTdm7gO/a7G0na3B+UXcq13GOqCxMy/Qc3Qv8i61Ef4DfH+7/
47uDw/0nOrGQfjg3fdIb2yarWFuuGPvHp0PKnL7WiYwuOyKKtRmDxdInt730
ySC/24Ui/5RC+btOoVysofNvuofSp57Ob3NRmkP6qafzIg996um8+Difejov
/sk7SKDe1gRq00om6DUzI4EaVbnkDIwdtJyyiaqOC5lOnahixj7Siq+uUHlc
q9abtoxmYXfRXu2iIuXmYtvfzUvHFh1KVKqTngc7jA7NyppndiyOwrG50epf
iQIdtOd8k/POeg2MFbsE0PNtpnZHAJzfBkT2sgjZLjU6wV4rHDRszSADA21s
KjWZGjC7fxViWjFfKl5fXtmAziQrKdSszWw8Q6k9VrAt3jTd7CfTtqRs9fGO
8sFgmIWLoDmIsZnbgAuxJAZEKIiwMESmV0NN5d/MbXiCW+uF/XwqYn05xnBu
OGjkz3leIA+uNIydBDACsMnoKnKj2mAZDoeS/ybeCnGuhHKkInbEp1qnUWZg
i2GHFwkX2EYqRjqFO6O432X/4uUY3jjI+2BKU9yHkAyuYnNEJ+f4fOiFMC7c
tK8gSzEfsK43NCnZkojm/M7faK8QurGlmMbFO2Y9kvNy0uZjELHz0MQLjRkx
y+eAhFKpOUB5hlIan58FhxQAstKyEX+pGWyalTUzA6qKCNYTirZBEBi3RWwE
dD38e2o3LIRIa2xJ0DTsmtAG6nbFsxKC2M8MvX5/qMud542rXJe0u30W2Ro9
y5cF1uOwb7oszqfNgTVIUUUJyB5X8lIX49MCw7BpeZrj81fGGUqjo2u/9ANc
nQR5jnzPb95UWf8lxtpeAgd203O69LSwxun85tbWiHvEuwowHi9BcSWZvQGi
JTdtpTPvErvfLnD5+pvtBK66U7hysnHreJlssus4B4JPS0RD0LCLQM1gmpoF
9beY/+JVdTAnTEszB89biwqYxNMaZC2OTZcBRg7eWcnQe6oAWuGc79d51VAA
gLsvMw1HeMofnsSx49JpYH4denUzKqo9FXFd4lAm4BFxBjV6u7lF5VFHPDow
o6dma2NLdosASiSBfP7xSVRJYElgz1E0PUMdyK8pgEnk9BLvNMVMVTrKpmNb
I/r2L1byRqTSLpYlJkrkfDx1tYkwXuWWuuD3amq5G8pDYys8YatG/OH91XzR
eg6c9by5M0qr9KWzRMntbDLErMBUexxKJ0xv9q9HUO6LUlUYlwvuhWbWgZEM
flMXkw1Bo7eOd98fb46lSWMtbWTOtgRFZW63+sobWX1ROy4wBY3iPyJhSBIt
1QgpqHyUYeIFeLTqACaagtLuVRvoaWpUG7CucbsmI9KWcGUnGtoKgupXE8Wz
YmlcWQ3e5ubw7JFUnG9ixbGiFpn7gn/7xUqQjufwLpbwRJQRmXUoXxzmzSud
iWrSJFVl5/z+OHCM9FE91vIC2BzOh+9EWGtsEUhs5w5Wh6sLuq9JXKoEIqaQ
OSHuEZqd9IWF/9VqRf0Zp/hgGab1rdgwrGP/RRD7bSXhN355RiNp2Q0l4mW7
9/xoX5/Y++r5Ib0BNUegMfFSNr7My2JMOQodJp+yGVg9XJPrl2T1Vp5T+H6I
lbt08EUe56eSNGWX1U8ntOWq3HJGEPNMSEhK7LX8RDZXUZlne06+g7zVaVl1
6DlEQicGcYELwzMrIeh+KEmfZJpNBt9PCjijogDQNCjtjSaKH2lJnoObVug0
rHRob2oDjzqx+bD/lvtaouSrfNJcXPvKGlI9JZWHcxFcl4sLUtgwuk7Ari5K
NW0a+IqeVYf7chOfjXXUjEOrjU7Qgk4a/9G7DgTuh+amYeUN6M62RZ8zbFrR
3YSss3q7XIfsKg/nprGEzoKYw43P5lyHWm+utyfi4nF38jounoVX8B6dOs05
vg+njqaOzfX8HH4Ynh91h7RtraNhSs0DKH2BXOc+2JgGiKk1w+wyGzqSnTPL
nVQutDuM0uFIZC0nWR0W5+fZYBUv5lXNLVq1U/WkOA5WOfOZBYQyzyvjJNCh
XtjuhcFj+gqVKnNCFygL4LtEXDYxB0uYqaP05rNMx7ZfgyZalOyKS4dZw5XC
OY1jVkiKaU2FDFSWJ3YNgxCkY/GroJlS0jRoWvfIifK0mI4HO5G+jAx0wWF1
47PAkdhr4Vg57S6Z1ExF2BAISgog6wQyQ5MhqN+asqQqWSOQzIFUeYucXOXX
rHp6Ll8ozqPWwHAS0dYdemj6reiS2onOsBcutHLpLY9aTR1vQkRTWMhVpLSl
5WImcWBSADl89Z0Pk0v6QBUU8oceI5q8Gidp07kQ8q/skQuIRPgbFJcXXD4N
zi+nJh47vg2Ol445lptb4BM/C3UxJKZ2G/1Bw+a/EWQT/soxdE08Wwzdww/T
0L1js6iV+m7Gl6hJK7tneM36nRa/j7lEQjtU5G6GDEr3eM3acZmOqwnIy3H/
ijgIZTsOPJmWk4K4npBbhguITnLWEL/0QUBhjSOc4MqfIkVzh1itZtx1mqQq
ikjTexV40CxuWItuFAkI7tkJZYPm6VrTrJD1pnemf/nuUcfmsPAH6quR67/h
PvTiN2UGIn3sMsWcUA26OxEZ5ZqhmrbHo6Ga+7CNnMgJmuQRP7mPT9KFcAq3
doPZ9IYwKNRW3pUZx1M6pnAsdDujcqTFdU2ysLY14NQD7daMxeT5+VTQbOi+
h7vtHBTwRPzFtI4tCjn9DU766/QqEiIyZYgpIkNw2MfM3BMkNNw2UQO1iu/G
JgVa1IUqpzor9nu3dMVRKo3y84saewzQolN1dZ9Nh+btxkLhLTOTku2Sil7W
iQ/xnV2SiSfhWVNPmvAScHpZgMWPso8uaVrXPSVRcpyPMpBzhlQaSXHSTcw9
jXHMAUrFlSW7HFMfFzgoYc6A568zWxMU/M1NFzqOEJ7O1bfPjxEaAT0iaJEr
BNBXssTm9OdFpd7cKZu9axYOZbmIQNdsOxPVWn6jbWc8D+47bDtzGG07U85r
O1PeVtsZd91LYPLotD9QTJ4mebRK9fCttp0xu8lnM4RqMV9/JG1nAua5AbTA
4e23nZnZiKWYmFtSfiQ3lY8coD0J6DZ0b25xfkpAyU3IwBuVEM3cazWE7Q8v
CONC9avAGi62m/SE8RxkjlPaYmH602zkqYXXHpM4R0fHoEsugfh0+KsQmaG9
+wxX67lXL25D1EfHSCK0cziXmbGE2NTCRODmrd+oO+QwSs3rx7xte+EZd0x7
SKYlChORDg08llBECEDNzI47grM4s9HODDZdci0NlvEb1vhddyxOVVqW6VWi
uJ8coWHlz0O4mZ9fCaYy5kO4mCwL5ViqZ5nz7/M6G+HxoCo/Kpalj6qm0PZj
BHG8HD9SWBv19QsRKSYYMRWQ1egmzE1atS5tYOkVL+N+oUtkVk928XSbjuxf
rDSVKMQloQFyOkfezlq9SZELNDwQxQFqR88xAt7AK1hNaUlQLD1rt9LpZ6u7
gc1+jje2drYf7mw/7m1t339bnX48cTu3Vc8sgTi/z8/iTYUMmxj1L5kNVbLA
171eb5X/8VPYRyjcdA94zIjR30Afoa+L1whf0Jl1HOK3wXLSZkYnoHiemRvA
jgGt+K1fb7shkG8XNyBy1SB7c6fhgF/xPOc2+2bRwFOy1j/rJasafFFvxuq6
4FASqLGAAvbDBBXNi2KJbS5m9S4ypNHcu3kJfV5ybMw13V3sms4rzSLx4yE3
t6IbhL9VS5pc20ZFoHnpiHTgm6Zyh3ZIkFbsVYAIQKDmjf0ojn+NtN4MjRth
xoUQaf1m74NZSE4LyN7VST4mbYAO8CKt22a3SQ9kbIwq15OzbUjX8wIDYEO7
bv8QriX+kBtEWMTVNcfFFYoHiy4jJ2JOPFCOFMqI3EJ/xmVuOiBHsAMa3opJ
5QNaOV5RWyTwvSYqcvTkVpxFStvFPUaNQ3rr/qJkDde9vpzbSB9i71HnhhMw
PLn0LJwnWxxZja3TMyhE/b8/u3V31kEs/zOMZCKfZcbkEp4hrDEHHuyiLKbn
F8pfhILl56Y7getGNrt1EvQERq2ZUOAgCDnVHq5VyLcxOZAEA0dfYlLpGXlN
egUGmEQybT9V0K4qlpPVFMuqAUz9ytvohSm3tSOBwqJnhFPSLSK1o7X0koKX
lLmcUnXFaDQd+9HHKutjqM9C4xu/lq9JIspXHJ5fraqFO+Uq6p0PuNnmb1F6
1H6YBWngZdIyi0lZFafV6my5LKModclmrQRKh3r1qRTawzGqOa0l+xkjsnkd
lCoXYQCP/CiUuhlY4aDgUDiyD08nawyWyYyhwt+h0boH9+1KS3IwhT15pSbG
ZOJ5oYF2ld6JPzWeareFXBkVJAF04abKBnOfuiVg5j98CMjMf7gONPPiRd1q
dgQZj01bbzrB59Ywom0BloGg63w+2xgtWXNPoHzvsuq6uqXah8gt6Fgzj7LJ
v9YThZJiiXpve4+EV0+z4JZnGzVym/xrBUBeCVvQ0dKS8fo6PK7JrMB657lR
3QQxdKL4ve4BXgZG1Dt2toFIxBAXbuqFLkD3N4huKX196DhIZqZxQMav6lnX
dDPRwN5xbq+dOeh6HojlfjvYVrMTVwPSkpoFz0rT8gEvGqh2cLNIeRLPI6q1
O9oLEdGhDd/RBnJ4Joake6KGRSU9yRpzMvoK5SYiiLSO2GQlik6EfOOUTCn0
swMrKECeBrSuFY9QWd3pwROLNzVgX7hEdDAo0UWP93A9FREAUxYTPSHjeIg5
oioL1TWOr8VeTacE6cJ2Dq7e5kM6iMwNbJ572DAsm+S4MAtaYSpTYOGm0g9e
NLwt3D9LglVJqVilcVedpkmrwFgkxeGA4s+tYqd3kRmQc5goMcL26sO5BJqQ
Kx5B5Kbn2UiijHXRL4aOG8dwdbS73SfUwt8qauG99VsQpL8ZAMM1BIpbF2y3
aw0je7pwo+elgOh+lLP/U2PgZaDWfnRkxk/dBWljusJVk48Jau2eQq3x+hZG
WFN7921BrDkX6LuAWGME9bnF760waIs3er7VDtemV/CN21w3keWcjk3qUtiH
qYj9uLGNnUMNdb1y546aWx5ZXI9B9zXijqOh8TVGfzqhQyf1Hp2FQuZWseIz
r1NTjbg07lS088+1q932Dc6RFtprISJpDGpyBAahwpE04eCSlJRwN8mEQYIc
f4q/LK/g7ib4Q/sfO/7QJuaBG2RbM6Q1cJ2+QbZ4S2sFW0vZ8OcLl7G5uT6/
6Y7kuOq2ArOZlWTOJbHsxNoRiwQiVgTSwp1WXax4WI/Y274oX9ce0Tw49mmr
C1tBwe2Jot3EjESdYTPgEcl+ZsQLe7HiG/WOHsSMl+o6pkvz/R0GIWhrc60d
ERE73xVJUR0gohy/xnIRECVY4EN5pHE6oS+rYWAxhMAas0izY/F61MuzWIWV
o+RRiHXN+aBZS+XXK76bUirvAExe9auH3VE+yk6uUa/krO03U7PUwk6GmLDW
69QoeaR4/3VKzRW+86qlZMGaJadk6d1ULEV236lfsmrs6xv1ixL/WHu/KCsz
QBpnE4OCy6J30S5RcamXm8Jxrx1NJMG7rW0U31eCSomt5ckrLLo23pQZX8J+
cPL1RSY3rQcO1a6SGkW/vXVUAC/iiXCjEHsV7ql14ppXG++2KeIXhOQ5BWux
Vu6xejWXdDNtt+PIsWrUpO0fhvnvFixpbgrPnDvozZ1mkt6cWyuWvLN853p3
54L+9VEuNilw8fw2Z4qxHDccqOpSkuDeN3ugo5F0e/H3A0u7NVLmHjavZSfW
qJHG+1sPtzAl0d5JoSnrtSTKa85P9JLoW6xDjRxGw4sC7KEtXE382QgP7Ohm
HxIGSZ5zlyX40lFUK9h7Luh42U+JPrL9MyKMfjAUtbmxOFhM8oAbXkf1zvyi
2VfsuEjgjsCv6SHXNB0LEpttj4n2LZocIb3ck45PSIe4hvEqI/sEWqtgn3bh
aqCGZQHxAoZ1o0sYATaZxgq153Xy9NMTgmwEc5gbs0ncHJZFNyLqbmEDUUBm
UGY0nC3tkHItDdiYW6ogdDgz1vaBhNrCnZW4jhNvNXE31WFExFi0l4YkRZ0G
lAdicGck6v8aj3Xd9zpbkbevyl1/S5Mfbhzr+hQsWmZdH1iw6P56i+z+HQWA
aJh+ukc3ePdjipXc11hJKJ7Q6soRimbh8AmI4PKWoydOa8a93a6nODSTA2cF
Uv62f404ijj0RTM5mRnluG6MotFvBWdq3G0LzWtW1ji7iBzVrIWIob4pY79n
X5BHKc8qWgM7T+e2vmL6HCurdrx9yrn5CjnmhDNx6mtH6waQhzGWECr2LKrg
0xVuLExDNqP8NtHv2oyicAvWRKygGdSg+opoDm2P3JId5JxFxwhyuMrVqJ0c
n2iVmaOOytOhuswJr/TiAjSguMKBueP5KXZzRiHCycpZ44etaXKYlLltkjJJ
2bx5AZPQPTDuFNxudaHE+tW4YfewtxUmkc6GBgGqNZFBlIFmoIOs2F/dStVH
SJMlYEJkCR8oSkicSm+/wOI43GGVkLDc7qNE84ZJ0e8XI+a9AlZfdzkpz00u
9bgjyBl1f4cRPYYsl/zkaTnsxl8lSBtcoKgV6LLRJ8koIziJ9oO5zRULwVxo
/gbXhFcaEH4Wbi0mvV1v3jqSzpyno811wlqqvLreawwX2tc4Of260fYCCKFh
9BchOIKGrKRx+Nb9x3CKyQRXoUGg5Pb+f/LkmVrZDzbRAKdoG/bhHsYlCT7x
Er4xJY9JfzAYrsjXyZfmjMJZ+/n+aXoO5+z0Cm+pu8mPn/Nfo8dKB9YDRVPD
+8Nb8Jr8fH3mcTmhNxvmay/DNhsiDyBmfbOm2uNXU1/zePvBhlSZoqaR02Ex
qen/07u/8Ti53PaxSkqOFyPOAapMFKBAL9PrIvoAJbs+2T+U+4hxA4keFcmM
TuOsew+roPArDGjGfhmC227I+qTW6DYuTGfK9dCN5/Q3pxrhSAlYQwulMDX8
HD0/HDPjKOwFVUiTyjaRRkiF1ovFvIgaajh1sBocRx1W69QX00qRK/H7UZAD
My+/3L8+l4SMEIb1bj89D3yZzay9jX7XdiO1Ft3qqVmk5nZpcANNx4nqQDcu
4PkQ6nfebvlOg3Bvq47H5WQ2vubxMBzD2JZ7zAyUx5pwIiZxLbB3/y0wt8RZ
la1jnCjsrV7fF/uH81E8AlyLNkCLxia1gVpYFcrTDqziUIgUai/TDlTzpWp+
vGoYB4xYPKIG++JXp5VJ6GIhmHPN9vQPbn1RZmjqFzU+MJl4hQumGtbmtoai
ltqd4UNG89DicDre5h/Gs933yvWbAE3k5CF/Lfp2nKKtP7oe8Z3WlJvWeC2P
HAnA43tK9z3CGjtxm3jmOG6R2SEmGY9xYxtJmpzDIHhrnM3RHeRV37CSCzLq
MYr+6op8epNJ2hrXpVYDRZn5fQKND41BrnSGzWJraig5qfMRGIlBnzp0s+Hw
p1b2aS82ylLtX1lpo34a0yo2xp96Rvzrm/91UdeTSsrCIkGOB16Qw1QDURGM
1ygg2IHbqOr5FOr4zYY6Hqy3itQPLthBIQk4ij08eIuENmYM01WB/Nn80EZ8
GN7QyyNKhLv+bBq/+CBjJg80ZqJcskCEJCaMGxUicaGk0Qz0V7sFIfL1vChG
dblgA8RrYOfE6kbCPGDHFpyJ23+bRSTzcPJ/bAeS+unGZSffNYE8vMaDsm+8
+27fOJua76WwNcyqomTlfLOXfG+zPUjE2yFmaZMPrKtZu7OdY1aF9FAEtUMy
RTKsqh1PcYNgzDIArmD7ilP44Cbe6qGeyzctZQe66SYzYAVibd9aUVL867u3
sg00cOs6ZnQ9k3wXfceSfcoMuonheDOiD1ZiQaBaLTTEUWBFCEMb+dj0g1md
WAJyS6hV42bQyI3imDg5LwtEfAR8Lh97EOyTYSrGwSDHzkikxDnaXzNFJtr9
sQEi11u5Z3jTSVYOS08aiFEmG3Up7uWENQ3DzMpY8nJPuZ+PW8EglHZPH+eg
IxdjYBtr5EHPptzNYebB42qrZu90m+2du7uzzseaDZjNRInZjRTIi0Zusk6p
75O/e/kZJ5JZC0kTZXGRo9AB7wqEnsIo6Ouc8i0Uo35rMmdoyZAr3AB1qnn0
dYavxaTvESwljbRVsMzwMNZlQF5CN4Ra5C7DJaynJGuisKy3B8IveU5hEyfu
+SnmTW4SucMb/n3HzA+8vmZe0YSphlNgUE8FcYsnTAfVMksrex/5BpAnJH0y
N+YxyLknvf6/0lGZqMEGrqnKFYNS4he9X2M2L2gUpcfb8g6FckIFpiFy6CFx
+UvD9Ux0A51qA1zhhTe8j3xKqYk08wEjKLQkes/RxCLJ3tfR3Zpo5otralHX
QpAy7rt0hGCz0sVbD+ebO41T6CO5th/nm+VFMK94SREN3lxCNN00/UCW91bT
DxbMPggo38xE0B2b2adEf3QriQghdZZIRIis5gNNSohTTL3lSoK3lpLgbven
tISPPC0hdsatKA5TFNxf3TRN4URvC3YnTQpsSLB47kKrCObY4iVeStQSw7b8
TuTDRNqhqFoukhlVvioDzRduD8MOXMLN7TZMRzS/7wH2ehkxXiaNfrJ5kvwL
Nfth/iqLWFLUwYUW7c6OVchimKXaCfgE7APYtFwqG7CWmQ0RmunJWTqs/K9t
PecJa3H+6i+msLYulj6QeihqNy4Kx4DflSlXK84grhEIalLj4+I2QbXAaMuO
MncKDA3EylmTwTu6rrFEsrQTpTs6+7m2E+acitMcdY8rZjC5vYmlDEipA5Xs
vtNUVVCNhRDmxktdcYDePbNJ0jKmdQ7SVn0U7sLcQAlcoqBTwUGd5tWFaOqv
MqnCzEh3rwJVDZ5mbAhVTSxGW5id+rosQASov5CzS/TKiMxLF7k6uay68A7s
Er1KeRKuDNBEhJfCgQvmS8SESws7t7yP6nhZtQi43Lv55ejBTbvJNzoNBf/E
I0Sf8LIxuG0Q6B2rXk2NbEANJ1Z9IlmYd5dIMNSe08sKXn0X/vP44UYTR30G
Jb3Ujhi9juR389I9FiAGSYyAGk9NVbmrOTfcJiuu29x0e85rDgKbfmFnUwbc
RFJsbWxtr/dWO++InlzxPY+aT5l53kpjEPVaRhX43zH4bXubryb6bUA7kti1
XjALdkChKzpwxEppfvMBgXQRZADrOI42YrEOE1R7FMhAEcYboZCwHYsrVW8l
Z+eO8vFO8iRjYq/Gfr8a6LN8Dzo5h+8m+8df+zLZP8IXS2cAwRDqImzlMSf7
R1nUZAB9SAlAYVG1mwhk66q/ys6KMpN4o4lRxCvAY3406TBfuRwdZml6oclO
UnmRSgdB30EK88uJx6h5aDy1h4Vl5AP1HfVeQgfhNE9JhyRPVupAvYO0xOzS
/DLrBIknIjeocPYUlzPGwpSzgDqmylxbJ3Lwxw6zZtp6IHQSZlSdYjpLXIFA
345N4SmzsyGzRB7nvg8kvyaSXvNwbnrNTL74lGbz+06zebg+V3B93Ok2S1QS
x4dp/OKDzJN5aGqL22T3jRJnVPqxXhlFz1AkVAlypONBK6CGL6Hg65uk3MCl
u1DOTSwnfE4d7tvBWm2mrTDwUThBL4jLdTaUMepEEBtRfktjmxoRhWpZmxXd
PlCKeQ6C5nziHVca1SRVWNO6XCXpMTd2JsugaiQNUKx3OPRLV8MpSFSfUCMx
FiWMGfxsfXYU14U6lb3qOGZRFPnuvSKaagj4rcGZOj1CGqCmXpqTTXFalhlp
PtvJ06I8zQdgDtBkqKbKgT1o2/Y5s7KmY5Bfzvb4LE5ZDMnUExHvB3HVBTaF
WTmxfM2rqWYl1ghnm7wRN6UCP0B0z9TmUqDk9dNCQInWoKn3K/U3YHYOv/6u
eBQT8UTpSakEsxCY+GKM/uuxNJJS+dY4Si2h/tbS/kiQfwEYgGVi+rGrZZG4
fhuGRDO0vyBIg4W5fEcoDc3NcY3pEHnONaYZTfGlztl0kfGtxuBgLmBNx8tW
ws4lH6g1+GiuNSh5nFxxI9Jr1lo/GYi/bwPx0frcw/gxG4hLteWID0P7mtly
jI+6HuOR3+/DcsvN6jI0129p6XVD4zFbrF5jQYTUm5VovLU2Hw7M9+0VXEwa
eca8lV4jWNGQGuXa1jRVu8DTwHty1bsgr+882/lx795S+c7SAEfzI7O56c7Z
7yzdOThEN0t79qjdnt478+BG9P4FD/oyuv81EKDDWbSr/eFKm+wHinQ8oXcu
v77PfN7I4btpRm/24WT0+qRvJvRmTmZFa0Kv/uhWEnpD4iyR0NtczAeazxsn
mMa/lQJvLZ83sumf0no/8rTeyJ5befxWs3rZe3LjpN4WJYiXWtHuEGmkc/Hc
tENUcBy0MHrOQoZRaOAcLtZxrLCh95tN/FTZEpmXTfzMgsRPl02umfgZYb/W
vM/o695C3meo27Tlf85OWMy8hEVJzmxkKM4ioZejGCHUW074DMnQL6ZDrtBz
ohXLUeHbIgE9qH9BxpVjTi1GlmbiZoQo7yBvM66mfcrbnAd5FtLt48vZVLb9
PeZs+mtfJmczu0bOpm/bm9jpLJ+OH0PUvW7lTifbE5t6hHhvB2O9Z+jeaWYe
0MD5zKTR9w4bd+CX9COi584KsNtU+m4x+gKxEgrXDvcIc9etnpvpkIKdDSLK
CQzVGUnNbGTYziu2Xzst0FlWGhA3B17DTx43RLZdwQKfRmVapPRhQL7duYsk
T4/NY3Ua3zWO2hpbrAiTWb+d9aFh+8pxNWXMNsooJd+x9ZP5PiMzbjGOCpre
LJUSY9eORhkWSb0vnVLvHbs7jZmJRwY7FZ84xR0nLFeVL7B8zdEh+NtMXWpH
crl6ngPguFGGe5ZXo0Z3T/2F09wTY72BHXBs3D9rBmWTY3Vux3tb/TgPVrEP
6gAfXGLfBjGJ3VwUXmmmJrk7YXabPO9WsckuRC8pta1tYkUH7qXzfDz2IBnb
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
rPcxynW7r+g7Q9V1/S667dvqnWUbbNJkV33WvXWVutMPtVfL1lc9ixmjyL0a
srE6avUO1iBosqbW68+/nfmPLOw2hop6a4T1rdv0MYJx1bfr6QhYVDex57tZ
T+02bWY0XNut9dqRbjRZHW+c+cq3s/p3wzJ01owDYzHeTkK1aQzwREuvWfNY
05uqbc413bgzLo1B3LDD7sLCnvada71fTXY60zZs8e0sDtiBJcODrmMOdt/e
pXOYYQ4ta9EIDZVdGorRYIocwVYxasP0592BsWhMR02MkjizbjKZGx1zHsy8
sOvh17qhdOtj27csq1/vO75mKPpd9veBr5nN5ta0tdv+HPMJv50lr541ro/U
7so8MBcU1XcPAbPVzuVDjR16jtFnTuSZTVUZVdeW29YeMPf5KPIP/Xl/NWbd
nq5id0137kasuq6DbqcjJZ6bzi7xB92ZZ3VUv1pfeva101f87+4gvtVt9bbX
9Bs9xkIz0gyGU7FtjHLXr+k4f40ZYbeG1dy6VX/fn2MVYdcYKkbHaGpP+DvO
MjAem6CXWaDR2fWVjoLVWX0GqmuyqLPF3mvGwO/rzSgcVlVnNNeG1qwxG9lu
3dICk+jDHrBZb75LhpHvgFPrPScK+wemOtG3s8DqK8HGnO88PHHlNoN7r6XH
PavhOc3LrTUP1clcG7CF4WE/rizNv+81d2vd2YWY4wPmuBiDdoOVF173baY1
cRaP2PdmP3Qbnt29HLWMW0+Ld70mq+p23OtFjT1TdGXCelWvabjsoNX7ytdX
G7SrqcNF405X1MC0jYXpBA1L0++Hc783mvvL4Rz7cGiEQ9VvMea+PlT9tjW7
eYXuujIhgu3qdu/dfTszLk0WrHpmkW/12K3WietDcH9A0sIdRPe+Gg1HbX3a
C92V6cSvHouHo+Z6ZoB2Gy5zlJ3F/Nb4rusZc+NpONO2DtOH9jyesmipOKEb
sipb26GhOy3j+zAyGj3ssNtaTw0lVhnOKDC9UF1P2swdWdpgaDUuHY2tvdba
7Gnult11aHcdrxZbo0HgMcW9H6v+Cvwcjux4a6uGZ9K+rEZ3us1qjXu3ae8M
p3mww3rg1RoOSMhkYX2Fb7H58RMLWavHDMcOY53NDYwQPJrz7kofQO66vZl2
GNr+vdFUh2y+diYh5lDdLcHL7HHQsLAKUBxL9MhY2ZGrewfIv0XsYATIA9b1
MIofDw/dZDTvro1ZI3SacTKsRV3I9MO4Gs3MZlyFzHG8udHGG7re/Dp2oiAx
q/raiAKGt/WH2Be2ZZGruc26Ds5zhza7ZNVuy4l8orIHy9LuGTMSMwocI4pB
OTvPq3b2FmQQTv7RciAkMYo+wL4EbL4buvZYxSrWWAUbafGjC85mzB+MWiqz
lehgOvXHsbbc604QmppbdyK9q4fRyoc+ilzW7GIVseOGu4Hb1l02C7fWTGO9
porRIInmuy7OwuxHvR2LfHCtO8ccwVv9nW1p05727cx1HMYefY11+uEavGTs
bQVnqVw7Vqh6THPVoRPuIE9aI80AxdUTSzWWE00bmAvj0VOGWxej9HZG1NnZ
4c7t3THTdC53bss1es1k+jxQPvypenqkny91pzd9jJKpZUfd/nRtQ8M0hra+
gAzpQp4sTNtvOK264y34ftpqY6SQdNLatqIoj9BU0DckkS/7tbhhpnKeRXbf
WbfsUDUZZC34CLJIM0xI8m9nk+aa5P7GrqqJz5Zba+HORqF2aSziBgsLcr61
3o5b3bUrn2eh70DKa1bY1b+d9RVtaGhGd9JUm87AfzSazZ0VGu6kWW+N8L7J
PFGxgyt8/x38onshuFU1mM787/1I1+2BjrPtq5pr4F/bxiyV+BZUpbFQvbVs
LpW1ftWvWUxfj9rM67Ub2+FcDY1W52AufB2rqxk4OEgUPoKr+dVrPI05hfUm
s7qPk/lYBVtAY7pgOfwL+Yd5qmZVG+hO3Ro5O9WZNUAnxvrb2agVe6C0P6e9
DtBZrSiw5zpAcwzcY9hs6B/8PXNY4C+MthlqqnlnbL2D0dXvutUhRh+r9g4y
vmc09TurtXa8tsHYrLMbDdzAVPTqtzNr8LJ3zLVlOb7x2HLnvrLd92rLA2tG
Tj+C9tKMW2j9u7FS1lWG49/2Z8HA1Ma7b2deq7c3Bga0uAvN0XtfU7S+qjg7
AyPePqb6cOBjw9Tbb2dDW2sZkdbzwvqVfXttPVTXwJOx4VfjhW7bqrtwa0M1
mop9a+6YY9xjp4FjtFe+b4oPqrMZa/Vxan1FbejyHUbb1/rT65pts4avRB0X
9GkCabg1belV4ydb0wxosYUVBg2j2QX/9Z3o1rf0GrRqb6zEun3HDpZ1U+s1
X1bMdvcTu870uf8wCXdPOJPWhHVNq7rbje0A2C5aOE0dJ22GO3sCOeqH/f24
df2gz41Lfb7dAWnUR8zYDCPQScu9H7U0xWcve3t+/WRYynRgbqd+O9qSfoKk
zbCz+t2v9VbgUWBWrtUSd0/Yklm9mV3tLJQPJ+tiflisb15uv7SsL7vO3XDc
bgyWw8ns66Zjd64co9p5Pf9iqbeecd69Ot+ZVwp059Qx1fPX53Hd3tQ7umuq
/t5xL19Z+2rjLZ/GE2Onj7++fDhdWVMaVcLIkSaVtKiepy/cBywuY5Str/Nj
6+ucTJl3b3GXzDdvNVpyWzvPhH5jyxkFWy5/jCzuG/NG2HBUA4KcM3IwXqmf
G+XPy2V6zVGGB0Rm9nhJVy0vqAXokfN1nQ6XD5KG6c+P3b3CzMxqLJ5xczm7
/HmcPP859UqIbKXUts59b6WnKx8/iEl++CR+yMsObGVuMUz3rbcqFLAr5I6/
b9Cm5uqbdfAtzg3d8kQKb/hFEzdPWhIRI5Howw1cGQpLaPFp/kh+q/0DD5en
wcCjaf7Idjak7fylXvv/ke0che4A1uytCrtVVzEHGhUWk18z5tcNIK2GbysH
y/xat27Xlme50ML6E/S2Pboli6q/CJbjg0Lv3Iyq9ZlrQirN10trET2MYUnB
kpjBjNiNo6AG+/fVj5rXT/TmRWPvOdf7B0KlKTKvjmps5rUYPu1G4wGLxrU+
zSea2HENyi4ZAwEaZUzZGmsRG1lAyDqw87YXxS23eT3tDWDUwojw5l3HmRmE
3geuo5qEe90W0HuzuXfC8RZ4B9g7Coxa8J2j0hVGIAsgMBT1irXUS4yQAAu4
Xhhuh8yujzUd6F3TR9py54RMn7T6e2thPDGtu2SLuOXDRow1r90NGGxyu1rH
r3xt3PYHbN4/ABnf+8zd2BG3IFRb9bc+sHfPZqbT2j26zk6baMZ63MIoj4YV
2RK/22zWJQviaQitMnY6+1Er0EdOAHXlOj1CoRHtQ+RZTqL6qg/870cMloPR
dWCHWqp2hXU6wGg1S8UImDVQsg7EAyvQXdrA3uMmrBgtjoeMdkEfjJtx2LvT
dsKKsaJua3TXIBvEAviDDaJdOWHdNJi9Z5q/teeEvIBJmvEQIyQTjNCz/emo
3RhakXFrYRSgmhnDTtaDIc4KKHztN9WBYS9Vx4kfR1W9Dbw/hR5O2CBuAccl
sKRm/CScegLbQBtBQzUGeMfAZb5paLrthHEAK+aBWZpjhmrbWHRtT+2abK5e
Yh++90Nf79l1x66u74e22p40I8Zg9cavrJqoegTkp8VTs9l9ArXPdKa3YEvb
o3lgWbAgCF/aC93o2a5jMVhazHVMslGYO7Cwu7sWU/WVRZ4QzcWyfcWoGgks
J3sUxrCkXM9Wo/WkpT2OWrsBTqLlsc62Z7mOMQ9e8ZxnYC7dVY91p0zt9jFr
xVS1xKv5OojNGg5ipwd7kGy1EXNbzIk9Gh3IZuCFQEIzrTWOYN0R7Tps0LgC
1+z0lrbqtQPLU10HttF9X/UThjniNLvD0AbVgSuwX0bkWkNHNXylPjQi3TFC
7MsTvcuvai1zwdweVoM5AJ2xxGvr9qgZd1gLK3O6Q+wsdhp2W+TC6qE56KYB
LmEO9mXpYxVs0bVG2LYhrEygbmd4YBiB1YcHfWmp7sqZaQ6+rw1t19Mjd2NF
ceQd2JMTMQBDsqgww8iw64EFbA27eeA3/QD2GJ1miDmszEWXeZBhVuh2fZWt
cDa6MWiosCQuh6y5o911dWYxyw7ZPezjds9eA6/Gqu2oicewCli3vUXjATYt
UDhbkW3GqsHOwVmaauRgty3vgN21LJu99li4o/0xoi5jZGVHwz04DXPoPuG/
jwzyx8bsjdAG37hLUGKCuYG3gdoxF+ZhHwa9QRzBmt5jHzxPc9uwJMEV7sOw
unvEPiRjjaRDbDJIj5HqghsCC/JFx3PYJ/C040Lc4YnhMPRb+MYGzWKE5RYU
tzVZdzXR/Ah0rTgOJFiVJcbCYLDUv2PuW3DjdwO0u2aQkgqrqpdMUTewYkFR
8QDSquuDE8mH0KsG4HF3CWsGtjt2semuLCd2/AiSxGJOz8aKak4YtPArWL2G
PdLYpW3dYN9jzQzrDuawh510aUDmwIYjmoYMAucyZlvhtQU7ekB+n51nV5vb
ESxwnPgD5vI6YXEHJ01c0WYOcQUjrmBedQdTlnlA+4Oes7Z7LN6Dfu5tYPcu
Gzf1wWjQeLXnO8kXsBicdU2chQs69qcGeJekaA/6zm+uTdC0i1W2LLU7mLQx
CuRLdAl5ew+qTrCiwFPinePsnCHJkdAPjLAe27ObHc7K8TQ/8A6a4trBozPv
tu0o8Gh3jScI753T6sIC6eIs+IiXI5rDwA8g++xhFCw9zRj0LOMRUrI1tJni
aZ2tDvnDou6dA552Q7yr42psymr6pQPeNlS/5SwYG9nQ3M7O7UWu5szXFni7
hTmYljo8QPswrLaN82r52Je4rePUevMAm+8fuJTGGeAJE3OCkQlaDX0TtLNn
kJKgSDY6NFyvali21W0ZVb3jNb+d1U0WRXXW2jk+rOzeQDdG893Asm3FV2MH
ukDHnCChdltWZSvIFwYtq7j0vNb9DoqYegrpRsiPBiRiy4rwHghZzGHZV7EK
0EPP2SkOeMdzugN74Q7YQXuwMaIeaWsf+grU0GGcXoaOsfJrkWc4ARs661Yv
imBxrx9HzfphONND2Pgb9465jHUtcOAjq2odUCTrtXZXtop9hA3cBacFj7DI
gR1s0prfTUubGotG0wL3Q9+0zPk15FOjOmTu1nG6mt9a66wWeI4DjFOF3h4Q
vUDWYxX6LebgOAtoeoVQCHRiFRJqDhnX0muujd1WYw3ow4SEWpJv0VZZa9TW
zBHRy5DNExXaHNLBD8Dbh+EivnVawE7trkOc6TZdZxwx0HRg9uz4kqn+pa1C
0g90wjeBDVynm2ONfScrGCMMwBePwCpXxqzhMScYgNfvsR+Jp4HPbEhq+rxq
tI0wIDp7BNdseyR3V9x7qLoKPgm9pnLoR8wF4nh1mOtin1Z+i59FHTSzHFWb
ezNyZ2bLgI50QT/2niSDPxvZdNoQpYqyhUU8IH2Efbh3oIbGmhtMIhcjGo99
dQgs5Ts4uwFpvAkzElCow/V0G1jhllWbeCIAX8QWdJ4znuuQgP6UhcsDi4zW
SO3vgMIsnMQTneWQGcAvkIF4uwOtRp9BSkYx9E0T6+5iJ/2Nq/k6NH2VWR3w
lbuC+DYgc4b2TIM8ATrR/FkP9j/Qxz1RHWGka9dpNxzL2WG+esslbTFoXILq
cbrk4aQIQtdznTWV7FhD22Bn4x20jUKr7lNMBPKlfrCBPsZqeBhjJ0eDYMes
huMrajJuunSay2Hk3pvMXfeshgW+Uiw1uCVp4rVjNuF6GvRwP4aeBp3SKvB+
F6fZ3zkLHTsdB3aE81C5rhjQPrA5NIqirsbNABovWHH5QnoX2gIai8U9YAXI
4R52Ug8wB2sYBreQx9/NmeEyhdWBRRNgHGCoa5LsAbvTTAeSQWW6fe1Ac7vg
C9OiOS2MyJjvQMe+PuH04IdAsy542YPW3fSjxgAjEL144IqWB7wbmcBxQP3G
7Rgay4rAmVb03Z4rdR304LauA+C4NqtC1rS6QH6wQQbGYVhVjckcJ6NBgoEb
gYBU49EHRYFvMIcgsDk9uGv8PQTO2oGmPaBZUAN0pho/kM+dtCgoUmfEyYRU
L605wyrAWaC4oaVtfXAuafpeCATEgiV5r50F8DDDPsy0kBH9YPVY1T3hQPII
R5APBoOUdCyb9iFu9klrsu6eogrgn2RUA1fOjb1r+/djLh0i0kdbIOpDz+nt
bKwoIFyf2PO15wBrA2XZvZDVmBqEQ2h6aA8G+rkHX4ErGCgUmDzCKixt1mvR
34MBj6E9QjM9Alkkbs3veoP/ihcfc0lMpQ7OAyeSHz+kESHzF7o1arpbklB2
qOJsdJyj+zSEFnZYjJ3tBj0tVgmje5AvWuI2cbpE5ZB5OC9COMbIjoAlmGmH
ytYJgTCasFVsu84iHbiOEeJ4YtjhvlKHDsWKZoYd20OrsYVF1YZGIZQOze4S
KjvYYeCQzsQ7PZoDdCRJ7hbZBYRGrAGwBOkjoPXAhF7egIJCFrG6xYJHSKr1
owVEfGABEPI9sMR3O9Kno7B7xzF6tZvYxGcKaUVIb6AHtnLvGmEP+hpWn4mz
Gdpz8MmiMXAB78ZkmbZ2kFhxG9oWeMZIgARMcKYFirw3yW4EpgEfzw3gERvc
Bow5MxyjBqxYVYEp67AAIr4KQgKTUHXsAagjpDUYrQlOgvjo2oa82Fs2aBTW
LRAxUFm8GgJ5jGHN6EA/hmVcAb22gCUSM/RBH7FAZSoodOEbPcallLOGPIH2
CA1CZSvbSXZE5Q7IZMS0K7JurCr5nyMHb3y0FXYPW2UAywOcGncIwQdb1uqu
7fCanwWP6qikdXUTiAd2pOtgn9b2IHqCTGSM70M8GB807GrMICProxZpWGvA
40AP3FqhWUc43RCmKllQsGZMYGygHdtyiEtgsxxg3Sjx0LWNlgNryKQz4oiG
LHCzpbfB/ZAX0MOgFzoLc+BbHmQd7QPQIlB8l+y3ISjSsxWiaVhDJDFXjN4F
/AqMNjAInUJyG3Pon8g1iR5cR9V7LFq5bUjRyFVYaw0t3O30FxobaZBwPIqs
R4RvfUiD+NUJx7DJ9Ja16JqwA2w7dLGTEXSkDtuDaXY1vgcyYKR9ICOhQwlZ
Yl+0Hmwu8IXGgHd62nBvhBFFvwZARImuRQm0P9CqWgPmIqnUBiICar8kO8GE
rd+ifWmYZAc4oXHbqzLWa8fTXq0xsCOfIpWDCSxwtmgAgwNbEZYIGebQBUJw
tUlkrDxYY8TTRC/gC0XZmYSAbXCAoy4hsbbOHNaO4naYFiRAWS1pswUW0Aa0
hA09MYUUdUnDKtgHYKgZcDWd/1wFIKPIBWjQYjhNn/T4lVsLBFc4qjMOIVai
BrQfOFMjDfjtrImzADLk9AEqxy4TvgVNHux5siNEBJsEU1NgJ7LaxDE6kA5O
T+la2IV7vyrsadjOTTeADHudgIcM6EScuEN6m+iBOHPUAkIGpeHdK46q2XIP
C/0WlkQb8gW7gH0hC9wzsZNAp2T91mAQ35OtYYe6zVEauMIkCRV1A9DKFXEF
UzVwBWwVZwfbF3OBDc+u+uF6OmpdX5FO9JoqtCjezSBPnN09LFIIOBYA5eOM
16DpbmKQN8Wug2JtZUKWMNk7sDLU2hD7iNW0aKfxy1uL22zLg0moa3FDOJT1
mLvSB4ZnDIJkaOlLMMCAcN21CZtjYMNWhXzZeHcG+MJ9BUp7xc61CZ3C2t5i
hxWdqH3RdUZhfYVVtqBet+QDMCxCZNgpYIXu0L0DDQD5WZEP6cA22BPYaDEs
iTU0XG9vhhRD764gd0OSXkBkDGfLaF/8BMd4cNsNsgMOkL/SN7aeYieBkI37
EeZkLRq6Q7YrVjlhsBPsaxldJ98a2Y3OIh5AT99b83UyhgVO0XVYfpDBY8VX
otiHTuzNd5vhXG31WsbQnO+4ThzO62Y/Wm4ti7B3jzUPrg1rm/kDKwSWbAFb
qr4ztq87kFYOc5I9sEJ3wvShMzAee0y7JAvLVnawuLo94unAtubxreFowG2G
bh+ae2dO8sQdQpNZ4PWAfGOw6R23pT2a4HVbMTzIm8EjyB8nY7nYF1v1wuv2
sBrN2axZf5v39F7WU+eqZ9kb3RofHMqNOsqfuMyympx9Vzft6PbRie/6iub1
5j7F1277jt81WHTptHs1xrNDcEaLsVPMDokb9wr4euBrIP8sagzcEjF7uSNU
4rN4aC1i3bYatX7Ndw2Krhu2HTT7rGsPQWGjpmoCx7RcGXc2mkbjkTGescLs
wJnMNa03IN3gHjCK5ivBckhZTboXRjWg4kbPVm1zED8aGrti1WBmhep3NvCh
hyA90gjvIB54FK9m2sFXdBnhBX5pQ3PfwyayDabr/VBr92HtGra+8JXYdlq7
5nDW2fkqKM0CXItYjfwzIoa8a/YHwaNL8gXnH21Am55R3S2H1fpq0oy/9511
IU8rYD2Ii958uwVH3gIR7r1mfdqLuglwzv0I+7Lcj9pxCLyGEdatEeSJbjV0
Y77m7zSba2iX6MqbNe76oA/Tzv6OvdRmhqYt+uTFufTa7gZa486cQxTX4u9O
qLGhXfd8drPtOTa0/44N1WbdnnV7ppNU7bBT9efrGWyknllreM7tt7Ovdau1
DvSmvxuHmuMAe/dqsFHmQWusRJePTd/uh8F3Z+E+9Jiv6mF9A1xMPtMF39lZ
o09ZTVrnQek2bNtouMp117I7lzLm2/VVzbXsbtC33fZ9Neizg73T1eXrqKYD
Fbr2uKpH9t3wcgRLGJZVNdb7swY/G7dpLGzm3/aBXfx2rHgh5Z90bavmNhjl
J83XLd3R2pAOfWCGBmtSlgLOCCiGaURdImpMWXisBbk7M5ra9769prwtaJT1
d0ttGGLO9U7fNm4NW4v78+7SIE/+dnTXrY4d/VFfQFPNjI0L5eNrWuI42qM1
XV+6M31hLuxVr924H0V640HVuq4SzcYD4PV5MPRwRv3dWHmpQQL0fXu9hdw/
mE4cGjPDnCyCQ99yd+bC0Kxmf2+3e9edSL1+7v/VhJH59RUljLCBVkoYYYdG
ZLVZF6AqfCdhRGM/SAwspwViae8lBrbjhlVIGOnPdyKdLTQMiJeIpyY2r22Y
VTqImJSrE+s9Rb0y51rLPzTqxOo6WB3MQAkiB2sQUxigBeCsTULNFCl2XaxB
vfMOTQAZ26mT+IC63s0w0qWhGQ2rma6C2N19HLdgFg2Cnhdqh3QEy1bvIeR5
quK3syxZ0e4OhjMdhpTWZouoC8WVDNXA4atwYE4KpUIir94Pd57TWsO0EwT4
7WyYpylg70tpC5hHt2aFeqPP+lVA/2p/4O5Ye7lzIhb7dn3gacHWHugrjMIa
dV3ROiZkoq8GsTlrxIa9U/QFe7Rb2qYPQIhVD4DHnx4OjTujyb6bEEO2cz31
D4Fr1rTvEOPt4N4E/xmq8f3RXj+NatGMxF2fGfzsTJiFpMglU5xMZsQZnU5n
vIMg75rVaw8i+XuvyZM1mvYCSkXtNkzHd8cQO+5Cex3a+gOorgkAQ7QC08wz
1499Nd65mh7DEFTBNlbf8p+85tocW7rbx0iTVr2P84GJF8DqMPZ2M6aT1vw6
FJpmz5o7ux10rOrlqtfUt7YSxL2FtoBBOOxEStJZGPUxpfIu8lCtt/AP99X4
8O2MQrEPt91g1BpTsFKzDx1Vn3av38nI+H0+Th7rr0vlpbrS5o1Xa3RuJ49O
2ASX68/9+mA+2ty379uK+zCbeOdfgLdUtTGNbnq+9mjMrcvX24Nz3zDbV23z
+zruGGPT3O2+9H+ckZHF4n8lKSPPSn+bl2H8Yl5GWitbZl1Q6J/SAJ7kvU66
rVQuXfenMuvzuL6sLnriJT9/x6/lIlTeTRlI10hpA+q1evW/P23gVNbAiSyB
NzkC387+C1kCb/Lrv51NrTu9a87c5bhtdMBYxkipXw4dbfpoB4P+yQz7FGl2
gDSBNmcu+K53ZwNnDq96s5eNfuiIDPtFIx7NRYbuqKoGnnN5lEPf3VI2W5+x
tasA+BSy6Mdb196p5u1ah5r5Mzn0kCSns+j/VA49DM48iz4gBKlCyABzqt8t
CyoulDn0tlBUR2oqVZUwxH9FWf5EVX47e0dZ/qmsw29nt1Z1XfVUo+NbgTHS
+gcjDO57sC9Na7xiNR3CsgMMgtEVKJXmWPVr7AH457vnsEvYFK92Veeh18a9
53SrrhLY/em6BVxje3M/GjWD9sQCHq01YIvW9WFNtyaO9t2OgJya6q1py/y9
gQ9AKDL4Ir3PyMIYXsLiMPBNU6D/ztZuwoa4vb7ti+zzrlHIujdavsEU7Mst
a0G92OqV7RgH4/b6+8N+vXBuv+L93XvwUudBDdZQ6DKj/SifPaR8dsyl4VEm
YTswevt112r6t3YzUuzqizKcRQOnFcBuYcsx0/t6+LIaTq97/f31nEVR04ua
1ZGid7FH387avQUDYg0StmgeJk5wq1uB7TRVNlzEncdbKNdWMGAD92mkdZs9
1dXGthEOVa32ZCmn84D/Pe1nlsO5E2huLdBcKyqjOcW99UJ9xWPufzn9d9Jc
k8/6L6b/9mfYJkr/pasmdPXkibNNZHR7TbU1UolRQwWsrRFbgRge8fetZUMs
qsYV0A1EwZqgPyCHYXeXWIXBQrBJlIJ7wWbAOqU52FanPnF0vLEBFtSlYUfi
xq/6aTqv/IUx7SkxxJDr+XNjYM2vYX5GC2YJtzolFE9sGPVRsPJVn3ASiNCt
6pm5YIprH9nf6RqIr9Tv+rZm9Q/uFEKtMXLYDsZ/TZ9HxjjqHh61zrczGIPj
ld6ioJVfd1vqYHzotrGjLVbzpx7UQ29e7zrNl4NVA+pTXfWx3dvbCzcGCT96
ICtTASnfms1A6c+N2AhhOC/cqV69vjRxmj+5elLEat/OcrSmaoTW+KUN0zL6
jtO99Nv6wdRu9hjpcnB7rUwi9mqz7atd0+tuc3voNQ3sQh0s7rf0x0dHvWNa
0O87kQY02wVufr1X3Kee0rWhgnrkgjOj2MTJhnotfvIH+gajjh/U+MGq4ow0
s9o9gOVjJlNph85uQUrNYL29bg2n0iAqY7IPitWoR6vzcaLOvode9VUf9ee1
UWPoPD90/a8Hn913lqxemyyrwxezYy3u74ffzqzXds/eKtvd9dbfb3Q205c3
Lw/7RO+8NF+jcbRubHkHsVNoLANhAr2cRmE59jrGOH8GgH0WqGiaJJuJnyEW
UU8pL4mZw6S85MjH/xpw+/R/D3J7P9mziNyq19eX/4cSPn8BukF8/QOg27ez
/8rlyGMnIV09yN2Eww2+Uf48dAOb/gOgG4n1vw7dvp11/wHQ7dvZr/k5fgzd
MJd/AHTD7v4DoBtdFfvr0I0SPv86dMO+/AOgG+byD4Bu4IB/PHT7kx65H2O4
b2fO/01XuGbGX8ZwGIVjsL+G4Uh2aX8Zw2Eu5O36ixju2xlQ3F/GcN/OgOL+
MobDKEWP208w3EPNuGLOtfGg6qB9o9c7NJrg7kfs7sCYWbNo3VeNIXg6xm5X
TadzgGJtWQcdHFyfWU33MLRjzw61lXvnX1k1dhhNv7464fppaLMHAP6F7hit
iD2ZXR9aTpkMbkgP5hcDnLg23q+/j6vXG66v3sN3x143U1uPq7vv9193evWe
fQ+H993oC6b+1e7eeNMae73d3H996Dy3v7Zd7XUFNgq+t6bDr6/39fGo3+7f
zth4tdQeFl86+6D9Rfk6uPGT9U3qdfv8Zzh4ZnwnDnacMgc7WljrzbtTcPD/
eZ+6La77U2JL6cI/+dSvBMeqzWENlBjaCjQm+dSbevsf4FNvg3IHBZ96s6d1
q8PIb307A8cmR9fUv/epdEKotvuLKEUOQBasiCRA2azTtxrdPnjz2xlmVDX3
17F+iF7t+fpBZ9HUZY3Fo8Yse/by6g96O1drMI/FHWClV0/Vw7G9xtzdDbTn
rXu73mFF4bbG1O7cnbOBV4sWrtN9Nedud9TaqeO5HvdmrDaaB7GlundGFcg3
7KiW3dkWri9CP+JcjPQCY3Z9MTwONAXNvn0tfezNS5zn/LHJOD4CLUFW+yqo
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
hZwdLaH0CA/S5fupVOP/C2k/aquRRgMA

-->

</rfc>

