<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain.
This document refers to the approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of credentials different from the pledge's IDevID for the registrar-agent when establishing a TLS connection to the domain registrar.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Extended Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additionally wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and or network technologies).
For this document the usage of HTTP is targeted as in BRSKI.
Alternatives may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
This transport independence is enabled by the independence of the exchanged data objects from a specific transport security.
These transport means may differ from, and are independent from, the ones used between the registrar-agent and the registrar.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied in the data exchange between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included into the "agent-provided-proximity-registrar-certificate" leaf of the PVR.
This enables the registrar to verify that it is the target registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection establishment with the domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the product-serial-number in the body, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data of the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVRs contains the assertion of "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR (prior-signed-voucher-request) in the "agent-provided-proximity-registrar-certificate" leaf and may assert in the voucher "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can provide the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" component of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher can then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA.</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_4"/> describes the status handling addresses the exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and an own LDevID(RegAgt) credential for the registrar domain.
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have a synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and an own registrar EE credential.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note that the registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="voucher-request-trigger-and-response"><name>Voucher Request trigger and response</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-voucher-request".</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Three parameters are provided in the JSON document that is posted:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JWS-object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, as it can only verify it once it has received the voucher.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It can be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JOSE object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an ietf-voucher-request-prm:agent-signed-data element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in general JWS serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error status code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="enrollment-request-trigger-and-response"><name>Enrollment Request trigger and response</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint "/.well-known/brski/pledge-enrollment-request".</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type: "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note that the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge is already implementing an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note also that <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credential to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx status code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error status codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for its operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-ztp-types" representation in JSON syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible, allowing a bulk bootstrapping of multiple pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Processing by the Registrar-Agent</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or multiple PVR and PER.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and an it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only a necessary precondition if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope of this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and infrastructure bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection with the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  general JWS serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  general JWS serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Response and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<t>After verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in general JWS serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry status handling (registrar-agent - domain registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
<section anchor="exchanges_uc2_5"><name>Request pledge status</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in general JWS serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization></organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
PU6ZoRPxePPhhtTjsLk0fFTWOYf0mQG4FCCPGhHDk4sZHJQR7fWQby1bs3no
JjrWyy7lVh+uf6kO4IM5588ExaxJIvMAHbxIhzn6ufMGw1RRGBrlVwL2n06u
RBYqUemnIOTshtBh4KwgN8kHFEn6tES5da+f7KTlFIPigNAfVlfwzQ6wvAlo
BQLV/G02GZb5FbxQDK4u05l1eudoNp3OarN7g1lViXkHd4uxBDjFH07eOVq/
+x0KUyD7KYyUpMa96qoAtvTLlZVjET4/y6YydlcTekzkmxOBgH5SXdtOB/HE
z9LBFSyQdctjVQH+lbPxKltapRLU4hFVa28WtPjyySZszgkbcJ6iLXmUVpcU
ZMGU1GBGiD8iTNzrkda+Smf4yBoCAmT+tTBFMPdAUwzJpbwxailVbSm/vdJ3
QFb8RgGjEN7GiUZHWTGJe3/yfzBpY28ruff3e2jzV1XgpzgrjFiDJUmCl/7U
CVBWKJJiJbt9Pv3x++Pxi+9/vB6+OSh+/H6/Hoxfvx2+ef3rcGfjZjBefzwc
P9n4YfNyNMj3H8Pzl4MHB6PB5Hh6tvnw7538MH9++ePm6xk//eRh+mZjOvz2
Kn+x8/zXH79/Pv3hzU19Nnld/zB+fbv/S5G/3N27ffnrdxsHvwweHp7sV/vj
R3/vXJ+ND0b47cGbJztnD15dv5oM/3mwU1+dvioefDfaK1+/ma7/+Ov6k/38
Jv/hwfPRD98fj37c2bg+gzHt/7J/8/KX/b936pe7g/rl6fNXL3e/e3ywe/H4
4PSHGfz/1zc59vNs8uObR+svvn96e/bgx+mP37y+4t8vp2dvRuvZycbtj2+G
f+9MBw+Ob3+Adfhh8/XtcAfav9p4fvJqfz29Otj97vVo+uP6swcnr54//XF9
9O13ry9/PPj1ef7DaHrw3Zsn3363fvD2eOPg752Dg93RznevNnZPXx2/zvZe
P/7u9fOdH9cfvfnu6tn16auD8uXp6+Oz0Y+Pf3g92Dj75uWvp99f7r3ee/by
u/Hw8PXV86c/rG/8vbNzfPXo5se9IbRw/Pi7V49MCwenr55Xr8Zvf3m58Xzv
1evjpz+++vHBy29HB8d7rx9Bj78M1x/98/j0+OD13vTvncvjyeAmu9rYO/4e
nvjm4MHpePrsYG/j1cn42cHx7vHD4++nT19dPZ+cwprCLA6+26zeHrx+Nns9
mV6+/vV19cOvOKP/Xdy3NjeKZVt+z1+RUf2laqIyG5DkKt+JmYiSDMjYIOvA
OUcwOdEBQplIgERKsvW4cf/7rH0APZzO7KrumZiI7s62LcF57L32Wvs8NtrA
x3zftmGBNtjBsp8zXXSZxvpCa57AdTy176elM2HL/jwxq41cOJtZyT69u/fL
bBHnToxve0xzelOeBkEw7o1lajHNuzv9PEkt3zR3PrcG4xLtyTcvcTDtJbrz
6d3aP4oIFjWOjpng+n33sSOOrmRjIYvYN3UtMbZBNLQe0foyKdLjuByvp8Jx
PT31ozIqhLH99K4Hu50nWlX6cr9JJ84iDu711OitYn4rx1r6NZpUA4/rA9dM
+64QuV9YTGj6gPP0btzxMPvWp3eC5U4HvRlERnrA7Fn4mYUau2em9VTPZsZG
JuxlkVk0d2PtXkPvAtiSKYr7HUb+0zuLTdKxZxZ5aOgyKa0wWPQXCY96gZX5
ZB98IhZuud+ERSrhqT1XFvn4KHRZZMFYy579cv/pXYxP3ERm9hDbXuUG/Via
3V1Q5vqstCZiyWKMx01gpQ+uud96cp+jjY9o43Iqs3Wc34459cjEXIww7uY4
j/oxd7qJzQaxVe1dUxger1y36B+E5mkz4RqxySJxtHpj7fcXXlp6uOzfeWS7
mc/Z0pdZP7C8h7BM3aRMV2GJcTj281BPbSGil0cjHQaLP14QMW58QCs3docY
FumLbO368OkLv/WqyOiR1+fw/ozQIpoUD6lehMnQm7t5tPZl9RKLKkzM7QKW
Fwmp7QMBn7and07MSvYULqydFF7Iy2ouipUm8ygXhtjynHnSZl/DgvVdjHBk
b+dMq3QhMj/O9e1sKD69i5LAmoRBvystsY3tre9a0U7c3dPoyrhTBckki4UW
PUz1dA1/zhNe7bjOYvjZOrnzuOj0P717iEy+Z0KEPO9lybAvhSV8kffWLhfR
rKieeC6kK9iaF84IbcYTspFfOmtv4kXuwjqGHD16YKYeinIrZznaYOxXeIcY
TfoBegGLExuvoCdEXnzkhlxWEk8AIggnnqRVeHQ2SQmr27JFP5fwz7BTOED1
49QoFr5ZGcAcGZdsiDc4cXlbwco2vuFtWZEJvG0cCrGDAe7iIdqycIUjI5P5
sfAsP/d4Mum/hHIfY4bXkRVJYUaxKPerUDIZFKkAKkmhpZ4nvAnGJRNku2HE
pzp6sUUvRGJVowieLUQ6SWxdcK04+rI3mlqrgyez3Leiniw8x8uLddippGtk
Q66hLdK1UnscsDnrZIEo850n2cRfFpyV+z03ejEvCi6BAPxoMbTRlnnPoie6
8nc9xNzFNqzuMDNvgyQorKDUfbRlkg5FIBaFjVbHs1JIWbAoKV1NBP0RRlpO
TX0OVFtxkcnEsERkAXc5fuP7sruP7Ig9BRrFxDZWHmOZPj9KiqTj+ajYzANM
93gBn9O8vhxaSyCEA7T49G7pwy4S4FGgs74PjI061io2YCeWxeC/X8f+1uO5
3mHCihj+w/nWHE/6GD/x4Er3kJDtAgl6N4Ewd6nmdSRnEp5OCOUL24I37D1e
ph1Wps0TmDkOCoBpNnItcU9xgAVoiyHzVE51cwe0ugfGjAJZOYg1IOFAc8vc
4WdvVsDPtZ43y4tOkDPHReThQd+DH90IA+PSH3HdD4DvXCGgxXxEj6nZKwRf
7ck2U/hwsKw8fKsz7rRtykzEUB7CIxMT+OKHndRun8BM1oc1xcJgO0QrfyaK
0EeUcYtIh2UOZK4PAp4OZhMLdqJpI24tGfkRcPz0mw7jWd81i/44T7vJ0BlF
5eoYC2fuHW4HXN7m4rDRMfUvQadaPRjo+bDYpwJ+5ASH28lskUaJPj3Cw0y0
wZ7ZohNYUTnLvYPHewa7M4+ytOxwkZbT0np+6Ix7SYdFnkjd2FxhdOOiuhlj
LmC/w3EAKzIZ2nT/kuqWRfbg2ymwOVIR2Lc8Dz3AmKTLceEYiT4Ga0OELdwy
NAJTsNjiHd/Mvj50oodHY9zxEeUjU8Xoex4wC7MNGMp2M7zR72SbqWkaIxuj
yKNP7wAVmUjLniPuIpZ2Ugs4q6JVgkiGn+8ivXB8zM0Y0U5g3FKt6IyNNPL5
9kXmxU28ANapVjPL6+Nfn/NiidntecsMI8heODiMv/SWiXnruiLq+mb6MtVZ
b2qKPS+jG9eyDI/8yOLDUIPdOpx7cibvD2xR3IiF9zwK+Dox9ssojx4iveJC
EzeezYKQh8d4WPlc3h/lUgzcRYEeNR7o+bwYzHJ2N9askBkptRysB+0UWRjn
2e6NmIhRr/ouJ6v7N+2WjQgxzUu7lYVQcRrfslItU74j7G0H/m7NwNIwdk/M
1A7CyBZBrn+NO+mTMOHTXVBItP7WDAJnEufmGvDupZpgjX8/oieI/kL4C4u4
A3GFEXggc4fpXT2f8Gnmow28YJm0nA2esEy1aNk8wWSm2RPUq0VfAHNvQs73
aVENxdJjYAMdAUwSJjxgGZ5RCbh1hVLemBhSDisQbMOO/TLVx0fXuC1mxWqf
ltt7Lp0CfABqIpGr9bi8lQ96ZU+NahEVVsct2FOsVePYvF0HRtQPl7wXFu5+
KqpqNCwyJsJuAq7uG7sXr4C9hGEZdQNDH8RLx5+WXpgcnSjVK8yD1/iOgzZZ
5cgUdxgj4nH3jxohgtX6Hnjda+8ba853vI+RxQP3rHyqjV/i+e/rSP/y4hlg
zQN/KRb+4DZM5BveJ+8NFhTzpMi0ZL6toBMckd92Z3fjl+myKF0DbH5CKKW8
zbiN4cNfMe5ksybXrX6qO4pjcbs3cIfTPUZZn5YZuHrVSY3oKzBpyeyimtng
u0LyPcj5qhfxbi82blcIcCLOrQr97nhW3kmGrCuMYpxqW83lq15SVr0oZ6Pk
TngpF+a4hB9tZ9Y99FuGPm+HfOKIJ99JP0+0b6/mVBLzf/3n1Z2c553+pD27
nnTP0W++5RT9Qu610Q+xL+1LuyfjJeGS3k80Yt6AhAaznT60FKmN7rhT9f1W
w4iCj+XWRlT0xaTFrtpfZ+aWNM0zNz690+Gxq12wjBZJbnXZsuqL/ELD2Nvd
1Ha2UfMNgdgHDWMFOayHsMNizszEU0w5SUfwFIw+i2Zmz07wvlm50eHBa3jw
V3BBRD9wUZ0JoP3XceF5fOJ1xnobsT+9Qyu1aiAEs0Qdq0hxWEDUTiC8LWJ4
7A77u7DUc2bfH/1l+irmR1aKHt3i02hV3jNF4Ixm5VSHR0MNRuzCo3XfsCae
7AWJBCYs+tAXbJvYVQxPhi5DOPvzyuwIRWYXGS+9AaLXgnERpsf0ICTMLYPt
Df3c0v07touPzPHuHCOE7pvqfA/94jLTuwvsrYyHCESL+30yiTJf84xg8uUg
/W0Q4CkpG9lRmWq7g9tZHYVZyHEBZWYxYLh+N9VOSkzpMCbTwXiRTXxruo9t
98AmDPoU1B2qyP2+CrJ/1zF3DE8cjFqtN0kxYPog5JbNCsuNcwjGG27tXri+
e4H36DGwKcYII1QiWqQLKQlV9CZyw6lgQ01O4Mg0KEceDVIN9nIXcFNjmrkX
kpnA68FkcNvhXHn1faS9yfKWQZ71melYY1kM0gByvAPd6E41RJs7cQyCPzqu
+WWNdxxmvCe8Mn2c5fsnzIs9E44fGPv9lGdVpBVLaXpbP9/zGXokNmk+Pkzt
20evZF2v3O3RFn0mdQ59QNGphK7MwH5Dt3BeAo3f3hfa5n6JKE2ZkSVljdAW
lTeChjuCFR0To6uYbmJPKTtk8eO97s2d2zfv2T3hwU9Lff3w3Fml2+Trh/X9
07Awtd/7/MMX/7P28mDdbef8sTc2Fr8f9H55N3lZdP0nHm6mi3T+DEq5D63f
/OMmNQeDz9XT/PEfi8dkN57b+ri5s/eqFkyTEqxTdE1CsMkHfp5/UYtL1/fN
/ih3+N0rZy9zj/E6Wc0pd3/eQf7tw9gpEXn+1Haltpk3CUi6zoNyws3D1AE1
lZP9vFqlFxc3UdY4prsSp6tVPks/vqeqtldLOtv2aednxK8qB5xWkn5GL39p
np7Fm3dJvZOyqaT8+oD/6SDlUu20Ux8+X9v/+tPvf/6pbuNPv9RfVGV6d82e
7M+r9S5eN2cJts3ZzG/Kx1wnY8+P/qYfjPpxTtJeN+TiDX8yPXtd7bndtqfy
yc1C+YY631782dwRjTH56Ud3+/2/zfv+qzlfeHmb9f03cr6f3rVZ3yKPJlEV
DfRq2vF0tIGeOhgrFXrbFyLqp1w7Bv7vvWCwDeIgQoT1nhCTeTL49G7zMl5m
q+lRMfrnxOgtIp8yweIF7FF/1J1OvBivI1N/8DSHPejia2pPb5/ozcv+IZa3
h8cJetRmlIykIxaxLfBbp5hORDHtjKk9xYxXHSmgjQyojutciD21CpEAiS1P
aNHOLSo7Mm/n7qQfcT3z49KRcsEo6zSJpO5Tviayq7kwzYPMpzuwGRl3wF47
2dcQ1Fes8QTKXGVMg0629S6eAH2URnGe70LBe1PL28a25SXWai9z4c3s8SFY
sidhOSsodDtFnKuseOhkYpKZ3OjhW6k1HaYTUY6PkZk+pCJ65oXKfOlcT3dp
aQmXC1/a+1Ek99bMYtupjaeMwEp5k3fiYuFQ5uspzMVmCvUFvQYetDelrEai
ZBuxFLFvRk888PxpEdliGXkuWER05EX2IPTwCMYwSUpwEx1PQKsTq/LAZo5C
j1bccOypyTxpVVUoaBS8ydSscvfO2nOVRgwKZwj9AcnkPILYUe6My/zWZ4Z7
EPbelyWxKjGRw36IJ2xmeILL03mCn4OCDQJB7MpfCIxkLwsxV1Ay29TUJ4yv
dOpFYnhDv8jmiK8bMamggdNNZG8XaiZkbyOL1EruEGUmwqwmkUh9aFq0ocpm
efQoAkv6iPts6fBYd3xR6t1UB8vLU4xDT3Jj+xByfTgzCyFAoKsXYWx0rwCr
s6q5bzpPsPYF+K3NJinibhYEgivuyEll8UgGkHD4jPSLlHJqk6D89G5vC91b
B5TBtyJ0O9WYwTa8iHiSY17yKOZ6sZ3Z1iix9xOJXsXifucGkWRl9oLPxQxt
cdaucOZCd8Zotebr1gbq0oOxBeGkkq6erinHmAjMqqxierrIGWnNvVhY9rRw
1h7ZrhST/g28Zu/Z1todZkGsR1KU+4exnm4E2ojZdMKcw+rgFRgvVkRBKHWW
ar2QFZ5k4CLVE70rNSwbmily0Ru0AdxLbOKhxxOzuhc2eiadECOLkRZdUUSj
1KI2eD6DlxDr3K+g12CTTpBg2MI82oFRy/Ao8ATRC4/eKtCjtVxYEn/vhDyK
vSJ6DoqqiI/iCVpcktVF1MKC8V4WgDdLCyrCTLPEcmg2c7Rh7S8daCfMRR45
qS7WmBuPTfo6VEI3FOaeRjfyRCACnosHYVVDl2/BRiudS30TC/RiiRFe9h/D
owOGLdaJxebQ+HuJufT1QmK0g/iI0Q0CLl5cke9pfFjhCEESvwgPPE/RBucJ
/44E8Iej9Szne9jICpa4Qdvg2+DkaIuIMQ4Td1IV4KsHjEMcW9EwCCx4RfQY
GvsRxmEztQgdKl8APRI9gjdkAfDFw+cwTp/eMRkB7vCJMMyh2C2Hw2bxhNUO
FrfzhbOeWWkBu9akBIIZYsOWkLlm9RVt38EbvzLY7lYAJTVh6F2h6c88sGBR
1QRo5aTwRBe9c43sRubRCkplCwsIhBmtA1nJtCgkfpKEL6Ij88zGt+7HOeOJ
Jbo8+APjXll+3pNowwEaqMuAOdBnZNNSFPBcoEeQ3wYMc8fJj2JumLukU9GM
P6ItLzNR3WOmySuGQpJXCPIKERt7yFQRc2CNK7fcFdUB9vPALfiRmJrehPLe
vNw3fgEVJbedei4i2HE6Z/BdQlEX8S41tz5sOkIv7UB3JrMhngJ8KbrA2wdY
9QY9ymKt2ku5lyHhSJ5mLO9VfPHHHnMlYyvN4qOlRTwbydIZAm1jGl32BPDe
S9sZ4imYC/XEbkJtmKQZsI+HRbaKLTZxA2j7Yd8OudBi637nAX+AsneSFjty
vOs+ssRcdLyuhG8zPbXlUoiEI3LLfeQWkSXLbQDfttEGP9Ap6wav0KMh5stO
MS7V0MOsuWWGwU+PsBw1B/iEjzZBQMJW89SH7RwEUBIWKZJjP4oNFvDAsZnh
3cdQ2D1fFEUPWC9TKGh34rGk3E8CzrVUr6TMex7aBITa74Qh1sAXgSirRfR5
y/kKi5jHGsVG4EcfiGhD4SNyC4psq7GOXsAeXLnXJHwnls6EL6OJOFqPHE/0
CmubIl7BGu6FspdQsnXaKWImMxHKre0WBdT0dpSYvWO48HLo9+foTkRCOAE8
cCQM6x4WKVx7f8N1jCN0ugNPy0bQ2+AOiMSIFn5gzdmybwbwfsQb2y9vgU99
IxTRDsrSSu2tJzpZLOV2FRiI2xOyF2A9euEN0AYpl4j0GrGQdIeouvZLYJzt
dSKO0dYrC+zDB0KtaFWM68JOhpafkL2EotzosoiADmkG3z6Gy2ogbXM/HTqS
PDMyIzktBGw6811edYWedrkOpJ94xG8yDl6H2G+Jr+MlPK2AL/NoBK5ywxb9
WMhsAl9/wHhsYgt+xoHU9HuDDVmekZ2N4DU7l3B3zXMa60jDb/LY1I7jQkSJ
nb1IEUUYp3Vqq7nowWZWiWEe/CJa+DZDjIxgP/xAyJAuEk6zDSjVtB207oTi
EcYBbCSCX0XZrIheaCTHerinNQ3M3YQi3gzYAwudJOQBR3CFgSjNPRgf/KIK
gJJyiqg7Et5c5KujKJhNeXewsAAz8URzGQoG/gIMxNslKWz8DihZVIg3Jvrt
YCTT58hKPUR6QwT38KsITywYMCfkCwt4AnZipQsXuh7s44GsjjjSbQSGIwO5
R3s9O6JoMel3YfWYXVqZo5VvJ47klm6W2CLaYGSrPaKNJi2KNvAA4EvvyME+
pnp+nGIkk0m2F0Ffppq+mZoRzeYqLKIHX0RbN+gH8Cst0LMBoUk8rMRMxWnY
w8MUcRp2Sr3A+yPM5ngfDb0McXsFv/SnGEmZbyWQnjxzBN9eezwVLjFWRJL0
QQrrWRZq7W4FrgC/8tAGWu9jE8S+Hb6BNrA5PDPEEyjqAuNSibkEW7eimu96
/FYickeYTT+gNi1Zwco97Dj1Zsoe0hxsNoIvx4i6z+OiP0FsIHuJ4RV2DL5b
+OBxYP1sMEXECgp4ZlB85SUl4hmY4G0GHjcUBrDGdvBGaJAJO8Ia1rMSM2EC
f8A8MoeeEOvhDu8EOjDCtQfyiqC8RXSptDDwcqDk3i8K4S4wuxhpRNF79NSL
i2ilxqU7JVsdMkSTTGI2weNSGd0x35XsECD+4AkH4CwXpauhF+vaK+CZ9g5e
LAQxsgh8ViDeVCKEjQqrWBM6MN1xMNKI7tZ2ZmbwbWcNXAZKRpvIAv8Fo5W0
Zp7rmFva2hAfC/D+6EFa8NlJlkHpHLih9dDybWxliPzVEE/cAaltUWYZWD0H
H164toDFZpME6F0xcMbB1KLMKdRNedsTZQ+zSOgQRVAQa0SZroT2mEEfJSat
qTtdWlOHFcyBWH6I0d2Crwo+zm8Z7MPB3OiwhSHPt0J02DAs93Ah8Be7ADcQ
HbzRBkJtgklKPBCUuh+n6FHBoagEIv0Q+PIAzxRymQmRd3eEFtNc5wHYaKxX
mcDIk5rAU3PEbV9oAp6ZbmhcUop5obAy8DjPlmUmXUSygEZWd6Dyth4L2A1s
FFwy3KuI13AHAS8APk9opiNEbuBwiXgzqRCPrLUw9g+IshtgmhR5RTskfFjD
hvwKNkwoGeNvW8RpMIFKEH+pHoDUB8T+CDZsR3cW/KqyErKHOzGGBeYp0IFP
wBAFsXexgwpb074HMP8wBDol8AB4FsU8E7ze1uW0dExYGqy+ehRWepyB94qC
rEGsgJIWIv9XjCNZB/kRnkwzgXGRFD1IW0zBPv2CeWjlnQz6wpUOLCqaw9cb
hKpsFa8KR6c2YJQtH6MgKNpfj4OR0TjEPrwisRoGpGw65UG59d2aU+FzjiUL
j9hHwGEvG13oDKgIhDKB1HqGfvODIBZW7nkY9HfEgMAGPLEkhNqOJMWrnBEP
XIN9SGJBzpp8k5lWR9xBtRjUK6AkZVRhUUBJWp3DbIOtl9WIg9fFpgeCCO0r
iQdWJs1REcCKx8LQ9mkpqE2UeX+KaDXMikibZK5Y6WEHY2KFh9mdI5nZ64SL
/nEmPWtqbwPW+fTuC+1WwTh4G74Q0ErZBgrKD0UBTl0VQGpwSSFliTjNM0Rd
NgFr9zGOWyBo5t5RzAd/geLXN34O1U96GTbpW+kE75gLrYeo25OBqe2Z0gW9
gJQqcQdXAuWPisV1KYfdI15PSkJhHMQpsVNJXBI6kcZBJLTjxlR+ZpNFwv99
t3BoLnPSRwl6lFL+gHO1UgJPw2ziaROZT3VeOlbSKUib+BFPfdpxMzN7c3wG
kR+zrWMc8UZlLxxIsJpZ3g3UcOAO0x700Qj2AV3gUeR/BDr4tCcHkR/6CIgF
jItJFxTgwzZ0Jrwxgy4UeMLtws17UFIM3g5GLKDIwRdUlKXoUmKcLGh+tBXo
AL+qYA3VGqytqxQfWlnlLnyXVH+sadBoAuoG9mDsPbL6qeUQSgZATZnoFnnm
HLPtB2ouwYfBpfo5MO4Q5iwGh1r7UHmY7TVXXsGgNB1CcjASsDJYZHIHnVhE
T2Gpr+CZ8FwvTyzSsNzojYRNO4fgQNDegvg2uCZ6B6S6P1BWgGs90rAScVwi
8r+4BfRannrw9WGokW4UhWdD/2A2oTTBgBDlNsStKd5AH+2mWm8jlxZPiojw
Bhyq+OovGOVfiNVrIRiZHo5JseTOJMBs+5bYcER+Ue4MKQQUO9pVZIGySGAc
g2dOh55ITAfyOd3QvpUpZvpWuORZgaPYKC+gsEQFS68e4nYkeU8pC9Jssryd
ULwKeZYrpM91IaCnrTVGiryd9iJmM0Jt8mkdXldkC8YrImPAl8imPV6Y/St8
meWOwhd9BCSaQO1Kccw1whffcIHD6QL4IsKyNwiAWDz3PMQj0rI7tAGs38P4
RZR/sQX4i4f4AmYoMw7+ImaWWI84lIWg7IkOiyJ7SjEOFSEUkN5po80OSI+h
s9aS9LTHDHBJnfWhnTeSOLXZE8SImQ5MBY/AvJDSHBAXHS8EsXraoeUj4oWs
zDyXckGM8gtAAVg/1K4Gq+ZAKLQUUXbCKPJTPg+MA1yUrGGiWFkhNrTHCzHT
o/zLFig53vMlIwXOoY9iMEFSmh58/Rhy3ksIZwugpIRN5ymbgVMpXBZVQFyU
8i+UwcH8yyzkJUWLyAaXnCcCOGxourQoF5ZRtAEjRC8L8gbgT+7E0JM7aLpN
QPFoEhewD1ieZ1XD2TANwMKAgvuHoAC+g+/DMwNihmgP5FXluVYFi2QPKT5F
yjQGSoF/IFqkIv0a5OnczUVP6QJofOhGYh+PhLPTQnkmlERFOcPd2KC4DuAY
9ke0jlltpnoFlR8VsDQtMolZhDtYOTFFyn1gdu+PeMIc7Qt5h/K594dgUixY
p5/BAqMZ5V9gceCkmuigDXZsOTwZFogWFQxov0kpwkPtMkA4VHCcGp4Fe5rD
Oghv1q4FzyT+UkCj9qI7Lw4M534MvQa1mwEF2AwgEZTZPO70uYQ2CfR04i+i
AL4MjMsG4GBg9bfMlWqtGdxIWA7ZQ83CCt5T0bPwEBIqh+I204GhndQHCwuE
Yq+IFYVH+RdR519C4UiK/fC0h8jWGdjGWtYY9wgkH/i1Z05irc3G8R3aQBlB
SRGPK9zlS4E2ZAGQKQd/gZ/tyaII4wa8BBNY9p98jBOQOgfGffWpF7wH/qXv
hGXdEGJWUJqsQ6q/tgdBivwB9uOT7/pLFiN6TKBd1zMwQ770wIehljlYPwI3
X1J2Fm2ZACXjKVqI2OezPDxgJHUgtXAxV0BqITTKQ6Vf2dILElPvBbQbluLV
MiPuMFH4wlKD/CJCM8ChwGd9YD20SQaEknwJHW0xEdtVAes/CBtKBkwyhmfi
CZ0gcNiM8t7PpIUS4WDUt/nU8IaC0KGoQBuyFeVz2RL8bQldCeYTm/rXZIgY
2cnA6nXKY0EvAaWANMWNsOmiEe3g55hGzA8iVhcobo4XfTAgS4ZoU0zZ2cCC
dgE3uHMegGRrTwJVKO+N2D/dT6H64VmE9T7mAhErPKR3fXhmFNG4ccF3YCNx
YqcdXxadmHYw2r15wsNdhDnKHhLbQ7iMJm7Hq0Ite0jVPtUqJx19sQN4hBaA
o6cbbjv3AXqIN1AUtmmFA/hO0QNthHaV8IIN6WelNUgpUBwut6Q07snGY4qh
igmILvS0k4IRkdU5hBek+vrQz9ZIIA5rwNuCsveIT7mHGCFuQigHYSOCgXdg
ZDMeWDaiCbVAUs7DuQd2gWPzvaQ2nNhEi/16h7BfZQegI5NlfwK8FfDUMKDc
fJAfBbBuqofS2vpLx8fcBBR/gILb1ARqWs4RcXikZhuIFRtjRA9n5FveMy8t
cCvnBYpsJwzK78ql2im9oSwARnSIJ1DmvANb3igvyLewMIwDxoV43UiQr6OP
eUqZrC21BRYlWVX3oqKcsycKq0u5jIQyxstMrUFAadiIP1C/kKzkVzYUuuFJ
eAVXeW/EIq7NoPrA9KAkwdvAgOARE0QNij8djCQ0PNQMeBzUj0nsI6a8lKAs
QeUHyo/q6HGbMw1zBasGP7L8BTjRsd8NA+sB4xCCnSK6OE9qJsB/fWg2YF5A
eal6PUBgpBB/4KuMlFQ9Dh13T2oHmns9At4ITe/SygtlrflEtTkkjU/xinJB
lOmkLD2sz9TR6oIntksZUGC/MIFxlO8lJpBzg3bOgI1o6G0hKBeCeEQzATXR
4UZFODJR+f4CWoR6aFXET8imLVphoZwz/g6KQNoVeKNzytHnakWKOAPUpNiq
/L9BcTmiXT5rwn7fdPaI7ODY6YQv0Bt7D8yz4kSvwMkIuXsHqB2bjgo4NkaS
8lIBZZWY8BBfKloNeiJuKUphuSJDPLKgfjn+Dsu960s3j0DH9jEY9ZrW1Rhl
+BDqIy/VgcyFmIBD6HjnyLWoFxnh7pgvrF1qEd54BXjCTbjwdoIy5xYUPOJ0
tg71aMdgD1DiZA8WYX+sOzabVDw2oGDKLdkLeQVYWRUiemAUrG1sFQKe/DWi
3KHtWyxMLI/Wag7glnbIe5Qb48KMNqSXpIACF14kipUB3MHsO1ue7zl5QWRy
XQJfxDC1PH9Wpt3aL8RWLB1agxiDW/ljHX4Gm8VcECsj+4CNM6hh6KWF9QD1
vKYIC3ZakGYVMa2Ggcflrl6tAlmtZ1YxATp4GElNsXjMtqT4dBRr8LpcWh6t
QGSUr4soDmP+I+rFAr0iBm9THIbyxGyKjrB7Ow4Eg/1IUjtg2AyIJsi+KKoS
r6sGrBTQ8BkpbDBDRHYrtYJAeK5iq6R2aI2zgtohhrz3KO/goSFnToVxUawK
fqGyIeArw9S+ZcRvoZdiWtOamehF4TzBMsHyPYxD5ak10gJa0yDdQHkpYfaA
Z2k+gyfCMwuF4vDEgFhXrsMzx5pobJq0CvEZkbMHzxZDfC7z4UcO2ATUrAjh
F7eUhT5E+EZim3u5hKrrMD8S6cgHt5mZt3NB64u2tncNYccmeyJrEEsV1eps
a8PStT0UVxjbt7Q+MBFQNlPde5aF8FhB65/gQoa7S4YCMTT6yoP+mri3N8FI
5UCgEO/o0bp9ctePBGYzklvKAtxP7cIDsu+EKUbAF0KHyC3rkxiY25D0UUXr
jTugwzrm+zufTm8ZTJeUtZfeVsjiKeaVDh73ENiMB0v4tuVUoe7uZ8KT4xxM
kVZzOwFFrHyPOAMFmt8f+LFPLHWYkJ0CTxD5XzCSsFlvDuuPwNpeKAMGjTeR
Zu8r5et0f2ozAR04EQIRKvAo52NhDphbVB2hVN2Xw9TUo6RkpKUXUD+BvyhC
efdHc84Pc/TWSb9X5/zyG/z87Aaudn3Oj3Z3dLcholp9jk8e6r3fLq/3fk/l
5d7vYhvd0ay+vff7gfbt/bt7v/2Ich52pJ/3fiOUqL3fgmdyVlqWOyHGTBr3
vBc8/uYcBdpy0+wGv/HV3tP8AGbMXLXXlDzQ7P3zveDAl9e7wV/vBf9m5yiH
homGfTp32INdPRA7XB3EEvNq/rUzfYxOHOS9Ml54FcWj+86j5rDEYJOHI2SD
vH2alV8wB4U2m1g6z4unRz298fTiRRy9KtXYwtWibjRJXVFGN+POvR7AGyPT
DbwYkWTuGVD+srtO74qX1IL01/YrKJmv8O0B5qLvNfs8GZB6PL/cf4l41I/y
Zqc2UFGdbTTSAV9GL+LOorh6iBaRy4S1EkF679urdZqvXqK71JnlVl6f+aNj
l54pMNsWacAbvPNxZu934yDshhhHVkCiWMJI8oJ7hdXBXNXnchb9zTinn72l
RDwqHjE3g3FhCd+0Opjtt/eCa2ovOPNlunCXuTGzb58IWcfl/mEKD4C3abu9
WGb3zLg9imGxYxPLj5arHZ+EGuLgOIXOHGsFA2vshQvHHtH+D6Pb8/ztC7h4
qXZoLGXBJmyy0iLLy9jCW80KhyEOxym/P4yEWe+wUudlnRva3TsW2fDivKwl
icF/9Yd9c8y3dGJyH9vbr4HepzNHfdpX8ufOMBCv+77dml3Yx4XdgiXWZxjU
mQXfVp7DSdurkxTX5yjqU01r/MzZJPOACMBD5rlF+p2TVnSg6eKs1b940oq8
8eKs1eVJqwnawGFVixMqAcWuUIrrg/EyHY1hu1YfPHro2lFH3LnHxBA3cmEZ
sZaxsBRaJJ1tPN8OEj2kNYBjXHoln0wPmLq1X/RXgbF9ijC61jwNijk/WntZ
5t2ZtCyxyF6iifOYDH43MAfzaJk9Jdz5Co14CPXsxS2KDlRqn2uN59AcAVvD
LuMeZjvtc/7lhRBhzL/rfXfj/LXvkTeS9wlEVMjwGy7ZkQ1uvz4etks5+L0T
as5Divj4qGfb+OR9Z98LF5E1QjxynuWQPT8YBdpTyKCTdb3B7WEGDhRNCq/2
tuIRHNeZlasdnYjwOQs4/sV8ObFpjRP06H6XHq3RuCMO0Mpdf5l2orK68YzU
jGXRjXVIQKsfyEVRBItinRjZCLTw61gW1ngy1WSQbtIhZnoSi37H74z3iHfP
8bIomdnbeFzXmcolQFcvvDtJPdZSNi1o17V++3n87RGL9/+rrhJzecTijZMV
5e0NnawQE+vqZAUUUBEMhUO+3Z6teHWyAor3T5wOb86Gf3r3ndPhw6ofXJys
ACrVZ5rBBmDbhTqfbt7yMdgkZfTBQMD6XA3RrbTs9Ngn1dXH+NBuIzpJcUSU
oz11Np9kFjDXb0/NJ5p+Fx8RpzDjPYqo4FV7RAq9yyzWD8y2F543zqMRGMoQ
rNqF3RzbJwRcB/dpT6zD+uoT69yZAOdkXFpDsQTo4ROweql6IVMBZHoOSzpP
UvXG+T6W9rY9G7UkHvNnzkaNjZkVGeNJtBfD1R6MsUp5bxJbGTDaW9Me0X7P
06x7HzQh1bPKX/QrxvewXKgY23oe8+6Oy94kEMXTZPD7bqwxC/FzjdjxEi6n
Xcm3+xgxknXBHSXXUh4visfAuO2FnfShwRjyHdoZY55OwaG9jEcDLj2TUDZQ
/o1Ie8+DrPFvZSsDD0j56gRgc/7P6dD5P0ifpZzcHwI72ieGdeeTb9uepe46
2PplvsY4xFPJgngiZApWxjWzExjZI1+aR8k9hw2zZ27qXrLsh7AjPi36DymN
ywQMuWDifu+KfheM/fnh2L+bWt59HDj7qNOfyMEpLu3quCS21/c4fHo33UV8
r/uD7eVNDn/xHodP7968yeEv3uMAhEBcMsHUobE0cLoAHpZX9T0OvPWTKy95
w1M/vfuRr/5ZT4VPX/jqX+N4iCZGrLN7Oq+SscQaH1mePbh0qD6YrkXHuw+M
+50QeLoGmzanUEfiETHxK0R2172Lpo+6t5CBGPtlMU/RlvRemPdrVuxeMFpf
I+hB30x7rigep8OUovoCaqsXyspHW0201WnO2VjnczbgVN5YFMp2oQMYMMWM
mtOt3ASXsHYvGBd16sbnwhsv+u1p3CUX6aA+70dPqU/8semjUU1VPMI3PcOr
z/zh/0tb//oWz8HIP4yB9BTd1Ok7bWaZxwetcDGyY38CD7hj85FIQ3j/KJXZ
nut/GLDMOXrgjvXdS1REEbMr5pW3dz5sFyzn6IAle/fQaHu3U6zGC94VFviL
dG78uy/rwNivhC4M/OuzOzoVb5mR7bGUblVRZ3rgjRenev7SmZ7LEz3vf4o4
57vt4iUJP99vZyz5x+2IP2ddOU/2uyp6/GP4RyH+mHiuH+p3s5vnxMCUxCNn
PYjLD6P7dfTbh/GXZzhq2RPm0NG7IAt/SHv0o5M8p1Mcf+Ywzz85gvPd8zyX
B3rO32xKvtTndtrSYfVBml/VvVrXNSP+2sVC3xSpeeMt//wl//9vG3rz1MmP
bhZqzpiAC/w7Nws19wpBo/47Nws1+QZwyKuMg7f446AyDst+lZT1zSSJoWex
7L66O+gy5sBXL6LOvxpzKAf2T24P+hMxBz26iDr/asyBLvyT/PBHMQdt+Q4/
/CsxB6N7EXX+lZgTvtDJYC/yRP8hlo4RaRkfz7f2o27xuEyLxMyGs8CK/E6/
Q9mZsOMF0Ee0p2LATH3g80bZTOjUSa1t/km8GdwOxirPBK50cdsQs1MmYC/O
n9U+b2Su0pGf0z0+aEs/Jo01zJh72DqBmQ64WWjc+KKFi2Ii7SwMlmI1Rbjz
8i/rcI44c7gtRVGYcWEaibp9ARFi6C6FP9ayjQAnm8ls4AUZl6YuwmV1Pxps
nxI7m4hJ9JRYjunqkTXlLA91q0O3L7x5SvzPSphtLWHs4lrCaNEgzr01pUq+
I2H+0uHwT+/a4+H/xuHwBW2qhuCgS7bo0q0n5TgFc1xTtxOdXDXX4NwWORaj
rXlmvgs4gFFnN6D0AIMtKAeMWYBcr9ALJnI4SlELitbRmCmu2sCD+x6IMN7Y
hxN6irQwcolOaqTtYe/mG2zuahWAKIrTkk2C8jaWZrEUgboYSB03n3HHhdCn
7aWc6DEDjfFONMavL7w6/UwXYKVa727MrWB8jOaAtX4iBQh51PHKAiLWOY4s
EtCymK49m7Y9p73I1ifTozPEiNqik85jBAi37DnS/HIMOpA6eqSPhu6BL6Nq
nKejGIZFsiEd+GamjUtWsVzEcknpvtuuj9n8J5duXSTPAFtvXqXgB2wspdNN
h97Rt/444Eld0C5aiATpBPHseL3I3B1dkzECnJ6V2t5oJPU70K1xLfUjB2Lx
5UGLnlzN4QhCLlt6mV9UPmY29zrVUzrxnvFUENwKEgxzZPmGc4TTVwKOMvF3
83RY7CisnYOk/jXtuOt46VFwokT3JjpQiBGBu+AGETjtTT42tL5WciEewuU/
pv5jMQtW2dE/fBkmL/9Iw/3xZlXlS+eht/tHFD/a65V9ANE+9jfG6HP++916
cnsM5zJaC/ZbeDO8m+7DD7G5NpP5Hz/gYycaVtOWt3nYaw71feJFd2kOwWhW
a1W7aVDXaFTVzN+b6Ry//w+67phKtNMNqdvZ/37/n38DT/lHVn8Jz3har/BN
+jJdz19t8W86O99K/O6dRczq3gys9+k6/rx9r3Xff/ifV7/oqcI3aG17b2p6
vkQWbEwVII3Pt6K294W2l2Q2RdbpWk1F0uj6blVsjH5Q1/nP6qII56I6v6oK
p7P3f/vNwJv/SOkg9PcqGtBr6vpT6urtP39ZdPuKHl4xKOLmWvDrQoPnmluq
NNBz+VzfBnv+dkcNTbl6UbfRXhUybg5bN9W96HLZ89c0eqmazlQdR583FVSp
N+er0K/vQb+qSnhdFERVEJ5vzwVjLor2nYrHnd5+c3MaVbrT9nydbjaLU7rd
Pl7H5Ywuq/+5vu89/bBa/kJkuimO2N76/Bnjky3pRnl1F3p8NXc3ndNbZvuq
iJenu7EVj68rCKh6d/UN3U2dxMtbm3sfex/12k4ufmOcXtG5uRj9U9VaauHg
j/57a7V+Lmlg2gFpyuOey0G1JhKrO+DbdpNBmO3t0rP1ekX3Naf1jeJXLTu3
4/ZXfK97+b3vmWtdmr2usHj9p9PTereqV4QIr6wDY/fTRd3N2rN++vX9T2dT
UEN8+v1Vkc5a653+ONtOP57eafx2+U66BretRreeNcXomw7QhQkEU/Xl8qdK
v//t/T1VPq5n+6Lm7IaKXVERqab6wtWd3Ke7b/8L379raiqTSbYFW9Uj2ooo
V+UZGgedL8mKzpPX6b1+w2VhW3UDhKo1+8asnL9Uv/Afs0q162n1VDeDZm2r
arldu+JVqYt2EGB2JZ5KFfLa1m3QPEO96m9dmuL7Zrq161onyo7XzV2/BKB1
8ZNZellytb0p+vyY7m+1X9UFDs7VlV8VVmieuaFqAd9Dk7NHnh/fgbVPTyip
Ln+oKw2cMLMuyASkR9enxRyt/HtTs45GrymF/f7n9eyXcz8umm988/yztn+r
ntE3CF0XlVFlelRxyPaCikNdWqkugvSMqPkevvQqs3C+AENV6trN8Yf5tnkv
lQx8XadwPXtZ5bPXZTIuutP5pjsXT9hk5GGqSlg2O9XUoFogF1eKXxeFbOoV
qA9lDaapK0Y2h+U0W6+WZCG/vj/Mth/fiOmd1zG9q2L6fXN/Navvr4bxne+4
Lqj2KJVJakzXMD787QZGUF+HQuGQrirBNMyqeriaWk2zFA/25/Druu/qInR1
C3pdP4Yujn9W94K31eJelTGrx0ClWG5ve5dlUKkCET2H0kXbj29GF0U6LhDz
pxZJfrooI3JxC/4JOPRzTGzmrXEhNXdvFeGA9xVEbOjaE7yVQiOVuqOqI/Ol
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

-->

</rfc>

