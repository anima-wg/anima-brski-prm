<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 3.0.1) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-05" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support both, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establishment the trust relation between pledge and domain registrar, BRSKI-PRM relies on the exchange of authenticated self-contained objects --- object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge, and domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher requests and voucher responses as defined in <xref target="RFC8366"/>.
These vouchers are signed objects, provided via the domain registrar to the pledge and originate from a Manufacturer's Authorized Signing Authority (MASA).</t>

<t>For the enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge acts as client for the bootstrapping and is the initiator of the bootstrapping (this document refers to the approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenarios it is expected that the pledge will be triggered to generate requests for bootstrapped in the customer site/domain.
This document refers to the approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of credentials different from the pledge's IDevID for the registrar-agent when establishing a TLS connection to the domain registrar.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain-registrar, the registrar-agent defined in this document will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not even have a list of manufacturer trust anchors that would be able to validate the IDevID.
Finally, IDevID are not typically given Extended Key Usage (EKU) TLS WWW Server authentication usage.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.</t>

<t>A further reason is the application on different transports, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>So, instead of using TLS to provide secure transport between the pledge and the registrar-agent, BRSKI-PRM relies on an additionally wrapped signature of the enrollment request by the pledge.
For EST <xref target="RFC7030"/> the registrar then needs to do additional pre-processing by verifying this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request
EE:</t>
  </dd>
  <dt/>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary: available only at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests to enroll in a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a voucher request signed by the pledge that requests to be part of a domain</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the PER send to the CA by the registrar</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request signed by the Registrar, on it's way to the MASA.
It will contain the PVR sent by the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehendable to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicaded by a strong like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as describe in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
This operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates .
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presume the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> and the application examples described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the  certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A Proof of Identity (POI) is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request through a proof of identity (POI).
The binding of data origin authentication or POI to the certification request may be provided directly by with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10  using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.
As indicated before, the communication model between registrar-agent and pledge assumes that the pledge acts as server and responds to requests.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constraint environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.
This allows independence from protection provided by the utilized transport protocol.</t>

<t>The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints were the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints were additional functionality is required, e.g., for wrapped certification request or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in  <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>In contrast to BRSKI the pledge acts as server.</t>

<t>This is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation Returns PVR</c>
      <c>/pledge-voucher-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request Returns PER</c>
      <c>/pledge-enrollment-request</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge Returns pledge-voucher-status</c>
      <c>/pledge-voucher</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge Returns pledge-enrollment-status</c>
      <c>/pledge-enrollment</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/pledge-CACerts</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge</c>
      <c>/pledge-bootstrap-status</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent is a new component in the BRSKI context.
It provides connectivity between the pledge and the domain registrar and reuses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/>.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.
For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use this LDevID(RegAgt) when establishing the TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
(Note that <xref target="RFC8995"/> makes a similar requirement)
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-numbers of the pledges to be bootstrapped.
This is necessary to allow the discovery of pledges by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufactuere may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain-registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf 
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher. Otherwise, it may assert "verified" or "logged".
Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:<br />
TODO: final check and rework section overview</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes data exchanged between the registrar-agent and the pledge. - TODO</t>
  <t><xref target="exchanges_uc2_2"/> describes data exchanged between the registrar-agent and the registrar and also the interaction of the registrar with the MASA and the domain CA. - TODO</t>
  <t><xref target="exchanges_uc2_3"/> describes data exchanged between the registrar-agent and the pledge including the status information. - TODO</t>
  <t><xref target="exchanges_uc2_4"/> describes the telemetry and status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses the exchanges between the registrar-agent and the registrar. - TODO</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition from Pledge by Registrar-Agent - Overview</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

</section>
<section anchor="pledge-voucher-request-pvr-trigger-and-response"><name>Pledge Voucher Request (PVR) - Trigger and Response</name>

<section anchor="voucher-request-trigger-pvr"><name>Voucher Request Trigger (PVR)</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-voucher-request"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="voucher-request-response-pvr"><name>Voucher Request Response (PVR)</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leafs are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "kid": "base64encodedvalue==",
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the voucher response.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="plegde-enrollment-request-per-trigger-and-response"><name>Plegde Enrollment Request (PER) - Trigger and Response</name>

<section anchor="enrollment-request-trigger-per"><name>Enrollment Request Trigger (PER)</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-enrollment-request"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "reenroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="enrollment-request-response-per"><name>Enrollment Request Response (PER)</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats such as CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue==",
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
  ]
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent to Registrar</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case, how the MASA will obtain the domain CA certificate is out of scope in this document.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="todo-pvr-"><name>TODO - PVR ...</name>

<t>In contrast to <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection form registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on the agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>After receiving  the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar shall verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the destination for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credential indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, used to sign the data, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the kid header of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="tdod-rvr-"><name>TDOD - RVR ...</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature.</t>
  <t>x5c: contains the base64-encoded registrar LDevID certificate(s).
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: contains the current date and time in yang:date-and-time format for the RVR creation time.</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: contains the pledge product-serial-number.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: contains the voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: contains the PVR provided by the registrar-agent.</t>
</list></t>

<t>The RVR can be enhanced optionally with the following parameter as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: contains the LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including the certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar registrar EE credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR data contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE certificate used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this field to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate used to generate the signature is identified by the "kid" parameter of the JOSE header (agent-signed-data).
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not provided, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/>, <!-- XXX -->and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="todo-masa-issued-voucher"><name>TODO: MASA Issued Voucher</name>

<t>The expected voucher-response format for the pledge-responder-mode the <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> is applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="todo-masa-issued-voucher-with-additional-registrar-signature"><name>TODO: MASA Issued Voucher with Additional Registrar Signature</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher, by signing it using its registrar credentials).
The signature is created by signing the original "payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credential (see<xref target="RFC7515"/>, section 5.2 point 8. The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate. The pinned domain certificate is already contained in the payload.</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credential used for authentication in the TLS handshake to authenticate towards the registrar-agent. 
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the agent-provided-proximity-registrar-cert component. 
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="todo-per-to-registrar-"><name>TODO: PER To Registrar ...</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t><xref target="RFC7030"/> EST standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to the /simpleenroll endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate in the TLS establishment and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="todo-signature-wrapped-ca-certificates-"><name>TODO: signature wrapped CA certificates ....</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST using the /cacerts endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate response, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The additional signature of the registrar will allow the pledge to verify the authorization to install CA certificates.
As the CA certificates are provided to the pledge after the voucher, the pledge has the necessary information to validate the provisioning object.</t>

<t>To allow the registrar-agent to request signature wrapped CA certificates, a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) with an HTTPS GET message.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is the signature of the CA certificate information using the registrar EE credential resulting in a signed JSON object. The CA certificates are provided as base64 encoded x5b.</t>

<figure title="Representation of CA certificates data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signaturer in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ] TODO: check rename "x5b" to more explanatory e.g. "ca-certs-x5b"?
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>The registrar-agent has now finished the exchanges with the domain registrar and can supply the voucher-response (from MASA via Registrar), the CA certificates, and the enrollment-response (LDevID certificate, from CA via Registrar) to the pledge.
It can close the TLS connection to the domain registrar and can provide the responses to the pledge(s).
The content of the responses are defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>The following description assumes that the registrar-agent has obtained the voucher and enrollment responses from the domain registrar.
It will re-start the interaction with the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-voucher".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufactures pledge implementation.</t>

<t>To perform the validation of multiple signatures in the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Validate MASA signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully.</t>
  <t>Install contained trust anchor provisionally.</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/> successfully, but take the registrar certificate instead of the MASA certificate for verification.</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert") successfully, including validity and authorization to bootstrap the particular pledge.</t>
</list></t>

<t>If all verification steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification it <bcp14>SHALL</bcp14> be signaled in the reason field of the pledge voucher status.</t>

<section anchor="todo-pledge-voucher-status-telemetry-"><name>TODO: pledge voucher status telemetry ...</name>

<t>After voucher verification the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher status and provides it as JOSE object with the wrapping signature in the response message to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-provide-ca-certificates-"><name>TODO: Provide CA certificates ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-CAcerts".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully provided to the pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded x5b.
The pledge <bcp14>SHALL</bcp14> install the received CA certificates in its trust anchor database after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="todo-supply-enroll-response-and-generate-enroll-status-"><name>TODO: Supply enroll-response AND generate enroll status ...</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/pledge-enrollment".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure, is <spanx style="verb">application/pkcs7-mime</spanx>. Note that it only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response message to the registrar-agent. If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll status is provided with an additional signature using JOSE.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using the LDevID of the pledge as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IdevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Telemetry Status: Pledge Status by Registrar-Agent - Trigger and Response</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="todo-registrar-agent-requests-the-pledge-status-trigger"><name>TODO: registrar-agent requests the pledge-status - Trigger</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/pledge-status"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and the enrollment of the pledge into the new domain).
As pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="todo-pledge-status-response"><name>TODO: pledge-status response</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulativ in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Status: Handling Registrar-Agent to Domain Registrar</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge belongs to an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 pledge-voucher-request     create pledge-voucher-request     [THISRFC]
 pledge-enrollment-request  create pledge-enrollment-request  [THISRFC]
 pledge-voucher             supply voucher response           [THISRFC]
 pledge-enrollment          supply enrollment response        [THISRFC]
 pledge-cacerts             supply CA certificates to pledge  [THISRFC]
 pledge-status              query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>TODO: other threads?</t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns on misusage of an registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rouge pledge at a later point in time.
As "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agents signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain may be returned if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the comissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, and Hendrik Brockhaus for their input and discussion on use cases and call flows.
Special thanks to Esko Dijk for the in deep review and the improving proposals.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in RFC7515 to better
   support use-cases in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-04'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-04.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Eliot Lear' initials='E.' surname='Lear'>
         <organization>Cisco Systems</organization>
      </author>
      <date day='3' month='June' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-02'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-02.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDctMTJUMDQ6NDg6NTYuNTYzWiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
  "signatures":
    [{ "protected":
         "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU1Bb0dDQ3\
FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEthVzVuU2\
1sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0FYRFRJeE\
1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1FZRFZRUU\
dFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRFZRUUZFd2\
93TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbGpaVEJaTU\
JNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRUVYdzdyVW\
VhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TXgyWStTTW\
dROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaGMyRXRkR1\
Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYUFGRlFMak\
56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd0\
1DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdT\
N3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENtSkxUek\
VsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cCI6InZvdW\
NoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
      "signature":
        "n1rKu3odtbq-rIPHlE08BU-gSf0vKFDtiUL5Q2j8y1BmDXvj4SPUYscjdiu\
BxYF7SzsdECCfpPiL_jLbwQiG1Q"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6IjVvQm91L1J3ajQrZE1KN0JRK1VqdGc9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybE9WemxEWWpOVmRsVnVaSEZPUTNSclZGVnZNMU\
ZzUlhKV1YzQXdXbm93T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxU1\
hSTlJHTjBUVlJLVlUxRVVUWk9SR2MyVGxSWmRVNVVXWHBYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKV1ZsbFZhelZvWWtoQ1YxWkdWbE5XYXpWeVRWVldXbV\
ZzY0ZCVmExWlhUVlpTY2xWc1NrOVNiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxZHNhM2RoU0dScVRWWktWMXBGVWxOaFZrNUdVMnRPVl\
dKWVFuWlpWM2hoVmxaYWNscEdXbGRXUlZwaFZtMTRiMWxYVWxkVWJHUldWa1Z3VjFZd1\
pFNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY2xremNGZE5NbW\
hJVlRCa1YwMUdaRWRSVkZKcFVqTm9WRlp0YTNkT1YxSllVMjVzVlZKdGVIaFZNalZoVl\
d4c1ZWZHRXbXhWZWtaU1dWZDRSMWRyTlVaT1YyaHJUVmM0TVZrd1drdGhSMGw1WlVVNV\
ZHSlViRVpVYlRGVFlrWndXR1JJVmxSV2FteEhWakJrWVdWdFZsZFhiRkphWW0xTk1GWl\
VRazlPYkZKWFkwVXhhV0ZyU205VlZtaFhZakpHVmxwR2NGVmhhMHBUVTFjMGVGcEhXbE\
pRVkRCcFRFTkthRm95Vm5Wa1F6RjZZVmRrZFV4WFRteGpibEZwVDJ4emFWUlZiRXBSYW\
taRlVUQk9RbGRJUm01UldHUktVV3RHYmxOVlZscGlWMUV3VkRGU1FsTXdTbTVhTTBadl\
lUSndVRlZHUmxKU1JVWnhVVk4wVGxWck1UTlNWa1phVWtaYVVsVlZkRVZSV0VKUFdsWl\
dTMDFYVFhsaVNGWmhWMFUxTmxSV1JYZGtNRTR6VjFWU1YxVldSa2xTUlVaVFZrZEdXVl\
Z0ZUU1VmJXUXpVbTFrV2xKR1dsSlZWVkpGVVZSc1ZsZHNhRTlOUmxaSlZtNXdhRkpVUm\
pKWGEyUlhZekZGZDFKWVpFbGhSMDVQVkZkd1NtUXdOVVZUVkVwT1VrWkZkMVJYY0U1bG\
JHUnZXVEExVG1WcmJETlVhMUpLVFdzeFJWVlVRazVoYXpFMlZqSndRazlWTVZOVVdHUk\
dWVlpzUlZac1JsSlRNRkpDWTBVMWJGWlZiM2haZWtwelpGWndXVlJ1Y0U1VlZFSXpVVE\
5rV2xKR1dsSlZWV2hGVVZaS1ZWbFdhRk5pUlRGVFdUTmtSMVZXYkVWV2JFWlNVa1ZTUW\
s1V1RtRldNbEozV1hwT1UyVldiRmxUYTBwaFRXeGFNVnBGVWtOWGF6RkRWRlZrUTJWWV\
JraFZNREF3VDFWR2JsSlZaRVJSTTBaSVZUQXdNRTlWUmpOU1ZXaENUVVZzUWxGclpEUm\
lTRXBQV20xdmVtRldTbWxPZVRsRFZWYzVhMVo1Y3pGWFYyeDJWRE53YjBzeWNFcGtTR3\
g0WkZaS1NsUjVPVmhsYW1SYVlqRmplbUZZWkVWWmVrNUhaVWRXTTFSR1dtMWxhMDU1VG\
xVMU1sSkVSWHBYYlVaSFdXcGtiV050Um5WTE0xRTFZak5TV2s1V1pFMWhSVzh5WVd4d0\
5sRnRlRTVSVkZKSVVWUkdWbHBGVWpOU1ZVbDJaREZHUmxGWVpFcFRSMlJGVVZkYVExb3\
dOVmRUUms1T1VsVmtSVkZXWkc1UmJFb3lZakZSZUdSWFVteE5iVmt5VkVWV1VtRkdWVE\
5UUldoeFN6TmFTMHd5VVROVFdIQkNXa1ZLYmxSc1drbFZWRkpHVW0xa1VsWldhSGRsYl\
hoT1V6Tm9jMk5GUlRKUFIwNVdUbFZhVWxSV2FGWmtiVFZLVmtSYVVtUXpaRVprTVd4Rl\
ZteEpkMkpGU2tKa00yUkVXakZzU2xNelpGcFJhMHBTVmxWb1FtUXdiRE5STW1SYVUxVj\
BkbGRyYkRaaGFrSkdVVmhrU2xKR1RrSlJXR1JUVlZWc2JsbDZTalZPYm1oMlZETlNkbF\
ZWU25OVGJrNXVZa1U1VFUxV1dqUlRSV1IyWXpGU05XTkZWbmhWYlZvMlRVWkdNazVHY0\
VaVlNGa3daREJPU2xWVlRsZGxWMGw1VW1wc05sWnFUblZQVkZWeVlqSjRibHByV2t0YU\
1YQlZWakJXTms1SFVsUlpWVmw2WVVod1UxVlhTWHBYYmxaRFRXcHNVbEJVTUdsTVEwcE\
9VMVZzUTJWclVrUlJNRVpaVWpKa1FtUXdiRU5SVjJSS1VsWm9XV0ZyYUhkU1JVWk1VVz\
FrYm1OWGFISmhhemxSVlZaR1JWRlhjRUpOVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW\
1ORk5XeFdWVzk0V1hwS2MyUldjRmxVYm5CT1ZWUkNNMUV6WkZwU1JscFNWVlZvUlZGV1\
NsVlpWbWhUWWtVeFVrOUlaRVZWVm14RlZteEdVbEpGVWtKWGJGWmhWMFUwZDFWVVFrWm\
tNR2h2V1RBMVRsWkhkRE5VTVZKR1pVVXhWVkZZWkZCU1JUQjVWakpvYWxSck1YRmhNMl\
JRVmtWV05GUldVa0prTURsRlZGUktXR0ZyUlhKVVZrcE9aREJXVWxkVlVsZFZWa1pNVW\
tWR2QxUnRWbFpUYWtacVRXMTRNVmRzYUU5bGF6RlNUVWhrUkdReGJFVldiRVpTVTBWU1\
FsVnNVbWhYUmtwelZGWktibVF3V201WFZWSlhWVlpHUlZKRlJUVldWbkJaVkdwQ1ZsTk\
dXalpaVlZWNFpHeHdTRlp1VGxKTlJWWXpWakZTUWxaRlNtNVpNMFp2WVRKd1VGVkdSa3\
BSYTBwdVdqTkdiMkV5Y0ZCVlJrWk9VV3RLTTFSclRrSlJWbEp6VW5wQ2JXUXhVWHBOTW\
psc1pXeHZlR1J0ZEVsVlYwcHNaRWRXYVdKWGIzSlJiVGxYU3pGd1IyTXljR3BhYkVZel\
RXeFNVR0V3Y0ZGaFJUbHlWREphUWxsdVZUVlpiRTE0WTFad2NFOUliR2hTVmxrMFlqSl\
dlVk15ZDNaT2JIQlpXVzFhTkZReU1VTmhia3BUWTIxT1dXSjZTbHBrTVhCRlVWWk9RMW\
93TlZkVFJrcE9VV3RHYlU5RlZrUlNSVVpJVVZaR1NVd3dSbTVTVlVaT1VWUlNTRkZVUm\
xaYVJWSXpVbFZKZG1ReFJrWlJXR1JLVVRCS1JWRlhXa05hTURWWFUwWk9UbEpWWkVWUl\
ZtUnVVV3hTZGxkcmJFNWxiRVpyWXpCUmRtRnBPSEphTVdkMlRqSk9RMU51Vm1wVFF6bF\
pZbGR3UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjBreVVsUnNhV0pzYURCaWFYUndaVV\
ZXU2xack9UUmxSRkYyWTI1c2JVMHlWalZVV0dSRVdqRnNTbE15T1dGVFdIQnhUVVZXUW\
1Rd2JFVlZNVVpDWkRGS2JsTlhhRUpWUnpWRFRVaGplRlJyVGpGamJXaE9aVVZ3TTJReV\
duRmxhbVJ1VWtkc2NHVkhkRlpYVlhoUlZURnZOVnBWTkRWaE1qbHZWR3hHVm1GclJuQl\
NWVVl6VGtack0ySklValJXTW14UlpEQjBNRTFWYnpWaWJYQTFXbXRTVDJKRVZrNWtWVl\
pGVVcxc2RHVkdTWHBSTVdoMlYydDBTRlZZU2xaUVUwcGtabGd3SWl3aWMybG5ibUYwZF\
hKbGN5STZXM3NpY0hKdmRHVmpkR1ZrSWpvaVpYbEtORTVYVFdsUGJITnBWRlZzU2xGcG\
RGVlJNRTVDV1ZWT2JsRllaRXBSYTBadVUxVmtRbGRITlZkaGJrNVdUbFV4UW1Jd1pFUl\
JNMFpJVlRBd01FOVZTa0pVVlU1T1VrUkNORkV6Y0VKVGEwcHVWR3hhUTFGV2JGVlJWM1\
JIVldzeFUxWllaRVprTVd4RlZteEdVbE13VWtKbFJYUm9WbnBXZFZVeU1YTmtWbTkzVk\
c1YWFtSnJSalJTYm5CQ1ZtdEtibFJzV2tOUlZURk9Va2QwZDJOSFNuUmFSWFJvVm5wV2\
RWWnJaRmRsYlZKR1ZHdEtUbEV3UmxsU1JsSktaVVV4UlZkWVpFOVNSVVY0Vkd0U1dtVk\
ZOVWRpTVd4RlpXMXpNVlF4VW5KbFJURnhWRmhvVG1Gck1IaFVNVkpXVGxaa2NWRnNUaz\
VWV0U0elVURkdXbEpHV2xKVlZXUkdaREJ3UTFaV1VrWldhekZEVkZWa1FrMVdWa1pSTW\
1RelZGWk9kR0pJVm1GTlNFSjNXVzB4YTFKSFNYcFRibVJPVldzeE0xSldSbHBTUmxwU1\
ZWVmFSbVF5T1ROVVZsSktaV3MxUlZaVVNrOWxiV014VkZaS2FtUXdXbEpYVlZKWFZWWk\
dSVkpGUlRGVE1rWllUbGMxVkdKWGVERlhha0pUWWtkU2RHSkhjR0ZXUlVwaFZGVktUbE\
l3U2pWalZXUlVWRlJSTlZGWFpFWlNNRTVFWTFWa1ZGUlVVVFZSV0dSR1UwVkZkMU5WUm\
tOUmVtTTFZa2RzYUZWdFRrTmhiSEJxVWxWV1dXUjZaSGxXVjFab1pHNVNTRk5yUmpGVF\
JGSjNZWHBTU2s1RVNqSlpWVXBPWXpGVmVFMVhiRTFTUlU1RVZFZDBWMkZJVWxaV2FrbD\
RZbGhhYUZNd1RqSlVXR2Q1VjFOMFZGUlhaRkpQUjFwdFpEQjNlVTB6YjNwV1JXeFhVV3\
hrY1ZwR1VrTmxhekZFWXpCa1JGRXpUa2hSVmtaV1VtdEtNMUpYWkVOUmFtaFlVMFpqZU\
dGSFRYbFNXRkpyVWpGYU5scEZUVEZsYlVaWVZtNVNZVlo2VmpaVVJtUkxUVVY0ZEU1WG\
VHdFNSemd4Vkd0U1VtVnJNVU5QUldSQ1RWWldhMU5ZWkZKWFZURkRXVlZHUjFKc1JrMW\
hhelUyVlVaM2RsVXhkM1poTWpreFlXeEdNMkZ0WXpGU1ZGWnRaRzVrYWxkWFNrNVJhek\
ZJVVZSR1ZscEZjRkpWVlRGT1VWYzVTRkV3VG5wU01FWlNWbFZhUTJRd01VUlVWVVV3VW\
pCRmVGWlhVa1ZrTUZaRFdFTTVNMVZWVmtKa01HeEpXakJTUWxNd1NtNWFNMFp2WVRKd1\
VGVkdSbEpTUlVadVZHdG9RbEpGU2taUlYyeERaRlJPTTFWclNrMWpNSEJPVlVSV2VsUl\
VRVE5OUldkeVZsVmFlV1ZWTlZaT2JXUk1aV3Q0VUZWdFRrZGxWa3BUVkRKNGVHTlZhSE\
JhTUd4dVYwVk9kRk5yZUZWbGExWnpaR3RSZVdOSE9VeE9iVkkwVG0xM2VGaERPVEZsVn\
pGVlltMUtVbEpGVW0xVGJYaG9aRWhXV1Uxc1NuWlVNRlU1U1d3d2MwbHVValZqUTBrMl\
NXNWFkbVJYVG05YVdFbDBZVzVrZWtzeWNIcGlNalJwVEVOS2FHSkhZMmxQYVVwR1ZYcE\
pNVTVwU2praUxDSnphV2R1WVhSMWNtVWlPaUp1TVhKTGRUTnZaSFJpY1MxeVNWQkliRV\
V3T0VKVkxXZFRaakIyUzBaRWRHbFZURFZSTW1vNGVURkNiVVJZZG1vMFUxQlZXWE5qYW\
1ScGRVSjRXVVkzVTNwelpFVkRRMlp3VUdsTVgycE1ZbmRSYVVjeFVTSjlYWDA9IiwiY3\
JlYXRlZC1vbiI6IjIwMjItMDctMTJUMDQ6NDk6MDcuMTM0WiIsImFnZW50LXNpZ24tY2\
VydCI6WyJNSUlCMURDQ0FYcWdBd0lCQWdJRVltZDRPVEFLQmdncWhrak9QUVFEQWpBK0\
1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1SZ3\
dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY05Nakl3TkRJMk1EUTBNak\
16V2hjTk16SXdOREkyTURRME1qTXpXakE5TVJNd0VRWURWUVFLREFwTmVVSjFjMmx1Wl\
hOek1RMHdDd1lEVlFRSERBUlRhWFJsTVJjd0ZRWURWUVFEREE1U1pXZHBjM1J5WVhKQl\
oyVnVkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR3hsck5majNpUm\
I3L0JRb2RXKzVZaW9Pemgrakl0eXF1UklPL1d6N1lvVzNpd0RjM0Z4ZXdMVmZ6Q3I1Tn\
ZEMTNaYUZiN2ZyYW4rdDlvdFk1V0xoSjZqWnpCbE1BNEdBMVVkRHdFQi93UUVBd0lIZ0\
RBZkJnTlZIU01FR0RBV2dCUnZvVDF1ZGUyZjZMRVFoVTdISGordkovZDdJekFkQmdOVk\
hRNEVGZ1FVWHB6bE1LeGxwQTY4Y1U1RlFNWFV2bklUNlF3d0V3WURWUjBsQkF3d0NnWU\
lLd1lCQlFVSEF3SXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdjMnk2eG9PdG9RQmxKc2\
dsT0wxVnhIR29zVHlwRXFSZnowUXY0WkVQdjR3Q0lRQ1Z5YjJGOXpWM245NStvbGdmRk\
pnWlRXRXo0ZFNhRjNoelJRYjNadUIyOVE9PSIsIk1JSUJ6RENDQVhHZ0F3SUJBZ0lFWF\
hqSHBEQUtCZ2dxaGtqT1BRUURBakExTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek\
1RMHdDd1lEVlFRSERBUlRhWFJsTVE4d0RRWURWUVFEREFaVVpYTjBRMEV3SGhjTk1Ua3\
dPVEV4TVRBd09ETTJXaGNOTWprd09URXhNVEF3T0RNMldqQStNUk13RVFZRFZRUUtEQX\
BOZVVKMWMybHVaWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWl\
hOMFVIVnphRTF2WkdWc1EwRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0\
FBVGxHMGZ3VDMzb2V6WjF2a0hRYmV0ZWJtaitCb1YrWkZzamNmUXcyVE9rSlBoT2tPZk\
FidTliUzFxWmk4eWFFVjhvZXJLbC82WlhiZnhPbUJqclJyY1hvMll3WkRBU0JnTlZIUk\
1CQWY4RUNEQUdBUUgvQWdFQU1BNEdBMVVkRHdFQi93UUVBd0lDQkRBZkJnTlZIU01FR0\
RBV2dCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFkQmdOVkhRNEVGZ1FVYjZFOW\
JuWHRuK2l4RUlWT3h4NC9yeWYzZXlNd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFQbk\
IwdzFOQ3VyaE14Snd3Zmp6N2dEaWl4a1VZTFBTWjllTjlrb2hOUVVqQWlFQXc0WTdsdH\
hXaVB3S3QxSjluanlmRE5sNU11RURCaW14UjNDWG9aS0dRclU9Il19fQ",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "ZUUUwtjvbYfIteRb_9OUuh4WibxwpZLAHAlVAXNMSY1De6ub2U\
aOJrCam-OIrZ7-QguUJwm5VEHJ14NEdAWGOQ"
    }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".</t>

<figure title="Example Voucher Response" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oiNW9Cb3UvUndqNCtkTUo3QlErVWp0Zz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMT\
JUMDQ6NDk6MDcuNjAyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "HFqpWjVKYn_cSLleTohzSygHbv_dYxz6opknJK5w_ZaLGroGym\
zBs2Ofk8DrX9zYiWZrVR7Y6HDcxY-aErEbiA"
    }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Included examples for several objects in section <xref target="examples"/></t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+1obR9Yv/L+uojfZz2OUSDLgQ2wmmRkMJCFjYwLYzmHm
y9tIDXQsqTXdLTCx/V7Lvpbvyr51qqpV1dWScJyZzH4/npkYpO461zqv3+r3
+506r8fZdvLk+ORvB8l1Xl8mR+NsdJEl+TQ5zqpZMR1lZfKsGGXJOj3UPzp+
1u2kZ2dldiXv4UedUTGcphNoalSm53U/z+rzfjrNJ2n/rKxe5/1ZOelvPOik
ZZZuJ89nWZnWeTGtknQ6Sp6l0/Qim2TTunN9sZ3sHB4820lefd0ZpTU0uLWx
tdWpanjw53RcTOGTupxnnXxW0m9VvbWx8XhjqzNM6+2kqkedWb7dSZK6GG4n
d26y6g78MSwms3RYuw+qm0mZnVfqg6Ks/U+gg2lR5+d5NoIPpwU9VZe5ayad
15dFud3pw2rBiyeD5Ksyzyp4jpfipM7Oz7Op/bQoYXYnOc60Sna+hk/MOsqH
3EOWQQ/P67rof5NeTvvH+fQieYiTyOub7eTZfJoPL2lOI+jjzqPNz+895jnO
p3UJT3ydlZN0egMfZZM0H+Oi0DgG5ziOv1bc1wDWBB6Zl/l2clnXs2r77t3r
6+uB+vqumdnpIHmVldOstFM7vSwmaeU+/XdNraZx9K9pHB8ytf1B8jRL3cT2
x3lRm49oVrt5NSySkxtYxYmexjGMtc7hr7SqsuRzO4tX6XicV9l4nE3tVHa/
6T+6t3FfT+UEbtuvWTmGcw0fzy7pZK99dn8zuX8/efT5o+QxnOs1N9MxDOmv
QxwLTU+G/2xA40jLUVVM7SSe4UfZONkNvuVdgh6zMSxjclKc19dwI5NXRfm6
cl1NhuVneIH/WplHB8NUL6hZT/X13c6wgInlZ/NaXQlY3b38l9dudavXhfmE
BnNQnMJ71XwM93t4M5iO3SgyeHYwgmf/CjsSPHSVTecZ3vKLspjPhGTgoUOK
k/D7b+mPv+JEBtDXe3waCNz8bJsf619f3A0oVGdawPmq8ytq+/ir3Qdbjzbk
14efP9xyv96TXz/fuGce+PzB5gP59dHGffPpo3sPH5pfH27aTx8/pmcP+nsD
RSp/ua76V8V8eJmV3rfTDBfgvF/9Ws/6w6qMvFqeD7Grs7za7uTT82AeW48f
mVE83Lq/aUa89WDLDtON+P7G5+bXzx+bBx5v2Gcfb9p5PN669ygyGF7QlHo/
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
MMCVWut0DH1teYM84bSoLgdq808IhokY/dUsBaFibV5Ot7GBbcqkqLbfTMbb
02qbbkFbw2t/gjZmIBvnb5KrEj6gRvMJFeWjl4Ak1sDzzsUZL8+Wwz/Rn8rb
ZEINOHeDWyArHskFmMwxpRR/csablOWqktdoN2iGhLVPB6PiKG4rMcD5SB5t
3N8YrHHnVkdJ1sxX28nx/snp7vPDrygUAJFf6OH34bRC2cSb3dWwXDw92S4e
G58kFcWdhnWgTRgG/thobl1U3ZZXwjhABGEX0UFuhHpdZeGIiaCxGmaktCbw
9nbi26mPswnqMycoVGfJ37IbkI017o1bsKK8SKcO/SJZO9g//SrZOTx4tpO8
AuKArX2NzHmNjo0kUdKTr75OXmVn2/DrF5d1Pdu+e7cGFlANcPEH0O7d64u7
0PYkvftnGi88/xRuIrzwBfCUcV1s07d/Nc/zUzuE6omtntTZ+Xk2Tb4q86xS
64M/poWKnxmc4zN/rXI8idVgWEzCxvbHOagQT7O0bGkpAeZV/nWIaPWx908v
gRFWMOFymrU2UdND/Wt6aNFonsEBSbNxcoz/lqPKnr1Gk5Nh+Rku0F8roFPZ
GHMBh+mfeTOCo3urc2tvhUHp5cthUtQSK14nJF5jyugZRWsU05jgL1fJv8dw
MFVqQ4oYbkDasjo02oJKno3PB9TGgYK7NtUeRLUi6x5OAj5H9U8JVoKx0Jjd
oENfI3d6DZcAuB1wojuoDN7p8b/J4XP6/Xj/uxcHx/t7+DuZauwv1II8xXqY
+829vfv82bP9wz1uAD5NvI+ojTug995hYf/O86NTAoe9w0K6Du9PWZkMahan
laJWIvY/2T1KNu8n67jYW5ubj7v866PNz+93CbOCOyOiTH92hArfYLB/lpJx
iLCQ01lepxi3YlOj0Zoiq7dbzG7K/OISuO2wmwBj20yISJwKvoOkYMPWkmOf
TCoEciRjZpzeymlXeJ52sB4FNkrRT6j3jqS74wwhzamOYS4BuXNO1K2KeTlk
hs2SDB3eSvSygq9lzJzZk9Kmgj80m5fVPKWDxStUzQn1iZeHDxtohBy4CG9V
Xn1L1ulOKEqRpvnkZA8IGz1OLeAJh4GhrcnpUvcHQ7MAbvHuVECRLkANPjJI
ipUswVgMBgU/vWcSMejrdSS3FdJbbCTLHMWVUffRItC1hx8mb2QKGgL87Wl8
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
+/7oL9NXMT+yUvToFp9Gq/KeKQJnNCunOjwaajBiFx6t+4Y18WQvSCQwYdGH
vmDbxK5ieDJ0GcLZn1dmRygyu8h46Q0QvRaMizA9pgchYW4ZbG/o55bu37Fd
fGSOd+cYIXTfVOd76BeXmd5dYG9lPEQgWtzvk0mU+ZpnBJMvB+lvgwBPSdnI
jspU2x3czuoozEKOCygziwHD9bupdlJiSocxmQ7Gi2ziW9N9bLsHNmHQp6Du
UEXu91WQ/buOuWN44mDUar1JigHTByG3bFZYbpxDMN5wa/fC9d0LvEePgU0x
RhihEtEiXUhJqKI3kRtOBRtqcgJHpkE58miQarCXu4CbGtPMvZDMBF4PJoPb
DufKq+8j7U2WtwzyrM9MxxrLYpAGkOMd6EZ3qiHa3IljEPzRcc0va7zjMOM9
4ZXp4yzfP2Fe7Jlw/MDY76c8qyKtWErT2/r5ns/QI7FJ8/Fhat8+eiXreuVu
j7boM6lz6AOKTiV0ZQb2G7qF8xJo/Pa+0Db3S0RpyowsKWuEtqi8ETTcEazo
mBhdxXQTe0rZIYsf73Vv7ty+WerphAc/LfX1w3NnlW6Trx/W90/DwtR+7/MP
X/zP2suDdbed88fe2Fj8ftD75d3kZdH1n3i4mS7S+TMo5T60fvOPm9QcDD5X
T/PHfywek914buvjpmzUVcniJiVYp+iahGCTD/w8/6IWl65LHv0od/iDAsXn
3GO8TlZzyt2fd5B/+zB2SkSeP7VdqW3mTQKSrvOgnHDzMHVATeVkP69W6cXF
TZQ1jumuxOlqlc/Sj1TQ4npJZ9s+7fyM+FXxytNK0s/o5S/N07N48y6pd1I2
F9q+PuB/Oki5VDvt1IfPlSNff/r9zz/Vbfzpl/qL6rbUXbMn+/NqvYvXzVmC
bXM285sKxtfJ2POjv+kHo36ck7TXDbl4w59Mz15futtu21P55GahfEOdby/+
bMqUYUx++tHdfv9v877/as4XXt5mff+NnO+nd23Wt8ijSVRFA72adjwdbaCn
DsZKhd72hYj6KdeOgf97LxhsgziIEGG9J8Rkngw+vdu8jJfZanpUjP45MXqL
yKdMsHgBe9QfdacTL8bryNQfPM1hD7r4mtrT2yd687J/iOXt4XGCHrUZJSPp
iEVsC/zWKaYTUUw7Y2pPMeNVRwpoIwOq4zoXYk+tQiRAYssTWrRzi8qOzNu5
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

-->

</rfc>

