<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.21 (Ruby 3.0.2) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-brski-prm-17" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.25.0 -->
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-17"/>
    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>
    <date year="2025"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    <abstract>
      <?line 134?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces new endpoints for the Domain Registrar and pledge, and a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the Key Infrastructure (e.g., domain CA).</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>
  </front>
  <middle>
    <?line 142?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated with a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>
      <t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing signed data objects, the voucher artifacts as defined in <xref target="RFC8995"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>
      <t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>
      <t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>
      <ul spacing="normal">
        <li>
          <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
        </li>
        <li>
          <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
        </li>
        <li>
          <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
        </li>
        <li>
          <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the pledge IDevID credentials.</t>
        </li>
        <li>
          <t>also enables the usage of alternative transports, both IP-based and non-IP, between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
        </li>
      </ul>
      <t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
      <t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>
      <t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>
      <dl>
        <dt>authenticated self-contained object:</dt>
        <dd>
          <t>Describes a data object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
        </dd>
        <dt>CA:</dt>
        <dd>
          <t>Certification Authority, issues certificates.</t>
        </dd>
        <dt>Commissioning tool:</dt>
        <dd>
          <t>Tool to interact with devices to provide configuration data.</t>
        </dd>
        <dt>CSR:</dt>
        <dd>
          <t>Certificate Signing Request.</t>
        </dd>
        <dt>EE:</dt>
        <dd>
          <t>End entity, as defined in <xref target="RFC9483"/>.
Typically, a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
        </dd>
        <dt>EE certificate:</dt>
        <dd>
          <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
        </dd>
        <dt>endpoint:</dt>
        <dd>
          <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
        </dd>
        <dt>IDevID:</dt>
        <dd>
          <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>LDevID:</dt>
        <dd>
          <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>mTLS:</dt>
        <dd>
          <t>mutual Transport Layer Security.</t>
        </dd>
        <dt>PER:</dt>
        <dd>
          <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
        </dd>
        <dt>POI:</dt>
        <dd>
          <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>POP:</dt>
        <dd>
          <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>PVR:</dt>
        <dd>
          <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
        </dd>
        <dt>RA:</dt>
        <dd>
          <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Registrar_Agent:</dt>
        <dd>
          <t>Component facilitating the data exchange between a pledge in responder mode and a domain registrar.</t>
        </dd>
        <dt>RVR:</dt>
        <dd>
          <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>
      <dl>
        <dt>BASE64(OCTETS):</dt>
        <dd>
          <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
        </dd>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
      <t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <tt>base64encodedvalue==</tt> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>
    </section>
    <section anchor="scope-of-solution">
      <name>Scope of Solution</name>
      <section anchor="sup-env">
        <name>Supported Environments and Use Case Examples</name>
        <t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>
        <t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>
        <section anchor="building-automation">
          <name>Building Automation</name>
          <t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>
          <t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>
          <t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>
        </section>
        <section anchor="infrastructure-isolation-policy">
          <name>Infrastructure Isolation Policy</name>
          <t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>
        </section>
        <section anchor="less-operational-security-in-the-target-domain">
          <name>Less Operational Security in the Target-Domain</name>
          <t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate an RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>
        </section>
      </section>
      <section anchor="potential-limitations">
        <name>Potential Limitations</name>
        <t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with one another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>
      </section>
    </section>
    <section anchor="req-sol">
      <name>Requirements Discussion and Mapping to Solution-Elements</name>
      <t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>
      <ul spacing="normal">
        <li>
          <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
        </li>
        <li>
          <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
        </li>
        <li>
          <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
        </li>
        <li>
          <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition, the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
        </li>
        <li>
          <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <tt>proximity</tt> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
        </li>
      </ul>
      <t>At least the following properties are required for the voucher and enrollment processing:</t>
      <ul spacing="normal">
        <li>
          <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
        </li>
        <li>
          <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
        </li>
      </ul>
      <t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>
      <ul spacing="normal">
        <li>
          <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
        </li>
        <li>
          <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
        </li>
      </ul>
    </section>
    <section anchor="architecture">
      <name>Solution Architecture</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>
        <t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>
        <t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>
        <t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>
        <t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>
        <t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>
        <t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>
        <ul spacing="normal">
          <li>
            <t>uses existing endpoints where the required functionality is provided.</t>
          </li>
          <li>
            <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
          </li>
          <li>
            <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
          </li>
        </ul>
        <figure anchor="uc2figure">
          <name>BRSKI-PRM architecture overview using Registrar-Agent</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,240 L 8,384" fill="none" stroke="black"/>
                <path d="M 80,240 L 80,384" fill="none" stroke="black"/>
                <path d="M 152,240 L 152,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,368 L 224,416" fill="none" stroke="black"/>
                <path d="M 256,240 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,240 L 328,336" fill="none" stroke="black"/>
                <path d="M 336,64 L 336,144" fill="none" stroke="black"/>
                <path d="M 376,152 L 376,232" fill="none" stroke="black"/>
                <path d="M 376,336 L 376,368" fill="none" stroke="black"/>
                <path d="M 424,240 L 424,336" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,416" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,144" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 8,240 L 80,240" fill="none" stroke="black"/>
                <path d="M 152,240 L 256,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 424,240" fill="none" stroke="black"/>
                <path d="M 88,304 L 144,304" fill="none" stroke="black"/>
                <path d="M 264,304 L 320,304" fill="none" stroke="black"/>
                <path d="M 152,336 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 224,368 L 424,368" fill="none" stroke="black"/>
                <path d="M 8,384 L 80,384" fill="none" stroke="black"/>
                <path d="M 224,416 L 424,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
                <polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
                <polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
                <polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
                <polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
                <polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="224" y="84">M</text>
                  <text x="280" y="84">anufacturer</text>
                  <text x="40" y="100">:</text>
                  <text x="224" y="100">A</text>
                  <text x="272" y="100">uthorized</text>
                  <text x="384" y="100">Ownership</text>
                  <text x="40" y="116">:</text>
                  <text x="224" y="116">S</text>
                  <text x="260" y="116">igning</text>
                  <text x="376" y="116">Tracker</text>
                  <text x="40" y="132">:</text>
                  <text x="224" y="132">A</text>
                  <text x="268" y="132">uthority</text>
                  <text x="40" y="148">:</text>
                  <text x="40" y="164">:</text>
                  <text x="40" y="180">:</text>
                  <text x="412" y="180">BRSKI-</text>
                  <text x="40" y="196">:</text>
                  <text x="404" y="196">MASA</text>
                  <text x="40" y="212">:</text>
                  <text x="248" y="212">...............................</text>
                  <text x="416" y="212">.........</text>
                  <text x="40" y="228">V</text>
                  <text x="128" y="228">.</text>
                  <text x="448" y="228">.</text>
                  <text x="128" y="244">.</text>
                  <text x="448" y="244">.</text>
                  <text x="128" y="260">.</text>
                  <text x="448" y="260">.</text>
                  <text x="44" y="276">Pledge</text>
                  <text x="116" y="276">BRSKI-</text>
                  <text x="204" y="276">Registrar-</text>
                  <text x="292" y="276">BRSKI-</text>
                  <text x="364" y="276">Domain</text>
                  <text x="448" y="276">.</text>
                  <text x="112" y="292">PRM</text>
                  <text x="184" y="292">Agent</text>
                  <text x="288" y="292">PRM</text>
                  <text x="376" y="292">Registrar</text>
                  <text x="448" y="292">.</text>
                  <text x="448" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="188" y="324">EE</text>
                  <text x="224" y="324">cert.</text>
                  <text x="356" y="324">EE</text>
                  <text x="392" y="324">cert.</text>
                  <text x="448" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="448" y="340">.</text>
                  <text x="44" y="356">IDevID</text>
                  <text x="128" y="356">.</text>
                  <text x="448" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="448" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="248" y="388">Key</text>
                  <text x="324" y="388">Infrastructure</text>
                  <text x="448" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="260" y="404">(e.g.,</text>
                  <text x="304" y="404">PKI</text>
                  <text x="336" y="404">CA)</text>
                  <text x="448" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="448" y="420">.</text>
                  <text x="288" y="436">.........................................</text>
                  <text x="260" y="452">Customer</text>
                  <text x="324" y="452">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t><xref target="uc2figure"/> shows the relations between the following main components:</t>
        <ul spacing="normal">
          <li>
            <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocols to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by the Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
              </li>
              <li>
                <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
              </li>
              <li>
                <t>The pledge includes additional data in the PVR, which is provided and signed by the Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
              </li>
              <li>
                <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
This is for situations in which the domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  </t>
            <ul spacing="normal">
              <li>
                <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
              </li>
              <li>
                <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
              </li>
              <li>
                <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
              </li>
              <li>
                <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
              </li>
              <li>
                <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
          </li>
          <li>
            <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
              </li>
              <li>
                <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  </t>
            <ul spacing="normal">
              <li>
                <t>The default format for voucher artifacts (incl. voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
              </li>
              <li>
                <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="arch_nomadic">
        <name>Nomadic Connectivity</name>
        <t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>
        <figure anchor="uc3figure">
          <name>Registrar-Agent nomadic connectivity example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="464" viewBox="0 0 464 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 24,128 L 24,176" fill="none" stroke="black"/>
                <path d="M 96,128 L 96,176" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,64" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,448" fill="none" stroke="black"/>
                <path d="M 336,320 L 336,368" fill="none" stroke="black"/>
                <path d="M 384,72 L 384,312" fill="none" stroke="black"/>
                <path d="M 384,368 L 384,400" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,64" fill="none" stroke="black"/>
                <path d="M 432,320 L 432,368" fill="none" stroke="black"/>
                <path d="M 432,400 L 432,448" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 24,128 L 96,128" fill="none" stroke="black"/>
                <path d="M 104,160 L 184,160" fill="none" stroke="black"/>
                <path d="M 24,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 336,320 L 432,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 328,352" fill="none" stroke="black"/>
                <path d="M 336,368 L 432,368" fill="none" stroke="black"/>
                <path d="M 224,400 L 432,400" fill="none" stroke="black"/>
                <path d="M 224,448 L 432,448" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="392,312 380,306.4 380,317.6" fill="black" transform="rotate(90,384,312)"/>
                <polygon class="arrowhead" points="392,72 380,66.4 380,77.6" fill="black" transform="rotate(270,384,72)"/>
                <polygon class="arrowhead" points="336,352 324,346.4 324,357.6" fill="black" transform="rotate(0,328,352)"/>
                <polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
                <polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
                <polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="164" y="100">........................................</text>
                  <text x="8" y="116">.</text>
                  <text x="40" y="116">v</text>
                  <text x="320" y="116">.</text>
                  <text x="8" y="132">.</text>
                  <text x="248" y="132">.-.-.-.-.-.-.-.</text>
                  <text x="320" y="132">.</text>
                  <text x="8" y="148">.</text>
                  <text x="144" y="148">BRSKI-PRM</text>
                  <text x="192" y="148">:</text>
                  <text x="244" y="148">Registrar-</text>
                  <text x="304" y="148">:</text>
                  <text x="320" y="148">.</text>
                  <text x="8" y="164">.</text>
                  <text x="60" y="164">Pledge</text>
                  <text x="192" y="164">:</text>
                  <text x="224" y="164">Agent</text>
                  <text x="304" y="164">:</text>
                  <text x="320" y="164">.</text>
                  <text x="8" y="180">.</text>
                  <text x="116" y="180">L2</text>
                  <text x="140" y="180">or</text>
                  <text x="164" y="180">L3</text>
                  <text x="248" y="180">:-.-.-.-.-.-.-:</text>
                  <text x="320" y="180">.</text>
                  <text x="420" y="180">BRSKI-</text>
                  <text x="8" y="196">.</text>
                  <text x="140" y="196">connectivity</text>
                  <text x="216" y="196">^</text>
                  <text x="320" y="196">.</text>
                  <text x="412" y="196">MASA</text>
                  <text x="164" y="212">..........................!.............</text>
                  <text x="52" y="228">Pledge</text>
                  <text x="132" y="228">Installation</text>
                  <text x="216" y="228">!</text>
                  <text x="60" y="244">Location</text>
                  <text x="216" y="244">!</text>
                  <text x="256" y="244">Nomadic</text>
                  <text x="216" y="260">!</text>
                  <text x="276" y="260">connectivity</text>
                  <text x="216" y="276">!</text>
                  <text x="252" y="292">...........!....................</text>
                  <text x="424" y="292">.........</text>
                  <text x="128" y="308">.</text>
                  <text x="216" y="308">v</text>
                  <text x="456" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="208" y="324">.-.-.-.-.-.-.-.</text>
                  <text x="300" y="324">BRSKI-</text>
                  <text x="456" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="152" y="340">:</text>
                  <text x="204" y="340">Registrar-</text>
                  <text x="264" y="340">:</text>
                  <text x="296" y="340">PRM</text>
                  <text x="372" y="340">Domain</text>
                  <text x="456" y="340">.</text>
                  <text x="128" y="356">.</text>
                  <text x="152" y="356">:</text>
                  <text x="184" y="356">Agent</text>
                  <text x="264" y="356">:</text>
                  <text x="384" y="356">Registrar</text>
                  <text x="456" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="208" y="372">:-.-.-.-.-.-.-:</text>
                  <text x="456" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="456" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="456" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="248" y="420">Key</text>
                  <text x="324" y="420">Infrastructure</text>
                  <text x="456" y="420">.</text>
                  <text x="128" y="436">.</text>
                  <text x="260" y="436">(e.g.,</text>
                  <text x="304" y="436">PKI</text>
                  <text x="336" y="436">CA)</text>
                  <text x="456" y="436">.</text>
                  <text x="128" y="452">.</text>
                  <text x="456" y="452">.</text>
                  <text x="292" y="468">..........................................</text>
                  <text x="260" y="484">Customer</text>
                  <text x="324" y="484">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                          ^
........................................       |
.   v                                  .       |
. +--------+           .-.-.-.-.-.-.-. .       |
. |        | BRSKI-PRM : Registrar-  : .       |
. | Pledge |<--------->: Agent       : .       |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .       | BRSKI-
.          connectivity   ^            .       | MASA
..........................!.............       |
   Pledge Installation    !                    |
   Location               ! Nomadic            |
                          ! connectivity       |
                          !                    |
               ...........!....................|.........
               .          v                    v        .
               .  .-.-.-.-.-.-.-. BRSKI- +-----------+  .
               .  : Registrar-  :  PRM   | Domain    |  .
               .  : Agent       :<------>| Registrar |  .
               .  :-.-.-.-.-.-.-:        +-----+-----+  .
               .                               |        .
               .           +-------------------+-----+  .
               .           | Key Infrastructure      |  .
               .           | (e.g., PKI CA)          |  .
               .           +-------------------------+  .
               ..........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>
        <ol spacing="normal" type="1"><li>
            <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
          </li>
        </ol>
        <t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>
      </section>
      <section anchor="co-located-registrar-agent-and-domain-registrar">
        <name>Co-located Registrar-Agent and Domain Registrar</name>
        <t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>
        <figure anchor="uc4figure">
          <name>Registrar-Agent integrated into Domain Registrar example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="464" viewBox="0 0 464 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,160 L 8,208" fill="none" stroke="black"/>
                <path d="M 80,160 L 80,208" fill="none" stroke="black"/>
                <path d="M 200,32 L 200,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 216,288" fill="none" stroke="black"/>
                <path d="M 368,72 L 368,136" fill="none" stroke="black"/>
                <path d="M 368,224 L 368,256" fill="none" stroke="black"/>
                <path d="M 416,144 L 416,224" fill="none" stroke="black"/>
                <path d="M 416,256 L 416,288" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,64" fill="none" stroke="black"/>
                <path d="M 200,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 200,64 L 424,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 416,144" fill="none" stroke="black"/>
                <path d="M 8,160 L 80,160" fill="none" stroke="black"/>
                <path d="M 88,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 8,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 208,224 L 416,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 416,256" fill="none" stroke="black"/>
                <path d="M 216,288 L 416,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
                <polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
                <g class="text">
                  <text x="48" y="52">.....</text>
                  <text x="92" y="52">Drop</text>
                  <text x="132" y="52">Ship</text>
                  <text x="176" y="52">.....</text>
                  <text x="236" y="52">Vendor</text>
                  <text x="296" y="52">Service</text>
                  <text x="32" y="68">:</text>
                  <text x="32" y="84">:</text>
                  <text x="32" y="100">:</text>
                  <text x="420" y="100">BRSKI-MASA</text>
                  <text x="32" y="116">:</text>
                  <text x="240" y="116">...............................</text>
                  <text x="408" y="116">.........</text>
                  <text x="32" y="132">:</text>
                  <text x="120" y="132">.</text>
                  <text x="440" y="132">.</text>
                  <text x="32" y="148">v</text>
                  <text x="120" y="148">.</text>
                  <text x="440" y="148">.</text>
                  <text x="120" y="164">.</text>
                  <text x="156" y="164">BRSKI-</text>
                  <text x="268" y="164">..............</text>
                  <text x="440" y="164">.</text>
                  <text x="120" y="180">.</text>
                  <text x="152" y="180">PRM</text>
                  <text x="216" y="180">.</text>
                  <text x="268" y="180">Registrar-</text>
                  <text x="320" y="180">.</text>
                  <text x="356" y="180">Domain</text>
                  <text x="440" y="180">.</text>
                  <text x="44" y="196">Pledge</text>
                  <text x="216" y="196">.</text>
                  <text x="248" y="196">Agent</text>
                  <text x="320" y="196">.</text>
                  <text x="368" y="196">Registrar</text>
                  <text x="440" y="196">.</text>
                  <text x="100" y="212">L2</text>
                  <text x="124" y="212">or</text>
                  <text x="148" y="212">L3</text>
                  <text x="268" y="212">..............</text>
                  <text x="440" y="212">.</text>
                  <text x="140" y="228">connectivity</text>
                  <text x="440" y="228">.</text>
                  <text x="120" y="244">.</text>
                  <text x="440" y="244">.</text>
                  <text x="120" y="260">.</text>
                  <text x="440" y="260">.</text>
                  <text x="120" y="276">.</text>
                  <text x="240" y="276">Key</text>
                  <text x="316" y="276">Infrastructure</text>
                  <text x="440" y="276">.</text>
                  <text x="120" y="292">.</text>
                  <text x="440" y="292">.</text>
                  <text x="280" y="308">.........................................</text>
                  <text x="252" y="324">Customer</text>
                  <text x="316" y="324">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         | BRSKI-MASA
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    . BRSKI-   |..............           |  .
 |        |    .  PRM     |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of stand-alone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>
      </section>
      <section anchor="agt_prx">
        <name>Agent Proximity Assertion</name>
        <t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicates via the Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <tt>agent-proximity</tt>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>
        <t>In BRSKI, the pledge verifies POP of the registrar end-entity (EE) credentials via the TLS handshake and pins that public key as the <tt>proximity-registrar-cert</tt> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>
        <t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>
        <t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>
      </section>
    </section>
    <section anchor="system-components">
      <name>System Components</name>
      <section anchor="agent_component">
        <name>Registrar-Agent</name>
        <t>The Registrar-Agent is a new component in BRSKI-PRM that provides a store and forward communication path with secure message passing between pledges in responder mode and the domain registrar.
It uses its own end-entity (EE) certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.</t>
        <t>The Registrar-Agent EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference within agent-signed data objects as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>
        <t>The SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate in agent-signed data objects to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>
        <t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short lived Registrar-Agent EE certificates in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>
        <t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration or a repository.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>
        <t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow for the discovery of pledges by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an (out-of-band) interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number data record.</t>
        <t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before the interaction with a pledge:</t>
        <ul spacing="normal">
          <li>
            <t>Registrar-Agent EE certificate and corresponding private key: own operational credentials to authenticate and sign agent-signed data</t>
          </li>
          <li>
            <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
          </li>
          <li>
            <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
          </li>
        </ul>
        <t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
        <t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge manufacturer/vendor to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
        <section anchor="discovery_uc2_reg">
          <name>Discovery of the Registrar</name>
          <t>While the Registrar-Agent requires the IP address of the domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>
          <t>Moreover, the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence this standard discovery is not applicable.</t>
          <t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
For further discussion, see <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
        </section>
        <section anchor="discovery_uc2_ppa">
          <name>Discovery of the Pledge</name>
          <t>The discovery of the pledge by the Registrar-Agent in the context of this document describes the minimum discovery approach that <bcp14>MUST</bcp14> be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS, is discussed in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref section="9" sectionFormat="of" target="RFC6762"/> provides support for conflict resolution in situations when a DNS-SD with mDNS responder receives an mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>
          <t>The pledge constructs a Service Instance Name based on device local information (manufacturer/vendor name and serial number), which results in <tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>.
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance.
To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>
          <t>Note that this goes against the naming recommendation of <xref target="RFC6763"/>.
The <tt>_brski-pledge._tcp</tt> service, however, targets machine-to-machine discovery.</t>
          <t>In the absence of a more general discovery as defined in <xref target="I-D.ietf-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14> use</t>
          <ul spacing="normal">
            <li>
              <t><tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>, to discover a specific pledge, e.g., when connected to a local network.</t>
            </li>
            <li>
              <t><tt>_brski-pledge._tcp.local</tt> to get a list of pledges to be bootstrapped.</t>
            </li>
          </ul>
          <t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer supports this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>
          <t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet, it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>
        </section>
      </section>
      <section anchor="pledge_component">
        <name>Pledge in Responder Mode</name>
        <t>In BRSKI-PRM, the pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>
        <t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> URI path, except for the <bcp14>OPTIONAL</bcp14> endpoint "qps".
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>
        <table anchor="pledge_ep_table">
          <name>Well-Known Endpoints on a Pledge in Responder Mode</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">
                <xref target="tpvr"/></td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">
                <xref target="tper"/></td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply Voucher to Pledge</td>
              <td align="left">
                <xref target="voucher"/></td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA Certificates to Pledge</td>
              <td align="left">
                <xref target="cacerts"/></td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to Pledge</td>
              <td align="left">
                <xref target="enroll_response"/></td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query Pledge Status</td>
              <td align="left">
                <xref target="query"/></td>
            </tr>
          </tbody>
        </table>
        <t>HTTP(S) uses the Host header field (or :authority in HTTP/2) to allow for name-based virtual hosting as explained in <xref section="7.2" sectionFormat="of" target="RFC9110"/>.
This header field is mandatory, and so a compliant HTTP(S) client is going to insert it, which may be just an IP address.
The pledge <bcp14>MUST</bcp14> respond to all requests regardless of the Host header field provided by the client (i.e., ignore it).
Note that there is no requirement for the pledge to operate its BRSKI-PRM service on port 80 or port 443, so there is no reason for name-based virtual hosting.</t>
        <t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <tt>http://pledge.example.com/.well-known/brski/tpvr</tt>, it sets the Host header field to <tt>pledge.example.com</tt> and the absolute path <tt>/.well-known/brski/tpbr</tt>.
In practice, however, the pledge is usually known by a <tt>.local</tt> hostname or only its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>
        <t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the voucher-requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>
        <section anchor="pledge-with-combined-functionality">
          <name>Pledge with Combined Functionality</name>
          <t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>
          <t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-like attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>
          <t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>
        </section>
      </section>
      <section anchor="registrar_component">
        <name>Domain Registrar</name>
        <t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>
        <table anchor="registrar_ep_table">
          <name>Additional Well-Known Endpoints on a BRSKI-PRM Registrar</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to Registrar</td>
              <td align="left">
                <xref target="per"/></td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain CA Certificates</td>
              <td align="left">
                <xref target="obtain_cacerts"/></td>
            </tr>
          </tbody>
        </table>
        <t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).
Overall, this may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>
        <t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>
        <t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>
        <t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>
        <section anchor="domain-registrar-with-combined-functionality">
          <name>Domain Registrar with Combined Functionality</name>
          <t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>
          <t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment that the connecting client is a Registrar-Agent.</t>
          <t>The registrar <bcp14>MAY</bcp14> be restricted by configuration, if it accepts every Registrar-Agent, which can authenticate with a domain issued certificate or only explicitly authorized ones.</t>
          <t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>
        </section>
      </section>
      <section anchor="masa">
        <name>MASA</name>
        <t>The Manufacturer Authorized Signing Authority (MASA) is a vendor service that generates and signs voucher artifacts for pledges by the same vendor.
When these pledges support BRSKI-PRM, the MASA needs to implement the following functionality in addition to BRSKI <xref target="RFC8995"/>.</t>
        <t>A MASA for pledges in responder mode <bcp14>MUST</bcp14> support the voucher format defined in <xref target="I-D.ietf-anima-jws-voucher"/> to parse and process JWS-signed voucher-request artifacts and generate JWS-signed voucher artifacts.</t>
        <t>Further, a MASA for pledges in responder mode <bcp14>MUST</bcp14> support the Agent Proximity Assertion (see <xref target="agt_prx"/>) through the validation steps defined in <xref target="masa_interaction"/> based on the Pledge Voucher-Request (PVR) and Registrar Voucher-Request (RVR) artifact fields defined in <xref target="pvr_artifact"/> and <xref target="rvr_artifact"/>, respectively.</t>
      </section>
    </section>
    <section anchor="exchanges">
      <name>Exchanges and Artifacts</name>
      <t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>
      <t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>
      <t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>
      <figure anchor="exchangesfig_uc2_all">
        <name>Overview pledge-responder-mode exchanges</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
              <path d="M 16,88 L 16,192" fill="none" stroke="black"/>
              <path d="M 16,256 L 16,320" fill="none" stroke="black"/>
              <path d="M 16,384 L 16,448" fill="none" stroke="black"/>
              <path d="M 16,512 L 16,800" fill="none" stroke="black"/>
              <path d="M 16,864 L 16,960" fill="none" stroke="black"/>
              <path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
              <path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
              <path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
              <path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
              <path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
              <path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
              <path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
              <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
              <path d="M 168,88 L 168,192" fill="none" stroke="black"/>
              <path d="M 168,256 L 168,320" fill="none" stroke="black"/>
              <path d="M 168,384 L 168,448" fill="none" stroke="black"/>
              <path d="M 168,512 L 168,800" fill="none" stroke="black"/>
              <path d="M 168,864 L 168,960" fill="none" stroke="black"/>
              <path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
              <path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
              <path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
              <path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
              <path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
              <path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
              <path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
              <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
              <path d="M 312,88 L 312,192" fill="none" stroke="black"/>
              <path d="M 312,256 L 312,320" fill="none" stroke="black"/>
              <path d="M 312,384 L 312,448" fill="none" stroke="black"/>
              <path d="M 312,512 L 312,544" fill="none" stroke="black"/>
              <path d="M 312,592 L 312,624" fill="none" stroke="black"/>
              <path d="M 312,656 L 312,800" fill="none" stroke="black"/>
              <path d="M 312,864 L 312,960" fill="none" stroke="black"/>
              <path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
              <path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
              <path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
              <path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
              <path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
              <path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
              <path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
              <path d="M 456,88 L 456,192" fill="none" stroke="black"/>
              <path d="M 456,256 L 456,320" fill="none" stroke="black"/>
              <path d="M 456,384 L 456,448" fill="none" stroke="black"/>
              <path d="M 456,512 L 456,664" fill="none" stroke="black"/>
              <path d="M 456,784 L 456,800" fill="none" stroke="black"/>
              <path d="M 456,864 L 456,960" fill="none" stroke="black"/>
              <path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
              <path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
              <path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
              <path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
              <path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
              <path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
              <path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
              <path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
              <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
              <path d="M 560,88 L 560,192" fill="none" stroke="black"/>
              <path d="M 560,256 L 560,320" fill="none" stroke="black"/>
              <path d="M 560,384 L 560,448" fill="none" stroke="black"/>
              <path d="M 560,512 L 560,704" fill="none" stroke="black"/>
              <path d="M 560,752 L 560,800" fill="none" stroke="black"/>
              <path d="M 560,864 L 560,960" fill="none" stroke="black"/>
              <path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
              <path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
              <path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
              <path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
              <path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
              <path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
              <path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
              <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
              <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
              <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
              <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
              <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
              <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
              <path d="M 24,160 L 160,160" fill="none" stroke="black"/>
              <path d="M 24,176 L 160,176" fill="none" stroke="black"/>
              <path d="M 24,272 L 56,272" fill="none" stroke="black"/>
              <path d="M 128,272 L 160,272" fill="none" stroke="black"/>
              <path d="M 24,288 L 72,288" fill="none" stroke="black"/>
              <path d="M 112,288 L 160,288" fill="none" stroke="black"/>
              <path d="M 24,304 L 80,304" fill="none" stroke="black"/>
              <path d="M 112,304 L 160,304" fill="none" stroke="black"/>
              <path d="M 24,400 L 56,400" fill="none" stroke="black"/>
              <path d="M 128,400 L 160,400" fill="none" stroke="black"/>
              <path d="M 24,416 L 72,416" fill="none" stroke="black"/>
              <path d="M 112,416 L 160,416" fill="none" stroke="black"/>
              <path d="M 24,432 L 80,432" fill="none" stroke="black"/>
              <path d="M 112,432 L 160,432" fill="none" stroke="black"/>
              <path d="M 176,528 L 216,528" fill="none" stroke="black"/>
              <path d="M 256,528 L 304,528" fill="none" stroke="black"/>
              <path d="M 176,608 L 224,608" fill="none" stroke="black"/>
              <path d="M 256,608 L 304,608" fill="none" stroke="black"/>
              <path d="M 320,672 L 416,672" fill="none" stroke="black"/>
              <path d="M 456,672 L 552,672" fill="none" stroke="black"/>
              <path d="M 320,688 L 424,688" fill="none" stroke="black"/>
              <path d="M 456,688 L 552,688" fill="none" stroke="black"/>
              <path d="M 320,768 L 408,768" fill="none" stroke="black"/>
              <path d="M 472,768 L 552,768" fill="none" stroke="black"/>
              <path d="M 176,784 L 208,784" fill="none" stroke="black"/>
              <path d="M 280,784 L 304,784" fill="none" stroke="black"/>
              <path d="M 176,880 L 216,880" fill="none" stroke="black"/>
              <path d="M 256,880 L 304,880" fill="none" stroke="black"/>
              <path d="M 176,896 L 224,896" fill="none" stroke="black"/>
              <path d="M 256,896 L 304,896" fill="none" stroke="black"/>
              <path d="M 320,912 L 344,912" fill="none" stroke="black"/>
              <path d="M 424,912 L 448,912" fill="none" stroke="black"/>
              <path d="M 320,928 L 336,928" fill="none" stroke="black"/>
              <path d="M 176,944 L 192,944" fill="none" stroke="black"/>
              <path d="M 288,944 L 304,944" fill="none" stroke="black"/>
              <path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
              <path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
              <path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
              <path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
              <path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
              <path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
              <path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
              <path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
              <path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
              <path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
              <path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
              <path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
              <path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
              <path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
              <path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
              <path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
              <path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
              <path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
              <path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
              <path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
              <path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
              <path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
              <path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
              <path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
              <path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
              <path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
              <path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
              <path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
              <path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
              <path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
              <path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
              <path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
              <path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
              <path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
              <path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
              <path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
              <path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
              <path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
              <path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
              <path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
              <polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
              <polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
              <polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
              <polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
              <polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
              <polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
              <polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
              <polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
              <polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
              <polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
              <polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
              <polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
              <polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
              <polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
              <polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
              <polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
              <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
              <polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
              <polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
              <polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
              <polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
              <polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
              <polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
              <polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
              <polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
              <polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
              <polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
              <polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
              <polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
              <polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
              <polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
              <polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
              <polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
              <polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
              <polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
              <polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
              <polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
              <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
              <polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
              <polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
              <polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
              <polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
              <polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
              <polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
              <polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
              <polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
              <polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
              <polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
              <polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
              <polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
              <polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
              <g class="text">
                <text x="44" y="52">Pledge</text>
                <text x="172" y="52">Registrar-</text>
                <text x="308" y="52">Domain</text>
                <text x="432" y="52">Key</text>
                <text x="540" y="52">MASA</text>
                <text x="168" y="68">Agent</text>
                <text x="312" y="68">Registrar</text>
                <text x="436" y="68">Infra.</text>
                <text x="516" y="100">Internet</text>
                <text x="92" y="116">discover</text>
                <text x="92" y="132">pledge</text>
                <text x="68" y="148">mDNS</text>
                <text x="112" y="148">query</text>
                <text x="16" y="212">~</text>
                <text x="168" y="212">~</text>
                <text x="312" y="212">~</text>
                <text x="456" y="212">~</text>
                <text x="560" y="212">~</text>
                <text x="16" y="228">(1)</text>
                <text x="64" y="228">Trigger</text>
                <text x="124" y="228">Pledge</text>
                <text x="216" y="228">Voucher-Request</text>
                <text x="16" y="244">~</text>
                <text x="168" y="244">~</text>
                <text x="312" y="244">~</text>
                <text x="456" y="244">~</text>
                <text x="560" y="244">~</text>
                <text x="76" y="276">opt.</text>
                <text x="112" y="276">TLS</text>
                <text x="92" y="292">tPVR</text>
                <text x="96" y="308">PVR</text>
                <text x="16" y="340">~</text>
                <text x="168" y="340">~</text>
                <text x="312" y="340">~</text>
                <text x="456" y="340">~</text>
                <text x="560" y="340">~</text>
                <text x="16" y="356">(2)</text>
                <text x="64" y="356">Trigger</text>
                <text x="124" y="356">Pledge</text>
                <text x="212" y="356">Enroll-Request</text>
                <text x="16" y="372">~</text>
                <text x="168" y="372">~</text>
                <text x="312" y="372">~</text>
                <text x="456" y="372">~</text>
                <text x="560" y="372">~</text>
                <text x="76" y="404">opt.</text>
                <text x="112" y="404">TLS</text>
                <text x="92" y="420">tPER</text>
                <text x="96" y="436">PER</text>
                <text x="16" y="468">~</text>
                <text x="168" y="468">~</text>
                <text x="312" y="468">~</text>
                <text x="456" y="468">~</text>
                <text x="560" y="468">~</text>
                <text x="16" y="484">(3)</text>
                <text x="60" y="484">Supply</text>
                <text x="104" y="484">PVR</text>
                <text x="132" y="484">to</text>
                <text x="184" y="484">Registrar</text>
                <text x="268" y="484">(including</text>
                <text x="332" y="484">MASA</text>
                <text x="404" y="484">interaction)</text>
                <text x="16" y="500">~</text>
                <text x="168" y="500">~</text>
                <text x="312" y="500">~</text>
                <text x="456" y="500">~</text>
                <text x="560" y="500">~</text>
                <text x="236" y="532">mTLS</text>
                <text x="308" y="564">[Registrar-Agent</text>
                <text x="308" y="580">authenticated&amp;authorized?]</text>
                <text x="240" y="612">PVR</text>
                <text x="280" y="644">[accept</text>
                <text x="348" y="644">device?]</text>
                <text x="436" y="676">mTLS</text>
                <text x="440" y="692">RVR</text>
                <text x="456" y="708">~</text>
                <text x="460" y="724">[extract</text>
                <text x="536" y="724">DomainID]</text>
                <text x="456" y="740">[update</text>
                <text x="532" y="740">audit-log]</text>
                <text x="456" y="756">~</text>
                <text x="440" y="772">Voucher</text>
                <text x="244" y="788">Voucher'</text>
                <text x="16" y="820">~</text>
                <text x="168" y="820">~</text>
                <text x="312" y="820">~</text>
                <text x="456" y="820">~</text>
                <text x="560" y="820">~</text>
                <text x="16" y="836">(4)</text>
                <text x="60" y="836">Supply</text>
                <text x="104" y="836">PER</text>
                <text x="132" y="836">to</text>
                <text x="184" y="836">Registrar</text>
                <text x="268" y="836">(including</text>
                <text x="328" y="836">Key</text>
                <text x="404" y="836">Infrastructure</text>
                <text x="516" y="836">interaction)</text>
                <text x="16" y="852">~</text>
                <text x="168" y="852">~</text>
                <text x="312" y="852">~</text>
                <text x="456" y="852">~</text>
                <text x="560" y="852">~</text>
                <text x="236" y="884">mTLS</text>
                <text x="240" y="900">PER</text>
                <text x="384" y="916">[Request]</text>
                <text x="396" y="932">[Certificate]-</text>
                <text x="240" y="948">Enroll-Resp</text>
                <text x="16" y="980">~</text>
                <text x="168" y="980">~</text>
                <text x="312" y="980">~</text>
                <text x="456" y="980">~</text>
                <text x="560" y="980">~</text>
                <text x="16" y="996">(5)</text>
                <text x="60" y="996">Obtain</text>
                <text x="100" y="996">CA</text>
                <text x="164" y="996">Certificates</text>
                <text x="16" y="1012">~</text>
                <text x="168" y="1012">~</text>
                <text x="312" y="1012">~</text>
                <text x="456" y="1012">~</text>
                <text x="560" y="1012">~</text>
                <text x="236" y="1044">mTLS</text>
                <text x="240" y="1060">caCerts</text>
                <text x="16" y="1092">~</text>
                <text x="168" y="1092">~</text>
                <text x="312" y="1092">~</text>
                <text x="456" y="1092">~</text>
                <text x="560" y="1092">~</text>
                <text x="16" y="1108">(6)</text>
                <text x="60" y="1108">Supply</text>
                <text x="120" y="1108">Voucher</text>
                <text x="164" y="1108">to</text>
                <text x="204" y="1108">Pledge</text>
                <text x="16" y="1124">~</text>
                <text x="168" y="1124">~</text>
                <text x="312" y="1124">~</text>
                <text x="456" y="1124">~</text>
                <text x="560" y="1124">~</text>
                <text x="76" y="1156">opt.</text>
                <text x="112" y="1156">TLS</text>
                <text x="100" y="1172">Voucher'</text>
                <text x="96" y="1188">vStatus</text>
                <text x="16" y="1220">~</text>
                <text x="168" y="1220">~</text>
                <text x="312" y="1220">~</text>
                <text x="456" y="1220">~</text>
                <text x="560" y="1220">~</text>
                <text x="16" y="1236">(7)</text>
                <text x="60" y="1236">Supply</text>
                <text x="100" y="1236">CA</text>
                <text x="164" y="1236">Certificates</text>
                <text x="228" y="1236">to</text>
                <text x="268" y="1236">Pledge</text>
                <text x="16" y="1252">~</text>
                <text x="168" y="1252">~</text>
                <text x="312" y="1252">~</text>
                <text x="456" y="1252">~</text>
                <text x="560" y="1252">~</text>
                <text x="76" y="1284">opt.</text>
                <text x="112" y="1284">TLS</text>
                <text x="96" y="1300">caCerts</text>
                <text x="16" y="1332">~</text>
                <text x="168" y="1332">~</text>
                <text x="312" y="1332">~</text>
                <text x="456" y="1332">~</text>
                <text x="560" y="1332">~</text>
                <text x="16" y="1348">(8)</text>
                <text x="60" y="1348">Supply</text>
                <text x="152" y="1348">Enroll-Response</text>
                <text x="228" y="1348">to</text>
                <text x="268" y="1348">Pledge</text>
                <text x="16" y="1364">~</text>
                <text x="168" y="1364">~</text>
                <text x="312" y="1364">~</text>
                <text x="456" y="1364">~</text>
                <text x="560" y="1364">~</text>
                <text x="76" y="1396">opt.</text>
                <text x="112" y="1396">TLS</text>
                <text x="96" y="1412">Enroll-Resp</text>
                <text x="88" y="1428">eStatus</text>
                <text x="16" y="1460">~</text>
                <text x="168" y="1460">~</text>
                <text x="312" y="1460">~</text>
                <text x="456" y="1460">~</text>
                <text x="560" y="1460">~</text>
                <text x="16" y="1476">(9)</text>
                <text x="64" y="1476">Voucher</text>
                <text x="124" y="1476">Status</text>
                <text x="192" y="1476">Telemetry</text>
                <text x="276" y="1476">(including</text>
                <text x="352" y="1476">backend</text>
                <text x="436" y="1476">interaction)</text>
                <text x="16" y="1492">~</text>
                <text x="168" y="1492">~</text>
                <text x="312" y="1492">~</text>
                <text x="456" y="1492">~</text>
                <text x="560" y="1492">~</text>
                <text x="236" y="1524">mTLS</text>
                <text x="240" y="1540">vStatus</text>
                <text x="436" y="1556">mTLS</text>
                <text x="368" y="1572">req</text>
                <text x="412" y="1572">device</text>
                <text x="480" y="1572">audit-log</text>
                <text x="396" y="1588">device</text>
                <text x="464" y="1588">audit-log</text>
                <text x="264" y="1620">[verify</text>
                <text x="340" y="1620">audit-log]</text>
                <text x="312" y="1636">|</text>
                <text x="16" y="1652">~</text>
                <text x="168" y="1652">~</text>
                <text x="312" y="1652">~</text>
                <text x="456" y="1652">~</text>
                <text x="560" y="1652">~</text>
                <text x="20" y="1668">(10)</text>
                <text x="68" y="1668">Enroll</text>
                <text x="124" y="1668">Status</text>
                <text x="192" y="1668">Telemetry</text>
                <text x="16" y="1684">~</text>
                <text x="168" y="1684">~</text>
                <text x="312" y="1684">~</text>
                <text x="456" y="1684">~</text>
                <text x="560" y="1684">~</text>
                <text x="236" y="1716">mTLS</text>
                <text x="240" y="1732">eStatus</text>
                <text x="16" y="1764">~</text>
                <text x="168" y="1764">~</text>
                <text x="312" y="1764">~</text>
                <text x="456" y="1764">~</text>
                <text x="560" y="1764">~</text>
                <text x="20" y="1780">(11)</text>
                <text x="64" y="1780">Query</text>
                <text x="116" y="1780">Pledge</text>
                <text x="172" y="1780">Status</text>
                <text x="16" y="1796">~</text>
                <text x="168" y="1796">~</text>
                <text x="312" y="1796">~</text>
                <text x="456" y="1796">~</text>
                <text x="560" y="1796">~</text>
                <text x="76" y="1828">opt.</text>
                <text x="112" y="1828">TLS</text>
                <text x="96" y="1844">tStatus</text>
                <text x="96" y="1860">pStatus</text>
                <text x="16" y="1892">~</text>
                <text x="168" y="1892">~</text>
                <text x="312" y="1892">~</text>
                <text x="456" y="1892">~</text>
                <text x="560" y="1892">~</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
        </artset>
      </figure>
      <t>The following subsections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>
      <ol spacing="normal" type="1"><li>
          <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
        </li>
        <li>
          <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
        </li>
        <li>
          <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
        </li>
        <li>
          <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
        </li>
        <li>
          <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
        </li>
        <li>
          <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
        </li>
      </ol>
      <section anchor="tpvr">
        <name>Trigger Pledge Voucher-Request</name>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> begin the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_1">
          <name>PVR acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(1)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="216" y="132">Voucher-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPVR</text>
                  <text x="96" y="212">PVR</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tpvr</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).</t>
        <t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <tt>application/json</tt></t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/voucher-jws+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tpvr_artifact">
          <name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>
          <t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>
          <t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>
          <figure anchor="tpvr_CDDL_def">
            <name>CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork>
          </figure>
          <t>The <tt>agent-provided-proximity-registrar-cert</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <tt>agent-signed-data</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>
          <figure anchor="tpvr_example">
            <name>tPVR Representation in JSON</name>
            <artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork>
          </figure>
          <section anchor="jws-asd">
            <name>JWS Agent-Signed Data</name>
            <t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <tt>agent-signed-data</tt> as binary.
For the JWS-signed JSON format used by this specification, the <tt>agent-signed-data</tt> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <tt>agent-signed-data</tt> member of the tPVR artifact:</t>
            <figure anchor="asd_representation">
              <name>JWS Agent-Signed Data in General JWS JSON Serialization Syntax</name>
              <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
            </figure>
            <t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
            <section anchor="prm-asd">
              <name>JSON Agent-Signed Data</name>
              <t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>
              <figure anchor="prmasd_CDDL_def">
                <name>CDDL for JSON Agent-Signed Data (prmasd)</name>
                <artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork>
              </figure>
              <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>
              <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>
              <t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>
              <figure anchor="prmasd_payload">
                <name>JSON Agent-Signed Data Example</name>
                <artwork type="json" align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "vendor-pledge4711"
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-protected-header">
              <name>JWS Protected Header</name>
              <t>The JWS Protected Header of the <tt>agent-signed-data</tt> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
              <ul spacing="normal">
                <li>
                  <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
                </li>
                <li>
                  <t><tt>kid</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/></t>
                </li>
              </ul>
              <t><xref target="asd_header"/> below shows an example for this JWS Protected Header:</t>
              <figure anchor="asd_header">
                <name>JWS Protected Header Example for</name>
                <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-signature">
              <name>JWS Signature</name>
              <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <tt>agent-signed-data</tt> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            </section>
          </section>
        </section>
        <section anchor="pvr_artifact">
          <name>Response Artifact: Pledge Voucher-Request (PVR)</name>
          <t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>
          <figure anchor="pvr_representation">
            <name>PVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="pvr_data">
            <name>JSON PVR Data</name>
            <t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the PVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time</t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
              </li>
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the assertion type <tt>agent-proximity</tt> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>)</t>
              </li>
              <li>
                <t><tt>agent-provided-proximity-registrar-cert</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion</t>
              </li>
              <li>
                <t><tt>agent-signed-data</tt>: <bcp14>SHALL</bcp14> contain the same value as the <tt>agent-signed-data</tt> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge</t>
              </li>
            </ul>
            <t><xref target="pvr_data_example"/> below shows an example for the JSON PVR Data:</t>
            <figure anchor="pvr_data_example">
              <name>JSON PVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-1">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-1">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="tper">
        <name>Trigger Pledge Enroll-Request</name>
        <t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_2">
          <name>PER acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(2)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="212" y="132">Enroll-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPER</text>
                  <text x="96" y="212">PER</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tper</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>MAY</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tper_artifact">
          <name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>
          <t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>
          <t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>
          <t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>
          <figure anchor="tper_CDDL_def">
            <name>CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork>
          </figure>
          <t>The <tt>enroll-type</tt> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <tt>enroll-generic-cert</tt> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>
        </section>
        <section anchor="per_artifact">
          <name>Response Artifact: Pledge Enroll-Request (PER)</name>
          <t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>
          <t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="per_representation">
            <name>PER Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="per_data">
            <name>JSON CSR Data</name>
            <t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <tt>csr-grouping</tt> of the <tt>ietf-ztp-types</tt> YANG module defined in <xref section="3.2" sectionFormat="of" target="RFC9646"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="RFC9646"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <tt>p10-csr</tt> case of the <tt>csr-grouping</tt> <bcp14>MUST</bcp14> be used.</t>
            <t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>
            <figure anchor="csr_example">
              <name>JSON CSR Data Example</name>
              <artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-2">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
              <li>
                <t><tt>crit</tt>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <tt>created-on</tt> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/></t>
              </li>
            </ul>
            <t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time</t>
              </li>
            </ul>
            <t>The new protected Header Parameter <tt>created-on</tt> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <tt>created-on</tt> of PER &gt;= <tt>created-on</tt> of PVR &gt;= <tt>created-on</tt> of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider ignoring any but the newest PER artifact from the same pledge in case the registrar has at any point in time more than one pending PER from the pledge.</t>
            <t><xref target="per_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="per_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-2">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            <t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported similarly.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>
          </section>
        </section>
      </section>
      <section anchor="pvr">
        <name>Supply PVR to Registrar (including MASA interaction)</name>
        <t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>
        <t>The registrar <bcp14>SHOULD</bcp14> verify the TLS client authentication of the Registrar-Agent, in particular if the TLS session is used to obtain the Registrar-Agent EE certificate (see <xref target="registrar_component"/>).
Note that authentication and authorization of the pledge verified during the TLS session based on the signatures inside the PVR artifact.</t>
        <t>As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>
        <t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_3">
          <name>Voucher issuing exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,448" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,448" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,192" fill="none" stroke="black"/>
                <path d="M 312,240 L 312,272" fill="none" stroke="black"/>
                <path d="M 312,304 L 312,448" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,312" fill="none" stroke="black"/>
                <path d="M 456,432 L 456,448" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,352" fill="none" stroke="black"/>
                <path d="M 560,400 L 560,448" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,256 L 224,256" fill="none" stroke="black"/>
                <path d="M 256,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 320,320 L 416,320" fill="none" stroke="black"/>
                <path d="M 456,320 L 552,320" fill="none" stroke="black"/>
                <path d="M 320,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 456,336 L 552,336" fill="none" stroke="black"/>
                <path d="M 320,416 L 408,416" fill="none" stroke="black"/>
                <path d="M 472,416 L 552,416" fill="none" stroke="black"/>
                <path d="M 176,432 L 208,432" fill="none" stroke="black"/>
                <path d="M 280,432 L 304,432" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
                <polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
                <polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
                <polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
                <polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(3)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PVR</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="344" y="132">backend</text>
                  <text x="428" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="308" y="212">[Registrar-Agent</text>
                  <text x="308" y="228">authenticated&amp;authorized?]</text>
                  <text x="240" y="260">PVR</text>
                  <text x="280" y="292">[accept</text>
                  <text x="348" y="292">device?]</text>
                  <text x="436" y="324">mTLS</text>
                  <text x="440" y="340">RVR</text>
                  <text x="456" y="356">~</text>
                  <text x="460" y="372">[extract</text>
                  <text x="536" y="372">DomainID]</text>
                  <text x="456" y="388">[update</text>
                  <text x="532" y="388">audit-log]</text>
                  <text x="456" y="404">~</text>
                  <text x="440" y="420">Voucher</text>
                  <text x="244" y="436">Voucher'</text>
                  <text x="16" y="468">~</text>
                  <text x="168" y="468">~</text>
                  <text x="312" y="468">~</text>
                  <text x="456" y="468">~</text>
                  <text x="560" y="468">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>
        <ul spacing="normal">
          <li>
            <t>the <tt>agent-provided-proximity-registrar-cert</tt> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate</t>
          </li>
          <li>
            <t>the <tt>agent-signed-data</tt> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header of the <tt>agent-signed-data</tt> field.</t>
          </li>
          <li>
            <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
          </li>
          <li>
            <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <tt>agent-signed-data</tt> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PVR, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
          </li>
          <li>
            <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported</t>
          </li>
        </ul>
        <t>Otherwise, the registrar converts the PVR artifact to a Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>
        <t>Optionally, the domain registrar <bcp14>MAY</bcp14> respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>
        <t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="masa_interaction">
          <name>MASA Interaction</name>
          <t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges <bcp14>MUST</bcp14> support the same formats as supported by those pledges.</t>
          <t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> choose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <tt>prior-signed-voucher-request</tt> field of the RVR that</t>
          <ul spacing="normal">
            <li>
              <t>the <tt>agent-provided-proximity-registrar-cert</tt> field contains an EE certificate that is signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent</t>
            </li>
            <li>
              <t>the registrar EE certificate in the <tt>agent-provided-proximity-registrar-cert</tt> field and the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR are signed by the same domain owner.</t>
            </li>
            <li>
              <t>the <tt>agent-signed-data</tt> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header in the <tt>agent-signed-data</tt> field.</t>
            </li>
            <li>
              <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of PVR and the <tt>serial-number</tt> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
            </li>
          </ul>
          <t>If the <tt>agent-sign-cert</tt> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>
          <t>If the verification fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>
          <ul spacing="normal">
            <li>
              <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden</t>
            </li>
            <li>
              <t>404 Not Found: if the request is for a device that is not known to the MASA</t>
            </li>
            <li>
              <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type</t>
            </li>
            <li>
              <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA</t>
            </li>
          </ul>
          <t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        </section>
        <section anchor="supply-voucher-to-registrar-agent">
          <name>Supply Voucher to Registrar-Agent</name>
          <t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>
          <t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Registrar-Countersigned Voucher artifact (Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>If the domain registrar is unable to return the Voucher, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>
          <ul spacing="normal">
            <li>
              <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure</t>
            </li>
            <li>
              <t>502 Bad Gateway: if the registrar received an invalid response from the MASA</t>
            </li>
            <li>
              <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <tt>Retry-After</tt> response header field with an appropriate value</t>
            </li>
            <li>
              <t>504 Gateway Timeout: if the backend request to the MASA timed out</t>
            </li>
          </ul>
        </section>
        <section anchor="request-artifact-pledge-voucher-request-pvr">
          <name>Request Artifact: Pledge Voucher-Request (PVR)</name>
          <t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>
        </section>
        <section anchor="rvr_artifact">
          <name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>
          <t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>
          <figure anchor="rvr_representation">
            <name>RVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="rvr_data">
            <name>JSON RVR Data</name>
            <t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a copy of the <tt>nonce</tt> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
              </li>
              <li>
                <t><tt>idevid-issuer</tt>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <tt>x5c</tt> field</t>
              </li>
              <li>
                <t><tt>prior-signed-voucher-request</tt>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
              </li>
            </ul>
            <t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>
            <ul spacing="normal">
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the value <tt>agent-proximity</tt> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar</t>
              </li>
              <li>
                <t><tt>agent-sign-cert</tt>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <tt>agent-signed-data</tt> field of the contained PVR</t>
              </li>
            </ul>
            <t>Note that the <tt>ietf-voucher-request</tt> YANG module defines the leaf <tt>agent-sign-cert</tt> as binary;
this specification refines it as a JSON array structure similar to the <tt>x5c</tt> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
            <t><xref target="rvr_data_example"/> below shows an example for the JSON RVR Data:</t>
            <figure anchor="rvr_data_example">
              <name>JSON RVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-3">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-3">
            <name>JWS Signature</name>
            <t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
        <section anchor="voucher_artifact">
          <name>Backend Response Artifact: Voucher</name>
          <t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <tt>assertion</tt> field <bcp14>MAY</bcp14> contain the value <tt>agent-proximity</tt> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>
          <t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>
          <figure anchor="voucher_data_example">
            <name>JSON RVR Data Example</name>
            <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "vendor-pledge4711"
  }
}
]]></artwork>
          </figure>
        </section>
        <section anchor="rcv_artifact">
          <name>Response Artifact: Registrar-Countersigned Voucher</name>
          <t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>
          <t>For BRSKI-PRM, the domain registrar <bcp14>MUST</bcp14> add an JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>
          <figure anchor="rcv_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork>
          </figure>
          <t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <tt>pinned-domain-cert</tt> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>
          <t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>
          <t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>
          <section anchor="json-voucher-data">
            <name>JSON Voucher Data</name>
            <t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>
          </section>
          <section anchor="jws-protected-header-registrar">
            <name>JWS Protected Header (Registrar)</name>
            <t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data</t>
              </li>
            </ul>
            <t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>
          </section>
          <section anchor="jws-signature-registrar">
            <name>JWS Signature (Registrar)</name>
            <t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>
            <t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>
          </section>
        </section>
      </section>
      <section anchor="per">
        <name>Supply PER to Registrar (including Key Infrastructure interaction)</name>
        <t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>
        <t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER-request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>
        <figure anchor="exchangesfig_uc2_4">
          <name>Enroll exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,256" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,256" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,256" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,256" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 224,192" fill="none" stroke="black"/>
                <path d="M 256,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 344,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 448,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 336,224" fill="none" stroke="black"/>
                <path d="M 176,240 L 192,240" fill="none" stroke="black"/>
                <path d="M 288,240 L 304,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
                <polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(4)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PER</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="328" y="132">Key</text>
                  <text x="404" y="132">Infrastructure</text>
                  <text x="516" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">PER</text>
                  <text x="384" y="212">[Request]</text>
                  <text x="396" y="228">[Certificate]-</text>
                  <text x="240" y="244">Enroll-Resp</text>
                  <text x="16" y="276">~</text>
                  <text x="168" y="276">~</text>
                  <text x="312" y="276">~</text>
                  <text x="456" y="276">~</text>
                  <text x="560" y="276">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestenroll</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>
        <ul spacing="normal">
          <li>
            <t>the PER was signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
          </li>
          <li>
            <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PER, it <bcp14>MUST</bcp14> respond with an HTTP client error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the PER cannot be verified</t>
          </li>
          <li>
            <t>404 Not Found: if the PER is for a device that is not known to the registrar</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>
        <t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate signed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt>.</t>
        <t>If the domain registrar is unable to return the Enroll-Resp, it <bcp14>MUST</bcp14> respond with an HTTP server error status code to the Registrar-Agent.
The following server error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure</t>
          </li>
          <li>
            <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure</t>
          </li>
          <li>
            <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>SHOULD</bcp14> include the Retry-After response header field with an appropriate value</t>
          </li>
          <li>
            <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out</t>
          </li>
        </ul>
        <t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported similarly with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>
        <section anchor="request-artifact-pledge-enroll-request-per">
          <name>Request Artifact: Pledge Enroll-Request (PER)</name>
          <t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>
        </section>
        <section anchor="er_artifact">
          <name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>
          <t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>
          <t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>
        </section>
      </section>
      <section anchor="obtain_cacerts">
        <name>Obtain CA Certificates</name>
        <t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>
        <t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>
        <t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>
        <t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_5">
          <name>CA certificates retrieval exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(5)</text>
                  <text x="60" y="132">Obtain</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <tt>/.well-known/brski/wrappedcacerts</tt>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a GET request at <tt>/.well-known/brski/wrappedcacerts</tt>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <section anchor="request-no-artifact">
          <name>Request (no artifact)</name>
          <t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.</t>
        </section>
        <section anchor="cacerts_artifact">
          <name>Response Artifact: CA-Certificates (caCerts)</name>
          <t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>
          <t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>
          <figure anchor="cacerts_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="cacerts_data">
            <name>JSON CA Data</name>
            <t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>
            <figure anchor="cacerts_CDDL_def">
              <name>CDDL for JSON CA Data (cacerts)</name>
              <artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [2* bytes]
}
]]></artwork>
            </figure>
            <t>The <tt>x5bag</tt> member <bcp14>MUST</bcp14> follow the definition of the <tt>x5bag</tt> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>
            <t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>
            <t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>
            <figure anchor="cacerts_data_example">
              <name>JSON CA Data Example</name>
              <artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-4">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
              </li>
            </ul>
            <t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="cacerts_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-4">
            <name>JWS Signature</name>
            <t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="voucher">
        <name>Supply Voucher to Pledge</name>
        <t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>
        <ul spacing="normal">
          <li>
            <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
          </li>
          <li>
            <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
          </li>
          <li>
            <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
          </li>
        </ul>
        <t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> store information from the first connection with the pledge to optimize.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_6">
          <name>Voucher exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 136,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(6)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="120" y="132">Voucher</text>
                  <text x="164" y="132">to</text>
                  <text x="204" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="100" y="196">Voucher'</text>
                  <text x="96" y="212">vStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/svr</tt>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>
        <ol spacing="normal" type="1"><li>
            <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
          </li>
          <li>
            <t>Provisionally install the initial domain trust anchor contained in the <tt>pinned-domain-cert</tt> field of the voucher.</t>
          </li>
          <li>
            <t>Validate the registrar EE certificate received in the <tt>agent-provided-proximity-registrar-cert</tt> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
          </li>
          <li>
            <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but using the pinned domain certificate instead of the MASA certificate for the verification.</t>
          </li>
        </ol>
        <t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>
        <t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.</t>
        <t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>
        <t>If the pledge did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>
        <section anchor="request-artifact-registrar-countersigned-voucher">
          <name>Request Artifact: Registrar-Countersigned Voucher</name>
          <t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>
        </section>
        <section anchor="vstatus_artifact">
          <name>Response Artifact: Voucher Status (vStatus)</name>
          <t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>
          <figure anchor="vstatus_representation">
            <name>vStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="vstatus_data">
            <name>JSON Voucher Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>voucherstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>version</tt>: contains a version number for the format and semantics of the other fields;
this specification assumes version <tt>1</tt> just like BRSKI <xref target="RFC8995"/></t>
              </li>
              <li>
                <t><tt>status</tt>: contains the boolean value <tt>true</tt> in case of success and <tt>false</tt> in case of failure</t>
              </li>
              <li>
                <t><tt>reason</tt>: contains a human-readable message;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
              </li>
              <li>
                <t><tt>reason-context</tt>: contains a JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, <bcp14>MUST</bcp14> be provided;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker</t>
              </li>
            </ul>
            <t>BRSKI-PRM implementations utilize the <tt>reason-context</tt> field to provide a distinguishable token, which enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pvs-details</tt>.</t>
            <t><xref target="vstatus_data_example_success"/> below shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>
            <figure anchor="vstatus_data_example_success">
              <name>JSON Voucher Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed.",
  "reason-context": {
    "pvs-details": "Current date 5/23/2024"
  }
}
]]></artwork>
            </figure>
            <figure anchor="vstatus_data_example_error">
              <name>JSON Voucher Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate.",
  "reason-context": {
    "pvs-details": "Current date 1/1/1970 < valid from 1/1/2023"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-5">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
            </ul>
            <t><xref target="vstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="vstatus_header">
              <name>JWS Protected Header Example within vStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-5">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="cacerts">
        <name>Supply CA Certificates to Pledge</name>
        <t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certificate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done, if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by the pledge as reflected in the vStatus artifact.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_7">
          <name>Certificate provisioning exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(7)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/scac</tt>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>
        <t>If the pledge is unable to process the caCerts, it <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate)</t>
          </li>
          <li>
            <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates)</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="request-artifact-ca-certificates-cacerts">
          <name>Request Artifact: CA-Certificates (caCerts)</name>
          <t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>
        </section>
        <section anchor="response-no-artifact">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="enroll_response">
        <name>Supply Enroll-Response to Pledge</name>
        <t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_8">
          <name>Enroll-Response exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 48,192" fill="none" stroke="black"/>
                <path d="M 144,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 56,208" fill="none" stroke="black"/>
                <path d="M 120,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(8)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="152" y="132">Enroll-Response</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">Enroll-Resp</text>
                  <text x="88" y="212">eStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/ser</tt>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>
        <section anchor="request-artifact-enroll-response-enroll-resp">
          <name>Request Artifact: Enroll-Response (Enroll-Resp)</name>
          <t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>
        </section>
        <section anchor="estatus_artifact">
          <name>Response Artifact: Enroll Status (eStatus)</name>
          <t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>
          <figure anchor="estatus_representation">
            <name>eStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="estatus_data">
            <name>JSON Enroll Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>enrollstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/> (incl. making <tt>reason-context</tt> mandatory).</t>
            <t>BRSKI-PRM implementations again utilize the <tt>reason-context</tt> field to provide a distinguishable token.
For eStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pes-details</tt>.</t>
            <t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>
            <figure anchor="estatus_data_example_success">
              <name>JSON Enroll Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork>
            </figure>
            <figure anchor="estatus_data_example_error">
              <name>JSON Enroll Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-6">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
            </ul>
            <t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="estatus_header">
              <name>JWS Protected Header Example within eStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-6">
            <name>JWS Signature</name>
            <t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="vstatus">
        <name>Voucher Status Telemetry (including MASA interaction)</name>
        <t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>
        <t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>
        <figure anchor="exchangesfig_uc2_9">
          <name>Voucher Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,288" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,288" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,200" fill="none" stroke="black"/>
                <path d="M 456,256 L 456,288" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,288" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 416,208" fill="none" stroke="black"/>
                <path d="M 456,208 L 552,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 352,224" fill="none" stroke="black"/>
                <path d="M 520,224 L 552,224" fill="none" stroke="black"/>
                <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                <path d="M 504,240 L 552,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
                <polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
                <polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
                <polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(9)</text>
                  <text x="64" y="132">Voucher</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="276" y="132">(including</text>
                  <text x="352" y="132">backend</text>
                  <text x="436" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">vStatus</text>
                  <text x="436" y="212">mTLS</text>
                  <text x="368" y="228">req</text>
                  <text x="412" y="228">device</text>
                  <text x="480" y="228">audit-log</text>
                  <text x="396" y="244">device</text>
                  <text x="464" y="244">audit-log</text>
                  <text x="264" y="276">[verify</text>
                  <text x="340" y="276">audit-log]</text>
                  <text x="312" y="292">|</text>
                  <text x="16" y="308">~</text>
                  <text x="168" y="308">~</text>
                  <text x="312" y="308">~</text>
                  <text x="456" y="308">~</text>
                  <text x="560" y="308">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/voucher_status</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>
        <t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>
        <section anchor="request-artifact-voucher-status-vstatus">
          <name>Request Artifact: Voucher Status (vStatus)</name>
          <t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-1">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="estatus">
        <name>Enroll Status Telemetry</name>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_10">
          <name>Enroll Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(10)</text>
                  <text x="68" y="132">Enroll</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">eStatus</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/enrollstatus</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>
        <t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or <bcp14>MAY</bcp14> fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>
        <section anchor="request-artifact-enroll-status-estatus">
          <name>Request Artifact: Enroll Status (eStatus)</name>
          <t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-2">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="query">
        <name>Query Pledge Status</name>
        <t>The following assumes that a Registrar-Agent <bcp14>MAY</bcp14> need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>
        <t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_11">
          <name>Pledge Status exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(11)</text>
                  <text x="64" y="132">Query</text>
                  <text x="116" y="132">Pledge</text>
                  <text x="172" y="132">Status</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">tStatus</text>
                  <text x="96" y="212">pStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/qps</tt>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the pStatus artifact, the pledge <bcp14>SHOULD</bcp14> respond with an HTTP error status code to the Registrar-Agent.
The following client error status codes <bcp14>SHOULD</bcp14> be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt></t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tstatus_artifact">
          <name>Request Artifact: Status Trigger (tStatus)</name>
          <t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>
          <t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="tstatus_representation">
            <name>tStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="tstatus_data">
            <name>JSON Status Trigger Data</name>
            <t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>
            <figure anchor="stat_req_def">
              <name>CDDL for JSON Status Trigger Data (statustrigger)</name>
              <artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <tt>version</tt> <bcp14>SHALL</bcp14> be set to <tt>1</tt>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>
            <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>
            <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>
            <t>The <tt>status-type</tt> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>
            <ul spacing="normal">
              <li>
                <t><tt>bootstrap</tt> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain)</t>
              </li>
              <li>
                <t><tt>operation</tt> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers)</t>
              </li>
            </ul>
            <t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>
            <t><xref target="stat_req_data"/> below shows an example for the JSON Status Trigger Data using the status type <tt>bootstrap</tt>:</t>
            <figure anchor="stat_req_data">
              <name>JSON Status Trigger Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "vendor-pledge4711",
  "status-type": "bootstrap"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-7">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
              </li>
            </ul>
            <t><xref target="tstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="tstatus_header">
              <name>JWS Protected Header Example within tStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-7">
            <name>JWS Signature</name>
            <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
        <section anchor="pstatus_artifact">
          <name>Response Artifact: Pledge Status (pStatus)</name>
          <t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <tt>status-type</tt>.</t>
          <t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="pstatus_representation">
            <name>pStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="pstatus_data">
            <name>JSON Pledge Status Data</name>
            <t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <tt>voucherstatus-post</tt> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the  <tt>enrollstatus-post</tt> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
            <figure anchor="stat_res_def">
              <name>CDDL for JSON Pledge Status Data (pledgestatus)</name>
              <artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    "reason-context": { * $$arbitrary-map }
  }
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>
            <t>The <tt>reason</tt> and <tt>reason-context</tt> members follow the definitions in <xref target="vstatus_data"/>, i.e., in contrast to <xref target="RFC8995"/>, <tt>reason-context</tt> <bcp14>MUST</bcp14> be provided.</t>
            <t>The new pStatus artifact also utilizes the <tt>reason-context</tt> field to provide a distinguishable token.
For pStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain either the</t>
            <ul spacing="normal">
              <li>
                <t><tt>pbs-details</tt> member for status information corresponding to the status-type <tt>bootstrap</tt>, or the</t>
              </li>
              <li>
                <t><tt>pos-details</tt> member for status information corresponding to the status-type <tt>operation</tt> (see <xref target="tstatus_data"/>)</t>
              </li>
            </ul>
            <t>Other documents may add additional <tt>reason-context</tt> members correlating to other <tt>statustrigger</tt> status-types or to include further status information.</t>
            <t>For the <tt>pbs-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>factory-default</tt>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-success</tt>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-error</tt>: Pledge voucher processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-success</tt>: Pledge processed the enrollment exchange successfully.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-error</tt>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
            </ul>
            <t>The <tt>pbs-details</tt> values <bcp14>SHALL</bcp14> be cumulative in the sense that <tt>enroll-success</tt> and <tt>enroll-error</tt> imply <tt>voucher-success</tt>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_bootstrap">
              <name>status-bootstrap JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge processed enrollment exchange successfully.",
  "reason-context": {
    "pbs-details": "Pledge processed enrollment exchange successfully."
  }
}
]]></artwork>
            </figure>
            <t>For the <tt>pos-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>connect-success</tt>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>connect-error</tt>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
            </ul>
            <t><xref target="stat_example_operation"/> below provides an example for operational status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_operation">
              <name>status-operation JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "connect-error" : "Connection establishment terminated with error."
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-8">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the x5c Header Parameter, it <bcp14>MUST</bcp14> be available at the Registrar-Agent for verification</t>
              </li>
            </ul>
            <t><xref target="pstatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="pstatus_header">
              <name>JWS Protected Header Example within pStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-8">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according to its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="log_hints">
      <name>Logging Considerations</name>
      <t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
Recommend key events for logging comprise</t>
      <ul spacing="normal">
        <li>
          <t>Communication attempts between the pledge, Registrar-Agent, and registrar.</t>
        </li>
        <li>
          <t>Protocol handshakes and onboarding steps.</t>
        </li>
        <li>
          <t>Voucher requests and responses.</t>
        </li>
        <li>
          <t>Authentication successes or failures.</t>
        </li>
      </ul>
      <t>The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>
      <ul spacing="normal">
        <li>
          <t>PVR received from Registrar-Agent</t>
        </li>
        <li>
          <t>Acceptance of a pledge into the domain</t>
        </li>
        <li>
          <t>Voucher provided to Registrar-Agent</t>
        </li>
        <li>
          <t>PER received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate requested</t>
        </li>
        <li>
          <t>Pledge EE certificate received from Domain CA</t>
        </li>
        <li>
          <t>Pledge EE certificate provided to Registrar-Agent</t>
        </li>
        <li>
          <t>CA Certificates provided to Registrar-Agent</t>
        </li>
        <li>
          <t>Voucher Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Enroll Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate revoked</t>
        </li>
      </ul>
      <t>Furthermore, it is recommended to</t>
      <ul spacing="normal">
        <li>
          <t>support adjustable logging levels (severity) to cater to different operational needs or failure situations.</t>
        </li>
        <li>
          <t>include meta information to distinguish logs that relate to different BRSKI approaches (e.g., BRSKI, BRSKI-AE, BRSKI-PRM, constraint BRSKI) that are likely supported in the same domain in parallel.</t>
        </li>
        <li>
          <t>include detailed error codes and diagnostics information as defined throughout the document or stemming from other used components or libraries also in the logging information.</t>
        </li>
        <li>
          <t>support synchronized time (e.g., via NTP) to include timestamps in logging to enable sequencing and  correlation of events.</t>
        </li>
        <li>
          <t>utilize standard logging formats (e.g., syslog) to allow for easy integration into log analysis tools and SIEM systems.</t>
        </li>
        <li>
          <t>utilize secure transmission of logs to centralized log servers, particularly in cloud or distributed environments (e.g., in case of syslog, <xref target="RFC9662"/> updates the utilized cipher suites for TLS and DTLS).</t>
        </li>
        <li>
          <t>allow for definition of key operational thresholds (e.g., high latency, failed onboarding attempts) to trigger alerts for proactive issue resolution.</t>
        </li>
        <li>
          <t>avoid inclusion of sensitive information (see also <xref target="priv_cons"/>)</t>
        </li>
      </ul>
      <t>For log analysis the following may be considered:</t>
      <ul spacing="normal">
        <li>
          <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
        </li>
        <li>
          <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
        </li>
        <li>
          <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in the EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
        </li>
      </ul>
      <t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different Registrar-Agents or if different registrars have been used.</t>
    </section>
    <section anchor="op_cons">
      <name>Operational Considerations</name>
      <t>As outlined in <xref target="architecture"/> BRSKI-PRM introduces an additional component with the Registrar-Agent in the BRSKI architecture in addition to new modes of interaction to facilitate the communication between the pledge and the registrar. 
This has an influence on the configuration and operation not only of the Registrar-Agent, but also for the registrar and the pledge.</t>
      <t>As outlined in <xref target="system-components"/> there are additional configuration items dues to the introduction of the Registrar-Agent. This may increase operational complexity and potential misconfigurations in deploying and managing this entity.</t>
      <ul spacing="normal">
        <li>
          <t>A Registrar-Agent needs to be provided with a Registrar-Agent EE certificate, the domain registrar EE certificate and the list of pledges. BRSKI-PRM is open regarding the selected provisioning method, which may be automated or by configuration.</t>
        </li>
        <li>
          <t>Pledges may support either BRSKI-PRM only or combined with other modes of operation.</t>
        </li>
        <li>
          <t>Registrars may support either BRSKI-PRM only or combined with other BRSKI modes of operation. The distinction of BRSKI and BRSKI-PRM is done based on the provided endpoints of the registrar. An operator deploying pledges with a mixed set of operation need to ensure that the domain registrar supports all necessary options to ensure bootstrapping of pledges depending of the supported operational mode.</t>
        </li>
        <li>
          <t>In addition, registrars may  support a co-located Registrar-Agent, if nomadic operation of the Registrar-Agent is not required. This facilitates situations in which an operator wants to deploy BRSKI pledges acting as clients and BSKI pledges acting as servers.</t>
        </li>
      </ul>
      <t>With the Registrar-Agent enhancement a new component is introduced in the communication path between the pledge and the registrar. 
This likely increases the latency of the communication between the pledge and the registrar.
The increase in latency due to this additional component may be neglected given that the Registrar-Agent operates with nomadic connectivity as outlined in <xref target="arch_nomadic"/>.</t>
      <t>Besides the above, also consider the existing documents on operational modes for</t>
      <ul spacing="normal">
        <li>
          <t>BRSKI registrars in <xref target="I-D.richardson-anima-registrar-considerations"/></t>
        </li>
        <li>
          <t>BRSKI MASA in <xref target="I-D.richardson-anima-masa-considerations"/></t>
        </li>
      </ul>
    </section>
    <section anchor="iana_con">
      <name>IANA Considerations</name>
      <t>This document requires the following IANA actions.</t>
      <section anchor="brski-well-known-registry">
        <name>BRSKI well-known Registry</name>
        <t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>
        <table anchor="iana_table_uri">
          <name>BRSKI Well-Known URIs Additions</name>
          <thead>
            <tr>
              <th align="left">Path Segment</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to registrar</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain wrapped CA certificates</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply voucher to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA certificates to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query pledge status</td>
              <td align="left">[THISRFC]</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="dns-service-names">
        <name>DNS Service Names</name>
        <t>IANA has registered the following service names:</t>
        <t><strong>Service Name:</strong> brski-pledge<br/>
          <strong>Transport Protocol(s):</strong> tcp<br/>
          <strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br/>
          <strong>Reference:</strong> [THISRFC]</t>
      </section>
    </section>
    <section anchor="priv_cons">
      <name>Privacy Considerations</name>
      <t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>potentially no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <t><xref target="tpvr"/> describes to optionally apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>
      <t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>
      <t>As logging is recommended to better handle failure situations, it is necessary to avoid capturing  sensitive or personal data.
Privacy-preserving measures in logs <bcp14>SHOULD</bcp14> be applied, such as:
* Avoid logging personally identifiable information unless unavoidable.
* Anonymize or pseudonymize data where possible.</t>
      <t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>
      <ul spacing="normal">
        <li>
          <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is not encrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
        </li>
        <li>
          <t>the Timestamp data could reveal the activation time of the device.</t>
        </li>
        <li>
          <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
        </li>
      </ul>
    </section>
    <section anchor="sec_cons">
      <name>Security Considerations</name>
      <t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
        </li>
        <li>
          <t>no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <section anchor="sec_cons-dos">
        <name>Denial of Service (DoS) Attack on Pledge</name>
        <t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS-attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>
        <t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limit the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>
        <t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resend the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>
      </section>
      <section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent">
        <name>Misuse of acquired PVR and PER by Registrar-Agent</name>
        <t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <tt>proximity-registrar-cert</tt> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>
        <t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>
      </section>
      <section anchor="sec_cons_reg-agt">
        <name>Misuse of Registrar-Agent</name>
        <t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>
        <t>In addition, it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".</t>
        <t>Furthermore, the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent. 
If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.
If the registrar detects a mismatch in the utilized certificates, it may conclude the usage of either an outdated "agent-signed-data" component in the PVR or a man-in-the-middle attack by a potentially unauthorized Registrar-Agent.</t>
      </section>
      <section anchor="sec_cons_mDNS">
        <name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>
        <t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>
        <t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>
      </section>
      <section anchor="yang-module-security-considerations">
        <name>YANG Module Security Considerations</name>
        <t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>
        <t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>
        <t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the common use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC5272">
          <front>
            <title>Certificate Management over CMS (CMC)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
              <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
              <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
              <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5272"/>
          <seriesInfo name="DOI" value="10.17487/RFC5272"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
            <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
            <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
            <date month="October" year="2013"/>
            <abstract>
              <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8615">
          <front>
            <title>Well-Known Uniform Resource Identifiers (URIs)</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
            <date month="May" year="2019"/>
            <abstract>
              <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
              <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8615"/>
          <seriesInfo name="DOI" value="10.17487/RFC8615"/>
        </reference>
        <reference anchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9360">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="February" year="2023"/>
            <abstract>
              <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9360"/>
          <seriesInfo name="DOI" value="10.17487/RFC9360"/>
        </reference>
        <reference anchor="RFC9646">
          <front>
            <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero-Touch Provisioning (SZTP) Bootstrapping Request</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>This document extends the input to the "get-bootstrapping-data" RPC defined in RFC 8572 to include an optional certificate signing request (CSR), enabling a bootstrapping device to additionally obtain an identity certificate (e.g., a Local Device Identifier (LDevID) from IEEE 802.1AR) as part of the "onboarding information" response provided in the RPC-reply.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9646"/>
          <seriesInfo name="DOI" value="10.17487/RFC9646"/>
        </reference>
        <reference anchor="I-D.ietf-anima-jws-voucher">
          <front>
            <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="14" month="January" year="2025"/>
            <abstract>
              <t>   This document introduces a variant of the RFC8366 voucher artifact in
   which CMS is replaced by the JSON Object Signing and Encryption
   (JOSE) mechanism described in RFC7515.  This supports deployments in
   which JOSE is preferred over CMS.  In addition to specifying the
   format, the "application/voucher-jws+json" media type is registered
   and examples are provided.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-15"/>
        </reference>
        <reference anchor="I-D.ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="8" month="July" year="2024"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-12"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <author fullname="G. Klyne" initials="G." surname="Klyne"/>
            <author fullname="C. Newman" initials="C." surname="Newman"/>
            <date month="July" year="2002"/>
            <abstract>
              <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3339"/>
          <seriesInfo name="DOI" value="10.17487/RFC3339"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC9525">
          <front>
            <title>Service Identity in TLS</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="R. Salz" initials="R." surname="Salz"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
              <t>This document obsoletes RFC 6125.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9525"/>
          <seriesInfo name="DOI" value="10.17487/RFC9525"/>
        </reference>
        <reference anchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
            <author fullname="K. Hartke" initials="K." surname="Hartke"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8407">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <date month="October" year="2018"/>
            <abstract>
              <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="216"/>
          <seriesInfo name="RFC" value="8407"/>
          <seriesInfo name="DOI" value="10.17487/RFC8407"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
            <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9110">
          <front>
            <title>HTTP Semantics</title>
            <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
            <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
            <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
            <date month="June" year="2022"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
              <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="97"/>
          <seriesInfo name="RFC" value="9110"/>
          <seriesInfo name="DOI" value="10.17487/RFC9110"/>
        </reference>
        <reference anchor="RFC9238">
          <front>
            <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="J. Latour" initials="J." surname="Latour"/>
            <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
              <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9238"/>
          <seriesInfo name="DOI" value="10.17487/RFC9238"/>
        </reference>
        <reference anchor="RFC9662">
          <front>
            <title>Updates to the Cipher Suites in Secure Syslog</title>
            <author fullname="C. Lonvick" initials="C." surname="Lonvick"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="J. Salowey" initials="J." surname="Salowey"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>RFCs 5425 and 6012 describe using TLS and DTLS to securely transport syslog messages. This document updates the cipher suites required by RFC 5245 (TLS Transport Mapping for Syslog) and RFC 6012 (DTLS Transport Mapping for Syslog). It also updates the protocol recommended by RFC 6012 for secure datagram transport.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9662"/>
          <seriesInfo name="DOI" value="10.17487/RFC9662"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-ae">
          <front>
            <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
            <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Steffen Fries" initials="S." surname="Fries">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
              <organization>Siemens AG</organization>
            </author>
            <date day="17" month="September" year="2024"/>
            <abstract>
              <t>   This document defines enhancements to the Bootstrapping Remote Secure
   Key Infrastructure (BRSKI) protocol, known as BRSKI-AE (Alternative
   Enrollment).
   BRSKI-AE extends BRSKI to support certificate enrollment mechanisms
   instead of the originally specified use of EST.  It supports
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages, allowing
   for flexibility in network device onboarding scenarios.
   The enhancements address use cases where the existing enrollment
   mechanism may not be feasible or optimal, providing a framework for
   integrating suitable alternative enrollment protocols.
   This document also updates the BRSKI reference architecture to
   accommodate these alternative methods, ensuring secure and scalable
   deployment across a range of network environments.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-13"/>
        </reference>
        <reference anchor="I-D.richardson-emu-eap-onboarding">
          <front>
            <title>EAP defaults for devices that need to onboard</title>
            <author fullname="Alan DeKok" initials="A." surname="DeKok">
              <organization>FreeRADIUS</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="2" month="April" year="2023"/>
            <abstract>
              <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
        </reference>
        <reference anchor="I-D.richardson-anima-masa-considerations">
          <front>
            <title>Operational Considerations for Voucher infrastructure for BRSKI MASA</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="9" month="May" year="2023"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Manufacturer Authorized Signing Authority (MASA) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the MASA is
   deployed into.  This document does not change any protocol
   mechanisms.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-masa-considerations-08"/>
        </reference>
        <reference anchor="I-D.richardson-anima-registrar-considerations">
          <front>
            <title>Operational Considerations for BRSKI Registrar</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="14" month="February" year="2024"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-discovery">
          <front>
            <title>BRSKI discovery and variations</title>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei USA</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators,
   especially in the face of variations in the protocols that can
   introduce non-interoperability when not equally supported by both
   responder and initiator.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-05"/>
        </reference>
        <reference anchor="IEEE-802.1AR">
          <front>
            <title>IEEE 802.1AR Secure Device Identifier</title>
            <author>
              <organization>Institute of Electrical and Electronics Engineers</organization>
            </author>
            <date year="2018" month="June"/>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="BRSKI-PRM-abstract" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00">
          <front>
            <title>Abstract BRSKI-PRM Protocol Overview</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="March"/>
          </front>
        </reference>
        <reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
          <front>
            <title>Android Developer: Connect devices wirelessly</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
        </reference>
        <reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
          <front>
            <title>Security with Network Protocols</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
        </reference>
        <reference anchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC4648">
          <front>
            <title>The Base16, Base32, and Base64 Data Encodings</title>
            <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
            <date month="October" year="2006"/>
            <abstract>
              <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4648"/>
          <seriesInfo name="DOI" value="10.17487/RFC4648"/>
        </reference>
        <reference anchor="RFC8971">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
            <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
            <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
            <author fullname="V. Govindan" initials="V." surname="Govindan"/>
            <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8971"/>
          <seriesInfo name="DOI" value="10.17487/RFC8971"/>
        </reference>
        <reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
          <front>
            <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="2" month="January" year="2025"/>
            <abstract>
              <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-05"/>
        </reference>
      </references>
    </references>
    <?line 2800?>

<section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent">
        <name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>
        <t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge-Voucher-Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>
        <t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>
        <t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>
        <figure anchor="ExampleRegistrarVoucherRequestfigure">
          <name>Example Registrar-Voucher-Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher-Response from MASA</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>
        <figure anchor="ExampleVoucherResponseWithRegSignfigure">
          <name>Example Voucher-Response from MASA, with additional Registrar signature</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="pledgehttps">
      <name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>
      <t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>
      <t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependent upon the security of the TLS connection.</t>
      <t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>
      <ol spacing="normal" type="1"><li>
          <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do not help as there is no previous relationship between the Registrar-Agent and the pledge.</t>
        </li>
        <li>
          <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
        </li>
      </ol>
      <t>If the Registrar-Agent has a pre-configured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>
      <t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QR codes may help automate this in some cases.</t>
      <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="of" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do its own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involves use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures (see <xref target="androidtrustfail"/>).</t>
      <t>Also note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge IDevID certificate.
IDevID certificates are intended to be widely usable and EKU does not support that use.</t>
    </section>
    <section anchor="app_history">
      <name>History of Changes [RFC Editor: please delete]</name>
      <t>Proof of Concept Code available</t>
      <t>From IETF draft 16 -&gt; IETF draft 17:</t>
      <ul spacing="normal">
        <li>
          <t>updated formatting of key events in <xref target="log_hints"/></t>
        </li>
        <li>
          <t>updated reference to corresponding sections for JWS Header and Signature in <xref target="I-D.ietf-anima-jws-voucher"/> in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
        <li>
          <t>simplified description for JWS Protected Header aligning with the update in draft-ietf-anima-jws-voucher-15 to always include the certificate chain in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
      </ul>
      <t>From IETF draft 15 -&gt; IETF draft 16:</t>
      <ul spacing="normal">
        <li>
          <t>issue #135: corrections from IOTDIR review (clarification regarding minimum supported discovery in <xref target="discovery_uc2_ppa"/>, clarification regarding CDDl notation in <xref target="cacerts_CDDL_def"/> and editorial nits.</t>
        </li>
        <li>
          <t>updated references (draft-ietf-netconf-sztp-csr became RFC 9646, included RFC 9662, operational considerations drafts for registrar and MASA)</t>
        </li>
        <li>
          <t>AD review: included term Registrar-Agent in Terminology section</t>
        </li>
        <li>
          <t>AD review: enhanced interaction information in <xref target="uc2figure"/> and <xref target="uc3figure"/></t>
        </li>
        <li>
          <t>AD review: included new section on <xref target="op_cons"/> to outline operational considerations</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="log_hints"/> with more detailed recommendations on logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="priv_cons"/> with enhanced recommendations concerning logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="sec_cons_reg-agt"/> with more information about misuse of the Registrar-Agent</t>
        </li>
        <li>
          <t>IOTDIR/OPSDIR/AD review: addressed various nits received throughout the draft</t>
        </li>
      </ul>
      <t>From IETF draft 14 -&gt; IETF draft 15:</t>
      <ul spacing="normal">
        <li>
          <t>issue #134: editorial clarifications on references to <xref target="I-D.ietf-anima-brski-discovery"/> in <xref target="discovery_uc2_reg"/> and  <xref target="discovery_uc2_ppa"/></t>
        </li>
      </ul>
      <t>From IETF draft 13 -&gt; IETF draft 14:</t>
      <ul spacing="normal">
        <li>
          <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
        </li>
        <li>
          <t>Changes incorporated based on Shepherd review PR #133:
          </t>
          <ul spacing="normal">
            <li>
              <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
            </li>
            <li>
              <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
            </li>
            <li>
              <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
            </li>
            <li>
              <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
            </li>
            <li>
              <t>Included MASA component in description of affected components in <xref target="system-components"/></t>
            </li>
            <li>
              <t>Moved host header field handling from <xref target="pledgehttps"/> to <xref target="pledge_component"/> as generally applicable</t>
            </li>
            <li>
              <t>Updated status artifacts (vStatus, eStatus, pStatus) to align with BRSKI CDDL definition, but made reason-context mandatory  to have distinguishable objects for the registrar-agent</t>
            </li>
            <li>
              <t>Correction of terminology of local host name vs. service instance name in <xref target="discovery_uc2_ppa"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>Update of informative references and nits</t>
        </li>
      </ul>
      <t>From IETF draft 12 -&gt; IETF draft 13:</t>
      <ul spacing="normal">
        <li>
          <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
        </li>
        <li>
          <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
        </li>
        <li>
          <t>Updated CDDL source code integration to allow for automatic verification</t>
        </li>
        <li>
          <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
        </li>
        <li>
          <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
        </li>
        <li>
          <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
        </li>
      </ul>
      <t>From IETF draft 11 -&gt; IETF draft 12:</t>
      <ul spacing="normal">
        <li>
          <t>Updated acknowledgments to reflect early reviews</t>
        </li>
        <li>
          <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
        </li>
      </ul>
      <t>From IETF draft 10 -&gt; IETF draft 11:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
        </li>
        <li>
          <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
        </li>
        <li>
          <t>removed unused reference RFC 5280</t>
        </li>
        <li>
          <t>removed site terminology</t>
        </li>
        <li>
          <t>deleted duplicated text in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
        </li>
        <li>
          <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
        </li>
        <li>
          <t>addressed comments from SECDIR early review</t>
        </li>
      </ul>
      <t>From IETF draft 09 -&gt; IETF draft 10:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
        </li>
        <li>
          <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
        </li>
        <li>
          <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
        </li>
        <li>
          <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
        </li>
        <li>
          <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
        </li>
        <li>
          <t>issue #130, aligned the usage of site and domain throughout the document</t>
        </li>
        <li>
          <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
        </li>
        <li>
          <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
        </li>
        <li>
          <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
        </li>
      </ul>
      <t>From IETF draft 08 -&gt; IETF draft 09:</t>
      <ul spacing="normal">
        <li>
          <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
        </li>
        <li>
          <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
        </li>
        <li>
          <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
        </li>
        <li>
          <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
        </li>
        <li>
          <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
        </li>
        <li>
          <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
        </li>
        <li>
          <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
        </li>
        <li>
          <t>issue #94: clarified terminology (possess vs. obtained)</t>
        </li>
        <li>
          <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
        </li>
        <li>
          <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
        </li>
        <li>
          <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
        </li>
        <li>
          <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
        </li>
        <li>
          <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
        </li>
        <li>
          <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
        </li>
        <li>
          <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
        </li>
        <li>
          <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
        </li>
        <li>
          <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
        </li>
        <li>
          <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
        </li>
        <li>
          <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
        </li>
        <li>
          <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
        </li>
        <li>
          <t>updated references</t>
        </li>
      </ul>
      <t>From IETF draft 07 -&gt; IETF draft 08:</t>
      <ul spacing="normal">
        <li>
          <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
        </li>
        <li>
          <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
        </li>
      </ul>
      <t>From IETF draft 06 -&gt; IETF draft 07:</t>
      <ul spacing="normal">
        <li>
          <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
        </li>
        <li>
          <t>smaller editorial corrections</t>
        </li>
      </ul>
      <t>From IETF draft 05 -&gt; IETF draft 06:</t>
      <ul spacing="normal">
        <li>
          <t>Update of list of reviewers</t>
        </li>
        <li>
          <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
        </li>
        <li>
          <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
        </li>
        <li>
          <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
        <li>
          <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
      </ul>
      <t>From IETF draft 04 -&gt; IETF draft 05:</t>
      <ul spacing="normal">
        <li>
          <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
        </li>
        <li>
          <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
        </li>
        <li>
          <t>Clarified pledge-status responses are cumulative, issue #73</t>
        </li>
        <li>
          <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
        </li>
        <li>
          <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
        </li>
        <li>
          <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
        </li>
        <li>
          <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
        </li>
        <li>
          <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
        </li>
        <li>
          <t>Enhanced security considerations and privacy considerations, issue #59</t>
        </li>
        <li>
          <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
        </li>
        <li>
          <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
        </li>
        <li>
          <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
        </li>
        <li>
          <t>Reworked all message representations to align with encoding</t>
        </li>
        <li>
          <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
        </li>
        <li>
          <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
        </li>
        <li>
          <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
        </li>
        <li>
          <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
        </li>
        <li>
          <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
        </li>
        <li>
          <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
        </li>
        <li>
          <t>Several editorial changes and enhancements to increasing readability.</t>
        </li>
      </ul>
      <t>From IETF draft 03 -&gt; IETF draft 04:</t>
      <ul spacing="normal">
        <li>
          <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
        </li>
        <li>
          <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
        </li>
        <li>
          <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
        </li>
        <li>
          <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
        </li>
        <li>
          <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
        </li>
        <li>
          <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
        </li>
        <li>
          <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
        </li>
        <li>
          <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
        </li>
        <li>
          <t>utilized defined abbreviations in the document consistently, issue #22</t>
        </li>
        <li>
          <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
        </li>
        <li>
          <t>Added several clarifications based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
        </li>
        <li>
          <t>Include link to SVG graphic as general overview</t>
        </li>
        <li>
          <t>Restructuring of section 5 to flatten hierarchy</t>
        </li>
        <li>
          <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
        </li>
        <li>
          <t>Several editorial improvements based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
        </li>
        <li>
          <t>Included representation for General JWS JSON Serialization for examples</t>
        </li>
        <li>
          <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
        </li>
        <li>
          <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
        </li>
        <li>
          <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
        </li>
        <li>
          <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
        </li>
        <li>
          <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
        </li>
        <li>
          <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
        </li>
        <li>
          <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
        </li>
        <li>
          <t>Reworked text in from introduction to section pledge-responder-mode</t>
        </li>
        <li>
          <t>Fixed "serial-number" encoding in PVR/RVR</t>
        </li>
        <li>
          <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
        </li>
        <li>
          <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
        </li>
        <li>
          <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
        </li>
        <li>
          <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
        </li>
        <li>
          <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
        </li>
        <li>
          <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
        </li>
        <li>
          <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
        </li>
        <li>
          <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
        </li>
        <li>
          <t>Addressed YANG warning (issue #1)</t>
        </li>
        <li>
          <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and a Pledge Enroll-Request.</t>
        </li>
      </ul>
      <t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>
      <ul spacing="normal">
        <li>
          <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
        </li>
        <li>
          <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
        </li>
        <li>
          <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
        </li>
        <li>
          <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
        </li>
        <li>
          <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
        </li>
        <li>
          <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
        </li>
        <li>
          <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
        </li>
        <li>
          <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
        </li>
        <li>
          <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
        </li>
        <li>
          <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
        </li>
        <li>
          <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
        </li>
        <li>
          <t>First description of exchanged object types (needs more work)</t>
        </li>
        <li>
          <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
        </li>
        <li>
          <t>Updated references.</t>
        </li>
        <li>
          <t>Included Thomas Werner as additional author for the document.</t>
        </li>
      </ul>
      <t>From individual version 03 -&gt; IETF draft 00:</t>
      <ul spacing="normal">
        <li>
          <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
        </li>
        <li>
          <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
        </li>
        <li>
          <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
        </li>
        <li>
          <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
        </li>
        <li>
          <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
        </li>
        <li>
          <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
        </li>
      </ul>
      <t>From individual version 02 -&gt; 03:</t>
      <ul spacing="normal">
        <li>
          <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
        </li>
        <li>
          <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
        </li>
        <li>
          <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
        </li>
      </ul>
      <t>From individual version 01 -&gt; 02:</t>
      <ul spacing="normal">
        <li>
          <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
        </li>
        <li>
          <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
        </li>
      </ul>
      <t>From individual version 00 -&gt; 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
        </li>
        <li>
          <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
        </li>
        <li>
          <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
        </li>
      </ul>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization>IoTconsultancy.nl</organization>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei</organization>
        <address>
          <email>tte@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
        <organization>Siemens Schweiz AG</organization>
        <address>
          <email>ietf@kovatsch.net</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+y9+3Ycx5E++D/P0TuUwTkrwEI3ceHdlm2IhCyOKZEDQNLM
T6slCt0FoMxGV7uqGxRMaZ5ln2WfbOOaGZmV1d24UKIk0j42CVRlZUZGRsbl
i4her/fRrWk5HRWPs8/29v/xLHtTTk+zl6NieFJk5TjbK5pJNR4WdfZlNSyy
VXqo93Lvy7WPbuVHR3VxLi/izz66NawG4/wMBhvW+fG0VxbT414+Ls/y3lHd
vC57k/qst/kAXq2L/HH2YlLU+bSsxk2Wj4fZl/k4PynOivH0o1tvTh5nO189
+3In+/bvMGw+hTG3NrbufXSrmcKzr/JRNYYfTetZ8dGtclLTX5vp1sbGo40t
eGh2dFY2DQx9cDGB557tHnweD7pwDoN8+jhrpsOPbk3Kxx/dyrJpNXicfXxR
NB/jvwbV2SQfTM1Pmouzujhu7E+qehr9CCY7rqblcVkM4afjip+b1qUZKp9N
T6savtmDPYCX9/vZ53VZNPgo03d/WhwfF2P/46qGxe2XOPUm2/k7/kj3R34q
3ykK+M6L6bTqfZGfjnt75fgku0/rKacXj7MvZ+NycMrrG8KHPn64+WD7kSx4
Np7W8Mzfi/osH1/gz4qzvBwhlWg6/WOczt8a/mAfKITPzOrycXY6nU6ax3fu
vHnzpm9+f8et8aCffVvU46L2izw4rc7yxvz4l13klKbTe0PTudoid/vZ8yI3
S9wdldXU/YzW96RsBlW2fwE0PQvWswdznpbwr7xpiuyBX863+WhUNsVoVIz9
mp580Xu4vXE3WNM+nO5/F/UIOB1/PjmlQ7Tyyd3N7O7d7OGDh9kjOEErZs0j
mNnfBjgjXqis48s+zSavh0019qv5En9WjLIn8a954+CzxQiImu1Xx9M3cP6y
b6v6dWM+dzaoP0Gh8bdGn+0P8oC8Sl3zeyDvoIIFlkezqT01QOyn5T9fG2I3
ryv3I5rSs+oAXm1mIxAqg4v+eGTmUsDT/SE8/TfYovipnrJoBeQsmibbHbwu
6qkb+PPZdFYXb4rS8s+0+Nug6R/ns/6wsKT8R3WeTxtmSCFkPp2elsD79lcB
9+8PTmH0f8spkC8Q6V7LK/1xAfM5L8azgqTXSV3NJiIA6eSgXM74xbf0j7/h
+334zE/0PNwEs6PH/FzvzcmdSJB/dGtcwRGZluc8/t7nT+5tPdjyf3+4oX+/
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
9nhSkwA+no0HTCUUdnCgcpoIu/dJqlSgIgApjnCGPbrs9EZMErKcNsXouB/Y
7lkzm6DaIrqruBkGwSGOJ09M9gbmC5YCCsG0HkYci3/B3coH5IvNj0pdjKde
E1zapOGOk99F/jL7pCKDqEYDiOQfV9OlCCL8YVQZz5f+SlNm07uySdzdTlLo
UUwyWiRP1jvZpjUgbPWbvB6mhpVFGPkA9B+ZHYynYaVuoJigrFWLCMNCcjfG
k/sT/hRucNQfhuUxSEQclWwccyKePS3Onz21H3MTbfS48nRnTc5KVD4iEYWO
SK9Ow4V3VMH+PXvZO8obUVTG1bj37OX6ZU6iUwEicvyJAg1O0WrczUEyMibn
KL8ghb+uZienLXuAddGxZSNUnXLSxt/oubC8NPR81mfDGZZe1GdO1jnTkMUQ
CIcfROOwlwP8HUR0eZ6PRH7BCqpZPaDb5ouDg5egIIh7FfQDJNGTakd+iL7b
n376E14aMAweHfokDAK60wAUB6CA6AeoEjgZjNsPpxpIVaLkRfJ+W4xGvX+M
qzfj7Ou9Zw2Pj25s0v7IImOlsmgrLXjKvMKznt5DkTcgeOqiBxcNfZ3tCHze
kdhT/aiAF+iAzujum9Hz+PWUpspz0Z2A90RMq5xicwx2WIQmsyZeNaTtqTbA
pmR0Ez0by7kZ5KiWeAEsVzXItSOaDXHRQvsLPsND7OxmLaVV/eKsDJJoIAKf
IS1CKX08Kn4oWSr3rUF4UKBcr0bVyYUy5mswMd9U9bDJVr78ev9gZZ3/P/vq
Bf19b/e/vn62t/sU/77/xc7z5+4vt+SJ/S9efP38qf+bf/PJiy+/3P3qKb8M
P82CH91a+XLnf1ZYXK68eHnw7MVXO89XEjpSTbrAkfhggEn4Xr2lnMxOlicv
/7//d/OukHNrc/MRkElou/ngLvwDLyD+GnmL+J+weRe3gGgFW4ZAVNi5CegI
o4Z8OM0p8j1yTf/WrT9+h5T5/nH256PBZPPuX+QHuODgh0qz4IdEs/ZPWi8z
ERM/SnzGUTP4eUTpcL47/xP8W+lufvjnv46AN7Pe5sO//uVW2+/nTZSpiDVh
qJCp9/m+yTb7W3iQA4vxgMwsVSRwCBY8ZgAVtqRihhYsajsYpJnm9DCLa3ju
cfZUGAIVCmPWqpsBVjGoLybTCjSxyakY1GB3j4feWQMqNXwIrdDd3TVrOTmd
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
iIK3O92bxtZYex85JjEOb/6ZcNDiPbvJHZo7znexjnz5cQK98P/y/qa/fv/z
r+uyYvNno3P2nZQ2ZLix0OYXnI/+JNBmPIMq+ZYeJ1Rl9tz9d9lxWj8JzulV
x/mu+GFKzfFYLX/29PurDjSbcGwJ5NG0N6pOrjpQduWV2R1T1cr/mSuB5PGP
P158+7yPd8TdtU4whLkjElWtf6U3xuoqHsi1tetIsstqC5c78d+J4vZ9a+RL
8fN3BoPyfW9Z+hhk2K+Tn++tdcBwfkU82mMevRZv0TiDHCnQLKMZv497eX+t
M6XlfdzNm7VqLnGvdIzDwumcM1t+O1bNg7WFOUi/fe64xMnuGKf1yC+7qw/X
FiZ9/dZ39VJ3b8c4xBCFP/K/kTP/aC3uGnZQYOR+Wl9YNfUIe0+Ph79W3fQm
7v3Lyvyr2Uhmope2Run5uviX1mBxZt8lx5H5pEaZY7Nd9ieLxvlOcH3eeL3a
OJeZz42FFTbWRNq2TtXv8dQU7+LULB7nxnZzcy2V0vw+7uTN6kJTc91dR1Oe
/MY0Zd/MK4UL0JSSFwoISFe+c68u7OOVxAtkzWRUaiFidykHvbE6QAsWZePB
S6YMJjYReiy9fV2BhrD4XD7416yU8lmuEKRCtjtgYpomOa8yisfFEB5iq++L
N1x+AlFW1hW+v913TWfDz2tKROvTqkwt+zGbSeq0rWkaoxbBxB3q0idF7n2z
l8DM5U2GaXNam9GB8ExRGZ4kJcxNqbgjLf9u36VshcuXfC9TAvSSq73SYp/Y
paJT9coLu9dPpY2Fa/Q9pVub7CoLR0WNgzYJce/a5Sj0ZIcmeL8fFBQJZ6Y8
dmnyR6nrLsW+XSuIJvGgHxQcCScRLf2Kc6HvPOwna46E34uN16suflVgYFxa
auzEcwQqX1uaSo/6QaPk9FaJFjh1ttXVj87VBQVNd3Ojbxs5J6l8k9Plj9JN
ohVfwk+GZWLch7iSMD6gJf7CzBZq7HUVbhP4/YLiRG9v073X1QNIiqueCKKv
wbekMKHH/WHFtmLsNqrjSzqRVcThOCww11tufJ5HqmaXZouYKsp+setc2VOr
dLZzIRMNEzzcW6rTUe4ntfDhSgAT39ULkxwkh8TlP0iqGmWzDi58zxe3q8sg
fPWgdpRkT8IxN7H956nm2ljlIKzW2w1d7wRmOrIJoNem7YaY/g/ozV8IvfkB
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
UjqzPineSajonNI4zs5m4zBe2RQDDA36qv/OtxVarFiYLN16QC2ppTv6aqm+
sHRol79FKTINQzFMhQChy3wmeVwM19X5cv5HVeui3WqpoB56WY4k3x9O05SR
McUPGMUtp+kCVEGBUIGCRgY46EMUvRzA29kqV/1k5tCrwFBpLSpbbmWoOJni
/sGSguOQfWHsoNscMJGq9mtz7BwrtloYgh7cY8Vw4Xs3VHj6D+9H5ek/XKn0
9PLp5Wq0REjKtodpNsH3VjEY7stHA03X+LR2MV22as+j/N6y7ZpzT3WPUfp6
aW2AZoqVvUcKRcclUs/93RJfR+28X55vP20upzjZy4SyEfagk6YZ7NOrcLti
ZYEFT8qxXMpa/XSixYnteb5USdTgBPp+KQmbXriq3/YI2qewXKf0NKKTIbBP
55FM3+LzbvA2VsHffrbL0KIKgVFRzt3uKmHtxmStEp3SaXke9CusxtGqzgeX
jiRG8UyS6r3RboiShkB6hbviynNLYtoTNqoaadPWmpVTaAj4iLWydcQ2U1Hw
osVBJl1LK1ybIolSm9TV3uusrqhcb/oPpUJS7do0nK06HNbovsdrejoTkQCT
Fns/I/N6hChUFY/qNMfvYruqIyo7w/YRrt+jLYPq060qQnexhVoxKXFtvqSG
S4jZ3XOoZfjVcHRjFQw9FVYElLFCA6+YrlErwF8k2+Gw4uNe+dMryo3IoChC
VvguhjiZSFeyEhOkcH5SnEk0cloNqpHxCznm7uj696EA46+8AOPdtRsQrb+m
WoyrWOpuTYrTXW0c2dql+2RfrpbedyIJvm+NfKlKcd8ZEfJ9b1n6uDZ5zeS3
VinurlaK4zVeokCcWsrvqkKcuVp/jgpxXDV+cWJ+ZxG35ftk32yPcNdk+QYa
hbdr45mmVuqQ2IXJiMm5sY1tVh2FgzTsdTXPAspYb0PvDdZZJ6vkC4w1rcce
oTx4d14JtTCxFt96k1+hVFayC9KVM+52fWEmzf/XdEhSJNQuiYxHrZnSrmSX
5aSiW2wKlzQyjphwXVHW33XqJe3+HuolbSLm3JXsdWN6Y9h0UfLpY5q02J1O
h88vnUoXIIV+3R3dcd1dSW5zs9nMdXHpmc0psSR1b0UwLd2M1tbHhxWJdR5K
9TVtrc2DYxu7aeWTNrhZU7LLmpOs86wKPCvFD1yTw9+y+Em9socp+6a5inXT
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
PuER4w603r9ELcD1jHsGlXGbbIsjb30nbpTtpkcg+pZ2jgWvpEqgMO81ywTG
n7hemcCilNBwIZbT5MjXCvT7maxHk/QoWl+1MZXXs0q+gt+obvAbxjMiMM+Q
xYxLQmUYe7ny4dC2VO9kKOtPgwmwt+MwcJsf2ik1tNRK/eLuJmyvLlA3U5Rf
j0xi9oh4IctlLr1vPK8LlVwkR7GwWbppvKBtHUJaWGZaTXqj4rwY+cPGM1HD
GjmuAlkj0OxDZz6cCgCZOnpaH1IfJZKBFuDVpe3axRbRguvtulvemL0TWlN/
dJdAT6BGfiq+hSh+RZ1vDjdsq4q988kRXsZPLeEJxK5W5di7z+kNmtdOeuuQ
d/9/8t68uXEsyRP8f8z6O3AizbYjyiQVQIqKUPZ074gUwUMiJOJ4INEzFgsS
kAACIBEEKB7Z9d3X/R24SEVEVmbP1O6kVXemSPDhHX78/HjuZ44uPzCgp/do
+T9tuUyN/ugoSg7P90/jH2TVP2458e4u1M68WPVl/r7/X50/184V+cUlVY4i
QfBuUYa+5beDAImnPPZQJx+m4Cu7SbMsD6dMf5U7fEUh0Vz25E4uvlMnfq78
ybPhhu/a0X9GgdoTFvkhe/ywKOu8UpT173jBuXKt53dXQEmu+IrP34OUP67Z
WmjCU3zwj6cJ+Q2bU5nHCk9Uyg3npRsA2/Hf8UoQzqqInvwvk1Ni6jVBVZpZ
PmFKLO+LqP/02Z6wdw73fsjeZ6Je/3kM/qGypx/qvI4XnKrh7r+n6HL1HWAe
fuj+viP7MX8X17eq/F18/vfz9x+KHJ13q/6fHDn6yYrM9Y3731iRGRb2O+sx
18Mv58sxC8fW/3eDW9UV/J7gVvIHglsntY9/ENPiSHC9eVeOl3IFnPJlffz1
2QyJ9655MNv9HyJsRvew8bh+fcV5g8TFO+4bntbw2y/R+vUrHERWlMw6KTuA
SV7IJNTh8sZuCpXcPStWhw2vOQdRcbl0NV/zHA6YlEjPoakhhSYVN4fLA6B9
wC8CMHUM+95YOBiBckAXHtIgLbdcEKUt4BwPaebFIq8fta+GbugYi8GG3kFM
HScY8d3AW72bAAZi0rNbSQ5xMhguwZMv3dQVsb0aZ1/wG7ZFoa+/0ONcL9ZR
A5Cqm/pO6LH0uNLOwIQTBmpEwTh+eyKt3Nhlj9wVgUicHkdozF9TWjQ7RLFC
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
bKhPVyJ9fRGkPHtBRMLx18h9ueZ87wTZgRVzK4p5cq8YD5MV8ezGHWOJGg+x
q9c0y7McR/8+Q4CMWCDUZEUN5tsgctngKLsrxpEoysAJYJulIgwuWLNYw/v7
8lnsiyCrqmh4TwpQ51OuTr6/rDo783zzylrqrIvOPZqCWhJlv7RL0qxO/fQW
Gd6zpPeweOQH5sieQ8OgQQuvYkGL9frlEv634HePz4hTPofBGkROCFYKza/O
/YURWj2HkguoHAShmCK/os3kjBuw++lXQkyXARSr7RBXk05oaQz2nxzRinSE
zSXWamEDKQEGYj9UfKQfcocK9d0R7a8a0djjDGWBRFhvRGZ83fwRN8tzZ2AN
XsOXuJPFhZczA3DZwherYs4Lw8TlOw4veEMLYDrz0aJkL9JT8A3Vm9iVCJy4
apXkdYrWuSS9KillIbmjIA6ySsSs8VFY1pGHF9zYpTHuNcBb8U7IKGabXInr
LZi9jp/Te0Mn2Tdcs4ucl0+Nj0KlSEIo3Ym0OEqieaobdUSUMgjA9syDSkUu
b8SM20aZ1K7yl1x/qmGRIpZSxFHeyYdk2dnsjkndmq9ApTzjcZv5gC05IIJp
L0I6Rn1PmOigAO5Rp+gj9XH/zqghkKCo4vOIM7MF8aelbEGRMuJEkcinyngl
p2I6NEUf/o2vjLBqBF9H751g9u9eFk6qIvdOL5q8tz78aW2Jf9f6KBms3kON
5VWLiENljtRrii5YUICbjXOo3lsqzGEumykzVvyBBSvSuDfVOECH9DY9d8oK
NFB1ZJ8ORYvM1HDDO4W7xE08Xj4Fxyremt/WPbuXH/Mc1k9XzKBAZkaKyy10
4e7i8o/6jUDObqPz9R02LwvOpAJ6F9d36G8BxlEInL/60xnBVHH1OrkP78em
AS6CukmEcMqRB/36HPi9PLlm7aArkOchXpb8dOVnkk18KYkkfnbt0+w288QI
vJnEIaBACc+5h0QTCgt+6DJXJc77J2dDZXrJVZaf28mRMX+Rk2SFJ0M4EvIC
HnnhFxyGXd2u5l1UL6abXfmqfqwvoB/mDhcKda1X8ZBSbc48j2tMjKF8Xwr8
XjRiz1ntaB02hijO3YUvk1g5AyCoFZ6rxRo+InfSYnssh4mNSDe3NulPORr5
0ZM4PySN+udIHvAd3VMhQ7gmifh17FJauCAaD0vh8OtjZSXItH6eJiB+9vGX
psSZxxQuLDrV+mTo1Mse23NPUbFR+CVygUFvzrPhOfzncrr2+7paFD+nZ/6d
0h+X0k0JvHKMU/dO45VOeJQhWNiDdc0Sya0kMe3zVu67LrAynC3AxVlnAZ3a
+b0rkobTEz4Ai7Ci5epVNMG6fqlvYRk8w/BC9HrRuWtqpSnm1wwotEevHddz
6FdGyMfuZWHdFWBsJ0m3/IIWSzzQbeMZMSgX85/O7+W7TjARRcRAdZEnUb4Y
XqqZQhcGgvOq8cQTK6gKrWAJNj69JP2k9xpMWRd3KvJ771TcFdckGBoXuc3i
/Rw9oJrjNRpqCjKH5+WKE+y7X3PHrTA92B0X2IhTbwRdAmN5Vg8Uq7bUHxNX
4378ylbj2Xx8/OuzqQ/wffz9vDDaWpg+jVLKfs0uKl2Y5uZZ2frML0YKfFS9
QC22SlwUKEXwzqBAcdeExv9BjvNCqJfP+oOQwjkORDiK6aZzkIt+zDqJcBWe
putFUK8ihBnn1DDmJX/QRnTe1hsGWVnRVUb4fvCKz0XOoSTO2K0ZSiIUkXKy
oA43UWaCf0bnsSmHeREXcSXzDsTEeQs/mUNnkct04eIpA6haGddcWFRhGWMq
LNLDUr5oabmz1UHP3N+o2KT5wNcXjV/a8H+3n2o3naoyJdeD5foeJUFD850u
I+q2q6S9vzDdfjKfav22bI0+vfTM/D7jvAQieUeh59Ky5BygRFDKrKlPIOWV
wcpYmwo9fJe+pQf/4B2GoiYpszvPDCLoR0y49flT3Z4qZSYUyvTnGCjHDCd+
Qx64r4vzShAORyjQ9Xvi7Q9RVO6D5O6nnyIjPQHzGY8I4/XUvGmWlATV6qh1
cmh6duI/77kuEjZZZC2ohF95tJ4GrBipsRB6OT+BKpWUXrvBBAzuhMTyiCuP
lR4uQk44AsvdE2uruLRqyz6nv1mtU0rgQn3Bxq9S6nv8Thnnsiq6KsHyIBUM
REsvwy6uADlUZO2ZYblK44OXzrqWapu7ussorTzQlXDEYYpzzbcgDlUwSYMB
u4/M00QvBuGmfRL+znLYPyhHVUUmOPPn5GiwcO0wKMHit7xYtOCmHF/gsi5Z
odvih6yaJpOemB9Ns6MLuPbXq9KvTG0IGqRaLCuIwJrNNpWbG9TEVvPilzRl
hWklOPu/UmvvpLJ3bhuImVHVJirBZE4I/x/3QigmVvSBLlUYiFfVMG+hTOt4
0/Bhj9KG5W1W9LJqecHM2ZJPrzK2wpy0bvAWuFt4lhfBOJPiIv36T6fG/ulx
Ion8qafJOLxc2orVNMUyOiJYVmTGyVctjuhZzCBfGF1FIQbKFUNFkICmmQCn
UxxEiyzX8geARVdnqQNHFI5bfjLjgF2Dcbmszv26+THUjPWyOC14l/N0Ln9O
K1x4V69XHLNiokIM+IRmTYqyv/ykarfbaoTVHT+X7yjximsAyH0QMvj/6RMl
MxT+FHXDc/9HHkPIa97jOvOiaFXGyw84l7WllICivk7hS8jvEIrDZttUyhW4
auh5Enc9gQbDI9TF+MKrloPmnQervC5+zOPAGN8TVddEbmsxxfx+BWiloGwn
pWUHSoFYmROG0zndp5xf6EnzkmL/Fd3jt7dtVibJ7MoURbxhtWF3jeWdERhv
eGbKhtF3nsqyCLy0oq9oFgy+cZHxOhPVEMycV0OA/UmTAhEK9mShb0xc+X9r
u7achmEgeBW+UamAWyAQ4gptVUSkQhAuKsevd/Y1dkKAD/7bJLLX+5wZmwjE
OgAYJLrTtRa5oZVIfKtZHJAPrJpFLUaArMK8sUQsswcAhYtRNCemTAxCJfFc
xTfsRqaydZ+/lt0d2gsdrKZXOMNuib7+VXKDOwF+ZFjdTzxOYuWJNGtLdxrz
dgY9xllzGvigY4HbAw3sGfYKtxVT1nUXrVI8QFWi9RkGiQuGEpawOjmWcIDa
jWPn6oYW1+bBIzxBNPRczi7R5idflZWoe0Cf6JLLFcvRxaiPeIZGwtP93Tfl
gg7uwzVqpwv/XtqRSO5BgMblGDI/1UxJuygbYIiGEtRcMWq9BCToUF3uxl3c
JvjaQaGgpGE+3X2RylGKHq1AYVPt8dI/MysFi0ta4ua7V9pHiVpXcyDNQpKN
EK9ePhLoEl3fTo5E609MaWV38GbwwVgeR1K7kO8wlrV84UPe0sAP7iUc2XhA
+DW0WPYpSugSLdQuUdW1PEPksubpZwgNvPYk4RNx4mXfotg4cLjHKjMxanHJ
URDNVEE+U1k1TBIdcgqYwox+dDUFmFuk/KcRB4XtxQ+Ni2J6aRUFZoqmbRxc
PX4Wbv+p//FbYC3hBm0o8RH+mt4ZTQLlTjsunkBs96zpJDM9/ohXKYd0pDbY
BSwCNEKaOB5jmyXX0mlfHM9kS7ZcSX13urz3jc0p9Sret1oKYbB5E5Vbdri6
mPWzIXrS+k/mPiEP/8bK3cQtRfqzlU9M/PLikTL2GjI+jizrLu+ZS7lmP3Eb
uHBzxtuxhkjJKEW1YPDYfwb/a0/ohG0DAA==

-->

</rfc>
