<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-13" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 131?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 139?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts including the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge that is in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname, as the latter is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>Either IDevID certificate or LDevID certificate of the EE.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enroll-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new Agent-Proximity Assertion value {#agt_prx} is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="196" y="324">EE</text>
<text x="228" y="324">cert</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |    EE cert |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to the following differences compared to BRSKI:  <list style="symbols">
      <t>The pledge is discovered by the Registrar-Agent as defined in {#discovery_uc2_ppa}.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_ep"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided by the Registrar-Agent in the voucher-request trigger as defined in <xref target="tpvr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different from those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected simultaneously and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: Provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.  <list style="symbols">
      <t>The Registrar-Agent triggers one or more pledges to create bootstrapping artifacts such as the voucher-request and the Enroll-Request.
It can then perform a (bulk) bootstrapping based on the collected data.</t>
      <t>The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, and IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on an LDevID, which is provided by the PKI responsible for the customer domain.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
In contrast to <xref target="RFC8995"/>, a BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent.</t>
  <t>Vendor Services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the Agent-Proximity Assertion {#agt_prx}.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>.</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
Agent-proximity is therefore a different assertion than "proximity", which is defined in <xref section="4" sectionFormat="of" target="RFC8366"/>.
Agent-proximity is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This assertion can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the registrar certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.
In a similar fashion, the pledge <bcp14>MUST</bcp14> accept the Registrar-Agent EE certificate provisionally.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For agent-proximity, the EE certificate of the Registrar-Agent <bcp14>MUST</bcp14> be an LDevID certificate signed by the domain owner.
Akin to the proximity assertion in the BRSKI case, the agent-proximity provides pledge proximity evidence to the MASA.
But additionally, agent-proximity allows the domain registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent, to which the registrar is connected to.</t>

<t>The provisioning of the Registrar-Agent LDevID certificate is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="domain-registrar"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
These endpoints accommodate for the signature-wrapped objects used by BRSKI-PRM for the Pledge Enroll-Request (PER) and the provisioning of CA certificates.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Request CA Certificates</c>
      <c><xref target="req_cacerts"/></c>
</texttable>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the Pledge Voucher-Request.
This behavior is retained in BRSKI-PRM.</t>

<t>The domain registrar <bcp14>MUST</bcp14> possess and trust the IDevID (root or issuing) CA certificate 
of the pledge vendor/manufacturer.</t>

<t>Further, the domain registrar <bcp14>MUST</bcp14> have its own EE credentials.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credential for client authentication during the TLS session establishment and switch switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the EE certificate of the Registrar-Agent.</t>

<t>Alternatively, this may be supported by using an LDevID certificate signed by the domain owner for the client authentication of the Registrar-Agent.
Using an LDevID certificate also allows the registrar to verify that a Registrar-Agent is authorized to perform the bootstrapping of a pledge.
See also agent-proximity assertion in <xref target="agt_prx"/>.</t>

<t>Using an LDevID certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the IDevID credential of the pledge is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="registrar-agent"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a secure message passing service between pledges in responder mode and the domain registrar.</t>

<t>It requires the EE certificate of the domain registrar for TLS server authentication when establishing a TLS session with the domain registrar and to provide the registrar EE certificate to the pledge for creating the Pledge Voucher-Request (PVR).</t>

<t>The Registrar-Agent uses its own EE certificate for TLS client authentication when establishing a TLS session with the domain registrar and for signing agent-signed data.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="tpvr"/>.</t>

<t>Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> has a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE certificate of the Registrar-Agent to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>In addition to the EE certificates, the Registrar-Agent is provided with the product serial number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product serial number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Domain registrar EE certificate: certificate of the domain registrar to be provided to the pledge.</t>
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to sign agent-signed-data.</t>
  <t>Serial number(s): product serial number(s) of pledge(s) to be bootstrapped for discovery.</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"&lt;product-serial-number&gt;._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_ep"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI "http://pledge.example.com/.well-known/brski/tpvr", it sets the Host header field to "pledge.example.com" and the absolute path "/.well-known/brski/tpbr".
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the IDevID of the pledge.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through data objects that are not bound to specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
Therefore, authenticated self-contained artifacts (e.g., JWS-signed JSON structures or COSE-signed CBOR structures) are used for the data exchanges between the pledge and the registrar via the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1856" width="576" viewBox="0 0 576 1856" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,736" fill="none" stroke="black"/>
<path d="M 16,800 L 16,912" fill="none" stroke="black"/>
<path d="M 16,976 L 16,1040" fill="none" stroke="black"/>
<path d="M 16,1104 L 16,1168" fill="none" stroke="black"/>
<path d="M 16,1232 L 16,1280" fill="none" stroke="black"/>
<path d="M 16,1344 L 16,1408" fill="none" stroke="black"/>
<path d="M 16,1472 L 16,1584" fill="none" stroke="black"/>
<path d="M 16,1648 L 16,1696" fill="none" stroke="black"/>
<path d="M 16,1760 L 16,1824" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,912" fill="none" stroke="black"/>
<path d="M 168,976 L 168,1040" fill="none" stroke="black"/>
<path d="M 168,1104 L 168,1168" fill="none" stroke="black"/>
<path d="M 168,1232 L 168,1280" fill="none" stroke="black"/>
<path d="M 168,1344 L 168,1408" fill="none" stroke="black"/>
<path d="M 168,1472 L 168,1584" fill="none" stroke="black"/>
<path d="M 168,1648 L 168,1696" fill="none" stroke="black"/>
<path d="M 168,1760 L 168,1824" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,528" fill="none" stroke="black"/>
<path d="M 312,624 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,912" fill="none" stroke="black"/>
<path d="M 312,976 L 312,1040" fill="none" stroke="black"/>
<path d="M 312,1104 L 312,1168" fill="none" stroke="black"/>
<path d="M 312,1232 L 312,1280" fill="none" stroke="black"/>
<path d="M 312,1344 L 312,1408" fill="none" stroke="black"/>
<path d="M 312,1472 L 312,1552" fill="none" stroke="black"/>
<path d="M 312,1648 L 312,1696" fill="none" stroke="black"/>
<path d="M 312,1760 L 312,1824" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,632" fill="none" stroke="black"/>
<path d="M 456,720 L 456,736" fill="none" stroke="black"/>
<path d="M 456,800 L 456,912" fill="none" stroke="black"/>
<path d="M 456,976 L 456,1040" fill="none" stroke="black"/>
<path d="M 456,1104 L 456,1168" fill="none" stroke="black"/>
<path d="M 456,1232 L 456,1280" fill="none" stroke="black"/>
<path d="M 456,1344 L 456,1408" fill="none" stroke="black"/>
<path d="M 456,1472 L 456,1512" fill="none" stroke="black"/>
<path d="M 456,1568 L 456,1584" fill="none" stroke="black"/>
<path d="M 456,1648 L 456,1696" fill="none" stroke="black"/>
<path d="M 456,1760 L 456,1824" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,656" fill="none" stroke="black"/>
<path d="M 560,704 L 560,736" fill="none" stroke="black"/>
<path d="M 560,800 L 560,912" fill="none" stroke="black"/>
<path d="M 560,976 L 560,1040" fill="none" stroke="black"/>
<path d="M 560,1104 L 560,1168" fill="none" stroke="black"/>
<path d="M 560,1232 L 560,1280" fill="none" stroke="black"/>
<path d="M 560,1344 L 560,1408" fill="none" stroke="black"/>
<path d="M 560,1472 L 560,1584" fill="none" stroke="black"/>
<path d="M 560,1648 L 560,1696" fill="none" stroke="black"/>
<path d="M 560,1760 L 560,1824" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,576 L 224,576" fill="none" stroke="black"/>
<path d="M 256,576 L 304,576" fill="none" stroke="black"/>
<path d="M 320,640 L 416,640" fill="none" stroke="black"/>
<path d="M 456,640 L 552,640" fill="none" stroke="black"/>
<path d="M 320,656 L 424,656" fill="none" stroke="black"/>
<path d="M 456,656 L 552,656" fill="none" stroke="black"/>
<path d="M 320,704 L 408,704" fill="none" stroke="black"/>
<path d="M 472,704 L 552,704" fill="none" stroke="black"/>
<path d="M 176,720 L 208,720" fill="none" stroke="black"/>
<path d="M 272,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,816 L 216,816" fill="none" stroke="black"/>
<path d="M 256,816 L 304,816" fill="none" stroke="black"/>
<path d="M 176,832 L 224,832" fill="none" stroke="black"/>
<path d="M 256,832 L 304,832" fill="none" stroke="black"/>
<path d="M 320,848 L 360,848" fill="none" stroke="black"/>
<path d="M 400,848 L 448,848" fill="none" stroke="black"/>
<path d="M 320,864 L 368,864" fill="none" stroke="black"/>
<path d="M 400,864 L 448,864" fill="none" stroke="black"/>
<path d="M 320,880 L 336,880" fill="none" stroke="black"/>
<path d="M 432,880 L 448,880" fill="none" stroke="black"/>
<path d="M 176,896 L 192,896" fill="none" stroke="black"/>
<path d="M 288,896 L 304,896" fill="none" stroke="black"/>
<path d="M 176,992 L 216,992" fill="none" stroke="black"/>
<path d="M 256,992 L 304,992" fill="none" stroke="black"/>
<path d="M 176,1008 L 192,1008" fill="none" stroke="black"/>
<path d="M 280,1008 L 304,1008" fill="none" stroke="black"/>
<path d="M 176,1024 L 192,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 304,1024" fill="none" stroke="black"/>
<path d="M 24,1120 L 56,1120" fill="none" stroke="black"/>
<path d="M 128,1120 L 160,1120" fill="none" stroke="black"/>
<path d="M 24,1136 L 64,1136" fill="none" stroke="black"/>
<path d="M 128,1136 L 160,1136" fill="none" stroke="black"/>
<path d="M 24,1152 L 64,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1248 L 56,1248" fill="none" stroke="black"/>
<path d="M 128,1248 L 160,1248" fill="none" stroke="black"/>
<path d="M 24,1264 L 64,1264" fill="none" stroke="black"/>
<path d="M 128,1264 L 160,1264" fill="none" stroke="black"/>
<path d="M 24,1360 L 56,1360" fill="none" stroke="black"/>
<path d="M 128,1360 L 160,1360" fill="none" stroke="black"/>
<path d="M 24,1376 L 48,1376" fill="none" stroke="black"/>
<path d="M 144,1376 L 160,1376" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 120,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 176,1488 L 216,1488" fill="none" stroke="black"/>
<path d="M 256,1488 L 304,1488" fill="none" stroke="black"/>
<path d="M 176,1504 L 208,1504" fill="none" stroke="black"/>
<path d="M 272,1504 L 304,1504" fill="none" stroke="black"/>
<path d="M 320,1520 L 416,1520" fill="none" stroke="black"/>
<path d="M 456,1520 L 552,1520" fill="none" stroke="black"/>
<path d="M 320,1536 L 352,1536" fill="none" stroke="black"/>
<path d="M 520,1536 L 552,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 368,1552" fill="none" stroke="black"/>
<path d="M 504,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 176,1664 L 216,1664" fill="none" stroke="black"/>
<path d="M 256,1664 L 304,1664" fill="none" stroke="black"/>
<path d="M 176,1680 L 208,1680" fill="none" stroke="black"/>
<path d="M 272,1680 L 304,1680" fill="none" stroke="black"/>
<path d="M 24,1776 L 56,1776" fill="none" stroke="black"/>
<path d="M 128,1776 L 160,1776" fill="none" stroke="black"/>
<path d="M 24,1792 L 64,1792" fill="none" stroke="black"/>
<path d="M 128,1792 L 160,1792" fill="none" stroke="black"/>
<path d="M 24,1808 L 64,1808" fill="none" stroke="black"/>
<path d="M 128,1808 L 160,1808" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1536 548,1530.4 548,1541.6" fill="black" transform="rotate(0,552,1536)"/>
<polygon class="arrowhead" points="560,1520 548,1514.4 548,1525.6" fill="black" transform="rotate(0,552,1520)"/>
<polygon class="arrowhead" points="560,656 548,650.4 548,661.6" fill="black" transform="rotate(0,552,656)"/>
<polygon class="arrowhead" points="560,640 548,634.4 548,645.6" fill="black" transform="rotate(0,552,640)"/>
<polygon class="arrowhead" points="456,864 444,858.4 444,869.6" fill="black" transform="rotate(0,448,864)"/>
<polygon class="arrowhead" points="456,848 444,842.4 444,853.6" fill="black" transform="rotate(0,448,848)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,1520 316,1514.4 316,1525.6" fill="black" transform="rotate(180,320,1520)"/>
<polygon class="arrowhead" points="328,880 316,874.4 316,885.6" fill="black" transform="rotate(180,320,880)"/>
<polygon class="arrowhead" points="328,848 316,842.4 316,853.6" fill="black" transform="rotate(180,320,848)"/>
<polygon class="arrowhead" points="328,704 316,698.4 316,709.6" fill="black" transform="rotate(180,320,704)"/>
<polygon class="arrowhead" points="328,640 316,634.4 316,645.6" fill="black" transform="rotate(180,320,640)"/>
<polygon class="arrowhead" points="312,1680 300,1674.4 300,1685.6" fill="black" transform="rotate(0,304,1680)"/>
<polygon class="arrowhead" points="312,1664 300,1658.4 300,1669.6" fill="black" transform="rotate(0,304,1664)"/>
<polygon class="arrowhead" points="312,1504 300,1498.4 300,1509.6" fill="black" transform="rotate(0,304,1504)"/>
<polygon class="arrowhead" points="312,1488 300,1482.4 300,1493.6" fill="black" transform="rotate(0,304,1488)"/>
<polygon class="arrowhead" points="312,1008 300,1002.4 300,1013.6" fill="black" transform="rotate(0,304,1008)"/>
<polygon class="arrowhead" points="312,992 300,986.4 300,997.6" fill="black" transform="rotate(0,304,992)"/>
<polygon class="arrowhead" points="312,832 300,826.4 300,837.6" fill="black" transform="rotate(0,304,832)"/>
<polygon class="arrowhead" points="312,816 300,810.4 300,821.6" fill="black" transform="rotate(0,304,816)"/>
<polygon class="arrowhead" points="312,576 300,570.4 300,581.6" fill="black" transform="rotate(0,304,576)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1664 172,1658.4 172,1669.6" fill="black" transform="rotate(180,176,1664)"/>
<polygon class="arrowhead" points="184,1488 172,1482.4 172,1493.6" fill="black" transform="rotate(180,176,1488)"/>
<polygon class="arrowhead" points="184,1024 172,1018.4 172,1029.6" fill="black" transform="rotate(180,176,1024)"/>
<polygon class="arrowhead" points="184,992 172,986.4 172,997.6" fill="black" transform="rotate(180,176,992)"/>
<polygon class="arrowhead" points="184,896 172,890.4 172,901.6" fill="black" transform="rotate(180,176,896)"/>
<polygon class="arrowhead" points="184,816 172,810.4 172,821.6" fill="black" transform="rotate(180,176,816)"/>
<polygon class="arrowhead" points="184,720 172,714.4 172,725.6" fill="black" transform="rotate(180,176,720)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1808 156,1802.4 156,1813.6" fill="black" transform="rotate(0,160,1808)"/>
<polygon class="arrowhead" points="168,1776 156,1770.4 156,1781.6" fill="black" transform="rotate(0,160,1776)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1360 156,1354.4 156,1365.6" fill="black" transform="rotate(0,160,1360)"/>
<polygon class="arrowhead" points="168,1248 156,1242.4 156,1253.6" fill="black" transform="rotate(0,160,1248)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,1120 156,1114.4 156,1125.6" fill="black" transform="rotate(0,160,1120)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1792 20,1786.4 20,1797.6" fill="black" transform="rotate(180,24,1792)"/>
<polygon class="arrowhead" points="32,1776 20,1770.4 20,1781.6" fill="black" transform="rotate(180,24,1776)"/>
<polygon class="arrowhead" points="32,1376 20,1370.4 20,1381.6" fill="black" transform="rotate(180,24,1376)"/>
<polygon class="arrowhead" points="32,1360 20,1354.4 20,1365.6" fill="black" transform="rotate(180,24,1360)"/>
<polygon class="arrowhead" points="32,1264 20,1258.4 20,1269.6" fill="black" transform="rotate(180,24,1264)"/>
<polygon class="arrowhead" points="32,1248 20,1242.4 20,1253.6" fill="black" transform="rotate(180,24,1248)"/>
<polygon class="arrowhead" points="32,1136 20,1130.4 20,1141.6" fill="black" transform="rotate(180,24,1136)"/>
<polygon class="arrowhead" points="32,1120 20,1114.4 20,1125.6" fill="black" transform="rotate(180,24,1120)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="344" y="484">backend</text>
<text x="428" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="548">[Registrar-Agent</text>
<text x="308" y="564">authenticated&amp;authorized?]</text>
<text x="240" y="580">PVR</text>
<text x="312" y="580">|</text>
<text x="280" y="596">[accept</text>
<text x="348" y="596">device?]</text>
<text x="284" y="612">[contact</text>
<text x="352" y="612">vendor]</text>
<text x="436" y="644">mTLS</text>
<text x="440" y="660">RVR</text>
<text x="460" y="676">[extract</text>
<text x="536" y="676">DomainID]</text>
<text x="456" y="692">[update</text>
<text x="512" y="692">audit</text>
<text x="556" y="692">log]</text>
<text x="440" y="708">Voucher</text>
<text x="240" y="724">Voucher</text>
<text x="16" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="16" y="772">(4)</text>
<text x="60" y="772">Supply</text>
<text x="104" y="772">PER</text>
<text x="132" y="772">to</text>
<text x="184" y="772">Registrar</text>
<text x="268" y="772">(including</text>
<text x="344" y="772">backend</text>
<text x="428" y="772">interaction)</text>
<text x="16" y="788">~</text>
<text x="168" y="788">~</text>
<text x="312" y="788">~</text>
<text x="456" y="788">~</text>
<text x="560" y="788">~</text>
<text x="236" y="820">mTLS</text>
<text x="240" y="836">PER</text>
<text x="380" y="852">mTLS</text>
<text x="384" y="868">RER</text>
<text x="384" y="884">Enroll-Resp</text>
<text x="240" y="900">Enroll-Resp</text>
<text x="16" y="932">~</text>
<text x="168" y="932">~</text>
<text x="312" y="932">~</text>
<text x="456" y="932">~</text>
<text x="560" y="932">~</text>
<text x="16" y="948">(5)</text>
<text x="64" y="948">Request</text>
<text x="108" y="948">CA</text>
<text x="172" y="948">Certificates</text>
<text x="16" y="964">~</text>
<text x="168" y="964">~</text>
<text x="312" y="964">~</text>
<text x="456" y="964">~</text>
<text x="560" y="964">~</text>
<text x="236" y="996">mTLS</text>
<text x="236" y="1012">cACert-Req</text>
<text x="240" y="1028">cACert-Resp</text>
<text x="16" y="1060">~</text>
<text x="168" y="1060">~</text>
<text x="312" y="1060">~</text>
<text x="456" y="1060">~</text>
<text x="560" y="1060">~</text>
<text x="16" y="1076">(6)</text>
<text x="60" y="1076">Supply</text>
<text x="120" y="1076">Voucher</text>
<text x="164" y="1076">to</text>
<text x="204" y="1076">Pledge</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="76" y="1124">opt.</text>
<text x="112" y="1124">TLS</text>
<text x="96" y="1140">Voucher</text>
<text x="96" y="1156">vStatus</text>
<text x="16" y="1188">~</text>
<text x="168" y="1188">~</text>
<text x="312" y="1188">~</text>
<text x="456" y="1188">~</text>
<text x="560" y="1188">~</text>
<text x="16" y="1204">(7)</text>
<text x="60" y="1204">Supply</text>
<text x="100" y="1204">CA</text>
<text x="164" y="1204">Certificates</text>
<text x="228" y="1204">to</text>
<text x="268" y="1204">Pledge</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="76" y="1252">opt.</text>
<text x="112" y="1252">TLS</text>
<text x="96" y="1268">cACerts</text>
<text x="16" y="1300">~</text>
<text x="168" y="1300">~</text>
<text x="312" y="1300">~</text>
<text x="456" y="1300">~</text>
<text x="560" y="1300">~</text>
<text x="16" y="1316">(8)</text>
<text x="60" y="1316">Supply</text>
<text x="152" y="1316">Enroll-Response</text>
<text x="228" y="1316">to</text>
<text x="268" y="1316">Pledge</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="76" y="1364">opt.</text>
<text x="112" y="1364">TLS</text>
<text x="96" y="1380">Enroll-Resp</text>
<text x="88" y="1396">eStatus</text>
<text x="16" y="1428">~</text>
<text x="168" y="1428">~</text>
<text x="312" y="1428">~</text>
<text x="456" y="1428">~</text>
<text x="560" y="1428">~</text>
<text x="16" y="1444">(9)</text>
<text x="64" y="1444">Voucher</text>
<text x="124" y="1444">Status</text>
<text x="192" y="1444">Telemetry</text>
<text x="276" y="1444">(including</text>
<text x="352" y="1444">backend</text>
<text x="436" y="1444">interaction)</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="236" y="1492">mTLS</text>
<text x="240" y="1508">vStatus</text>
<text x="436" y="1524">mTLS</text>
<text x="368" y="1540">req</text>
<text x="412" y="1540">device</text>
<text x="464" y="1540">audit</text>
<text x="504" y="1540">log</text>
<text x="396" y="1556">device</text>
<text x="448" y="1556">audit</text>
<text x="488" y="1556">log</text>
<text x="264" y="1572">[verify</text>
<text x="320" y="1572">audit</text>
<text x="364" y="1572">log]</text>
<text x="312" y="1588">|</text>
<text x="16" y="1604">~</text>
<text x="168" y="1604">~</text>
<text x="312" y="1604">~</text>
<text x="456" y="1604">~</text>
<text x="560" y="1604">~</text>
<text x="20" y="1620">(10)</text>
<text x="68" y="1620">Enroll</text>
<text x="124" y="1620">Status</text>
<text x="192" y="1620">Telemetry</text>
<text x="16" y="1636">~</text>
<text x="168" y="1636">~</text>
<text x="312" y="1636">~</text>
<text x="456" y="1636">~</text>
<text x="560" y="1636">~</text>
<text x="236" y="1668">mTLS</text>
<text x="240" y="1684">eStatus</text>
<text x="16" y="1716">~</text>
<text x="168" y="1716">~</text>
<text x="312" y="1716">~</text>
<text x="456" y="1716">~</text>
<text x="560" y="1716">~</text>
<text x="20" y="1732">(11)</text>
<text x="64" y="1732">Query</text>
<text x="116" y="1732">Pledge</text>
<text x="172" y="1732">Status</text>
<text x="16" y="1748">~</text>
<text x="168" y="1748">~</text>
<text x="312" y="1748">~</text>
<text x="456" y="1748">~</text>
<text x="560" y="1748">~</text>
<text x="76" y="1780">opt.</text>
<text x="112" y="1780">TLS</text>
<text x="96" y="1796">tStatus</text>
<text x="96" y="1812">pStatus</text>
<text x="16" y="1844">~</text>
<text x="168" y="1844">~</text>
<text x="312" y="1844">~</text>
<text x="456" y="1844">~</text>
<text x="560" y="1844">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr-proc"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="req_cacerts"/> describes the retrival exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the certificate provisioning exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange (containing the LDevID (Pledge) certificate) initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>This exchange assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PVR via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field to <spanx style="verb">application/json</spanx>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact in the body of a 200 OK response.
The Content-Type field header of the response <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-voucher-request-trigger-tpvr"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters.
The following CDDL <xref target="RFC8610"/> explains the Pledge Voucher-Request Trigger structure.</t>

<figure title="CDDL for Pledge Voucher-Request Trigger" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">pledgevoucherrequesttrigger</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: X.509 v3 certificate structure of the domain registrar EE certificate (base64-encoded value); may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded JWS structure containing the SubjectKeyIdentifier of the EE (RegAgt) certificate and signing Data including the creation date and serial number of the pledge. Note that <xref target="I-D.ietf-anima-rfc8366bis"/> defines an opaque binary element for agent-signed data, for which the structure is defined in BRSKI-PRM.</t>
</list></t>

<figure title="JWS structure for the agent-signed-data member in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(prmasd)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The BRSKI-PRM Agent Signed Data structure <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="prmasd_CDDL_def"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains the BRSKI-PRM Agent Signed Data structure.</t>

<figure title="CDDL for BRSKI-PRM Agent Signed Data" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">prmasd</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: creation date and time as standard date/time string as defined in <xref target="RFC3339"/></t>
  <t><spanx style="verb">serial-number</spanx>: product-serial-number in the X520SerialNumber field of the IDevID certificate of the pledge as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
</list></t>

<t><xref target="prmasd_payload"/> below shows an example for unsigned BRSKI-PRM Agent Signed Data in JSON syntax.</t>

<figure title="Data example for prmasd" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> JWS structure <bcp14>MUST</bcp14> contain the following parameters (see <xref target="asd_header"/> for an example):</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<figure title="Protected Header example inside agent-signed-data" anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate.
Hence, the tPVR is an unsigned artifact and the pledge only accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

</section>
<section anchor="response-artifact-pledge-voucher-request-pvr"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact is a JWS Voucher Request as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
Its unsigned data <bcp14>SHALL</bcp14> be constructed similar to the Voucher-Request artifact defined in <xref target="RFC8995"/>.
It will contain additional data provided by the Registrar-Agent as specified in the following.</t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request:voucher as defined in <xref target="I-D.ietf-anima-rfc8366bis"/> and thus makes optional leaves in the YANG definition mandatory:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher data is extended with two additional parameters that <bcp14>MUST</bcp14> be included:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: base64-encoded registrar EE certificate (provided in tPVR by the Registrar-Agent); enables the registrar to verify that it is the desired registrar for handling the PVR</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded agent-signed-data (provided in tPVR by the Registrar-Agent); enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr_example"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "typ": "voucher-jws+json",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_2"/> shows the the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PER via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tper</spanx>.
As the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.
To avoid an empty request body an artifact is provided containing the description of the requested operation.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-enroll-request-trigger-tper"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>This document specifies the trigger for a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.</t>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters (tPER-data).
The following CDDL <xref target="RFC8610"/> explains the Pledge Enroll-Request Trigger structure.</t>

<figure title="CDDL for Pledge Enroll-Request Trigger" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
    "enroll-type": "enroll-generic-cert"
  }
]]></artwork></figure>

<t>The enroll-type field is an enum, identifying what is being enrolled. 
Currently only "enroll-generic-cert" for the LDevID certificate is defined.</t>

<t><xref target="tPER_payload"/> below shows an example for unsigned Pledge Enroll-Request Trigger in JSON syntax.</t>

<figure title="Data example for pledgeenrollrequesttrigger" anchor="tPER_payload"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="tper_CDDL_def"/>.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional data, like CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

</section>
<section anchor="response-artifact-pledge-enroll-request-per"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact is a JWS-signed PKCS#10 Certificate Signing Request (CSR) utilizing the csr-grouping of the <spanx style="verb">ietf-ztp-types</spanx> YANG module as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.</t>

<t>The pledge constructs the Pledge Enroll-Request (PER) artifact as a JWS structure containing the PKCS#10 request wrapped in ietf-ztp-types YANG structrue as JWS payload.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10 and <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain.
This generic LDevID certificate can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the enrollment endpoint <spanx style="verb">requestenroll</spanx> specified in this document to provide the Pledge Enroll-Request artifact to the Registrar.</t>

<t>The JWS Protected Header of the PER <bcp14>MUST</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: base64-encoded pledge IDevID certificate;
it <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate; if the certificate chain is not included, it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate</t>
</list></t>

<t>The body of the Pledge Enroll-Request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">p10-csr</spanx>: base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per_example"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including backend interaction)</name>

<t>Similar to BRSKI "requestvoucher" endpoint in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.</t>

<t>The Registrar-Agent has acquired one or more PVR and PER object pairs</t>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the exchanges for the Voucher Request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="416" width="576" viewBox="0 0 576 416" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,384" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,384" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,176" fill="none" stroke="black"/>
<path d="M 312,272 L 312,384" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,280" fill="none" stroke="black"/>
<path d="M 456,368 L 456,384" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,304" fill="none" stroke="black"/>
<path d="M 560,352 L 560,384" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,224 L 224,224" fill="none" stroke="black"/>
<path d="M 256,224 L 304,224" fill="none" stroke="black"/>
<path d="M 320,288 L 416,288" fill="none" stroke="black"/>
<path d="M 456,288 L 552,288" fill="none" stroke="black"/>
<path d="M 320,304 L 424,304" fill="none" stroke="black"/>
<path d="M 456,304 L 552,304" fill="none" stroke="black"/>
<path d="M 320,352 L 408,352" fill="none" stroke="black"/>
<path d="M 472,352 L 552,352" fill="none" stroke="black"/>
<path d="M 176,368 L 208,368" fill="none" stroke="black"/>
<path d="M 272,368 L 304,368" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,304 548,298.4 548,309.6" fill="black" transform="rotate(0,552,304)"/>
<polygon class="arrowhead" points="560,288 548,282.4 548,293.6" fill="black" transform="rotate(0,552,288)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(180,320,352)"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(180,320,288)"/>
<polygon class="arrowhead" points="312,224 300,218.4 300,229.6" fill="black" transform="rotate(0,304,224)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,368 172,362.4 172,373.6" fill="black" transform="rotate(180,176,368)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="196">[Registrar-Agent</text>
<text x="308" y="212">authenticated&amp;authorized?]</text>
<text x="240" y="228">PVR</text>
<text x="312" y="228">|</text>
<text x="280" y="244">[accept</text>
<text x="348" y="244">device?]</text>
<text x="284" y="260">[contact</text>
<text x="352" y="260">vendor]</text>
<text x="436" y="292">mTLS</text>
<text x="440" y="308">RVR</text>
<text x="460" y="324">[extract</text>
<text x="536" y="324">DomainID]</text>
<text x="456" y="340">[update</text>
<text x="512" y="340">audit</text>
<text x="556" y="340">log]</text>
<text x="440" y="356">Voucher</text>
<text x="240" y="372">Voucher</text>
<text x="16" y="404">~</text>
<text x="168" y="404">~</text>
<text x="312" y="404">~</text>
<text x="456" y="404">~</text>
<text x="560" y="404">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The HTTP request Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="tpvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the Voucher.</t>

<t>The HTTP response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> if no content negotiation is used.</t>

<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS".</t>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR, it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid or if the pledge-provided information could not be used with automated allowance.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref section="5.3" sectionFormat="of" target="RFC8995"/> followed by obtaining a voucher from the pledge's MASA according to <xref section="5.4" sectionFormat="of" target="RFC8995"/> with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Supply RVR to MASA (backend interaction)</name>

<t>The registrar needs to convert the PVR to an RVR and supply it to the MASA.</t>

<t>If the MASA address/URI is learned from the IDevID MASA URI extension (<xref section="2.3" sectionFormat="of" target="RFC8995"/>), then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC9052"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

<t>The registrar provides the EE certificate of the Registrar-Agent identified by the SubjectKeyIdentifier (SKID) in the header of the "agent-signed-data" from the PVR in its RVR (see also <xref target="rvr-proc"/>).</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-cert" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA may issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE certificate of the Registrar-Agent in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx response status codes as described in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
When successful, the Voucher will then be supplied via the registrar to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Issue Voucher by MASA (backend interaction)</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
{
  "ietf-voucher:voucher": {
    "assertion": "agent-proximity",
    "serial-number": "callee4711",
    "nonce": "base64encodedvalue==",
    "created-on": "2022-01-04T00:00:02.000Z",
    "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>Supply Voucher to Registrar (backend interaction)</name>

<t>After receiving the voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
The registrar then prepares the artifact to be provided via the registrar-agent to the pledge as described in the following section <xref target="exchanges_uc2_2_reg_signed_voucher"/>.</t>

</section>
<section anchor="exchanges_uc2_2_reg_signed_voucher"><name>Response Artifact: Registrar countersigned Voucher</name>
<t>The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key (of the Registrar) that the pledge received in the trigger for the PVR (see <xref target="tpvr_CDDL_def"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Reg))),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
{
  "ietf-voucher:voucher": {
     "assertion": "agent-proximity",
     "serial-number": "callee4711",
     "nonce": "base64encodedvalue==",
     "created-on": "2022-01-04T00:00:02.000Z",
     "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "typ": "voucher-jws+json",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor.
The registrar returns the voucher to the Registrar-Agent.</t>

</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including backend interaction)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,272" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 360,208" fill="none" stroke="black"/>
<path d="M 400,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 368,224" fill="none" stroke="black"/>
<path d="M 400,224 L 448,224" fill="none" stroke="black"/>
<path d="M 320,240 L 336,240" fill="none" stroke="black"/>
<path d="M 432,240 L 448,240" fill="none" stroke="black"/>
<path d="M 176,256 L 192,256" fill="none" stroke="black"/>
<path d="M 288,256 L 304,256" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,224 444,218.4 444,229.6" fill="black" transform="rotate(0,448,224)"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,256 172,250.4 172,261.6" fill="black" transform="rotate(180,176,256)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="380" y="212">mTLS</text>
<text x="384" y="228">RER</text>
<text x="384" y="244">Enroll-Resp</text>
<text x="240" y="260">Enroll-Resp</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>As specified in <xref target="tper"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per_example"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
</list></t>

</section>
<section anchor="enroll-pledge-by-domain-ca-backend-interaction"><name>Enroll Pledge by Domain CA (backend interaction)</name>

<t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the Enroll-Request with the corresponding domain CA.
It creates a Registrar Enroll-Request (RER) by utilizing the protocol expected by the domain CA.</t>

<t>The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.</t>

<t>The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>

</section>
<section anchor="response-artifact-enroll-response-enroll-resp"><name>Response Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="tper"/>).</t>

</section>
</section>
<section anchor="req_cacerts"><name>Request CA Certificates</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the request and provisioning of CA certificates in the infrastructure. 
The following subsections describe the corresponding artifacts.</t>

<figure title="CA certificates retrival exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 192,192" fill="none" stroke="black"/>
<path d="M 280,192 L 304,192" fill="none" stroke="black"/>
<path d="M 176,208 L 192,208" fill="none" stroke="black"/>
<path d="M 288,208 L 304,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,208 172,202.4 172,213.6" fill="black" transform="rotate(180,176,208)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="64" y="132">Request</text>
<text x="108" y="132">CA</text>
<text x="172" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="236" y="196">cACert-Req</text>
<text x="240" y="212">cACert-Resp</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-cacert-request-cacert-req"><name>Request Artifact: cACert-Request (cACert-Req)</name>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

</section>
<section anchor="response-artifact-cacert-response-cacert-resp"><name>Response Artifact: cACert-Response (cACert-Resp)</name>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64-encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in 
# General JWS Serialization syntax
{
  "payload": BASE64URL(certs),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="tpvr"/>.</t>
</list></t>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="tpvr"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.
<xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Voucher</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-voucher"><name>Request Artifact: Voucher</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the Pledge-Voucher-Request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="response-artifact-voucher-status-vstatus"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.
The reason-context is an arbitrary JSON object that may provide additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="vstat"/>.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": BASE64URL(pledge-voucher-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="voucher"/>.</t>

</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates aquired by the pledge-agent to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">cACerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact"><name>Request Artifact:</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64-encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the received wrapped CA certificate object using the domain certificate contained in the voucher. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 403 Forbidden. It signals that the object could not be verified and has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"/>.</t>
</list></t>

<t>In case of success, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t><xref target="exchangesfig_uc2_8"/> shows the supply of the Enroll-Response to the pledge.
The following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the Enroll-Response to the pledge by HTTP(S) POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Content-Type header when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="response-artifact-enroll-status-estatus"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>After enrollment processing the pledge <bcp14>MUST</bcp14> reply with a enrollment status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The enroll-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the enroll-status using its new LDevID credentials as shown in <xref target="estat"/>.
In failure case, the pledge <bcp14>SHALL</bcp14> use its IDevID credentials.
<xref section="5.9.4" sectionFormat="of" target="RFC8995"/> specifies the enrollment status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="estat"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains enroll-status response structure. 
It is similar as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/> with the optional fields set to mandatory as described above.</t>

<figure title="CDDL for pledge-enrollment-status response" anchor="e_stat_res_def"><artwork type="cddl" align="left"><![CDATA[
enrollstatus-trigger = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": BASE64URL(pledge-enroll-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including backend interaction)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status (vStatus) and enroll status (eStatus) from pledge.</t>
</list></t>

<figure><artset><artwork  type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,240" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="464" y="228">audit</text>
<text x="504" y="228">log</text>
<text x="396" y="244">device</text>
<text x="448" y="244">audit</text>
<text x="488" y="244">log</text>
<text x="264" y="260">[verify</text>
<text x="320" y="260">audit</text>
<text x="364" y="260">log]</text>
<text x="312" y="276">|</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>
<t>{: #exchangesfig_uc2_9 title="Voucher Status telemetry exchange" artwork-align="center"}~~~~ aasvg</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with HTTP 4xx/5xx status codes.
The Registrar-Agent may use the response status code to signal success/failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the Enroll-Response (certificate) and holds the corresponding private key.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"/>.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes.</t>

<t>Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide the dedicated endpoint for the Query Pledge Status operation.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent queries the Pledge Status via HTTP POST request on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the JWS-signed Status Trigger (tStatus) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge provides the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> reply to this request with the Pledge Status (pStatus) artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-artifact-status-trigger-tstatus"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query artifact is a JWS structure signing information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> defines the structure of the unsigned Status Query data (i.e., JWS payload):</t>

<figure title="CDDL for unsigned Status Trigger data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "created-on": tdate,
      "serial-number": text,
      "status-type": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> field is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the version <bcp14>MUST</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">created-on</spanx> field contains a standard date/time string following <xref target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> field takes the product-serial-number corresponding to the X520SerialNumber field of the IDevID certificate of the pledge.</t>

<t>The <spanx style="verb">status-type</spanx> value defined for BRSKI-PRM Status Query is <spanx style="verb">bootstrap</spanx>.
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).</t>

<t>As the Status Query artifact is defined generic, it may be used by other specifications to request further status information using other status types, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req_data"/> below shows an example for unsigned Status Query data in JSON syntax using status-type <spanx style="verb">bootstrap</spanx>.</t>

<figure title="Example of unsigned Status Query data in JSON syntax using status-type bootstrap for the Status Query artifact" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

<t>The Status Query data <bcp14>MUST</bcp14> be signed by the Registrar-Agent using its private key corresponding to the EE (RegAgt) certificate.
When using a JWS signature, the Status Query artifact looks as shown in <xref target="stat_req"/> and the Content-Type response header <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>:</t>

<figure title="Status Query Representation in General JWS JSON Serialization Syntax" anchor="stat_req"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(status-query)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>For details on <spanx style="verb">JWS Protected Header</spanx> and <spanx style="verb">JWS Signature</spanx> see <xref target="I-D.ietf-anima-jws-voucher"/> or <xref target="RFC7515"/>.</t>

</section>
<section anchor="response-artifact-pledge-status-pstatus"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>When the pledge receives a Status Query with status-type <spanx style="verb">bootstrap</spanx> it <bcp14>SHALL</bcp14> respond with previously collected telemetry information (see <xref target="vstatus"/> and <xref target="estatus"/>) in a single Pledge Status artifact.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t>The following CDDL defines the structure of the Pledge Status (pStatus) data:</t>

<figure title="CDDL for unsigned Pledge Status data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="stat_res"/>.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(status-response)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Request wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply Voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="4" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="1" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

   This offers the following advantages.  The origin of requests and
   responses can be authenticated independently of message transfer.
   This supports end-to-end authentication (proof of origin) also over
   multiple hops, as well as asynchronous operation of certificate
   enrollment.  This in turn provides architectural flexibility where
   and when to ultimately authenticate and authorize certification
   requests while retaining full-strength integrity and authenticity of
   certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-10"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2476?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response.</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
  <t>Reordered description in section <xref target="pvr"/> to better match the order of communication and artifact processing.</t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="req_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
u9njtUAtO+ToUfaUzWIb6JaUckOpw5N5qUEgvKSq+bU6ml4abqkuWNdL7cPe
f5oSs+ROwH401Vw8xxEt2p45Ef6rdCLgusZI2IRcEcy7Np1WC6mlowCPOoGb
dz7U4VboIB2ufTlDV4H1g8GZrBpBtJi1Re2d+6NFodp8x3lj0SF7UfZutoH6
Re2DvBQbB9tpUs3LepA3RGbZye/Woz5IJEiKeznxhk05NkvRW6w06S6ADXP+
AtVMJ4pCEF5obKHeeYrHwVpvjBmGdRalTzAelHvt021hZtUdEcRsOLKghohP
Hw+LMTIpA9aTvahg+4LEOSPZRrVUwhJQAl4URc8f/KCqraPdXQoPrubW22zL
Ncrlbe0dHG9qhGSbrH3kVL860v3efxSmYLF5YlXyDkq3DrZF0mBnaO4WWjLR
cKcqZ6XjTvB02NCte5Wv5WJr2PbEQ63ODmHDYtxjzSTc7KTJMWG68ZXHXjSm
UpNm0GFPeYECoKHpnLrokTC7b1ixn4GleABW0zkCN58d9KjaxvMCjJzP6Ebb
D8NHzz/b7ymy3LRO76c5kSxwoYlLVFOrsIpIi6X8xngTmleuXrFvdlQw9Fei
+MrXEtw4DC1EFxoWjte6et5t55p1ZZYJLNrk117c5MRcLqCamCLYWYga2e3I
FGzzLp+Y+q7LblBPkStsPn/8+lhBWVTmq/ZFImH9sH6W/nn/0xdH5s89T9+X
pGdeekG38+ja6FSTAHlWnlN8BK5AUEg9gnDaKuDl3z5GFLe/MQ26ol6c1r6k
kUn3D7PH23UdPun8wP72ia2DkQVFKwb6ic8hlw/kd/mNMvy+iSo/4P+4dPK4
Zf8VMJTMA2RAfKhxhXVATNdW+OQQpSb62r7RZpz38TbN+F9cb2bG4rxzM+Rq
Jfvrzs2Eyf/4707NtFr57XeYm1s8lGzmv9rNtD+64ZP/WtvY6t3g7/hQb/pQ
4+bFrGbNEIEwd18F2RPNy6+OPsSecM38BPbEdmtPhIreT35LHHyYLXHw09kS
Oz2XJfdVlCVnCsKcIoFwWAK194PbLIlmeOEvZfPcvGA3Lc+fY63w1s0EmuK/
+vSY3/1l5WZuK5hu3HN/lsR4duRLT+7QjFRREXDkXZtZ7ZOVmwlUBL8TdOpW
bSbUD47c3XLLZsJf/1y8a4gLnFXRw6d/uWM7ixmj/uG0Nlj5deV27OyofuD/
LTtV9ts/NqF3v9eZGvxTEXobuNV730U+3Payu+WJ7BLKtz2RR+n+3aY3xo8V
b+buKV7yUPtVP7gT8KDXlcj+89rhoz0cO+q/d2/m30wzP8rN8LDXGVT+we2G
D2oR3OIOSzfDkueKg8t3703rG//M3fCod2P8/6e9K/gw13ffFa1v/DOX83Hv
RqzFT3k5b3VNp5uhjVD4M/5TOORPejGB9UkxKS6LZn79iwrsPr2tdL+TUWq6
qYrsrVTgefE3Rfc7++92zUhvUo10G4H6w5+FA8TbnulX/eCOwNZmT0Ri6wj8
3LZ48T1s8Rub+VDLuNVLIf1+cEv4QVWUxtxG30Fxnf2UFFdHDp0KYStW84XG
rtNpje7RG3ihg8B2ppHtrJ5NSmVMcBdmwLbcEV63YXsPTzE5w8hUu0u1XxxC
OcwxzEd/W5SSUOUSeSPSvxjwrAiuZVB/C6jDai4OvXz710egolu/fWfoapKE
L1cGmNaLVcVZ9VUW4OZ0oCaNP4p42vAjghB4zNbRV0dICHg1RwarkRT+Rsyo
ZtsqMMSmR3AHifqxoXRdGPj9oSMrDAcuTIcmcfuW47zTMPftIKl4+d2G9WDY
4ksMh0clY7DGUGthq5kQVUQkDQFzZVzSZLW52d8bZmtrD4cBiD7sl26rW897
C5Ej6N52sgtMz6NhALIPu9A56Dv2Ccf8eJiE3Icvjo1I974NATzpxhAetg0+
/EF57N73M2FPhkEVnfSayZONs3bufnjuLiSwitfm0Nb4Sc6y6qUforP4Sro9
NOEhfGGYJeFe4wujaxpqiPMllutbS3K4rjlB7YaEnPcf0VUn9I2+U8RcIdDA
rnww5QU2fBS2C5ZhgEhO2jDpBMmSVmbquMQ111oyH4mIjSjBEFU884TYyPOC
CGHFyhpULbHyjK49WbQb9SqAS026ZZYo/g3TJLiIVKLjW1j04UK5u+wlHpIm
JInv3GuTMD83nQK8tNxDDhGJYucXMOA/HAz4C8TsF4jZP9oI2xITbJ0yhhPm
wvpyk6t1p2h+h9ET2qnJCHUmPP7LF8cnyobj87b0QZeF9rojeew1p9NpJZPT
Cq4WSihSagpsF8HcwonSITf1uGw0LEBFDoaNS74WNV8LA98+Ms1Mm8EJVnJx
6WqvDSnIvb/W1fQ1MuHOiB0D06E5xZxIyTJ8Y7skxrzAyIBTTmhtVH2XUdFY
KRNoe3Mze/Enl13NvU70TAYQZXo7Vj0aU9R5LRXz17f1JzSQdn36qHQNfHNg
KoBgCozV9rHyvJauD/eETRzSnCFlfqKtUsznxCUzLph7wV9vksvDX/BJ5uYu
J8K/+zBPn+ZjjbDvKh23km0TRzcmBkylKQeXR2XWzxs9zblAGVFJQBdohvvZ
2zmmNBD4HwlOavhWMxoSn1zwtLJP8R6gbAOiR0NWi3O/5kRzymWC3lLqUHuF
dHvh8B5mz6HNPUKN4SS7EfJH8U7mXYGZgBxHlDdxqSlcKD6L0PnF1FEhOTIG
/jLzoVHtpLBbVV18Yvq29SD70jeSfUEDw73p+hhs2H9kT6WTHxG1M79W8552
VxMYLAlvJ1uEQBf6m8o4iUhnNREMCfHA4gDxOoz8XftPnz7TRLyHlKtcvJtN
cq6/dGPf3HtR8WPNbzQeT9Y0o0AOtKyK9uY32XsqE7fu+MApQ9QTg8eFnXbB
EEHqV/uU4a7Uv8Ofv/U3For5Vzi8VyB31F9Iw0VlfPnAWu7CSXHWrGdMloCS
ZHCZz9/AdP7mf/77/8AcFP/z3/8X7jWeW9xzteeRUWnwesmUvMZEIJI1r1ec
k9e72X8MH2w+ya52Qi55txO6iBYjJtENvOAe3h8UUxzXGCXLouj9Wo0pJYhE
8Za2zoSlEb57BjLrottqdPZULvS1UeUrubV86QnXZzMxZtlhCqK+//HrYzMB
kQMjSYPt2f43oLt7502vRbOq5NtPUTiHHgLmFMcUW/flgNw2TGDOLLHYksJt
ck9ybtYsh32CadfIxUN+A0k+bXGB9+ljz2DvJyKsRGfrKPBhgXOzPsuvsaIr
HKVP944PHt7/8ujZxpcnnz3emMEdVo97PTx86y5hu4Yv/pmO43up+IhsYnwP
ttvAdXmpf84+J9nMLdKTrtXgSXzoWP/So+9+C//7lzVzxqFnqoaGa6+OxTZd
+WVBSwMT8QdxgdCLaN20Lkp9DTvnXUuBJSEg6qvPvBUOW14I2iS+G6oi6QaF
t5K8bilDKH63HzyBxfeimS43lFe+Wjt6AWg9nGBTpiKaYl7DjFikOFWXD8hi
PnFnhPipRtVloZsEX0WHXrfra9kLr3WuulPOd5jpAqsvPdiijPPbXS8rzaJz
KujVQjPgbxFWB3HbNXgO5ZYIWL3wb8W7JrwgoplsXRFLOnfH+2H59UDdMTeB
jGsAasZuQtRQ0n1uKUrhL/foU1nV1C7b2dnBXUYvCKbo9W4HIZr07z8ebG/y
KWHybdGtZM+kuJHDKop1V690L20Pd2ICA/RxySrJnqTYGlK/sZcLNW4pgH7G
Shyv0bJ9pWeQD7luLpaCfsphx6xvb25vDTbvD7Yenmxu7uJ/t4abm5v/e51l
YbTB1kfILlHcf7S1tb7W3mYyABVXTznP1/edv7ZU5qTEqDu07esxug5b5q0/
pV49VEZ67DHr0CSS5mame6KnTM5hy8D/VnO4ty9ZV1b3p7HQnHBXtfr1wfH2
g4dtg9DQWPA+cFKF3vemHLcvfFL7dArSdS7wL+vBZ+vZi/2Tg5Ps+OTo8Pkf
ROG5QRMI7koYNK43jYP3AnQOP+HeSeeo3d/8Zj26r2RanfckXk/dEyXVAG1f
YJ07xGsXoqiRKCByYPUdqHkoWmfgPkD6fjQsfUFUrzKmyggR6TWVEAWxUZ0N
4L9Cw27czZ0U9b6wkZ1jYXihzmM/I1PHmUChf5xZdzjnKa5plOj5BytSagmZ
hLOpJvJH76kws9nWRMoGiQXwHWXj6WUtl/0ytdTo9sw6zqvRMIOJKzejejsy
8TAvk65MQEP/FRXqFR4FcaZIKAUM4bNG2Hx1XhxTitL0KXmOiyPeaAlv3GgA
b7TtXhJpGvrT76X4U7sdS4dYTnFq9GYY7t6zZ2LrsLjEiKQUf5FQV9w316u2
GifUO4dC5KUS19Q8obfGvEiJStZBDcxAYuvmkztFgztwZFaT8siI6XjnQdbg
bEXVnXeDM9A9vYHlwhtzUQvhmQvrT4r8qnBlSP9zD8SuUWodA1pC7+HFsQMa
LeZzIWs2ihD88Tqfnu/ip9Cz8YA+ZQ8cRihDd6I7bemaE+JSxDdjiRtn6lGn
+H2OZqR1rvueu1J6rH4PfzHmuFbk4Ho9RRrM1kBz+Ob1rKnO5/kMLDoSVbA7
0Ek4q4vFuBrMYZDQhalWQknoc+258zV/E4oeLHSs5HG7rkxbsk2t0jk2UlPL
unkPj5aE3/BwKDY6uM4vHJwMT05vKFt76ZZk8Vl71nx2Hbyt7Ckz251uRbXF
lFPttu6WSPXodqhYYna6xtInvPdrISi9oQ4fE+uSuC/qch68Gm9RrJw+Mbf7
qs6S9oX0AXuO53JSnSufXUd1Z00wjgoOCfEgNxWMDHeGVHPgylciwEiiXMKm
nnjTP7WD3JvqgorsiVyy3Kk3yTjZn6KeyD3i8VM8go/rRAFBwyBUZ+8ejPwO
1WH88cXxgbiuVeH8KHNvu9ljcYMrZ9mZ+mE5eIhQjPTg3expwftVvRvry4ax
Dg3YgjNcMMDYezxFS5vY1SHfaA5ue3MQv06iHL9ZPK0/+eTeZ4unn//hy+nR
u+c7B1v39/8dbAH95jLbUb/jpCj+PZaj7ksre9DTxknYTuhT7zBncJXSK7Se
2gbr0XrA84kVSVlV8BkYlfhZHE3UP8Mhcts0Wz7C7tFELkWMGqgNJh6ho3BD
wWGF85h2AX27lkRCRVBZBEIVCIR6sTIFNkmAhij5nDoRBMqFbrtYTvr3g0Uu
bQfIpS700sHRLyClnzlI6RfOo184j4JflmCUtp2X7eAfhVE6+FAYpQIxSnuS
ECHsxoY1Ni8vay56Ig4JvgDKUVgzd1qFjqOGCw2KzttVfvLEFWqdIjNzcx0C
pbB+r/HKuFaigCvL4lmIn1Zb0VUkW4ZwOlgB4XRwa4STAzBZYBY5AjqQWUn4
jMWprIhVOvguWKX7796FeCX80veMVfoHwoOGGVLPi+L1c0MJRZqaQf4csI/U
ludRr2Ad+JYoRpOSAby/QA7sHx/Z89919mEvOzZe83V1vllhMi+0NvaYzum1
nCKpvY3mi/dvalLX0d69/b1h4PjtHv4HBD7xbJJt07sbCKqjmx1xap5Plthd
+Cf+6wA3EJmN/KssIhtuMaapuBnTlO7ndwhZm27qWeHQK9ivfSH/Z0fNWzky
pwXlLtFzeLbX9tlpC5KbgjXJoTrPTSJo4yEsOMvv3+Na3jImvHwVl0WF7TJl
XetkV8l0rjve27k/OiN8q52ZA3tmvgcASrAHvT/sdt1K25xRjKRPNXojweXq
aXni+jF56ZlUPYqyxKW1nDUbcLYPbwpepUzpZePeCIeroSuFa7380/7xR1ub
lo2HPGEkH7UJGHZPSOgd3qyeD87n1WJmSnC8Jl/W35sZ7c/6deAL7QZdg1GG
0L5BjU9Cu4ojosmWXCtMzEIS85cvXjo0hwnhhua1XCPeyTlbnMItiN+kCiq6
Mn2PA1T9zZcB8X5Udp/24d2HVsfsLJXZLaejtcg1jNgJFNTVcT5jX8YvnGue
am5nzqEMbFhOPhcS7d8w61KXi4sMUm1QDE9oDN2LQC6RqWVVpiarnDW32pWl
2//iJdHOf7EfTpZGBrm/Xnmu3YBdHTMqEQ+aqj9NqnJTSZvYs12HfiNBA7ii
MI7l305uEFkn8U3lUeAQY4rx2SIwdiiQypVLMwqOqZ6TuCn0EvGFVvA3dPZL
/UVWp5a0YMteGAtLIXUbRr1zYqSXaKhG3dMXUsSOGasnZV+GIUczAd5WVAuK
/vY6DhFbPdGsSffhcMciLi4/vBlyhLtn5XBzIIYcsuefAyV692DUDofJfmkD
2X6NHmu+sirnOg0j0nbzXOCn7pqx7agp0v66JHVoZJJLzsjNnV/l5YSsSYH1
hNG/Kwvc6ATj8WKqXdy9HcQ09VHol3BUfZhqg7RMPsE9O+skuALZuDvb2kQJ
F8XT2gKQt4B8u70sKi+iWlC8OTFcJqWkbheL07ikv8Jqd4FZMD1uOFP/IozP
fX1RTiyEtcnn51qNrO2xQVjAwBxpD7LxdmsMN8odDOVtTrVgo6pD8Znvk8Sp
xBgN3+dLzpe1LVDuYWPa2ihXzIMgLZ61QpmlXDdYU6vIWyhQ/8WOA+x2YXjV
RkHPgzsFPdd9hDHckr31W4U411eKca5/n0FO1/X17KgriHYchzX9Qz6QKcdr
WVDvtlG9lTrURkrakN2ygF1nP//SZ6Bu2azv/tlGaPUPUch2e7D5ZLC1E4Vs
g4hfsUrE76A74ve1OiNHaO7SLJkyuv1koKwGaeFkheeZcH7NOAVGRB7qMW6T
hv4rO3Q8oNAswXxUiznDrmVnMK6LqSkOSYV+yR2ilj35AcYZTjEij2SysZFi
igaBg6VcIuyQ8I7Qi7qpqjGNmby3lj5CAplwf2CFpeTwelTYa66WRHSFh3c4
YetEY+5GzjD+dSJmyoQX0oYuNZgIK31VVot64uk4xq7cHkhUqiNm4F+8GbLf
/ib+8KuOD8WsV+ezdhYVClTHyzFDw2BLYX34fHpNFbhFa8VbGV/n8GZUAStU
bp3A9o0TZUZDjbHiWApujWrQk5sSWTKwbhdOefAGd8dK9CHeury3GHgF/Qb1
EWxUIg4Jy3HdqrhkrodHzpuzdahbUa+dnx3BsiXVEbe12k8XkzcRsQk6ALBs
J+LCpHaj1xNoSk0i2ioB7sT5pMD/HYtvYAlvokY59rhT0iyydZkJRad4WyBQ
dR9wJo5FoCZNDNoYI3ba0mRS/cl5UPhbdapZXs7rdDMeX4zmdJTI1+aq2fME
LkQx08LLspBEywcGgc1tDXeyDarX9xauWQL7wVWwmMOhBKWFv7Gd6Rfw70cH
//7l4dHBU/UstCRuiSU4E217Tczr2tU0HEKfzqS+1rivbtsiBvmXNIaeEtS+
53nd+D1AFhNPFM81x4FM7ZHUtJPbaXRRFlcsinnDx9OC6EVjyRuNLrKI/JeG
a/voJoNtSR5d7uOGMPC5sqbEwEcrN4YXwqsXsF1oKuhIe71Znwy5+3r+9rAV
+szwZJYtVrJDXPmyLHSL6d4lodO5a0M/Vee0DzX6Z5qiASZIk4KlMRB93v3a
yxiEzyYeITZR5Pg02haAs5VURihjZluasi/PTZOsrkPyyy3FWwUjvH7O2nUF
SeNxKxgEaRWHVAcSBV1jyKZRTgeoTmo1SJWm8VyBnfM2n4/p/rlMyJPDlPRI
d6DO9r8IyzOaPjnrUszaR7Eagu94tLmzKdj2cgoiuBTVJsT7p0BNOwGoyddV
jPkM1fw2BHu/wJx+3jCnX+p4rdCM++mXOl7LmvmljtctB/VLHa/bfPIPAPLt
aBjdMQBHFME3APkIW6WBnAAKFLhQ8F62agoneezeRG0lOdPC4+wyW/k1Jnje
698yVzFpetXqYxb0laKXLHBrIMMSTJMaurmDcEUwt1AfGQaTJjHx7lkr0wRT
N1OALRu8eLJ1EqfFeYVmBSV01Gos3Y57STJOP7PUDh3OuWI6rlWBRlXPwzlF
FyWXgVfnnU2eB363UzGOdrN1wXiuWZBnZNmzWchwwNU36To6aihBt53nnbJD
+pGVwzHHWTHHODL9LQgpdYXWHoDFy045l/BqY/ypdxjXXDJK6BxQ0HWKCq2Y
3LIbRiHdHz+uM4TtLU0Gt07NkEc7c69TT2nCsCRPUDIrjyIpmuTZstR2s8gX
iAO4yZB1iD2y9ZzhJqaNz6G7CaLRlVWuAEgnTIjWwAa9/GphSu0KQ+AZh7fF
L+unu2YivChVGoz7kzvZpPBGsDD1KxXvZg6I2Np684IcWkZCYoNfYcuywBTO
UqqnIIgfsSnod0ietnP6axPxbxRGzawM2bw6X7SX1dur7ebUToaWqulphSwv
+fy0xKevnSOT2p7kKAICXy9n3xC+5P17MB1fobf5FUzNID9v8MQml5BIvJbt
kwjA43Zlmn4DpN/TXtsxwVsr3lV60hI51eSpd0IKptlKKR5KWSscte77LRj5
xAlectNJ4GxYb2aReUWcik0RUdQTyKN4VyIkA1oJpgbHjl1jHFDYGaRM4+Tz
plIy686DKdtzvCACHXRFOecRxXbVYZ1yVvtXYoy+Ua42t2yYrZAjqr6qS8zB
93D2wFtlOC0kvKOiuhvTztfm/Xfv7j14986g1ltgE+dXOrlYAfLuPWMG9b6D
+PHTcgxbb9dzZuoAHOydtoV1e8O5gFmlDIcJyT4LW4G/e7JNz8Up/kqTLe1o
66GLC7ijmYeDV43nYtGAKUExfhwdJjDfBK4PNAAvm8UrKsqf6nmdsHq3mrJs
FDdHkFUxruM9KeerdtGawCHZEaATRcC7wmQBuavVqSLrckcPEAWaPq7ZJdTZ
/v2ofXfTXVZjJwJacDJWV3y1DsF4ilPliJ0q9OKNjoCMe3YtcjxPcfII2lBN
QQw1Tt9CgT+ltokLkF9VOnCVlAqQBeFBj8dwZup7Xx4RzHFS5FQPwU2RON/p
u/gdYjwgdOBGwJwVTlGPVtYHHFggwc7HJhjhxxtEJTgoq+QdNqpeCCYrPcMI
bWpSQNFEogA9MZLYYSHsdsooKWWPbEdUqIu5mVfpFG6BT4/+dMzRAZxJxrPo
/tFXOuTjBkN/UR2r6iIOLblwjI55hhEGju8OJO2ltRbacd76ah+R1i9LwqQ7
cJDhiAzX4y3iaDIM2jJiazli73QHgUw/8wfggaAF4QE3dkdaY+3VO1iXIbcz
vqLN8JHQ1mPwF749xvXlk3OL6ksA+iTO6LQ+fOrdg9ESro22Cr9RI6pm47BJ
oPPatVW64Xm9JKXO0YqUOjGjTsw70b3QNFUeNLB7B34bMsSgo8oRiC0SFwE0
Vs1KK0+EHyTgH+gi/nMhwBWV/QQHYL2QFbbEgSEx4EbMOdMDFQV5ZHnxwi4x
ZYwNbqHz3didBjgJM88AtK5mWkppi1JVEBxswykdw26C58bnNcr1rIOLeBt6
7akULaLmDWlVCbxNCIFvUdEx3jNhJIrVGqiiLY2axkQ0vPppTIeh4TNHQ5D2
Jljf15qTU24RQoae9OERvhfq5xLqINHvaZ5v9KRZypbd0AYXp0GXti2yvttK
VqugJVdkNzrn3zsRB8FFqtkgFImcz3OyPgOwW/Q6vyGYc286NohUupEEHIqU
MirO2W4Uq5n58TKMK04KA5htHQBswZwg/CiSxJ30iPSiy8WkKRFGFxrQc0+6
ZN7E2udZOa/v9kbaa1KiLXV8WujoZQiBwN/TQgLAB1wZKRFu7d6w0sUlAOX2
veZBFitClOcFpYGMukDKBk979AuJkLve/5kkQtuDTeQROtnc3t15tLvzZLi9
8+CfSiK07Bq4BXOQMg0pH88NhDw3/nk4HDI/D6zm90I69P3Bk7t4iyzsGMzL
brjx0RKCoZSlgRELp7Aac9NHJmwUw8cjloQj/GW+NPSzelEXkJU3hdLag2PL
TarmhE4Po6JHcS51yZsyKGrC+e1tKSHMF2FIHzCMNYyz9+WuCu02UeObizlW
cdESfSbrtjoz6CEGIgmkiE4DXPTPEd0KH8EvcHXkEwSkwACuCmcy1pFtguOQ
JA4HM4y9LNrJ/S+OKafw0xdH9CtcMa9Q6sIjv4NHnmw+2JbIJ5u8eUlJa1fl
vJoyUR/RjQhaVwuM8txT+b+ZRvbEVa7kKtczJb9k4732eowzha9ykIPi7WRh
62N3qia5FBtlBD0J0exGZ0f1TFydgseysxb7zEhz0Yy9aL9FPrqp266Bam4e
ouVwVXbJ8HAMYXSaA5LiI6YEWyWAlyTvfzB80IIMt4J4Rl334DTnfJC3Sq9x
wgOdEnu4/HZhOXK7aJ/T+xA5GxqhWPmABFPgAFjmPhDNta687eg1rrYm2NbT
nF+DkmZlXdTrvwuy0zVGyQ/sZvaqHEP3ac/Lvl4ar9TEK9oj8JRPA172GB8/
fFC1StLJ4eB5i5UsCWLm6IxXticdJRvVrKq4tYTV5jQQM9Pp2FnLz7KMrbaf
iCmFClFYoAD35gZZsKtsSK6FSaEzaHxpw7LaJ0tMRiZEcYfbZ8EFBxWtEA2c
uVXhONlyolAXGV3deO50bYXGzdL4mM56rAAmp+fQ23gOzixDpF1lYRWSWrG/
pwWoVzi/y3oi2bWgRPT9C3Ebs02XZxitmGcTuEEnZg5JqeNMY9CXJtX5ORgt
ePDWdQTr/pgfL04HYWBwo+7xkJUVfgTWvgy71dM+seFqGk+n66E2ZzZH5xq+
E3cqjo9UBjd1HAwKAg9ZJgk9SyZKFRsMlZJzYgM04l5fqSfZ+5C28zmyYcJM
Z3k5qc2UL+O9aoX6pK6zDRdGiQCGL8t8mUXdG7x33YbqxrA8jEJLpEJUlyAh
NAUWm9zF+GIf/uc+/s9DDkbf33owjNVV48srYlroLhBJ68gvi6PLmQsV4AR5
a+DwJeIK0JzwwG8YSICPjfWsNwXfsZhP9ZyuUFGB/Cehf4fEbVtCryB6xfrp
RfLlZopbDJ6d0dJckj+stpE52AL+2NIhlgOd0nloGrARvtNuEq2Ul02ZZ7t+
FoPZa+U9p5bslrPVBcNYcdt1CW+aRCu74UyfVnBShRXDSW/vk0YiWTdt+DWZ
+8QlNLWqtFP/ZWbhrcl7KyrF4P10/lF7lZAvmX1sZNbYFHeSkU5lcs+jfcbF
N5RTKMP67OWIAD8NfPm8udDbyCEG4MszfL7wSAGUHXBXU0bi2tNC0ytN7ld4
588qsDOv+4rLoIMZYSjqRcmITRSRsHERSuFAmaHgW6LpP4w1/a9xlvwa8goq
upb4Vhr8htATTEpBirT8oonNJZH2Qzo82iSs0NJguzNvmbjz1ZWG3XlXiVnn
QQQ0O8Tzx24JGN4HNdttNJvRIyZ3KumHQDHj6kpQCOumHnXgZhq93OwduN5G
iqzrjrQ1aAR54izYfO5yg63DQ6eRUgQD3MWy8h6IT3UODExFj7QlQ0fz/n1+
3ryazd9JbhRO5IDw0S2WNleRhrxMNTN3OhlhPdiCLSAVyI3gg3q0f+SebOd+
Xs3/mXx011Vnvdl3vIIP2ju0l7lTu53kCab99Vk5pXuTtN3lBPc/Rc+xnKVu
73HinCz1JgfzmTBdZwvUGETaG9GBgnF+SSLV3sC3cjm5cz0vUO0MnG3OS5tt
6LlMGAMBsEvvmzBjbtVLp/42DaZvQdc4jTu8DUWWF7impBZzoVb427QGOQwr
7uqinJNDbTGfVTVf3NWimaxgoMQp0HRHw+pj8zxzltArhnkG3R3kmpVsrpB4
5UIPoKSfZibTVSYOWn3Feuorf4dm3TXB/NKMqgWuiYRGdfXaS5N4Q8ynQcb2
mKiNDQ2k171tWMTPi7yRFUY0k8LCPjbr/SRQ5TGAzlILN7+FhVfzEhYYmVNM
VdZ18WPx1/mcSMzGvxH63S2YUnHjKHtfMpEcDsuiyLYFHf6YB4KxflRXq2nh
q8J1vLnlJuosfiSefYJDVY2QQNWLU9IwUujpxQzXZQM1C0+BBuPs8bYkwZS1
BdPQyK3En21iQMuu0iXXG3QjdZ+gSbzxGdW2nl4TKwJcbIw07TvVPHbYWoKx
cJpC7iylyeX39tbS+exHgV8Br/xWfcWy+bi2bTscDWLE9btYbKkG4TobCmWZ
OfAOrty3eQ79EOQdXAjzxeSaELbEkxOMkuyYcTm2T0urwdpw/Sd3BPEX1Vdt
Gq4biGdWYGsdP/f0EUgW0feac2zpMmyfoBpUjc8w1PA0v/RECLgD4f+uC6mi
qL2CxqccB5LhOP4bv0aw2TBORRaAreE4LyZwIxAyy+XlCCcDyNNKCoznhsPa
EASQ+4odk6gVIxosp4CQldp9ESRCymTAc56CNduIHQG9LA58dZWtMwEpm+po
OIB7LU9YEBaLkuUimeX84hGdSel3Mrod64v8TWKLVI4nom2G0iTjutZY7tpx
b+IZvHR2We0PTZidgbenIDrhqINeK9wlMBjUoxJazu/QdpqXcHFBl6qpWlDe
TSVsTypGVDZvYeVjh8ht7QqaywL2N5rRXJMzne0F+6MalXQjub93SuqY/70F
7JNVF06evIO2UpOdumhGEmvfTbVqMgT98NHIRRUKzI6mJcQtwJa8J/TVs2I+
D32Rt3Umepv16OAPbLdyVoE7om0DNnBNYDFCbz3ebMbyleLVFoOK9xoHWiN3
N3aTdu6HNnOzDRxd707Wbv87vhm28N1e/KHMbF6h25nZK2K0VgF7rWJp39LU
/l5tbdkrdza5l1WH+wD2+O2Ggpvvn+g8aPkHWG7dykewihDq9CO0vN3eT05O
bpWSfA1XBKQRTCxLN4ocSKyU7HTosZDiYjWOclQ2UUaaK1Zj/NGiqTuPImv+
QbJOpKok/A7djm1L8Xdwe4o/Kvq3xMFwIx3BwVEbk2Kh4Og3HoCxMB9EinP2
NeE+2uEUbNJAezodNy16wUMTscZGpIA8RgyK6XilXqUVdtC9HJxROIBz8jZ3
Dy5cUYPgUvJPl63qjG5sOYig+UvQfccUM0hmyBi4ubL9N8xDWVeaTlbgjDcL
0TVhLALA4QwdhOtZjxppQhrDJP+N5JmiJVe0ivWkSMfug64yLmYlRizalGM4
bFf+SCsH/0I29vMmG7vfu6tQ+9GQjW0gxVRPWKHu1Iws5MqFE2/JhNVFhnZb
JqyjdP9u0xtXFKCexSRS3VO85KH2q348zFP3lXmKx7cK4ZS9GG9gxg38lJOq
dti86E4EpWlayy0YNZmw9NHjYVh2KTXvliXopMLRXh1WGOHqT3TBXIlXzZO5
+gtbPGnZPH+rFJvDpWzSV9XEOJ50jsU/Jxyd6Df1lXi4ho/kVoVJl7l4T9QN
EpeB8Jw/7Vo1rVCMIYenSTw4PhEHO7OCwkRPx8jLookWdbZxr0b/ktT26mfy
69x8UMxBi3lTXMMMwK+jHM2qutfKkTc6lfOSOceneFyoYIPW/iGHDZWMchqy
V7Bl9gZKKqO4f24MlueAymsygwohmgkkY1fRqQ44h1SCJUwkgT8Fg/ds1aIZ
uTyIy/yNOFGmF+jSZB6Ta1PwCnvjCLFkWxQzd4woqobp/Hl7iO26EicIvj4j
fnU6RC4tJpjS9gKEkMglWTMy3jRlW5Sjk9TiUyxj2sul+TrBm1OpOkJY3yKy
C4po6l7K9WgrjXHT0SoZnz6DxJ4Jpp3Bak20yYxBaQluA8Sqn4eNnDcin5Ge
16s7xGb+NrdJHCHtO8ZYXIoCSY0k13Q2Xjifuvg78ccuHC7uGZTCrti5ulIF
adhmOiZUfYtWx2Vz5LRAtNETU925bD5lwThO3+rYU1XVltJ9hYmjv4qMKgNo
DMIGHwcsClLigSVtr+9Az4iiRydHkD7WF/gRnGo2bf5aSVdkV+RkKdvsd48u
9qgrRQDIDS0XGpynpw4NnQQArDlsoxDixLuMZZFmE0USsBVWtPcRVUkGefFy
azNC77MzUMsf7WJRFtpPWl3MnBDdheHN/NYXG7GWmEN+U3UMj5fzmnx8wx9h
WbxA4spebqpRhYrOjB1ccq2YF5CkaR1ctFglSjGGG2SE1PDC4x2dkvZdQkJm
D0MOiVKQQQr8KWbHmbq0WmxW4MfS2f09j1fx3Ayp7AHGoM7gtTlY5VQmQhjp
EnQM0vSYXF213hayTcK8/ct8mp/zreamNKgr4cP/guHvLFWpd+awG09hlG+G
y5gPeh1JlUkcvhTMdmlzTJdG6ixu0ryc8PcDZq82CvXMYoIUy0h6Ulzlb1nx
G5iYVuU/0fHaS6mZTczKONWtV4xbdQQ6vHtGTN4shGdvRvWjwWV5WeDlSQDj
t9+pHJj4e3yiYhmX/0rpQS68HlXqSmSMdZTqCrFey++RdNGuIKeAzYOeVkNR
YQMruW9RH+8/godfid77ras0Y4Gs0hW44TCRxfYzMUgK4Wr8mq5F6o8QdbWE
ZQRC8Zo0xVZh5mMt32+Ntr4ro7CqLu/EIBskxr2gG1Mqp/h6Thbo4DeSU8lT
mm7YrlxA/Yh60sytRFw9+IJOv+OUbJEbTqNaELATYwe62FrJnvBaEued7UW4
1UKvfuTEd6iEVnqVMynbiVf5vB3gVuuQdIqWz92Uw9BLo+QYsr8BNoxsssxR
qZPTNSFpn+2DoFCEi2lTdSpx/opGkFggFjBnWDLGVyI/+cWd+7N15z7odQne
n5e7drSHY0eN9+7N/Jtp5qfl2Xygns1YpMwx9ekq/1H7OjucnX5HsObif0ct
uXIUkVGfXO40E5nedAvjDaQX8VJ3k/EuxZ6ntMtH3qcqxzJvkyugRzYk6DPQ
RxsGpyRuDICGVxyzI14mrpqec1H94eBkiS1ijgvbIuaD3lIvFU+APKYcE9+n
0ypW8z6s44osy2QTZR0QRrR3j12S1ejCRIe1vU8rZn5zZhvGUcWUsS31IlCk
kHE+JGdbf/fgND9fZxPA8NWoQ/DJzsNNZGA1LhIBVIWIuPi1RDBApz2Ng8vg
ubsD4djb/qNJ8BLzYgVGMl6N7456+jFkS1nA08v9vf1upFN7/y/dXp0IJwv+
MWlGotK+/8jlpaAHDqUSEhsVxgRr0bPLbcgk2YKmDx3YThxq0MaJt5b8Ie6C
fKq0042pnMfGDbHstDKrBm4sTI/CScql8Rz24DGNHe3vDcK5tA1Fpxge8w4O
+z2RXhs8c6FvnTuxz12Y+y7g7TwuJlRGGIZUF62pSWsT4kAaiBYRA2hOuMRM
PrJGssvHdu7MelTJi7sypd6/129dk3Y1m+VwoSAZe+04/gN2Sl1HJsDUTnhc
tyJ8Xs4JD146/JBeKZyuSwoPrWw08l2/rRzh1zTlA2WGbc+dLJ6hlo+EOW6S
fw2Q4IbN9ZY1dT0Bl6mNKfcfaoIUuGVkV6KVuDSBlMf4OOXqkkoKqrX6/IL2
sjaqUqZULWSRMVOHay0dlctDpsGWRW6FmJe+IXAi2Q2E54MLq2KlXp45H4N2
nBREzZ7wODwMPA6xl8G4R6IT84tn4efsWXjY67wAf3CuBfIjwOEcZoKsuskD
sKSZ21TVSzfDC3p1TKGSu/em9Y0fpGvhYVyubwVPQtpglwZWglW0VJvQ8Xt7
gEV9NV/vEMutd6WszRWoRKcRVaHh5nRml0mtH2Z7Pu0Imj8HfUisLU+wQbl0
LNDUBLQagP+2S22KyFG9FpLMo45h9xTSa6OZJaLl4vtUGi/kGDVA59zXjMkx
eLrA9Udt3FWjIVjRpSr2Q9IIA9bLABtQIx+q7bYL12r/XKjEb5E2lWYXV1+c
Gl/NMUa4BkrS1jD7imMBtAJBHls3Pc9wK4TX97nYN9WExprqFA8pxnZm5qE7
Z0MwF6iobQ9B+EsIxX6nMxU6nQKdeb0A1RtoeGfIRdNUx3L13c5DLT5OJV0x
7c5l7DFIJy7gqAmpLvCoy0C8YSvn9qHpfd+tUsrBEGlAGoW95QoieK2hpNXA
dxNicIKgLHMdRUgj6onZfGtrx00x22GYI/yU3edCYpSxbIpPWnifUZ3jAhJd
S+gIMEU/ZKBkOwU91PNsOmocdzcReo2zMm40SMOwqj+5f+HimBYTYmTCDY1D
dj7f/BQsLjN8D/Zq05MFZ5x5S3Qbr788evHV4fHhi+d7z0RgrQs7pK6AmNvB
cWrzNyQRJtjxqTAVVqPRYl5b+yMk652OExgnE6gsa0++izXb5ga/NS/yGi1L
S78pg3Y7mdSPJc5bvbBZT8k2RGHpadaSNrSs1+a9BE6Dfk6uHWcCN9wUKMub
+XUmlZiWkDQ+SnGgyAt88USrAchLXPwU7aeScoTlPmwj9DLypYSKQzv968R6
qDVWHFz9Hc5qRfi0SkCIcRouF3b0AmEPNBNXOBwc917dXmdEDYkBqsn5QR2w
ko1U2C6VT6BmPM+ZHhIN6GOzA61cUhI61yMDyKknc0UeLby4b0BrCXZ8RHAE
Qg/54LRW9tUKKSFXq9QN4sIbBBwS5y6LVeU9D/3TwWxlgYN5XXCf4Q5ZN/sQ
Hj73HmW4Iupb+ZST7f94fMwd03ODd5fpjA1IjOfnCvl8KL14iyeAW9tF6VnQ
J7zX0CesAsfKaw2VwKyYb+vO9ARls6t6MC4apJnFprBjy3KQP8RgpQ7lzUM9
g7szHutn0FPGowQcFq1b/7QgRD/2oMH9P28czuNsQQrKxta9rXvbm9s7veGt
pmjf1BaDLkMjW08ebf6YSNKs25+OerffP3n3+RPf6ec/DGQx8tmgSNL/V5HX
1WwIV6VL00T+WrijlEcRtNt5kNEi79A06Ml1QhWlh8SmwkZ4MgI9dhynaL8M
mvfWjKh8XBUyfpGtbWFDIjHGz4ZGPNIv4Yp8dKMrshWVFHBWkPeTIjT7xV35
s3ZXPurduDl/2m5Lhl7Ud3dbtr7xg/Q3PnJQppjgSAXJCg7ItAdymedRrwJy
FBVNCp7pkw9cwK+FQ7+7fxLEKjookzDYcPxEVrgYIQadOpIbeg5QYTDVo7xS
+oLgSckWoBqCwj7V13LALS8omkRkiKfVORyjN3HmxdmEtYrIGxVfqWJ4xXOr
luMHscMMiV6LViQ0xxBs4MJ1d8PLBCYs76UVIM81U2FZB0QrPypy7gTj+Niw
rbRcABvTyt16gtIKGtOqCHXk+GR3TGzyix9mmH2BlaCkAjh+ifyk2DNSnF3r
3Ap5iDUpjRzCJKgdy6w6kIKOXeQeVsg+IORTwpJCW8Ns/6IYvVFTc9AIUXhK
pZDNNMQsPZiKsPh6olQmHVX287MiNy7OcsxSCZ50qUFlXFA7wF5pksZQcwSD
RmJkXKmw/HTJdylxFTm9JOXHeGLubz3IvjSPmTpUYuXAlh2ubesssjySmlvq
rxAwVxbpzEKYTu0426Xj4X7Ag+46eH9zM/s0HzuJbPu047y3DluzFHR/Q/HN
wO0pbnfqYBctMhLOlLU6VsiZeXot5P/aPOzLC+5e6bZ1Kg2zVT5KxZoWQ9PZ
6u6MTL5xwbVHkRnPvvMu+wItUnsluU82t2CfmBQQsxJY14dkysTkhUY8jnhA
z9jyFYepZGKTPJAsESXflGDRcM076BOBJxGPy9fcr3SCH7YrEpKaTHmt74eZ
t2Xna3Mn+6yan5ZjuFjSMyU9dSSsQYENrvZby+fIRuom58HQJxN3XRVSkaIu
JmdSQgQO2rAYIlsoZ90xM2osCvsmleXSbSTi5mIh64NR9i7qt0xSZYu+P9wa
7uAkGqTt0CPHvRvyhhm1+Yn4ASWCeqmIObeRRRpnRVqLlJFpr/TxtGX6OLBM
BVgXp+Wmgs3DX8zOn7HZ+bh34w78KZudt2ICSjdD61p4sMxPGi3zOKQY8rvl
zqiZFdLBb8DSLJVuaqpugOZ6C2u1cGiaFFjGlG1qpWXUBkjckU7fASkN8yJb
iJwgjZsr+cE9TbZuAMtJoGY1MKyQYS3B16JJhjF/CZNIV/XM044H1p/JHnU3
eiqW3DIbNf4p808EGO3oJ2rYLkh8Q4xT9Z+EJZmYBWHOkLtb3iyFsa59qJoK
OFdxJCirUBl8W3JvotjJTWQHLkRdRCHqcKtYx3tnUNo8cof49JPh/VSEmhvV
WLRjhVRDxIedPUojyj/SRCwbrUbteRiFKJzKeMP+Cb0yrnSwszzCHvuKGJjB
lih8G7pFCo1SH0410ksKXmK3I0wa2z1MZDEtnVhHRlab/i5fNkfG7aLkFGhm
QkyNzdHExzE00MEOAwgNKuxRI6hlX2J8WghsCImSgzVV5HOHzrbwd9rx2lvp
Ix9VLY/q09bVULpbeN4Tlf9wYvOFj82H+jGWElDkwsMtlPkY6yLxG25KU/nO
57ofNpbX9hYH1QMd44UVgcVrW82jgBvBjiSDLRuNx5M17iV3cqA4td9oFNZH
iRfIDyGls1TcnVbVRD5zsWJc4+Azty2z3ex99qvsf/0vt/aDy3xGUX4TGi1e
YfNo3mCFBo2R0jTjxpeImUnPieY3HRzN6moxH1FkGF46fwPD+s3//Pf/QWH+
P//9f7/9DviYYRKtEax9BNboTP9D6MZqYI2g+R8dViOanO8fqhHrhHeCbBQ/
LshGPOakq+YmDEY45mnFNVpIKzEelB8rCqNYCYUR6qY3gzBeUJmbhGaPUgW0
f4kciY6vt5orVB2l+wUxN6MUO/kfib9aPUkRHvLESaCbyd6vuM1v47uOrxEm
cPJsm105ou3hqkKZSiZU79NhMkTZfrA1PWkqug+bhlhH2FJSf8L94ZR6HppL
hvzFJ/Zj9Yk96d35LP3gfGWJZj4kx/gtksRuyTHO/0w3B9LZW3GMg9Aivo0R
hnpACGBBy9s1I71JNYIew+XN/FmcJe6xv6Rf9eNxAD6J0+WOY2v2Rk+gEYw/
WE6elNuR0QLmkvJ3XQd8s1X+lUvp6d02Vl60wEPCaptcaCHWxCqxcPmBatdJ
ld6dHJEamq/akh6JxrAuq7H3tLUWyLJz+ton5HVNhbId0VDKAysdeCUaL5dN
6UhcfIMFzvO6G0dTS5ERS9sueYlB0kKafBSOLT1DNN5C/+l8BZzAqLNmqSiM
d1coX1kDVPr2uMihcsxTB+FIwGvrIUZlqQM5GPzXdRlDWiQjUav1EZZkkGUR
HzJOrGbly10Fz8ZvdppZFBTv6KgtZ2h4iGmhlTVDGamV7wNHUja+jPvkeui6
m0YlR+qickK6WjmOMlF3rDPp/RJ1otlSa6UaZRQjXdpLoZGIWRwD0dWqbpx6
OY6uuVjU4RATGzNyxLdwB+ljbJKfhIa8bKQ+Kkmr3Afu9daU9gSWEGS/eVxC
VPFND1mCzGJenBVYXdqfxJBSq5X8tQz4tafbiPX6ziysjuLXy0iFO4L234Fs
eJgUvHh+tfSo8Re6xxRtQ5WJ6Z331GEtmwwpvHChwNy+mJajEgYi1UNF4Lai
Jl9DP3UcxP9Fosb+LhM0ymdcjBpvreTG7xKZdHspY6tck1q8SUuKJ0y802tL
Xocd4trTqD0NUHYENc3d0Jfluj6Owx1sK4dxGa/ev2cXgTOFb9QBHLF85DRI
XP1F++Zfeu23IqMBjytBbqpJkjM4KN/7iyH6ozVEtzZ7XTv152ZoFt+DoXlj
M9+3MbW1GVVsur0x9cM1oZbBPRIB8ZXMklDI/uOtEhs6E2T892STFB02SVxC
pUvzC2ZquLY3qau2GkRaZKAPmhYkansXfbCrAmUXMuMmrTAazBIrDfnYrhgb
Yo5Fcvf4W9iFlIP4P+J8F1Mtzrka6iVCDQt8oo13oT2ZhBUwtMcvRgepi+J8
2zqULJvxeNN6Of3IFdK8KeDc1/wThJ/koxCYUrNcYCR2ZC9iNZsWACOi07kp
p6NTtU9089bK/XdR4tc+tVvegkeifiDgflyMWE/MmU3Z5TFx+K2OjhuhyoVb
CIYNQ6DQjy0zhGQ5vM1Tr2Sw0FUlPC4BHMuQMdGjigmzJZ7gSV1mqbYsWzwE
kFF5O+VNNKeF+v9dzgvmLROsDxHpD7MNOArZHgkgbLbnLCQ63V2zgCaVmYTU
S4OJ52RpL+hKXiuBjlszZyXjrWWwZfey78dkS2/8lYw2NIH+nTK3RY+X+/j9
R5yaHccBmR5WQn9tHxdOBNYvwQH6hHA5OHBacwM1jyoViQMLphFzwnDysLyi
ZOP0b9xmUeyU69jo7WSYawKm2gCbiOfUGnTjQrO6AiJ0/FNqxmThaFZ/MbR+
tIbWVi+1uj84I+uDJlw3BrN+d+T7YPbz4Inc2lJbLRQAK1hoqbsDxaRiQ8MG
0T/sk6uVP04UDm+RxDy62euEvfK3Wf1a9WVuh7yYpCiIuk7N/vHrY0m8co4G
wQVuNA75INpZ2J4o6tQiARFjk4jxmN1QuhAeHFAIp+StL1yl9SQZHU0XQOmS
2L2dGj6+MYuHo/oVTQzdVaIlemXjxN7vdsAEoe0YsaAyuweeto+7pp93kfyV
J8aPoJYSwz55ABeTlXx/1bqyHZrmrxBQ6DRr0U15ySqZI03U6aScfKzTOO7b
UqJo5WWhlVdFwUziCucEc4PAFsTn3xDxqSB0A7GtpiNE2j9F7vunvlTDMzho
C0RKbyA6tMeJFwLCZRytuLHdPEhvFtNwd/MEErX+BicamnIPvV2Lls1kmmKg
bAdUFj6WiRowOBan0oMrgziJhc46cB8th/wpxMnaOXMkEoqSjUeoG4jHGAyh
1xJVqwNmX8uYX3uctatn2RDH6WXJyaOkbINYEjEaZeVoQEqTCEPOKN0PuHOZ
O7K4zNHArNvJ6bxrrMLplV5f5aPmpE5rgH6ODgfe9zIoh2vXs7sF53RPu7wB
sxxJ8R4rxKY2rrY0QUUUtUZMYG0kAMsFQaOosuDXayGxLKhK9MUCxitWx2u/
n3TWXb5P7mt64z67RwcY1xmLnbvjxOPe2dl54hxKr4OdqO02VOjanO3IgxNG
GWRF/+PB9iaDmp/ztwJSx0QMMJAQrj9+87/m0jcOGR/WIQpOMOZIOdX+tTMv
EuEVg6XUApQJ5wlYU7m4HWKjwUMBJURpy+w4UOClS0XwxrIWd0VvKlsmPU+E
0inRdfSUNVWOXJ0Hra9+eq0JGpIckfM+J8cBC20NZScGyp7PIMMDpx4sLi6V
jnNeTU+r3Dlh0K7SBttVbsPRmzvP526wIV6jp4Xf62oNm6KW6aqywRCpKqGX
hSDfQPpjEPut5D/n3tORkoxG9kcIbJ4UsxPDzSWSOIXLDkT++vbm9vZg8/Fg
a/tkc3t359HuzpPh9s6D/82I5vgOULz4CBPVi/uPtrbWDdZbr4N115P1teSd
gOPRYIKMHibyuwzevdEZwMnNmr5Nvk0oLPRaJ2O5X0KLlq5vix5Sy9KblD8d
lc+Ha1/7LE1Rj9SX2l9y9CZV9SbOF9NZFsq6lsaXVA7NPZLWAXftjkqlflC6
hqwIuVV6P6jEj9Ym1P0XTOxRqxSUzYahHRhWxDqm/di5qxAQJRkKqNG+To2K
qZNeB31/nQnj7OHg6ZAKm+fT8jJHgvuBowlE4cS35aMHWyk3tVfUO+yKNd52
Rv4b7SCYGLJQOoSNT3gM/Ngwk1dltagp5dfh7JO4KeHXVWA/b1wJK+HvPS27
Nj2fxEaSt/TWjKesldZmyF/kMFMnlSVYGab7IZdj+1JNawRRwt1S9b7LxkOB
EynzEr7gb66W9KYHBKekml8PhD1pPbvnDAFN9WGPb+Iv5M80n2tCVOsB+UP8
ffFzJh7Qv/AT3PXfuWRRa2L8LpH1c3N23tLcPHe9hCvARoed6t4dk/SelmcU
GmzI01+bhMC0doYaEvGWK/+WaNtEQa4Ubj7sW6tTAWwJdeOeBOZFmMUr35fS
jKWPe2Kaq2zGsF8K6CF0n+dtMzfCcO0FqUP6Sh5EMQXTQdKKmDnedJKVPBrO
EiWPsE6/au9bJ7sCxh7fbQQcZtleOhVXVFCbK8t+AuL5ruZR7q+W4lKzD5Ze
EaORFPE3PgsQrbg2xCHEB8wNwdP1kR0XlXAJENM/2EHxyXVDStgXrgKAiFh6
4gc3nkimBdssXCdjLfwAl+pZ59CilUpVDPxxrZpaoQbyoYUgKyUEpAetdAji
+hs8W6ROhLXjaMxi6RUFBvNshZ4kcCFA1YtoJeDRFQbNoUtBcyzgZdYuiskM
I4jENphPrv9OwrdqRN76xFqM4f+qfaG6RWUcZpBq4cp8IF1CgK7Kp75HP7hN
G2oGZoBuBG5gdBR/gPs1HtUSdZQ5HOAKXWDM/srhJsD0qAWCEa05VWnCmz0U
XK70Czy/mE/dt6I76KfDdKEaHpNd2N9Nd0OfSkvPGaTVD8OTIMuubg1dtvWl
/Ag3siNYE1mb/GFZyUupAlqTsVKWfCcrQHwFL0319zsQzYQb6Q1+aGn91AzY
zdiw86kkvBK1Gi3GK5aWIJ35/b/KFEzYtgEtkKgq+CxK4SkLlAzRjvVsaP9I
zAoDZlagfHgqBCzEDQlAVQvzmc4hS59QcQ4PzbBqp4vCgWB+Id5I+KsZoEKH
ZXxF5wg3UOVLDK5nkpwU8xXUwb1pZMQm1aY7DZx7yyhPjS8F/8w4P8t9atF+
NEUn/msPsxCPFuTpeDtzQbBqyenkbztccBCBtQjUGwiSh0FPIjLkL4gMmRyR
K/QoTdfsory360nEe7zyhNxLoKblAkcXL9xjeGdNsS4iPDTRw+TEJb8ONpIc
EnkKuV3yee0y5sLlP712xNfEmqfbwUdMpGT5tJIiXLhTg/I3GyBZL5gPXvbl
GlXy6PWzSq11r0vrIeIN12K9JZyjo1dJkCWvUbJSdrj3fA+XjTI8Jcrz/qMS
1FwU6uRotx4Lw9NhvWjUCmevOsYQqWlncCN64K7X1uiB0pYFoMJ83i2hX80o
oRXGCZKYG/wa2/sTtffl0WG97k+c74+r/7y7hii3HL5wXJxfMijtG7h2PPNI
+h9C1gQ2jgC3QfSv9UHin/0OYuR0qIzVhjcINerLgyPeJQqRs73488nnh8dH
n+3/hWB2wvMsRWSokwJISRJA14kmsMb2/8/euy43ji1Xg//1FIr2D1c5qtoA
KKpL7c/+pkgCICEBFHHZIPDVRAcIoAQSAAmRkHjp8GvNC8yLzcoNgAR1qa7j
45mYmDkOn6iWRO5L7syVK3Nf8qyHZi+/JvAvS02+2UT8wyaOV8uOLbxqYnM2
iJMsWsWUa01/VxZU8+GtJl6KoNXUqybit0fxxpuf7zXxWGzOm3jrWNFL1Tpr
4t+b/+O8ggzvj8oB1MziTaU/Rk2bf778z8beBgYnuPz0rxEg3qnNLDlCCvng
F5bSHBde0hfo3Zp/aTfx+7/8yyU/7PW5EsD/mK3/Ax+x6bI6ITfnbPQG6YfN
R/psGRb1R75uePKWtzCSLfXyfyDMefjfaG/k19X64T/qj/WrIzx/8amWvdIn
CX17Z4lQM87pYoNFR+Djy9t4D/Zx9t7pfXv4R9Omxo6LUQPiPW0JhvsXmMhv
QtVl8WrvX38uPMfOFydBeC52/+KUAb1/+euFcnxdqGoo4MVHNsezzmc376kF
/qoQdd3UNm2zlFbIR8/vr5aEdS8IDr5+TFpgUMtV9eoAX8gs2MetOwTNM41v
3SOvVIGCuZJfxzre/+DGdnxAsJo53eSojkeUVZwav8jk/MzjtW+/JV69V1Az
vTrnXfPZ190017noLzSmekCn8/et/HlzBOKtIbULFPCdiBe3F2o6YIxPZyCD
ZVVb5mU8zudTDZ8fwODukEYN71UnyTZ0Yu7tWwabVTg/pVOaCc83Tbma+kpV
q7Duz7f0l3cIqsbr7YzgeTWPaOzPcZCdZcbocdXmANdbEqA5no6GVwXbrK/N
gryrJk3EUGvHqwBl0yp/S3fyLvkLmpxVviHzVnIjmm/o5iIBBi+/PVhl8fNn
L1hdBmVJDzKtLz9AFr+sCopLN5QIWs2qOxO/fPzzz9WyANOgjd3BywJzRw5Y
v2xbZZU+vQDjFxnLejiccf5Ley/ynStwb1RnaQ4WNtmvRlvvmdnUQKdiO6c8
16sX1C4vX12rqFa6fvPjxYsjlWbQGxP8Fat2Zrc6g8aL2UAhTvBVZcTqOfEg
oVK21boqB1PfJ0Prc7pB+Txfr5Y5j9cuL79u/gJS/kJX6jTjmjT30KjLFgyX
hwXQ5rQuBdWef5XFjYPNvCoFFQfP8SZar2iWx1jk2Mgy5nE/nwtQOVzvq9oV
l5cyr1n//sePH+aNzungSlzdnK0yCVs6cJbGVVnnZQXhn6VaVzeXH76a9/9q
DC6xtKvvEOLHeuCABH4QkA7tfiaNPSrx6TgZ/frXWunseU653LyoAK9qpNKB
yvVQDr22ZzoieKYJTSPtzduzD5y39/rwF1/e1qG6F+2f32BrRNNEN1bjz15F
OPB0f5B7/c/Xnv3oBP9u135sqfHtVRB6dOoERZenp2b+Oxx8BTaUxDsV8Doe
l24bSTRf14n6D8XTJqF7zoDEqnRP5X34rD6izb+XKHB6OoiXdU2xhmB+GKys
j5dfubYSTt43JUmatfkcrTZ8m36zfiqOvqfZoY+T4HkO4ddIbdV6X5dj5hd1
39gyPxcJT4Sfjk7+etGrKs6evUZ+lu2p4/rN68CeMITSGvOM1yZ9KRGAfXO7
lT+Wza/wnlzPaQJ1cy+/fv5AOj/7i2HteWP8C02/x0Dy1b1YfuNtfbplG60u
+QnmJkF22ryhIP5rW6j1+/DfgzSO3gbRbFWXxvqRvKOnuDqz3Tqec4bTH1r/
XdfVhh3QU+KnEntc6J9qT/r9adOcv60+WG+awT4+/noxXqIZzPDhbFPp5WX0
Y241m+PDdYh0unHwoucqecPPZBKil3NQXXwV7oBSP9WONJ0M3ySE8l/JwdKV
smrf6OUIWsdgK3Hw4xm7Yk6Ulr/iH3C2xpOdAFfuCWCPp8Oyx+checcJudol
Zwyj00XtMw2mHqqN2Mv6gHkRVwBUcYXqePe6ogjr4wVUntn6zjcp2zBS7X0e
mePrlOqy3h57cV2ebkZuaPeLp8oaW6U+W+fQNryJ0531VsV2/iWS26dq37Sm
PUueKauYxqaJA5o/8mxafRXpc3NMtel2y90QwQ4t87LMamLwVPEvjmH6fPNU
dR+EdeXdhkhRFme2fwXIsKJXEQTNhHvy1kxPebB2g7QMdbmyr5+qhSvLOC84
YtSqc+4LicRWX+j9WjO3+lGzqhTdKbCpHWbrKYtknjUrcHrv1n7roxSibs72
DWp1pr2vHRnR/vPx07zS2i/NhuJJ4Dw5yVOhcK3bdvNvFfx4pc0/MahTcNPy
oyfkp47femrivesJL6h1i0LTj395F+HyQ3MOfUFvXcPNHk911QW1eJUUbtIP
FecAgunwE0RK35l0/fL28ZnHN2KhVsE6mnQNGCeTrQVCuvYK6U53D46/+3Qu
rHcOSDdU8bXMYEswo9l82VRAPD5wyB155WFezZPHNk/LKoP18kmuKkX2Hm07
PfAgiq8LlLw07JcC7LeOo5yYyR8Y2efgoQQ7oetkgHdOD3NqhsIsPq2XTdU+
lO8wvSu32kFA19fHSrHVWRnuI7CS5eeMP3hwluX8UN2sqNquno2Mgv1HTnDa
ewxvZllaNRJfCr4CgB8Nll9TrMvynaqRB5TWapjx5fppeYw8X/TOHRoQqjYf
nk4I5hlP5Kxe0Up6a+boTLMq8PlLUZ4N643UxjHkrSd/T8q0Bxjn1YGfMwlG
l9tgf+5dj7mbup8jGr43sPmmtVB1+AobKF8d74RHf5FkeeeNhCqGmsWVBlaW
XlGU1nmRX175v1/q4yOb+nodr7NTT7iGjFdsLrhcrx6eToE1DYcCmPVldVO4
JiqnVzSqIb3Z+3HYVd2YivCQQLh4+LGsVkD5jjg/cVZJNUrm9dE42hQmGRzj
1vmb6cWzKsD2qrE5Pup3Hn5puZa3SpfWIi/PN5uXb839GCTmqyPHOibCiLoc
kf1HmsQ7rmdHWU16f2eTAELfZ2RUMHO2opcTX1bJPFZPap9Pe/MNr3YB5dOj
qcewNqj1+zW6DgzrszWoBpfTfgXxGP4sPrj3pjwdnzgDW/ok7URWCTqeoglO
h5kaRXwzLGl2c9tZTdrqqE8UzuhI2tnLY287f673L3o8e+gDC09mtKp1nqdr
Nu/n6drOvxliU3j5eGv95XxqA91wKVZOuAmlB7Vc9q23RU/DfWsUn3je7yjt
8ywKn01DKb4/VaWbsKLlvkqY1rv2NTSdf6A5SR43uc5WrrB9X/z7MVV4Avzz
14i4fN9KCFUs6njOjMe0AX9pK65UkpL01SDfSIyfeqb7t3mwfKJzN/ha9bpP
86xSuwmaZNxYc53zaUbfOpNTXQa7O15RQRvV6bk32gn4a0yfuIMmaOeH4FqH
8CvPU2fdn08yqSzK+2qolzqWNYvfy3Fd1LXX+JZ69JLavXzT9OXFpfX38Evn
+no2p4N6882J853nE+ggRZ2UjI6XKY7lrdtf+tHFqPr90nf42/sPsILPvXiM
9/LDO9L4WGXr6q0FLr68El9zB6Nu+0dyOLsmhKHn1e5PdTuyLnDNC9w2ASQk
ERSbpyq/x+mHNrbky3YE2pxV4Ze0Xk/1x2L7Sv2FSWXLNZzQ3D5TMo/OhlRB
7ubyeCTxSPbazxrWUqkxmguHV5un2VZNHDdSN8cXpv/8839ysf8mQjK/HD/w
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
kI13NRGA/dNI9mve58jw5297mcbHUACvgsE64rXjmgezf/N4ty+Xbv8L+tdu
YUujOzEpwSfeSHlGYyulp8cwll5AwfgQ3mRfarYc9R05ExzpQfAW2dRVE89e
slXIjImRPqy9+Y0+2d/kLMvkIJOlGX8wxqQU+ZJZEwHh/FI+xG7SN+zEcUEz
vGUxGvfL+5maTNnUv58pmqyLvhI6ZuqJSocejPmvh3d5eU3kkanZWXgHQtMP
UmPtvh/e/S2PWsicCv69j1rQ8w30qAW9CkivBN5zs8lMTZdFdSaSofKsjkJm
BWUY4+etzU9Om9emswMUlMfMMFFj8PgUZpKZTSaPm5kps7MxOPaoGyO8Mac9
mKDR5FgBN5EUNY9U1N8w57pQAIb8IMrNKWJ5hFbZkrK0s1zjz2TEjqaD4tON
FWfCMKM+iNsxN2hVL/Qdf6YX+0B0BxNHsScHfw5Q681cttOZ3zHyzAwz7TCm
m0tbNwvXhjoCzEVdXxWn4UEbQqIq60TzAO5Bz7uaKz8c7I4yskRfHA/1vbP0
C6jwOIBaWfQuWd+SE2GSm4WZssBd+nNDurkiivwXrwS28x/fLt58+8WyzYnr
alfR0DiAVO7R0hVooBBn7NkBwXM6RteXtwcEk5BCFyYeqcZ47CKcU5JJFS75
mrcwnm8F/14XNAcuSDeXRmJlhYWVTY1OcR9NjSe0Gt6JoK8S1kixJO0Aky8Y
zGRqwRW5uyU5NZOBDtve/PvkLTYm2L1utv4cbsTFYxpIz8ZskndmPc/9fqdF
Xw4Rux2tWLcTryTvwRrZy9tb79uF/TzUna2w3d1so/2TwRbG6uvD3X5jjB7k
5yzMyt7770IcSVjFXt5mYSfu9ZLj/C0E7FPFiuabzVMcHRlLVb7lVIXvRJNO
tRA+/NeI28f/9zC39x85aDO3jiD8/4G5OY42t6b6zrC1A8D4mR0iK2aK7srG
s3/4K+aWlvzBMjA3/Vo/hGBu3pN+eNj/g7n9g7n9g7n9g7n9g7n9g7n9tzK3
aJhtyamdXKT4GHX0dbA0yDW9lWj7dvEWubOSR/fLk2KmT1+no8Pia9K7mq0y
XV9Gofeb6j12bmerm6v9s1ou+sFOnnaGEM01JuHYsvZH+pRNRPW3wTJwruYP
g/vIUcuQ3dyl21/+89NP7aiZjzxf754brqukHT3X5m76ruFWvuVnPQsp6Pu+
5R3PomSVdzs+ww5jaT3ErkaH3nVlqHQQBgqYOgL84y0932IMEyVOFavxuDNB
HNAhFYe2uV062Gy48LGCeAUo6Nlya5s79cehag7ZNBlCYadNCzZa1RVN8rJI
hZl+u9hY+a79fDgd369etVtmDU8Aj2Bt3gCFZqOJ3dMmMEmM59uFZNEbedUz
7a8eaacX5sKDkjoKK9w0MSL1Zu1I5s4SQ9HPu9NQ0NLbjkKPrA6iqZP7uc+i
dexGmZff3PpptgFY7D0p3RvT6ClQAXapMQxycJYFaw6bVC/w0aPfxiRTqjf4
Ti/w9bnXwhqZ+Jl21ujxU1toNqcT7jfNSiv6BmW8O/Dc9U6W1kfDHWdgar5q
lCzvJrS750miGjs7r2I5isgf11a1KVuyBXx34cv6twuRnoZ1BGM0S4+P4VdP
4dvylj+zLHcLYwpNE30BsCXG6W5qLXr6zGYbv3UA5uXbgBll41XKxsfqLp3k
SRDSM7ILdmsPtEmYRQMYt23kieyycBc70Lp7rIPlTdk8lHUwLEWD79cC8DlH
KOa+sHvypWTuwXZ01VzA6TGWAzz4Q+09/Ft0YjocGuiKsdHzByGWMw9r/18B
EujLOzl742o1ZVdf2PVTvhnqt2kSWVaueUrJZtfBw2LQkZ6mxShTd9ePTP5t
kAifZ8DYxDT3i+Wu+CKM2B/KXjS/jqej0WHTmXzpL/WH3sPDz0aJLmI2hEEW
hvS3Boyffibgezeq/KfLoW3ff6aabJ+pMF9dyIsKufyoYvqxBHr15F9SlkVd
dqWpi3Te7F9XXz899jfndUx5patgUxUXqyeWx1STe77Jf724uG9qxhwf0Evj
/efgYR1XJZbqV/OellG8zvYU0tE4msJLrRLizVt7VOGGPnpeRbN66bCeU90C
9UtFa+bPQbg/ltCpg99WKVo+jjcE2ipm2xTaeVU+lCR5HAgVYKqrZrXqcL/o
aF6VeIvigooR4RdPRV369liwrG6DpnGa/68/WLa6zRxdBceSzHOqLRU+8U6r
Cq6n4oNVNarN7xcX4q+XX18WE32oYvq6jDSvQYplWq2jmD+fGK1oaL9eXrq8
wnNZ1cujWna8NBLVCuPVa1sLVFWgC7MnLpF76/bTscyU/PUeClMmq6gu8Bds
L4unWTYPSVM+VUXpeZGsyyTOCtK1qkc+6dNzjFVhMEwqmRdnS/hqzS6kaj+p
XlvSK5LqnMpQvlF1+WXJ23m5ibPvVa26qtjXTVeiWnFURhHfbSZTF/bideLq
Ub8qEM+L3QaXymRg8Nc7N2VMT0deUmmzoxW1i8F+qt/nbI+oanralYQq92JU
yzwwqLr3eo5xxvW3cioUzW2oKpGOVY15lcdq2u+Xikx4OUR8DfpYAV90LLBZ
Nf1mUcgPm4+fKgSs+28VR+Rl7+Nd0ZSL3cTxp+o50XnJ16RVmpyX9q5UujHI
uuxccKrzuSqrusqnaoxUMhZd7utaXrzUIs2u+cqL4WwuqUgaOk5oEcgI5znG
tFlRccV8VVf9fFUqF0PdJHXptleLUL82+iF5Qmcfa5ShAvfJileH5BNuzZTL
d50f0XLPDWtTBlV56zmvLrwsqwKidZX2utZoUL69CL+2cWOD4S55bcyJGXJD
5TWXuWE9lau8Kjc75wU8N6u8LoMGUXYqm+l/PRanJafVrlS+nWcZr498XgOT
4y9apSrIr+sR/k9ekHBdfv9cSuX64XMZ7FbLVb7/3G7jc7AMkxUVomtK4F39
KjZlHuu/1fhO9bLQER/LknSbq3urOmoNLW484wOqv1wbFURNxQQrm4nqsrK0
8JscTRTJahk3joKKZ/Oazrzq5yt/CaNvcK8eSyU0WoZTZcuv96PNGbTOlyAH
vMrykkN82wEcS7HWdVtpCPU0qkq7TfFFLpWXA6gf6n2OawTnaEfa3oa6qmB8
u7WWoW1Kqiz8wmyq4siNHOsizfHl12W0piKkwIu68nWtVM+rjB4TrrUxuAzx
bajZ+tKmdnReenH9e2W17TlA1eOMRH/E1VNtZCrWt1oDm0oqL1y76spBkI7y
uVAxx6dNQpNfx/nqudbyirKQXs4rkFvDLZML5b6PauJVinp0zd+DeUYpo1+h
ilSzMqgmyqVAf/tPsKurylTqOZI4htCh3y8/QEN/r0thU+Xbaon/VfpIIwUS
ZsfS9rVbEUXhpPK//SpB5S95hVwCqKrwb+XyV+t64oRVVfXvOU25VqFsXhOP
h1VdUA9LGlNpQHjD3lP5qa5qyyuHbo4J+roXrj4B+Y3KeVBx9ftWceuAMDCP
W2XPj8WD6/egzyob645lVwv0nfQJC9QUrK6k1PRae4LmSelNU3hvc1zisxaN
sU2aQXqTzpccvqkuM69rfPkMhHmCZ0hWG265T1Vdb8Ku40z+lRdLbNVwfvHw
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
A2MT2PqKAAMA

-->

</rfc>

