<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.2 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-11" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2023"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 130?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 138?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer site) domain.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="RFC8366"/> specifies the format of the voucher artifacts.
<xref target="I-D.ietf-anima-rfc8366bis"/> further enhances the format of the voucher artifacts and also the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with pledge in responder mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the domain registrar.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.
BRSKI-PRM supports the identification of the registrar-agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the registrar-agent is a component used by an installer and not co-located with the registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the registrar-agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the registrar-agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and registrar-agent.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client toward the registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the registrar-agent and the pledge, the registrar-agent needs to identify the pledge based on its product serial number rather than the hostname as this is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the registrar-agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar must perform the pre-processing of this wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges which can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End Entity.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via .well-known URIs.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available on-site.
It may be at a central site or an internet resident "cloud" service.
The on-site to off-site connection may also be temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enrollment-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enrollment-Request is the CSR of a PER sent to the CA by the domain registrar (RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The latter is indicated by a string like "BASE64URL(content-name)".</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The registrar-agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the registrar-agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The security of communication between the registrar-agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the registrar-agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC6125"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an enrollment-request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-requests and -responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is based on JOSE <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments it may be provided based on COSE <xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure, having been replaced by the Registrar Agent.
The Join Proxy may still be present, and there <bcp14>MAY</bcp14> be some situations in which the Join Proxy can be used by the Registrar-Agent to connect to the Registrar.
For example, the Registrar-Agent application on a smartphone often can connect to local wifi without giving up their LTE connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="220" y="324">LDevID</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="236" y="452">&quot;Domain&quot;</text>
<text x="316" y="452">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |     LDevID |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to some differences for BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent <bcp14>MUST</bcp14> be possible.</t>
      <t>As the registrar-agent <bcp14>MUST</bcp14> be able to request data objects for bootstrapping of the pledge, the pledge <bcp14>MUST</bcp14> offer corresponding endpoints as defined in <xref target="pledge_ep"/>.</t>
      <t>The registrar-agent <bcp14>MUST</bcp14> provide additional data to the pledge in the context of the voucher-request trigger, which the pledge <bcp14>MUST</bcp14> include into the PVR as defined in <xref target="pvrt"/> and <xref target="pvrr"/>.
This allows the registrar to identify, with which registrar-agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected at once and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges.
It can then perform a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that this registrar-agent is authorized to perform the bootstrapping of the distinct pledge.
The registrar-agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites. 
Contrary, the registrar-agent may also be realized as co-located functionality for a registrar, to support pledges in pledge-responder-mode.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general, the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer site) domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
A registrar with combined functionality of BRSKI and BRSKI-PRM detects if the bootstrapping is performed by the pledge directly (BRSKI case) or by the registrar-agent (BRSKI-PRM case) based on the utilized credential for authentication (either pledgeâs IDevID or LDevID from registrar-agent), see also <xref target="exchanges_uc2_2"/>.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via registrar-agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the agent-proximity.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar. 
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="304" y="52">Service</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="112" y="228">install</text>
<text x="216" y="228">!</text>
<text x="60" y="244">location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="236" y="484">&quot;Domain&quot;</text>
<text x="316" y="484">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge install         !                   |
   location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the registrar-agent.
To perform enrollment in this setup, multiple round trips of the registrar-agent between the pledge install location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge install location: retrieve information about available pledges (IDevID), collect request objects like voucher-requests and enrollment-requests using the BRSKI-PRM approach described in <xref target="exchanges_uc2_1"/>.</t>
  <t>Connectivity to domain registrar, submit collected pledges' request information, retrieve response objects as voucher and enrollment information using the BRSKI-PRM approach described in <xref target="exchanges_uc2_2"/>.</t>
  <t>Connectivity to pledge install location, provide retrieved objects to the pledge to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_3"/>.</t>
  <t>Connectivity to domain registrar, submit voucher status and enrollment status using the BRSKI-PRM approach described in <xref target="exchanges_uc2_4"/>.</t>
</list></t>

<t>Variations of this setup include cases where the registrar-agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar. 
Both connections may also be possible in a single location at the same time, based on installation building conditions.,</t>

</section>
<section anchor="registrar-agent-co-located-with-registrar"><name>Registrar-agent co-located with registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a registrar-agent. 
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="228" y="324">&quot;Domain&quot;</text>
<text x="308" y="324">Components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                         "Domain" Components
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone registrar-agents by integrating the necessary functionality of the registrar-agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a different assertion then "proximity", which is defined in section 4 of <xref target="RFC8366"/>.
"Agent-proximity" is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and must take the Registrar-Agent LDevID provisionally.
The registrar-agent has included its LDevID, a certificate signed by the domain owner, into the PVR trigger message.
The registrar-agent identity is therefore included into the Pledge Voucher Request (PVR).</t>

<t>Akin to the BRSKI case, the pledge has provided proximity evidence to the MASA.
But additionally, this allows the Registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent to which the Registrar is connected to.</t>

<t>In a similar fashion, the pledge accepts the registrar certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also Section 5 of <xref target="RFC8995"/> on "PROVISIONAL accept of server cert".</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER.
It will also be triggered for processing of the responses and the generation of status information once the registrar-agent has received the responses from the registrar later in the process.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction as responder with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>When the registrar-agent reaches out to a pledge, for instance with an example URI path "http://pledge.example/.well-known/brski/tpvr", it will in fact send a Host: header of "pledge.example", with a relative path of "/.well-known/brski/tpbr".
However in practice the pledge will often be known only by its IP address as returned by a discovery protocol, and that is what will be present in the Host: header.</t>

<t>The pledge <bcp14>MUST</bcp14> respond to all queries regardless of what Host: header is provided by the client.
<xref section="7.2" sectionFormat="comma" target="RFC9110"/> makes the Host: header mandatory, so it will always be present.</t>

<t>The following operations are defined for the <em>pledge</em> in this document, describing their endpoints and their corresponding URIs.
The endpoints are defined with short names to also accommodate for the constraint case.</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge voucher-request creation - Returns PVR</c>
      <c>/tpvr</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge enrollment-request - Returns PER</c>
      <c>/tper</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Supply voucher to pledge - Returns pledge voucher-status</c>
      <c>/svr</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply enrollment-response to pledge - Returns pledge enrollment-status</c>
      <c>/ser</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Supply CA certs to pledge</c>
      <c>/scac</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query status of pledge - Returns pledge-status</c>
      <c>/qps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides a message passing service between the pledge and the domain registrar.
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher-request/response, the enrollment-request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.</t>

<t>The communication between the registrar-agent and the pledge <bcp14>MAY</bcp14> be protected using TLS as outlined in <xref target="exchanges_uc2_1"/>.
The details of doing TLS validation are <xref target="pledgehttps"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
These endpoints do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment-request and the provisioning of CA certificates.
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar - Returns enrollment-response</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its EE (RegAgt) certificate.
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its EE certificate when establishing a TLS session with the domain registrar for TLS client authentication.
The EE (RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE (RegAgt) certificate to accommodate also constraint environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the EE (RegAgt) certificate allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the EE (RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the EE (RegAgt) certificate, the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by prior administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.
This behavior is retained also in BRSKI-PRM.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>EE (RegAgt) certificate and corresponding private key: own operational key pair (to sign agent-signed-data).</t>
  <t>Registrar EE certificate: certificate of the domain registrar (to be provided to the pledge).</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped (to query discover specific pledges based on the serial number).</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>As a registrar-agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as registrar-agent and registrar are domain components and have a trust relation. 
Moreover, other communication (not part of this document) between the registrar-agent and the registrar is assumed, e.g., to exchange information about serial numbers of pledges to be discovered as outlined in <xref target="arch_nomadic"/>. 
Moreover, as the standard discovery described in section 4 and the appendix A.2 of <xref target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent in the context of this document describes the minimum discovery approach to be supported. 
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the registrar-agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="behavior-of-pledge-with-combined-functionality"><name>Behavior of Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator or responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a pledge enrollment-request (PER) or to provide an enrollment-response can be used for further certificates.</t>

</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification utilizes HTTP as transport.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects, which are not bound to specific transport security and stay the same across the communication from the pledge via the registrar-agent to the registrar..
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar LDevID certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the private key corresponding to the EE (RegAgt) certificate, as described in <xref target="exchanges_uc2_1"/>.
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> provide the EE (RegAgt) certificate identified by the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR in its RVR (see also <xref target="pvr-proc-reg"/>.</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-certificate" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA <bcp14>MAY</bcp14> issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided EE (RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx error status code as described in section 5.6 of <xref target="RFC8995"/>.
When successful, the voucher will then be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1088" width="560" viewBox="0 0 560 1088" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,248 L 32,336" fill="none" stroke="black"/>
<path d="M 32,392 L 32,592" fill="none" stroke="black"/>
<path d="M 32,632 L 32,712" fill="none" stroke="black"/>
<path d="M 32,728 L 32,752" fill="none" stroke="black"/>
<path d="M 32,808 L 32,896" fill="none" stroke="black"/>
<path d="M 32,952 L 32,1072" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 112,32 L 112,96" fill="none" stroke="black"/>
<path d="M 168,104 L 168,208" fill="none" stroke="black"/>
<path d="M 168,256 L 168,336" fill="none" stroke="black"/>
<path d="M 168,384 L 168,592" fill="none" stroke="black"/>
<path d="M 168,624 L 168,704" fill="none" stroke="black"/>
<path d="M 168,736 L 168,752" fill="none" stroke="black"/>
<path d="M 168,816 L 168,896" fill="none" stroke="black"/>
<path d="M 168,960 L 168,1072" fill="none" stroke="black"/>
<path d="M 208,32 L 208,96" fill="none" stroke="black"/>
<path d="M 240,32 L 240,96" fill="none" stroke="black"/>
<path d="M 312,104 L 312,208" fill="none" stroke="black"/>
<path d="M 312,256 L 312,336" fill="none" stroke="black"/>
<path d="M 312,512 L 312,592" fill="none" stroke="black"/>
<path d="M 312,640 L 312,704" fill="none" stroke="black"/>
<path d="M 312,736 L 312,752" fill="none" stroke="black"/>
<path d="M 312,816 L 312,896" fill="none" stroke="black"/>
<path d="M 312,960 L 312,1008" fill="none" stroke="black"/>
<path d="M 312,1040 L 312,1072" fill="none" stroke="black"/>
<path d="M 336,32 L 336,96" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 432,104 L 432,208" fill="none" stroke="black"/>
<path d="M 432,256 L 432,336" fill="none" stroke="black"/>
<path d="M 432,400 L 432,496" fill="none" stroke="black"/>
<path d="M 432,576 L 432,592" fill="none" stroke="black"/>
<path d="M 432,640 L 432,704" fill="none" stroke="black"/>
<path d="M 432,736 L 432,752" fill="none" stroke="black"/>
<path d="M 432,816 L 432,896" fill="none" stroke="black"/>
<path d="M 432,960 L 432,976" fill="none" stroke="black"/>
<path d="M 432,1040 L 432,1072" fill="none" stroke="black"/>
<path d="M 448,32 L 448,96" fill="none" stroke="black"/>
<path d="M 472,32 L 472,96" fill="none" stroke="black"/>
<path d="M 536,104 L 536,208" fill="none" stroke="black"/>
<path d="M 536,256 L 536,336" fill="none" stroke="black"/>
<path d="M 536,400 L 536,512" fill="none" stroke="black"/>
<path d="M 536,560 L 536,592" fill="none" stroke="black"/>
<path d="M 536,640 L 536,704" fill="none" stroke="black"/>
<path d="M 536,736 L 536,752" fill="none" stroke="black"/>
<path d="M 536,816 L 536,896" fill="none" stroke="black"/>
<path d="M 536,960 L 536,1008" fill="none" stroke="black"/>
<path d="M 536,1040 L 536,1072" fill="none" stroke="black"/>
<path d="M 552,32 L 552,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 112,32 L 208,32" fill="none" stroke="black"/>
<path d="M 240,32 L 336,32" fill="none" stroke="black"/>
<path d="M 376,32 L 448,32" fill="none" stroke="black"/>
<path d="M 472,32 L 552,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 112,96 L 208,96" fill="none" stroke="black"/>
<path d="M 240,96 L 336,96" fill="none" stroke="black"/>
<path d="M 376,96 L 448,96" fill="none" stroke="black"/>
<path d="M 472,96 L 552,96" fill="none" stroke="black"/>
<path d="M 40,176 L 160,176" fill="none" stroke="black"/>
<path d="M 40,192 L 160,192" fill="none" stroke="black"/>
<path d="M 40,256 L 56,256" fill="none" stroke="black"/>
<path d="M 136,256 L 160,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 136,272 L 160,272" fill="none" stroke="black"/>
<path d="M 40,288 L 80,288" fill="none" stroke="black"/>
<path d="M 128,288 L 160,288" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 136,320 L 160,320" fill="none" stroke="black"/>
<path d="M 40,336 L 80,336" fill="none" stroke="black"/>
<path d="M 128,336 L 160,336" fill="none" stroke="black"/>
<path d="M 176,400 L 216,400" fill="none" stroke="black"/>
<path d="M 264,400 L 304,400" fill="none" stroke="black"/>
<path d="M 176,448 L 208,448" fill="none" stroke="black"/>
<path d="M 256,448 L 304,448" fill="none" stroke="black"/>
<path d="M 320,512 L 408,512" fill="none" stroke="black"/>
<path d="M 456,512 L 528,512" fill="none" stroke="black"/>
<path d="M 320,560 L 392,560" fill="none" stroke="black"/>
<path d="M 472,560 L 528,560" fill="none" stroke="black"/>
<path d="M 176,576 L 200,576" fill="none" stroke="black"/>
<path d="M 280,576 L 304,576" fill="none" stroke="black"/>
<path d="M 176,640 L 216,640" fill="none" stroke="black"/>
<path d="M 264,640 L 304,640" fill="none" stroke="black"/>
<path d="M 320,656 L 344,656" fill="none" stroke="black"/>
<path d="M 392,656 L 424,656" fill="none" stroke="black"/>
<path d="M 320,672 L 344,672" fill="none" stroke="black"/>
<path d="M 400,672 L 424,672" fill="none" stroke="black"/>
<path d="M 176,688 L 192,688" fill="none" stroke="black"/>
<path d="M 288,688 L 304,688" fill="none" stroke="black"/>
<path d="M 288,736 L 304,736" fill="none" stroke="black"/>
<path d="M 176,752 L 192,752" fill="none" stroke="black"/>
<path d="M 40,816 L 56,816" fill="none" stroke="black"/>
<path d="M 136,816 L 160,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 160,832" fill="none" stroke="black"/>
<path d="M 40,848 L 64,848" fill="none" stroke="black"/>
<path d="M 144,848 L 160,848" fill="none" stroke="black"/>
<path d="M 40,864 L 64,864" fill="none" stroke="black"/>
<path d="M 144,864 L 160,864" fill="none" stroke="black"/>
<path d="M 40,880 L 56,880" fill="none" stroke="black"/>
<path d="M 40,896 L 56,896" fill="none" stroke="black"/>
<path d="M 136,896 L 160,896" fill="none" stroke="black"/>
<path d="M 176,960 L 224,960" fill="none" stroke="black"/>
<path d="M 272,960 L 304,960" fill="none" stroke="black"/>
<path d="M 176,976 L 200,976" fill="none" stroke="black"/>
<path d="M 288,976 L 304,976" fill="none" stroke="black"/>
<path d="M 320,992 L 336,992" fill="none" stroke="black"/>
<path d="M 512,992 L 528,992" fill="none" stroke="black"/>
<path d="M 320,1008 L 352,1008" fill="none" stroke="black"/>
<path d="M 504,1008 L 528,1008" fill="none" stroke="black"/>
<path d="M 176,1056 L 200,1056" fill="none" stroke="black"/>
<path d="M 280,1056 L 304,1056" fill="none" stroke="black"/>
<polygon class="arrowhead" points="536,992 524,986.4 524,997.6" fill="black" transform="rotate(0,528,992)"/>
<polygon class="arrowhead" points="536,512 524,506.4 524,517.6" fill="black" transform="rotate(0,528,512)"/>
<polygon class="arrowhead" points="432,656 420,650.4 420,661.6" fill="black" transform="rotate(0,424,656)"/>
<polygon class="arrowhead" points="328,1008 316,1002.4 316,1013.6" fill="black" transform="rotate(180,320,1008)"/>
<polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
<polygon class="arrowhead" points="328,560 316,554.4 316,565.6" fill="black" transform="rotate(180,320,560)"/>
<polygon class="arrowhead" points="312,1056 300,1050.4 300,1061.6" fill="black" transform="rotate(0,304,1056)"/>
<polygon class="arrowhead" points="312,976 300,970.4 300,981.6" fill="black" transform="rotate(0,304,976)"/>
<polygon class="arrowhead" points="312,960 300,954.4 300,965.6" fill="black" transform="rotate(0,304,960)"/>
<polygon class="arrowhead" points="312,736 300,730.4 300,741.6" fill="black" transform="rotate(0,304,736)"/>
<polygon class="arrowhead" points="312,640 300,634.4 300,645.6" fill="black" transform="rotate(0,304,640)"/>
<polygon class="arrowhead" points="312,448 300,442.4 300,453.6" fill="black" transform="rotate(0,304,448)"/>
<polygon class="arrowhead" points="312,400 300,394.4 300,405.6" fill="black" transform="rotate(0,304,400)"/>
<polygon class="arrowhead" points="184,960 172,954.4 172,965.6" fill="black" transform="rotate(180,176,960)"/>
<polygon class="arrowhead" points="184,752 172,746.4 172,757.6" fill="black" transform="rotate(180,176,752)"/>
<polygon class="arrowhead" points="184,688 172,682.4 172,693.6" fill="black" transform="rotate(180,176,688)"/>
<polygon class="arrowhead" points="184,576 172,570.4 172,581.6" fill="black" transform="rotate(180,176,576)"/>
<polygon class="arrowhead" points="184,400 172,394.4 172,405.6" fill="black" transform="rotate(180,176,400)"/>
<polygon class="arrowhead" points="168,896 156,890.4 156,901.6" fill="black" transform="rotate(0,160,896)"/>
<polygon class="arrowhead" points="168,848 156,842.4 156,853.6" fill="black" transform="rotate(0,160,848)"/>
<polygon class="arrowhead" points="168,816 156,810.4 156,821.6" fill="black" transform="rotate(0,160,816)"/>
<polygon class="arrowhead" points="168,336 156,330.4 156,341.6" fill="black" transform="rotate(0,160,336)"/>
<polygon class="arrowhead" points="168,288 156,282.4 156,293.6" fill="black" transform="rotate(0,160,288)"/>
<polygon class="arrowhead" points="168,256 156,250.4 156,261.6" fill="black" transform="rotate(0,160,256)"/>
<polygon class="arrowhead" points="168,192 156,186.4 156,197.6" fill="black" transform="rotate(0,160,192)"/>
<polygon class="arrowhead" points="48,880 36,874.4 36,885.6" fill="black" transform="rotate(180,40,880)"/>
<polygon class="arrowhead" points="48,864 36,858.4 36,869.6" fill="black" transform="rotate(180,40,864)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,816 36,810.4 36,821.6" fill="black" transform="rotate(180,40,816)"/>
<polygon class="arrowhead" points="48,320 36,314.4 36,325.6" fill="black" transform="rotate(180,40,320)"/>
<polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(180,40,272)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<path class="jump" d="M 32,728 C 26,728 26,712 32,712" fill="none" stroke="black"/><circle cx="168" cy="384" r="6" class="opendot" fill="white" stroke="black"/>
<circle cx="168" cy="624" r="6" class="opendot" fill="white" stroke="black"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="160" y="52">Registrar</text>
<text x="276" y="52">Domain</text>
<text x="412" y="52">Domain</text>
<text x="508" y="52">Vendor</text>
<text x="144" y="68">Agent</text>
<text x="288" y="68">Registrar</text>
<text x="396" y="68">CA</text>
<text x="512" y="68">Service</text>
<text x="156" y="84">(RegAgt)</text>
<text x="280" y="84">(JRC)</text>
<text x="508" y="84">(MASA)</text>
<text x="492" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="40" y="244">(1)</text>
<text x="88" y="244">trigger</text>
<text x="136" y="244">PVR</text>
<text x="180" y="244">(tPVR)</text>
<text x="224" y="244">and</text>
<text x="256" y="244">PER</text>
<text x="300" y="244">(tPER)</text>
<text x="372" y="244">generation</text>
<text x="428" y="244">on</text>
<text x="468" y="244">pledge</text>
<text x="76" y="260">opt.</text>
<text x="112" y="260">TLS</text>
<text x="108" y="276">tPVR</text>
<text x="104" y="292">PVR</text>
<text x="108" y="324">tPER</text>
<text x="104" y="340">PER</text>
<text x="32" y="356">~</text>
<text x="168" y="356">~</text>
<text x="312" y="356">~</text>
<text x="432" y="356">~</text>
<text x="536" y="356">~</text>
<text x="40" y="388">(2)</text>
<text x="88" y="388">provide</text>
<text x="136" y="388">PVR</text>
<text x="160" y="388">t</text>
<text x="236" y="388">infrastructure</text>
<text x="240" y="404">TLS</text>
<text x="312" y="404">|</text>
<text x="276" y="420">[Reg-Agt</text>
<text x="368" y="420">authenticated</text>
<text x="264" y="436">and</text>
<text x="332" y="436">authorized?]</text>
<text x="232" y="452">PVR</text>
<text x="312" y="452">|</text>
<text x="276" y="468">[Reg-Agt</text>
<text x="364" y="468">authorized?]</text>
<text x="272" y="484">[accept</text>
<text x="340" y="484">device?]</text>
<text x="276" y="500">[contact</text>
<text x="344" y="500">vendor]</text>
<text x="432" y="516">RVR</text>
<text x="436" y="532">[extract</text>
<text x="512" y="532">DomainID]</text>
<text x="432" y="548">[update</text>
<text x="488" y="548">audit</text>
<text x="532" y="548">log]</text>
<text x="432" y="564">Voucher</text>
<text x="240" y="580">Voucher</text>
<text x="40" y="628">(2)</text>
<text x="88" y="628">provide</text>
<text x="136" y="628">PER</text>
<text x="160" y="628">t</text>
<text x="236" y="628">infrastructure</text>
<text x="240" y="644">PER</text>
<text x="368" y="660">CSR</text>
<text x="372" y="676">Cert</text>
<text x="240" y="692">Enroll-Resp</text>
<text x="44" y="724">2)</text>
<text x="80" y="724">query</text>
<text x="136" y="724">cACerts</text>
<text x="188" y="724">from</text>
<text x="268" y="724">infrastructure</text>
<text x="180" y="740">--</text>
<text x="236" y="740">cACert-Req</text>
<text x="256" y="756">cACert-Resp--</text>
<text x="32" y="772">~</text>
<text x="168" y="772">~</text>
<text x="312" y="772">~</text>
<text x="432" y="772">~</text>
<text x="536" y="772">~</text>
<text x="40" y="804">(3)</text>
<text x="88" y="804">provide</text>
<text x="152" y="804">voucher</text>
<text x="200" y="804">and</text>
<text x="264" y="804">certificate</text>
<text x="328" y="804">and</text>
<text x="376" y="804">collect</text>
<text x="436" y="804">status</text>
<text x="484" y="804">info</text>
<text x="76" y="820">opt.</text>
<text x="112" y="820">TLS</text>
<text x="104" y="836">Voucher</text>
<text x="104" y="852">vStatus</text>
<text x="104" y="868">cACerts</text>
<text x="112" y="884">Enroll-Resp--</text>
<text x="96" y="900">eStatus</text>
<text x="32" y="916">~</text>
<text x="168" y="916">~</text>
<text x="312" y="916">~</text>
<text x="432" y="916">~</text>
<text x="536" y="916">~</text>
<text x="40" y="948">(4)</text>
<text x="88" y="948">provide</text>
<text x="152" y="948">voucher</text>
<text x="212" y="948">status</text>
<text x="256" y="948">and</text>
<text x="300" y="948">enroll</text>
<text x="356" y="948">status</text>
<text x="396" y="948">to</text>
<text x="448" y="948">registrar</text>
<text x="248" y="964">TLS</text>
<text x="248" y="980">vStatus</text>
<text x="360" y="996">req</text>
<text x="404" y="996">device</text>
<text x="456" y="996">audit</text>
<text x="496" y="996">log</text>
<text x="388" y="1012">device</text>
<text x="440" y="1012">audit</text>
<text x="480" y="1012">log</text>
<text x="288" y="1028">[verify</text>
<text x="344" y="1028">audit</text>
<text x="388" y="1028">log]</text>
<text x="240" y="1060">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+   +-----------+   +-----------+    +--------+  +---------+
| Pledge |   | Registrar |   | Domain    |    | Domain |  | Vendor  |
|        |   | Agent     |   | Registrar |    | CA     |  | Service |
|        |   | (RegAgt)  |   |  (JRC)    |    |        |  | (MASA)  |
+--------+   +-----------+   +-----------+    +--------+  +---------+
   |                |                 |              |   Internet |
   |   discover     |                 |              |            |
   |    pledge      |                 |              |            |
   | mDNS query     |                 |              |            |
   |<---------------|                 |              |            |
   |--------------->|                 |              |            |
   |                |                 |              |            |

   (1) trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<--opt. TLS --->|                 |              |            |
   |<----- tPVR ----|                 |              |            |
   |------ PVR ---->|                 |              |            |
   |                |                 |              |            |
   |<----- tPER ----|                 |              |            |
   |------ PER ---->|                 |              |            |
   ~                ~                 ~              ~            ~

   (2) provide PVR to infrastructure
   |                |<----- TLS ----->|              |            |
   |                |         [Reg-Agt authenticated |            |
   |                |          and authorized?]      |            |
   |                |----- PVR ------>|              |            |
   |                |         [Reg-Agt authorized?]  |            |
   |                |         [accept device?]       |            |
   |                |         [contact vendor]       |            |
   |                |                 |------------ RVR --------->|
   |                |                 |           [extract DomainID]
   |                |                 |           [update audit log]
   |                |                 |<--------- Voucher --------|
   |                |<--- Voucher ----|              |            |
   |                |                 |              |            |

   (2) provide PER to infrastructure
   |                |------ PER ----->|              |            |
   |                |                 |---- CSR ---->|            |
   |                |                 |<--- Cert ----|            |
   |                |<--Enroll-Resp---|              |            |
   |                |                 |              |            |
   (2) query cACerts from infrastructure
   |                |-- cACert-Req -->|              |            |
   |                |<-- cACert-Resp--|              |            |
   ~                ~                 ~              ~            ~

   (3) provide voucher and certificate and collect status info
   |<--opt. TLS --->|                 |              |            |
   |<--- Voucher ---|                 |              |            |
   |---- vStatus -->|                 |              |            |
   |<--- cACerts ---|                 |              |            |
   |<--Enroll-Resp--|                 |              |            |
   |--- eStatus --->|                 |              |            |
   ~                ~                 ~              ~            ~

   (4) provide voucher status and enroll status to registrar
   |                |<------ TLS ---->|              |            |
   |                |----  vStatus -->|              |            |
   |                |                 |--- req device audit log-->|
   |                |                 |<---- device audit log ----|
   |                |           [verify audit log]
   |                |                 |              |            |
   |                |---- eStatus --->|              |            |
   |                |                 |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent:
  <list style="symbols">
      <t><bcp14>MAY</bcp14> handle/trusts pledge's IDevID CA certificate to validate IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the registrar-agent is out of scope of this document and may be done by a manual configuration.</t>
      <t>possesses own credentials (EE (RegAgt) certificate and corresponding private key) for the registrar domain.
In addition, the registrar-agent <bcp14>SHOULD</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
      <list style="symbols">
          <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
          <t>discovered by using standard approaches like DNS-SD with mDNS as described in <xref target="discovery_uc2_ppa"/></t>
          <t>discovered by using a manufacturer specific approach, e.g., RF beacons.
If the serial numbers are not known in advance, the registrar-agent cannot perform a distinct triggering of pledges but and triggers  all pledges discovered .</t>
        </list></t>
    </list>
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
  <t>Registrar (same as in BRSKI): possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="520" viewBox="0 0 520 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,336" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 64,144" fill="none" stroke="black"/>
<path d="M 48,176 L 72,176" fill="none" stroke="black"/>
<path d="M 336,176 L 360,176" fill="none" stroke="black"/>
<path d="M 48,240 L 80,240" fill="none" stroke="black"/>
<path d="M 280,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,272 L 88,272" fill="none" stroke="black"/>
<path d="M 320,272 L 360,272" fill="none" stroke="black"/>
<path d="M 48,320 L 88,320" fill="none" stroke="black"/>
<path d="M 312,320 L 360,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,320 356,314.4 356,325.6" fill="black" transform="rotate(0,360,320)"/>
<polygon class="arrowhead" points="368,240 356,234.4 356,245.6" fill="black" transform="rotate(0,360,240)"/>
<polygon class="arrowhead" points="56,272 44,266.4 44,277.6" fill="black" transform="rotate(180,48,272)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="108" y="148">optional</text>
<text x="184" y="148">establish</text>
<text x="240" y="148">TLS</text>
<text x="300" y="148">connection</text>
<text x="356" y="148">--</text>
<text x="112" y="180">trigger</text>
<text x="172" y="180">pledge</text>
<text x="264" y="180">voucher-request</text>
<text x="204" y="196">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="212">-agent-signed-data</text>
<text x="116" y="244">pledge</text>
<text x="208" y="244">voucher-request</text>
<text x="396" y="244">-store</text>
<text x="440" y="244">PVR</text>
<text x="128" y="276">trigger</text>
<text x="236" y="276">enrollment-request</text>
<text x="128" y="292">(empty)</text>
<text x="124" y="324">pledge</text>
<text x="228" y="324">enrollment-request</text>
<text x="396" y="324">-store</text>
<text x="448" y="324">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<-- optional establish TLS connection --|
    |                                        |
    |<--- trigger pledge voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment-request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>TLS <bcp14>MAY</bcp14> be optionally used to provide privacy for the interaction between the registrar-agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pvrt"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tpvr"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate. The pledge therefore accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request:agent-signed-data" element (defined in <xref target="I-D.ietf-anima-rfc8366bis"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload representation in JSON syntax of
  "ietf-voucher-request-prm:agent-signed-data"

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pvrr"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/> to support JWS signing of the object:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher is extended with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar LDevID certificate (provided as PVR trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as a PVR trigger parameter by the registrar-agent.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Media-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>MUST</bcp14> include this Media-Type header field indicating the included media type for the PVR.
The PVR is included by the registrar in its RCR as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tper"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>This document specifies the request of a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.
How the HTTP POST can be used to provide CSR attributes is out of scope for this specification.</t>

</section>
<section anchor="PER-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the PER  trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the pledge enrollment-request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format.
Note that the wrapping of the PER signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate. If the certificate chain is not included it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate.
The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses its own credentials (EE (RegAgt) certificate and corresponding private key) of the domain.
In addition, it <bcp14>MAY</bcp14> possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., DNS-SD with mDNS.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar (same as in BRSKI): possesses the IDevID CA certificate of the pledge vendor/manufacturer and its own registrar EE credentials of the domain.</t>
  <t>MASA (same as in BRSKI): possesses its own vendor/manufacturer credentials (voucher signing key and certificate, TLS server certificate and private key) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the registrar agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t>For BRSKI-PRM, the registrar agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent sets the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pvr-proc-reg"><name>Pledge-Voucher-Request (PVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between registrar-agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid.</t>
  <t>404 Not Found status code if the pledge provided information could not be used with automated allowance, as described in section 5.3 of <xref target="RFC8995"/>.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref target="RFC8995"/>, Section 5.3 followed by obtaining a voucher from the pledge's MASA according to <xref target="RFC8995"/>, Section 5.4 with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
<section anchor="rvr-proc"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>If the MASA address/URI is learned from the <xref target="RFC8995"/> Section 2.3 IDevID MASA URI extension, then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from registrar-agent, see <xref target="pvrr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request-prm:voucher"
  representation in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC8152"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in Section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in Section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Voucher Issuance by MASA</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in section 5.5 of <xref target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in Section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key that the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in Section 5.2 of <xref target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the registrar-agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.
As specified in <xref target="PER-response"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment-request with the corresponding domain CA.
It creates a registrar enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="PER-response"/>).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Objects supplied by the Registrar-Agent to the Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-agent and the pledge is established using TLS to enable the registrar-agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="exchanges_uc2_1"/>.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 88,160" fill="none" stroke="black"/>
<path d="M 296,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 104,192" fill="none" stroke="black"/>
<path d="M 240,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 112,224" fill="none" stroke="black"/>
<path d="M 248,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 296,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 72,288" fill="none" stroke="black"/>
<path d="M 304,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 112,320" fill="none" stroke="black"/>
<path d="M 240,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(0,320,320)"/>
<polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(0,320,224)"/>
<polygon class="arrowhead" points="56,288 44,282.4 44,293.6" fill="black" transform="rotate(180,48,288)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,192 44,186.4 44,197.6" fill="black" transform="rotate(180,48,192)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="132" y="164">optional</text>
<text x="184" y="164">TLS</text>
<text x="244" y="164">connection</text>
<text x="140" y="196">supply</text>
<text x="200" y="196">voucher</text>
<text x="152" y="228">voucher</text>
<text x="212" y="228">status</text>
<text x="344" y="228">-</text>
<text x="376" y="228">store</text>
<text x="380" y="244">pledge</text>
<text x="440" y="244">voucher</text>
<text x="500" y="244">status</text>
<text x="108" y="260">supply</text>
<text x="168" y="260">CAcerts</text>
<text x="244" y="260">(optional)</text>
<text x="108" y="292">supply</text>
<text x="216" y="292">enrollment-response</text>
<text x="148" y="324">enroll</text>
<text x="204" y="324">status</text>
<text x="344" y="324">-</text>
<text x="376" y="324">store</text>
<text x="380" y="340">pledge</text>
<text x="436" y="340">enroll</text>
<text x="492" y="340">status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<----- optional TLS connection ----|
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<--- supply CAcerts (optional) ----|
    |                                   |
    |<--- supply enrollment-response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status

]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="exchanges_uc2_1"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="exchanges_uc2_3a"><name>Pledge: Voucher-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in Section 5.6.1 in <xref target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in Section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="exchanges_uc2_3b"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the registrar agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="exchanges_uc2_5"/> and <bcp14>MAY</bcp14> re-sent the voucher depending on the Pledge status following the procedure described in <xref target="exchanges_uc2_3a"/>.</t>

</section>
<section anchor="exchanges_uc2_3c"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the the received wrapped CA certificate object. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 406 Not Acceptable. It signals that the object has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"></xref>.</t>
</list></t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment-Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment-Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in Section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enrollment response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: obtained voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>In case the TLS connection to the registrar is already closed, the registrar-agent opens a new TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via registrar-agent and include the identity of the registrar-agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting registrar-agent from the authentication of the registrar-agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the registrar-agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the registrar-agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> Section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in Section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in Section 5.9.4 of <xref target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"></xref>.</t>

<t>According to <xref target="RFC8995"/> Section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), may have a list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="exchanges_uc2_5a"><name>Pledge-Status - Request (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/qps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the private key corresponding to the EE (RegAgt) certificate.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-request" representation
  in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="exchanges_uc2_5b"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is:</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher-Request Artifact</name>

<t><xref target="I-D.ietf-anima-rfc8366bis"/> extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.
These additional fields are defined in <xref target="exchanges_uc2_1"/> as:</t>

<t><list style="symbols">
  <t>agent-signed-data to provide a JSON encoded artifact from the involved registrar-agent, which allows the registrar to verify the agent's involvement</t>
  <t>agent-provided-proximity-registrar-cert to provide the registrar certificate visible to the registrar-agent, comparable to the registrar-proximity-certificate used in <xref target="RFC8995"/></t>
  <t>agent-signing certificate to optionally provide the registrar agent signing certificate.</t>
</list></t>

<t>Examples for the application of these fields in the context of a PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                Description                       Reference
 tpvr               create pledge voucher-request     [THISRFC]
 tper               create pledge enrollment-request  [THISRFC]
 svr                supply voucher-response           [THISRFC]
 ser                supply enrollment-response        [THISRFC]
 scac               supply CA certificates to pledge  [THISRFC]
 qps                query pledge status               [THISRFC]
 requestenroll      supply PER to registrar           [THISRFC]
 wrappedcacerts     request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>potentially no transport layer security between registrar-agent and pledge</t>
</list></t>

<t><xref target="exchanges_uc2_1"/> describes to optional apply TLS to protect the communication between the registrar-agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the registrar-agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit registrar-agents, pledges are more subject to DoS attacks from registrar-agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the registrar-agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (Section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref target="RFC8995"/> Section 11.7 (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref target="RFC8407"/> Section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="22" month="August" year="2023"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC6125">
  <front>
    <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="J. Hodges" initials="J." surname="Hodges"/>
    <date month="March" year="2011"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6125"/>
  <seriesInfo name="DOI" value="10.17487/RFC6125"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8152">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="July" year="2017"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8152"/>
  <seriesInfo name="DOI" value="10.17487/RFC8152"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="20" month="October" year="2023"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995) that supports alternative
   certificate enrollment protocols, such as CMP.  This offers the
   following advantages.

   Using authenticated self-contained signed objects for certification
   requests and responses, their origin can be authenticated
   independently of message transfer.  This supports end-to-end
   authentication (proof of origin) also over multiple hops, as well as
   asynchronous operation of certificate enrollment.  This in turn
   provides architectural flexibility where to ultimately authenticate
   and authorize certification requests while retaining full-strength
   integrity and authenticity of certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-06"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>



<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="11" month="May" year="2023"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-07"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="6" month="August" year="2023"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-02"/>
   
</reference>




    </references>


<?line 2246?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher-Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTPS between the Registrar-Agent and the Pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the registrar-agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTPS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC6125"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which serial numbers, from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that serial number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A registrar-agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="exchanges_uc2_3c"/></t>
  <t>issue #128: included notation of nomadic operation of the registrar-agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the registrar-agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the registrar-agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="exchanges_uc2_4"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of serial number information on registrar agent clarified in <xref target="exchanges_uc2_1"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the serial number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between registrar-agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="exchanges_uc2_1"/></t>
  <t>issue #83, enhanced <xref target="PER-response"/> and <xref target="exchanges_uc2_2_per"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the registrar-agent in <xref target="exchanges_uc2_1"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="pvrr"/> and PER in <xref target="PER-response"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="exchanges_uc2_2_per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="exchanges_uc2_2_wca"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on registrar-agent <xref target="exchanges_uc2_3"/></t>
  <t>issue #96: updated <xref target="exchangesfig_uc2_3"/> to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in <xref target="exchanges_uc2_3"/> as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="exchanges_uc2_3"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="exchanges_uc2_3b"/> voucher telemetry information has not been received by the registrar-agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="exchanges_uc2_3c"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="exchanges_uc2_4"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="exchanges_uc2_5a"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="exchanges_uc2_5b"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="exchanges_uc2_5b"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge voucher-request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization></organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
ekEbFedLH69bM08pyPOnyjW/GVKnHukNGcp4143x0jo8Ffx9vY5ObwtWOXF+
CSVcr9M4+kQ1XC/3ssqmtXMbwYs3uU57Z79jmn/UrSfB9mpenXyuy3/UR+tO
Qz69AV4dzuQfPj+I9fLT17//Vo3xtz9ORWlW6119i+L7ekPV++JTrbrWLZn3
0rDnpl/Nw6R5nNOzlwNp9fCLidnLYj7NwUaelq2PCGxp8s0N8/q1FcjkN35U
qDkd8WKYP8v4mnXGV+xIvc//3035epKS+7lTTuzHjjF06HPfrp7mUm/pW0CS
XBdBZx/m0q1hy73EkI3uvehsmLxfTzvh7QMliVf9Q+DeHlpJIGneAWFcBirD
b7UsnLEs7ExpbFnsFB04oW0oIVS4TGCooZKxua0YTPB3elaovnyLGemzvu+I
iRXkmusuTUoVzXxXtCjJ4qvFgsnywU3DneGIbtAB5ewkPzzGNmiBkk2JSQmv
G6aKXbSAoCbygzTdeczphYpRBqpizJX13k2ZEavTg70yH5iirRFWq6ClSjDS
EjZLZEfqfbvCtyIlHEUzlk+PvhzdRcx/cjKerhIdMdpFPNmUWZhF4mW+qytT
hEs9Qx/CFWYRKLyMVsKhQmPYe+5+xxTDcVO0YPe7lDJiIhtZs+yB2YyB+Ltz
sBXQzgmC+i7Lkjsmal4wAs4zJvd+2KI/QAuezVtwRCbBbwoiJJkwhAwFQn4r
VKaHuVxkzFYUyBFjgJ9eMsfMNEp4MT8AX3HsrJ8ER1liQ203TXtKPFIs0JgH
Lw0hJ+JXkGR+22M5eJ+o3JhLSnh9FW0X0lUp6RarCny1d3TtMdaiNzKzxHBl
beMgPNSV9KCzaDF3fJ+pxQArwVwaA6X90mgSMejLbK70Ies+5q64oaipVhqx
QISfdFgQKr5s5aU5Z0rHS9nEybyDk5agyNqIiX7qMvMJ86IkE1sfWOq7pmRu
wRcctPADsrcY81VK2+FvBwc80KGke5oEptx7dih1kmmbSNEWjJLYU5aLgiXC
oyoYg1CsbcfHWvkqiLVNY8Ba3bmK71pZ4jIKumT/DhJ9sjMGbShmLA3BIz1X
cX3Zp3RV4GE1Y1YwBh3BGGbMLSeeI4IDJ4x1zJHv7i2WsY2b9lyTWlBM1XPB
r9X5EC2kvbXtloHLWGnMjAU+obJ8T4lasDSD5KD6jh+wzN/YeWmAGWgYYzCX
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
AdA+Jvgj0QIA

-->

</rfc>

