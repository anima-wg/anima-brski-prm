<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-13" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2024"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<?line 131?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
The approach defined here is agnostic to the enrollment protocol that connects the domain registrar to the domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<?line 139?>

<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated to a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing voucher-request and voucher-response artifacts as defined in <xref target="RFC8995"/>.
Vouchers are signed objects from the Manufacturer Authorized Signing Authority (MASA).
The MASA issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts including the voucher-request.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>

<t><list style="symbols">
  <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and the domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar.</t>
  <t>enables the usage of arbitrary transports between the pledge and the domain registrar via the Registrar-Agent; security is addressed at the application layer, and both IP-based and non-IP connectivity can be used between pledge and Registrar-Agent.</t>
  <t>allows the application of Registrar-Agent credentials to establish TLS connections to the domain registrar; these are different from the IDevID of the pledge.</t>
</list></t>

<t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.
For the interaction with the domain registrar, the Registrar-Agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.
To utilize the EST server endpoints on the domain registrar, the Registrar-Agent will act as client toward the registrar.</t>

<t>The Registrar-Agent also acts as a client when communicating with a pledge that is in responder mode.
Here, TLS with server-side, certificate-based authentication is only optionally supported.
If TLS is optionally used between the Registrar-Agent and the pledge, the Registrar-Agent needs to identify the pledge based on its product-serial-number rather than the hostname, as the latter is not set in an IDevID certificate.</t>

<t>BRSKI-PRM is designed to rely on object security to support also for alternative transports for which TLS may not be available, e.g., Bluetooth or NFC.
This is achieved through an additional signature wrapping of the exchanged data objects involving the Registrar-Agent for transport.</t>

<t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>

<t>There may be pledges that can support both modes, initiator and responder mode.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification Authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data.</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request.</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity, as defined in <xref target="RFC9483"/>.
Typically a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
  </dd>
  <dt>EE certificate:</dt>
  <dd>
    <t>Either IDevID certificate or LDevID certificate of the EE.</t>
  </dd>
  <dt>endpoint:</dt>
  <dd>
    <t>Term equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>mutual Transport Layer Security.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge Enroll-Request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain.</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge Voucher-Request is a request for a voucher sent to the domain registrar.
The PVR is signed by the Pledge.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar Enroll-Request is the CSR of a PER sent to the CA by the domain registrar (in its role as PKI RA).</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar Voucher-Request is a request for a voucher signed by the domain registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>

<dl>
  <dt>BASE64URL(OCTETS):</dt>
  <dd>
    <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
  <dt>UTF8(STRING):</dt>
  <dd>
    <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token "base64encodedvalue==" as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to the domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/>, the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server):</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and the registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
  <t>The security of communication between the Registrar-Agent and the pledge must not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
  <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
  <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher-request and voucher-response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new Agent-Proximity Assertion value {#agt_prx} is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>POI: provides data-origin authentication of a data object, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architecture</name>

<section anchor="overview"><name>Overview</name>

<t>For BRSKI with Pledge in Responder Mode (BRSKI-PRM), the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges_uc2"/> to address the requirements stated in <xref target="req-sol"/> above.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of a Registrar-Agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>

<t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>

<t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided.</t>
  <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="BRSKI-PRM architecture overview using Registrar-Agent" anchor="uc2figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 80,240 L 80,384" fill="none" stroke="black"/>
<path d="M 152,240 L 152,336" fill="none" stroke="black"/>
<path d="M 208,32 L 208,144" fill="none" stroke="black"/>
<path d="M 224,368 L 224,416" fill="none" stroke="black"/>
<path d="M 256,240 L 256,336" fill="none" stroke="black"/>
<path d="M 328,240 L 328,336" fill="none" stroke="black"/>
<path d="M 336,64 L 336,144" fill="none" stroke="black"/>
<path d="M 376,152 L 376,232" fill="none" stroke="black"/>
<path d="M 376,336 L 376,368" fill="none" stroke="black"/>
<path d="M 424,240 L 424,336" fill="none" stroke="black"/>
<path d="M 424,368 L 424,416" fill="none" stroke="black"/>
<path d="M 432,32 L 432,144" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 208,144 L 432,144" fill="none" stroke="black"/>
<path d="M 8,240 L 80,240" fill="none" stroke="black"/>
<path d="M 152,240 L 256,240" fill="none" stroke="black"/>
<path d="M 328,240 L 424,240" fill="none" stroke="black"/>
<path d="M 88,304 L 144,304" fill="none" stroke="black"/>
<path d="M 264,304 L 320,304" fill="none" stroke="black"/>
<path d="M 152,336 L 256,336" fill="none" stroke="black"/>
<path d="M 328,336 L 424,336" fill="none" stroke="black"/>
<path d="M 224,368 L 424,368" fill="none" stroke="black"/>
<path d="M 8,384 L 80,384" fill="none" stroke="black"/>
<path d="M 224,416 L 424,416" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
<polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
<polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
<polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
<polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
<polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="224" y="84">M</text>
<text x="280" y="84">anufacturer</text>
<text x="40" y="100">:</text>
<text x="224" y="100">A</text>
<text x="272" y="100">uthorized</text>
<text x="384" y="100">Ownership</text>
<text x="40" y="116">:</text>
<text x="224" y="116">S</text>
<text x="260" y="116">igning</text>
<text x="376" y="116">Tracker</text>
<text x="40" y="132">:</text>
<text x="224" y="132">A</text>
<text x="268" y="132">uthority</text>
<text x="40" y="148">:</text>
<text x="40" y="164">:</text>
<text x="40" y="180">:</text>
<text x="412" y="180">BRSKI-</text>
<text x="40" y="196">:</text>
<text x="404" y="196">MASA</text>
<text x="40" y="212">:</text>
<text x="248" y="212">...............................</text>
<text x="416" y="212">.........</text>
<text x="40" y="228">V</text>
<text x="128" y="228">.</text>
<text x="448" y="228">.</text>
<text x="128" y="244">.</text>
<text x="448" y="244">.</text>
<text x="128" y="260">.</text>
<text x="448" y="260">.</text>
<text x="44" y="276">Pledge</text>
<text x="116" y="276">BRSKI-</text>
<text x="204" y="276">Registrar-</text>
<text x="292" y="276">BRSKI-</text>
<text x="364" y="276">Domain</text>
<text x="448" y="276">.</text>
<text x="112" y="292">PRM</text>
<text x="184" y="292">Agent</text>
<text x="288" y="292">PRM</text>
<text x="376" y="292">Registrar</text>
<text x="448" y="292">.</text>
<text x="356" y="308">(PKI</text>
<text x="392" y="308">RA)</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="196" y="324">EE</text>
<text x="228" y="324">cert</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="448" y="340">.</text>
<text x="44" y="356">IDevID</text>
<text x="128" y="356">.</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="248" y="388">Key</text>
<text x="324" y="388">Infrastructure</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="260" y="404">(e.g.,</text>
<text x="304" y="404">PKI</text>
<text x="336" y="404">CA)</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="448" y="420">.</text>
<text x="288" y="436">.........................................</text>
<text x="260" y="452">Customer</text>
<text x="324" y="452">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>| (PKI RA)  |  .
|        |     .  |    EE cert |        |           |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t><xref target="uc2figure"/> shows the relations between the following main components:</t>

<t><list style="symbols">
  <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to the Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP in the context of this document.
Any other protocols (including HTTPS) can be used as long as they support the exchange of the necessary data objects.
This includes CoAP or protocol to be used over Bluetooth or NFC connections
A pledge acting as a server during bootstrapping leads to the following differences compared to BRSKI:  <list style="symbols">
      <t>The pledge is discovered by the Registrar-Agent as defined in {#discovery_uc2_ppa}.</t>
      <t>The pledge offers additional endpoints as defined in <xref target="pledge_ep"/>, so that the Registrar-Agent can request data required for bootstrapping the pledge.</t>
      <t>The pledge includes additional data in the PVR, which is provided by the Registrar-Agent in the voucher-request trigger as defined in <xref target="tpvr"/>.
This allows the registrar to identify, with which Registrar-Agent the pledge was in contact.</t>
      <t>The order of exchanges in the BRSKI-PRM call flow is different from those in BRSKI <xref target="RFC8995"/>, as the PVR and PER are collected simultaneously and provided to the registrar.
This enables bulk bootstrapping of several devices.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-Agent: Provides a store and forward communication path to exchange data objects between the pledge and the domain registrar.
The Registrar-Agent acts as a broker in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.  <list style="symbols">
      <t>The Registrar-Agent triggers one or more pledges to create bootstrapping artifacts such as the voucher-request and the Enroll-Request.
It can then perform a (bulk) bootstrapping based on the collected data.</t>
      <t>The Registrar-Agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, and IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.</t>
      <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
      <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on an LDevID, which is provided by the PKI responsible for the customer domain.</t>
      <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
      <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
    </list></t>
  <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
In contrast to <xref target="RFC8995"/>, a BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent.</t>
  <t>Vendor Services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA is able to support enrollment via Registrar-Agent without changes unless it checks the vouchers proximity indication, in which case it would need to be enhanced to support BRSKI-PRM to also accept the Agent-Proximity Assertion {#agt_prx}.</t>
</list></t>

</section>
<section anchor="arch_nomadic"><name>Nomadic Connectivity</name>

<t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the aforementioned building automation use case (<xref target="building-automation"/>).</t>

<figure title="Registrar-Agent nomadic connectivity example" anchor="uc3figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="456" viewBox="0 0 456 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 24,128 L 24,176" fill="none" stroke="black"/>
<path d="M 96,128 L 96,176" fill="none" stroke="black"/>
<path d="M 208,32 L 208,64" fill="none" stroke="black"/>
<path d="M 224,400 L 224,448" fill="none" stroke="black"/>
<path d="M 328,320 L 328,368" fill="none" stroke="black"/>
<path d="M 376,72 L 376,312" fill="none" stroke="black"/>
<path d="M 376,368 L 376,400" fill="none" stroke="black"/>
<path d="M 424,320 L 424,368" fill="none" stroke="black"/>
<path d="M 424,400 L 424,448" fill="none" stroke="black"/>
<path d="M 432,32 L 432,64" fill="none" stroke="black"/>
<path d="M 208,32 L 432,32" fill="none" stroke="black"/>
<path d="M 208,64 L 432,64" fill="none" stroke="black"/>
<path d="M 24,128 L 96,128" fill="none" stroke="black"/>
<path d="M 104,160 L 184,160" fill="none" stroke="black"/>
<path d="M 24,176 L 96,176" fill="none" stroke="black"/>
<path d="M 328,320 L 424,320" fill="none" stroke="black"/>
<path d="M 272,352 L 320,352" fill="none" stroke="black"/>
<path d="M 328,368 L 424,368" fill="none" stroke="black"/>
<path d="M 224,400 L 424,400" fill="none" stroke="black"/>
<path d="M 224,448 L 424,448" fill="none" stroke="black"/>
<polygon class="arrowhead" points="384,312 372,306.4 372,317.6" fill="black" transform="rotate(90,376,312)"/>
<polygon class="arrowhead" points="384,72 372,66.4 372,77.6" fill="black" transform="rotate(270,376,72)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(0,320,352)"/>
<polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
<polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
<polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
<g class="text">
<text x="56" y="52">.....</text>
<text x="100" y="52">Drop</text>
<text x="140" y="52">Ship</text>
<text x="184" y="52">.....</text>
<text x="244" y="52">Vendor</text>
<text x="308" y="52">Services</text>
<text x="40" y="68">:</text>
<text x="40" y="84">:</text>
<text x="164" y="100">........................................</text>
<text x="8" y="116">.</text>
<text x="40" y="116">v</text>
<text x="320" y="116">.</text>
<text x="8" y="132">.</text>
<text x="248" y="132">.-.-.-.-.-.-.-.</text>
<text x="320" y="132">.</text>
<text x="8" y="148">.</text>
<text x="192" y="148">:</text>
<text x="244" y="148">Registrar-</text>
<text x="304" y="148">:</text>
<text x="320" y="148">.</text>
<text x="8" y="164">.</text>
<text x="60" y="164">Pledge</text>
<text x="192" y="164">:</text>
<text x="224" y="164">Agent</text>
<text x="304" y="164">:</text>
<text x="320" y="164">.</text>
<text x="8" y="180">.</text>
<text x="116" y="180">L2</text>
<text x="140" y="180">or</text>
<text x="164" y="180">L3</text>
<text x="248" y="180">:-.-.-.-.-.-.-:</text>
<text x="320" y="180">.</text>
<text x="8" y="196">.</text>
<text x="140" y="196">connectivity</text>
<text x="216" y="196">^</text>
<text x="320" y="196">.</text>
<text x="164" y="212">..........................!.............</text>
<text x="52" y="228">Pledge</text>
<text x="132" y="228">Installation</text>
<text x="216" y="228">!</text>
<text x="60" y="244">Location</text>
<text x="216" y="244">!</text>
<text x="256" y="244">Nomadic</text>
<text x="216" y="260">!</text>
<text x="276" y="260">connectivity</text>
<text x="216" y="276">!</text>
<text x="248" y="292">...........!...................</text>
<text x="416" y="292">.........</text>
<text x="128" y="308">.</text>
<text x="216" y="308">v</text>
<text x="448" y="308">.</text>
<text x="128" y="324">.</text>
<text x="208" y="324">.-.-.-.-.-.-.-.</text>
<text x="448" y="324">.</text>
<text x="128" y="340">.</text>
<text x="152" y="340">:</text>
<text x="204" y="340">Registrar-</text>
<text x="264" y="340">:</text>
<text x="364" y="340">Domain</text>
<text x="448" y="340">.</text>
<text x="128" y="356">.</text>
<text x="152" y="356">:</text>
<text x="184" y="356">Agent</text>
<text x="264" y="356">:</text>
<text x="376" y="356">Registrar</text>
<text x="448" y="356">.</text>
<text x="128" y="372">.</text>
<text x="208" y="372">:-.-.-.-.-.-.-:</text>
<text x="448" y="372">.</text>
<text x="128" y="388">.</text>
<text x="448" y="388">.</text>
<text x="128" y="404">.</text>
<text x="448" y="404">.</text>
<text x="128" y="420">.</text>
<text x="248" y="420">Key</text>
<text x="324" y="420">Infrastructure</text>
<text x="448" y="420">.</text>
<text x="128" y="436">.</text>
<text x="260" y="436">(e.g.,</text>
<text x="304" y="436">PKI</text>
<text x="336" y="436">CA)</text>
<text x="448" y="436">.</text>
<text x="128" y="452">.</text>
<text x="448" y="452">.</text>
<text x="288" y="468">.........................................</text>
<text x="260" y="484">Customer</text>
<text x="324" y="484">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                         ^
........................................      |
.   v                                  .      |
. +--------+           .-.-.-.-.-.-.-. .      |
. |        |           : Registrar-  : .      |
. | Pledge |<--------->: Agent       : .      |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .      |
.          connectivity   ^            .      |
..........................!.............      |
   Pledge Installation    !                   |
   Location               ! Nomadic           |
                          ! connectivity      |
                          !                   |
               ...........!...................|.........
               .          v                   v        .
               .  .-.-.-.-.-.-.-.       +-----------+  .
               .  : Registrar-  :       | Domain    |  .
               .  : Agent       :<----->| Registrar |  .
               .  :-.-.-.-.-.-.-:       +-----+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>

<t><list style="numbers">
  <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
  <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>.</t>
  <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
  <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
  <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
</list></t>

<t>Variations of this setup include cases where the Registrar-Agent uses for example WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>

</section>
<section anchor="co-located-registrar-agent-and-domain-registrar"><name>Co-located Registrar-Agent and Domain Registrar</name>

<t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously request enrollment from a domain registrar, which may result in undesirable communications pattern and possible overload of a domain registrar.</t>

<figure title="Registrar-Agent integrated into Domain Registrar example" anchor="uc4figure"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="472" viewBox="0 0 472 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,160 L 8,208" fill="none" stroke="black"/>
<path d="M 80,160 L 80,208" fill="none" stroke="black"/>
<path d="M 200,32 L 200,64" fill="none" stroke="black"/>
<path d="M 208,144 L 208,224" fill="none" stroke="black"/>
<path d="M 216,256 L 216,288" fill="none" stroke="black"/>
<path d="M 368,72 L 368,136" fill="none" stroke="black"/>
<path d="M 368,224 L 368,256" fill="none" stroke="black"/>
<path d="M 416,144 L 416,224" fill="none" stroke="black"/>
<path d="M 416,256 L 416,288" fill="none" stroke="black"/>
<path d="M 424,32 L 424,64" fill="none" stroke="black"/>
<path d="M 200,32 L 424,32" fill="none" stroke="black"/>
<path d="M 200,64 L 424,64" fill="none" stroke="black"/>
<path d="M 208,144 L 416,144" fill="none" stroke="black"/>
<path d="M 8,160 L 80,160" fill="none" stroke="black"/>
<path d="M 88,192 L 200,192" fill="none" stroke="black"/>
<path d="M 8,208 L 80,208" fill="none" stroke="black"/>
<path d="M 208,224 L 416,224" fill="none" stroke="black"/>
<path d="M 216,256 L 416,256" fill="none" stroke="black"/>
<path d="M 216,288 L 416,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
<polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
<polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
<polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
<g class="text">
<text x="48" y="52">.....</text>
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="176" y="52">.....</text>
<text x="236" y="52">Vendor</text>
<text x="296" y="52">Service</text>
<text x="32" y="68">:</text>
<text x="32" y="84">:</text>
<text x="32" y="100">:</text>
<text x="32" y="116">:</text>
<text x="240" y="116">...............................</text>
<text x="408" y="116">.........</text>
<text x="32" y="132">:</text>
<text x="120" y="132">.</text>
<text x="440" y="132">.</text>
<text x="32" y="148">v</text>
<text x="120" y="148">.</text>
<text x="440" y="148">.</text>
<text x="120" y="164">.</text>
<text x="268" y="164">..............</text>
<text x="440" y="164">.</text>
<text x="120" y="180">.</text>
<text x="216" y="180">.</text>
<text x="268" y="180">Registrar-</text>
<text x="320" y="180">.</text>
<text x="356" y="180">Domain</text>
<text x="440" y="180">.</text>
<text x="44" y="196">Pledge</text>
<text x="216" y="196">.</text>
<text x="248" y="196">Agent</text>
<text x="320" y="196">.</text>
<text x="368" y="196">Registrar</text>
<text x="440" y="196">.</text>
<text x="100" y="212">L2</text>
<text x="124" y="212">or</text>
<text x="148" y="212">L3</text>
<text x="268" y="212">..............</text>
<text x="440" y="212">.</text>
<text x="140" y="228">connectivity</text>
<text x="440" y="228">.</text>
<text x="120" y="244">.</text>
<text x="440" y="244">.</text>
<text x="120" y="260">.</text>
<text x="440" y="260">.</text>
<text x="120" y="276">.</text>
<text x="240" y="276">Key</text>
<text x="316" y="276">Infrastructure</text>
<text x="440" y="276">.</text>
<text x="120" y="292">.</text>
<text x="440" y="292">.</text>
<text x="280" y="308">.........................................</text>
<text x="252" y="324">Customer</text>
<text x="316" y="324">Domain</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         |
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    .          |..............           |  .   
 |        |    .          |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .   
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork></artset></figure>

<t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of standalone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement in the PVR and in the voucher, that the registrar certificate was provided via the Registrar-Agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
Agent-proximity is therefore a different assertion than "proximity", which is defined in <xref section="4" sectionFormat="of" target="RFC8366"/>.
Agent-proximity is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This assertion can be verified by the registrar and also by the MASA during the voucher-request processing.</t>

<t>In BRSKI, the pledge verifies POP of the registrar via the TLS handshake and pins that public key as the "proximity-registrar-cert" into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS connection is considered provisional until the pledge receives the voucher.</t>

<t>In contrast, in BRSKI-PRM, the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the registrar certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.
In a similar fashion, the pledge <bcp14>MUST</bcp14> accept the Registrar-Agent EE certificate provisionally.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>

<t>For agent-proximity, the EE certificate of the Registrar-Agent <bcp14>MUST</bcp14> be an LDevID certificate signed by the domain owner.
Akin to the proximity assertion in the BRSKI case, the agent-proximity provides pledge proximity evidence to the MASA.
But additionally, agent-proximity allows the domain registrar to be sure that the PVR collected by the Registrar-Agent was in fact collected by the Registrar-Agent, to which the registrar is connected to.</t>

<t>The provisioning of the Registrar-Agent LDevID certificate is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived Registrar-Agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

</section>
</section>
<section anchor="system-components"><name>System Components</name>

<section anchor="domain-registrar"><name>Domain Registrar</name>

<t>In BRSKI-PRM, the domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
These endpoints accommodate for the signature-wrapped objects used by BRSKI-PRM for the Pledge Enroll-Request (PER) and the provisioning of CA certificates.</t>

<texttable title="Additional Well-Known Endpoints on a BRSKI-PRM Registrar" anchor="registrar_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to Registrar</c>
      <c><xref target="per"/></c>
      <c>wrappedcacerts</c>
      <c>Request CA Certificates</c>
      <c><xref target="req_cacerts"/></c>
</texttable>

<t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the Pledge Voucher-Request.
This behavior is retained in BRSKI-PRM.</t>

<t>The domain registrar <bcp14>MUST</bcp14> possess and trust the IDevID (root or issuing) CA certificate 
of the pledge vendor/manufacturer.</t>

<t>Further, the domain registrar <bcp14>MUST</bcp14> have its own EE credentials.</t>

<section anchor="domain-registrar-with-combined-functionality"><name>Domain Registrar with Combined Functionality</name>

<t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credential for client authentication during the TLS session establishment and switch switch the operational mode from BRSKI to BRSKI-PRM.</t>

<t>This may be supported by a specific naming in the SAN (subject alternative name) component of the EE certificate of the Registrar-Agent.</t>

<t>Alternatively, this may be supported by using an LDevID certificate signed by the domain owner for the client authentication of the Registrar-Agent.
Using an LDevID certificate also allows the registrar to verify that a Registrar-Agent is authorized to perform the bootstrapping of a pledge.
See also agent-proximity assertion in <xref target="agt_prx"/>.</t>

<t>Using an LDevID certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the IDevID credential of the pledge is used to perform TLS client authentication.</t>

</section>
</section>
<section anchor="registrar-agent"><name>Registrar-Agent</name>

<t>The Registrar-Agent is a new component in BRSKI-PRM that provides a secure message passing service between pledges in responder mode and the domain registrar.</t>

<t>It requires the EE certificate of the domain registrar for TLS server authentication when establishing a TLS session with the domain registrar and to provide the registrar EE certificate to the pledge for creating the Pledge Voucher-Request (PVR).</t>

<t>The Registrar-Agent uses its own EE certificate for TLS client authentication when establishing a TLS session with the domain registrar and for signing agent-signed data.
This EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="tpvr"/>.</t>

<t>Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> has a similar requirement.
In BRSKI-PRM, the SKID is used in favor of providing the complete EE certificate of the Registrar-Agent to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SKID in favor of a certificate fingerprint to avoid additional computations.</t>

<t>In addition to the EE certificates, the Registrar-Agent is provided with the product serial number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product serial number would be initialized from the 12N B005 Product Serial Number.</t>

<t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before interaction with a pledge:</t>

<t><list style="symbols">
  <t>Domain registrar EE certificate: certificate of the domain registrar to be provided to the pledge.</t>
  <t>Registrar-Agent EE certificate and corresponding private key: own operational key pair to sign agent-signed-data.</t>
  <t>Serial number(s): product serial number(s) of pledge(s) to be bootstrapped for discovery.</t>
</list></t>

<t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>

<t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge vendor/manufacturer to validate the IDevID certificate on returned PVR or in case of TLS usage for pledge communication.
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>

<section anchor="discovery_uc2_reg"><name>Discovery of the Registrar</name>

<t>As a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar, a separate discovery of the registrar is likely not needed as Registrar-Agent and registrar are domain components and have a trust relation.
Moreover, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.
Moreover, as the standard discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and the <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support  of registrars with an enhanced feature set (like the support of BRSKI-PRM), this standard discovery is not applicable.</t>

<t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
This may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of the Pledge</name>

<t>The discovery of the pledge by Registrar-Agent in the context of this document describes the minimum discovery approach to be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS may be provided in <xref target="I-D.eckert-anima-brski-discovery"/>.</t>

<t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref target="RFC6762"/> Section 9 provides support for conflict resolution in situations when an DNS-SD with mDNS responder receives a mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>

<t>The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".
The product-serial-number composition is manufacturer dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance. To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>

<t>In the absence of a more general discovery as defined in <xref target="I-D.eckert-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14>  use</t>

<t><list style="symbols">
  <t>"&lt;product-serial-number&gt;._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer support this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.richardson-emu-eap-onboarding"/>.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
<section anchor="pledge_ep"><name>Pledge in Responder Mode</name>

<t>The pledge is triggered by the Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>

<t>To enable interaction as responder with the Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="pledge_ep_table"/> within the BRSKI-defined "/.well-known/brski/" URI path.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>

<texttable title="Well-Known Endpoints on a Pledge in Responder Mode" anchor="pledge_ep_table">
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Exchange and Artifacts</ttcol>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c><xref target="tpvr"/></c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c><xref target="tper"/></c>
      <c>svr</c>
      <c>Supply Voucher to Pledge</c>
      <c><xref target="voucher"/></c>
      <c>scac</c>
      <c>Supply CA Certificates to Pledge</c>
      <c><xref target="cacerts"/></c>
      <c>ser</c>
      <c>Supply Enroll-Response to Pledge</c>
      <c><xref target="enroll_response"/></c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c><xref target="query"/></c>
</texttable>

<t><xref section="7.2" sectionFormat="of" target="RFC9110"/> makes the Host header field mandatory, so it will always be present.
The pledge <bcp14>MUST</bcp14> respond to all queries regardless of the Host header field provided by the client.</t>

<t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI "http://pledge.example.com/.well-known/brski/tpvr", it sets the Host header field to "pledge.example.com" and the absolute path "/.well-known/brski/tpbr".
In practice, however, the pledge often is only known by its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the IDevID of the pledge.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>

<section anchor="pledge-with-combined-functionality"><name>Pledge with Combined Functionality</name>

<t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>

<t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>

<t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Exchanges and Artifacts</name>

<t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>

<t>Transport independence is realized through data objects that are not bound to specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
Therefore, authenticated self-contained artifacts (e.g., JWS-signed JSON structures or COSE-signed CBOR structures) are used for the data exchanges between the pledge and the registrar via the Registrar-Agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1856" width="576" viewBox="0 0 576 1856" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,88 L 16,192" fill="none" stroke="black"/>
<path d="M 16,256 L 16,320" fill="none" stroke="black"/>
<path d="M 16,384 L 16,448" fill="none" stroke="black"/>
<path d="M 16,512 L 16,736" fill="none" stroke="black"/>
<path d="M 16,800 L 16,912" fill="none" stroke="black"/>
<path d="M 16,976 L 16,1040" fill="none" stroke="black"/>
<path d="M 16,1104 L 16,1168" fill="none" stroke="black"/>
<path d="M 16,1232 L 16,1280" fill="none" stroke="black"/>
<path d="M 16,1344 L 16,1408" fill="none" stroke="black"/>
<path d="M 16,1472 L 16,1584" fill="none" stroke="black"/>
<path d="M 16,1648 L 16,1696" fill="none" stroke="black"/>
<path d="M 16,1760 L 16,1824" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,88 L 168,192" fill="none" stroke="black"/>
<path d="M 168,256 L 168,320" fill="none" stroke="black"/>
<path d="M 168,384 L 168,448" fill="none" stroke="black"/>
<path d="M 168,512 L 168,736" fill="none" stroke="black"/>
<path d="M 168,800 L 168,912" fill="none" stroke="black"/>
<path d="M 168,976 L 168,1040" fill="none" stroke="black"/>
<path d="M 168,1104 L 168,1168" fill="none" stroke="black"/>
<path d="M 168,1232 L 168,1280" fill="none" stroke="black"/>
<path d="M 168,1344 L 168,1408" fill="none" stroke="black"/>
<path d="M 168,1472 L 168,1584" fill="none" stroke="black"/>
<path d="M 168,1648 L 168,1696" fill="none" stroke="black"/>
<path d="M 168,1760 L 168,1824" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,88 L 312,192" fill="none" stroke="black"/>
<path d="M 312,256 L 312,320" fill="none" stroke="black"/>
<path d="M 312,384 L 312,448" fill="none" stroke="black"/>
<path d="M 312,512 L 312,528" fill="none" stroke="black"/>
<path d="M 312,624 L 312,736" fill="none" stroke="black"/>
<path d="M 312,800 L 312,912" fill="none" stroke="black"/>
<path d="M 312,976 L 312,1040" fill="none" stroke="black"/>
<path d="M 312,1104 L 312,1168" fill="none" stroke="black"/>
<path d="M 312,1232 L 312,1280" fill="none" stroke="black"/>
<path d="M 312,1344 L 312,1408" fill="none" stroke="black"/>
<path d="M 312,1472 L 312,1552" fill="none" stroke="black"/>
<path d="M 312,1648 L 312,1696" fill="none" stroke="black"/>
<path d="M 312,1760 L 312,1824" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,88 L 456,192" fill="none" stroke="black"/>
<path d="M 456,256 L 456,320" fill="none" stroke="black"/>
<path d="M 456,384 L 456,448" fill="none" stroke="black"/>
<path d="M 456,512 L 456,632" fill="none" stroke="black"/>
<path d="M 456,720 L 456,736" fill="none" stroke="black"/>
<path d="M 456,800 L 456,912" fill="none" stroke="black"/>
<path d="M 456,976 L 456,1040" fill="none" stroke="black"/>
<path d="M 456,1104 L 456,1168" fill="none" stroke="black"/>
<path d="M 456,1232 L 456,1280" fill="none" stroke="black"/>
<path d="M 456,1344 L 456,1408" fill="none" stroke="black"/>
<path d="M 456,1472 L 456,1512" fill="none" stroke="black"/>
<path d="M 456,1568 L 456,1584" fill="none" stroke="black"/>
<path d="M 456,1648 L 456,1696" fill="none" stroke="black"/>
<path d="M 456,1760 L 456,1824" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,88 L 560,192" fill="none" stroke="black"/>
<path d="M 560,256 L 560,320" fill="none" stroke="black"/>
<path d="M 560,384 L 560,448" fill="none" stroke="black"/>
<path d="M 560,512 L 560,656" fill="none" stroke="black"/>
<path d="M 560,704 L 560,736" fill="none" stroke="black"/>
<path d="M 560,800 L 560,912" fill="none" stroke="black"/>
<path d="M 560,976 L 560,1040" fill="none" stroke="black"/>
<path d="M 560,1104 L 560,1168" fill="none" stroke="black"/>
<path d="M 560,1232 L 560,1280" fill="none" stroke="black"/>
<path d="M 560,1344 L 560,1408" fill="none" stroke="black"/>
<path d="M 560,1472 L 560,1584" fill="none" stroke="black"/>
<path d="M 560,1648 L 560,1696" fill="none" stroke="black"/>
<path d="M 560,1760 L 560,1824" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,160 L 160,160" fill="none" stroke="black"/>
<path d="M 24,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,272 L 56,272" fill="none" stroke="black"/>
<path d="M 128,272 L 160,272" fill="none" stroke="black"/>
<path d="M 24,288 L 72,288" fill="none" stroke="black"/>
<path d="M 112,288 L 160,288" fill="none" stroke="black"/>
<path d="M 24,304 L 80,304" fill="none" stroke="black"/>
<path d="M 112,304 L 160,304" fill="none" stroke="black"/>
<path d="M 24,400 L 56,400" fill="none" stroke="black"/>
<path d="M 128,400 L 160,400" fill="none" stroke="black"/>
<path d="M 24,416 L 72,416" fill="none" stroke="black"/>
<path d="M 112,416 L 160,416" fill="none" stroke="black"/>
<path d="M 24,432 L 80,432" fill="none" stroke="black"/>
<path d="M 112,432 L 160,432" fill="none" stroke="black"/>
<path d="M 176,528 L 216,528" fill="none" stroke="black"/>
<path d="M 256,528 L 304,528" fill="none" stroke="black"/>
<path d="M 176,576 L 224,576" fill="none" stroke="black"/>
<path d="M 256,576 L 304,576" fill="none" stroke="black"/>
<path d="M 320,640 L 416,640" fill="none" stroke="black"/>
<path d="M 456,640 L 552,640" fill="none" stroke="black"/>
<path d="M 320,656 L 424,656" fill="none" stroke="black"/>
<path d="M 456,656 L 552,656" fill="none" stroke="black"/>
<path d="M 320,704 L 408,704" fill="none" stroke="black"/>
<path d="M 472,704 L 552,704" fill="none" stroke="black"/>
<path d="M 176,720 L 208,720" fill="none" stroke="black"/>
<path d="M 272,720 L 304,720" fill="none" stroke="black"/>
<path d="M 176,816 L 216,816" fill="none" stroke="black"/>
<path d="M 256,816 L 304,816" fill="none" stroke="black"/>
<path d="M 176,832 L 224,832" fill="none" stroke="black"/>
<path d="M 256,832 L 304,832" fill="none" stroke="black"/>
<path d="M 320,848 L 360,848" fill="none" stroke="black"/>
<path d="M 400,848 L 448,848" fill="none" stroke="black"/>
<path d="M 320,864 L 368,864" fill="none" stroke="black"/>
<path d="M 400,864 L 448,864" fill="none" stroke="black"/>
<path d="M 320,880 L 336,880" fill="none" stroke="black"/>
<path d="M 432,880 L 448,880" fill="none" stroke="black"/>
<path d="M 176,896 L 192,896" fill="none" stroke="black"/>
<path d="M 288,896 L 304,896" fill="none" stroke="black"/>
<path d="M 176,992 L 216,992" fill="none" stroke="black"/>
<path d="M 256,992 L 304,992" fill="none" stroke="black"/>
<path d="M 176,1008 L 192,1008" fill="none" stroke="black"/>
<path d="M 280,1008 L 304,1008" fill="none" stroke="black"/>
<path d="M 176,1024 L 192,1024" fill="none" stroke="black"/>
<path d="M 288,1024 L 304,1024" fill="none" stroke="black"/>
<path d="M 24,1120 L 56,1120" fill="none" stroke="black"/>
<path d="M 128,1120 L 160,1120" fill="none" stroke="black"/>
<path d="M 24,1136 L 64,1136" fill="none" stroke="black"/>
<path d="M 128,1136 L 160,1136" fill="none" stroke="black"/>
<path d="M 24,1152 L 64,1152" fill="none" stroke="black"/>
<path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
<path d="M 24,1248 L 56,1248" fill="none" stroke="black"/>
<path d="M 128,1248 L 160,1248" fill="none" stroke="black"/>
<path d="M 24,1264 L 64,1264" fill="none" stroke="black"/>
<path d="M 128,1264 L 160,1264" fill="none" stroke="black"/>
<path d="M 24,1360 L 56,1360" fill="none" stroke="black"/>
<path d="M 128,1360 L 160,1360" fill="none" stroke="black"/>
<path d="M 24,1376 L 48,1376" fill="none" stroke="black"/>
<path d="M 144,1376 L 160,1376" fill="none" stroke="black"/>
<path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
<path d="M 120,1392 L 160,1392" fill="none" stroke="black"/>
<path d="M 176,1488 L 216,1488" fill="none" stroke="black"/>
<path d="M 256,1488 L 304,1488" fill="none" stroke="black"/>
<path d="M 176,1504 L 208,1504" fill="none" stroke="black"/>
<path d="M 272,1504 L 304,1504" fill="none" stroke="black"/>
<path d="M 320,1520 L 416,1520" fill="none" stroke="black"/>
<path d="M 456,1520 L 552,1520" fill="none" stroke="black"/>
<path d="M 320,1536 L 352,1536" fill="none" stroke="black"/>
<path d="M 520,1536 L 552,1536" fill="none" stroke="black"/>
<path d="M 320,1552 L 368,1552" fill="none" stroke="black"/>
<path d="M 504,1552 L 552,1552" fill="none" stroke="black"/>
<path d="M 176,1664 L 216,1664" fill="none" stroke="black"/>
<path d="M 256,1664 L 304,1664" fill="none" stroke="black"/>
<path d="M 176,1680 L 208,1680" fill="none" stroke="black"/>
<path d="M 272,1680 L 304,1680" fill="none" stroke="black"/>
<path d="M 24,1776 L 56,1776" fill="none" stroke="black"/>
<path d="M 128,1776 L 160,1776" fill="none" stroke="black"/>
<path d="M 24,1792 L 64,1792" fill="none" stroke="black"/>
<path d="M 128,1792 L 160,1792" fill="none" stroke="black"/>
<path d="M 24,1808 L 64,1808" fill="none" stroke="black"/>
<path d="M 128,1808 L 160,1808" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,1536 548,1530.4 548,1541.6" fill="black" transform="rotate(0,552,1536)"/>
<polygon class="arrowhead" points="560,1520 548,1514.4 548,1525.6" fill="black" transform="rotate(0,552,1520)"/>
<polygon class="arrowhead" points="560,656 548,650.4 548,661.6" fill="black" transform="rotate(0,552,656)"/>
<polygon class="arrowhead" points="560,640 548,634.4 548,645.6" fill="black" transform="rotate(0,552,640)"/>
<polygon class="arrowhead" points="456,864 444,858.4 444,869.6" fill="black" transform="rotate(0,448,864)"/>
<polygon class="arrowhead" points="456,848 444,842.4 444,853.6" fill="black" transform="rotate(0,448,848)"/>
<polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
<polygon class="arrowhead" points="328,1520 316,1514.4 316,1525.6" fill="black" transform="rotate(180,320,1520)"/>
<polygon class="arrowhead" points="328,880 316,874.4 316,885.6" fill="black" transform="rotate(180,320,880)"/>
<polygon class="arrowhead" points="328,848 316,842.4 316,853.6" fill="black" transform="rotate(180,320,848)"/>
<polygon class="arrowhead" points="328,704 316,698.4 316,709.6" fill="black" transform="rotate(180,320,704)"/>
<polygon class="arrowhead" points="328,640 316,634.4 316,645.6" fill="black" transform="rotate(180,320,640)"/>
<polygon class="arrowhead" points="312,1680 300,1674.4 300,1685.6" fill="black" transform="rotate(0,304,1680)"/>
<polygon class="arrowhead" points="312,1664 300,1658.4 300,1669.6" fill="black" transform="rotate(0,304,1664)"/>
<polygon class="arrowhead" points="312,1504 300,1498.4 300,1509.6" fill="black" transform="rotate(0,304,1504)"/>
<polygon class="arrowhead" points="312,1488 300,1482.4 300,1493.6" fill="black" transform="rotate(0,304,1488)"/>
<polygon class="arrowhead" points="312,1008 300,1002.4 300,1013.6" fill="black" transform="rotate(0,304,1008)"/>
<polygon class="arrowhead" points="312,992 300,986.4 300,997.6" fill="black" transform="rotate(0,304,992)"/>
<polygon class="arrowhead" points="312,832 300,826.4 300,837.6" fill="black" transform="rotate(0,304,832)"/>
<polygon class="arrowhead" points="312,816 300,810.4 300,821.6" fill="black" transform="rotate(0,304,816)"/>
<polygon class="arrowhead" points="312,576 300,570.4 300,581.6" fill="black" transform="rotate(0,304,576)"/>
<polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
<polygon class="arrowhead" points="184,1664 172,1658.4 172,1669.6" fill="black" transform="rotate(180,176,1664)"/>
<polygon class="arrowhead" points="184,1488 172,1482.4 172,1493.6" fill="black" transform="rotate(180,176,1488)"/>
<polygon class="arrowhead" points="184,1024 172,1018.4 172,1029.6" fill="black" transform="rotate(180,176,1024)"/>
<polygon class="arrowhead" points="184,992 172,986.4 172,997.6" fill="black" transform="rotate(180,176,992)"/>
<polygon class="arrowhead" points="184,896 172,890.4 172,901.6" fill="black" transform="rotate(180,176,896)"/>
<polygon class="arrowhead" points="184,816 172,810.4 172,821.6" fill="black" transform="rotate(180,176,816)"/>
<polygon class="arrowhead" points="184,720 172,714.4 172,725.6" fill="black" transform="rotate(180,176,720)"/>
<polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
<polygon class="arrowhead" points="168,1808 156,1802.4 156,1813.6" fill="black" transform="rotate(0,160,1808)"/>
<polygon class="arrowhead" points="168,1776 156,1770.4 156,1781.6" fill="black" transform="rotate(0,160,1776)"/>
<polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
<polygon class="arrowhead" points="168,1360 156,1354.4 156,1365.6" fill="black" transform="rotate(0,160,1360)"/>
<polygon class="arrowhead" points="168,1248 156,1242.4 156,1253.6" fill="black" transform="rotate(0,160,1248)"/>
<polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
<polygon class="arrowhead" points="168,1120 156,1114.4 156,1125.6" fill="black" transform="rotate(0,160,1120)"/>
<polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
<polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
<polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
<polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,1792 20,1786.4 20,1797.6" fill="black" transform="rotate(180,24,1792)"/>
<polygon class="arrowhead" points="32,1776 20,1770.4 20,1781.6" fill="black" transform="rotate(180,24,1776)"/>
<polygon class="arrowhead" points="32,1376 20,1370.4 20,1381.6" fill="black" transform="rotate(180,24,1376)"/>
<polygon class="arrowhead" points="32,1360 20,1354.4 20,1365.6" fill="black" transform="rotate(180,24,1360)"/>
<polygon class="arrowhead" points="32,1264 20,1258.4 20,1269.6" fill="black" transform="rotate(180,24,1264)"/>
<polygon class="arrowhead" points="32,1248 20,1242.4 20,1253.6" fill="black" transform="rotate(180,24,1248)"/>
<polygon class="arrowhead" points="32,1136 20,1130.4 20,1141.6" fill="black" transform="rotate(180,24,1136)"/>
<polygon class="arrowhead" points="32,1120 20,1114.4 20,1125.6" fill="black" transform="rotate(180,24,1120)"/>
<polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
<polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
<polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
<polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
<polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="516" y="100">Internet</text>
<text x="92" y="116">discover</text>
<text x="92" y="132">pledge</text>
<text x="68" y="148">mDNS</text>
<text x="112" y="148">query</text>
<text x="16" y="212">~</text>
<text x="168" y="212">~</text>
<text x="312" y="212">~</text>
<text x="456" y="212">~</text>
<text x="560" y="212">~</text>
<text x="16" y="228">(1)</text>
<text x="64" y="228">Trigger</text>
<text x="124" y="228">Pledge</text>
<text x="216" y="228">Voucher-Request</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
<text x="76" y="276">opt.</text>
<text x="112" y="276">TLS</text>
<text x="92" y="292">tPVR</text>
<text x="96" y="308">PVR</text>
<text x="16" y="340">~</text>
<text x="168" y="340">~</text>
<text x="312" y="340">~</text>
<text x="456" y="340">~</text>
<text x="560" y="340">~</text>
<text x="16" y="356">(2)</text>
<text x="64" y="356">Trigger</text>
<text x="124" y="356">Pledge</text>
<text x="212" y="356">Enroll-Request</text>
<text x="16" y="372">~</text>
<text x="168" y="372">~</text>
<text x="312" y="372">~</text>
<text x="456" y="372">~</text>
<text x="560" y="372">~</text>
<text x="76" y="404">opt.</text>
<text x="112" y="404">TLS</text>
<text x="92" y="420">tPER</text>
<text x="96" y="436">PER</text>
<text x="16" y="468">~</text>
<text x="168" y="468">~</text>
<text x="312" y="468">~</text>
<text x="456" y="468">~</text>
<text x="560" y="468">~</text>
<text x="16" y="484">(3)</text>
<text x="60" y="484">Supply</text>
<text x="104" y="484">PVR</text>
<text x="132" y="484">to</text>
<text x="184" y="484">Registrar</text>
<text x="268" y="484">(including</text>
<text x="344" y="484">backend</text>
<text x="428" y="484">interaction)</text>
<text x="16" y="500">~</text>
<text x="168" y="500">~</text>
<text x="312" y="500">~</text>
<text x="456" y="500">~</text>
<text x="560" y="500">~</text>
<text x="236" y="532">mTLS</text>
<text x="308" y="548">[Registrar-Agent</text>
<text x="308" y="564">authenticated&amp;authorized?]</text>
<text x="240" y="580">PVR</text>
<text x="312" y="580">|</text>
<text x="280" y="596">[accept</text>
<text x="348" y="596">device?]</text>
<text x="284" y="612">[contact</text>
<text x="352" y="612">vendor]</text>
<text x="436" y="644">mTLS</text>
<text x="440" y="660">RVR</text>
<text x="460" y="676">[extract</text>
<text x="536" y="676">DomainID]</text>
<text x="456" y="692">[update</text>
<text x="512" y="692">audit</text>
<text x="556" y="692">log]</text>
<text x="440" y="708">Voucher</text>
<text x="240" y="724">Voucher</text>
<text x="16" y="756">~</text>
<text x="168" y="756">~</text>
<text x="312" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="16" y="772">(4)</text>
<text x="60" y="772">Supply</text>
<text x="104" y="772">PER</text>
<text x="132" y="772">to</text>
<text x="184" y="772">Registrar</text>
<text x="268" y="772">(including</text>
<text x="344" y="772">backend</text>
<text x="428" y="772">interaction)</text>
<text x="16" y="788">~</text>
<text x="168" y="788">~</text>
<text x="312" y="788">~</text>
<text x="456" y="788">~</text>
<text x="560" y="788">~</text>
<text x="236" y="820">mTLS</text>
<text x="240" y="836">PER</text>
<text x="380" y="852">mTLS</text>
<text x="384" y="868">RER</text>
<text x="384" y="884">Enroll-Resp</text>
<text x="240" y="900">Enroll-Resp</text>
<text x="16" y="932">~</text>
<text x="168" y="932">~</text>
<text x="312" y="932">~</text>
<text x="456" y="932">~</text>
<text x="560" y="932">~</text>
<text x="16" y="948">(5)</text>
<text x="64" y="948">Request</text>
<text x="108" y="948">CA</text>
<text x="172" y="948">Certificates</text>
<text x="16" y="964">~</text>
<text x="168" y="964">~</text>
<text x="312" y="964">~</text>
<text x="456" y="964">~</text>
<text x="560" y="964">~</text>
<text x="236" y="996">mTLS</text>
<text x="236" y="1012">cACert-Req</text>
<text x="240" y="1028">cACert-Resp</text>
<text x="16" y="1060">~</text>
<text x="168" y="1060">~</text>
<text x="312" y="1060">~</text>
<text x="456" y="1060">~</text>
<text x="560" y="1060">~</text>
<text x="16" y="1076">(6)</text>
<text x="60" y="1076">Supply</text>
<text x="120" y="1076">Voucher</text>
<text x="164" y="1076">to</text>
<text x="204" y="1076">Pledge</text>
<text x="16" y="1092">~</text>
<text x="168" y="1092">~</text>
<text x="312" y="1092">~</text>
<text x="456" y="1092">~</text>
<text x="560" y="1092">~</text>
<text x="76" y="1124">opt.</text>
<text x="112" y="1124">TLS</text>
<text x="96" y="1140">Voucher</text>
<text x="96" y="1156">vStatus</text>
<text x="16" y="1188">~</text>
<text x="168" y="1188">~</text>
<text x="312" y="1188">~</text>
<text x="456" y="1188">~</text>
<text x="560" y="1188">~</text>
<text x="16" y="1204">(7)</text>
<text x="60" y="1204">Supply</text>
<text x="100" y="1204">CA</text>
<text x="164" y="1204">Certificates</text>
<text x="228" y="1204">to</text>
<text x="268" y="1204">Pledge</text>
<text x="16" y="1220">~</text>
<text x="168" y="1220">~</text>
<text x="312" y="1220">~</text>
<text x="456" y="1220">~</text>
<text x="560" y="1220">~</text>
<text x="76" y="1252">opt.</text>
<text x="112" y="1252">TLS</text>
<text x="96" y="1268">cACerts</text>
<text x="16" y="1300">~</text>
<text x="168" y="1300">~</text>
<text x="312" y="1300">~</text>
<text x="456" y="1300">~</text>
<text x="560" y="1300">~</text>
<text x="16" y="1316">(8)</text>
<text x="60" y="1316">Supply</text>
<text x="152" y="1316">Enroll-Response</text>
<text x="228" y="1316">to</text>
<text x="268" y="1316">Pledge</text>
<text x="16" y="1332">~</text>
<text x="168" y="1332">~</text>
<text x="312" y="1332">~</text>
<text x="456" y="1332">~</text>
<text x="560" y="1332">~</text>
<text x="76" y="1364">opt.</text>
<text x="112" y="1364">TLS</text>
<text x="96" y="1380">Enroll-Resp</text>
<text x="88" y="1396">eStatus</text>
<text x="16" y="1428">~</text>
<text x="168" y="1428">~</text>
<text x="312" y="1428">~</text>
<text x="456" y="1428">~</text>
<text x="560" y="1428">~</text>
<text x="16" y="1444">(9)</text>
<text x="64" y="1444">Voucher</text>
<text x="124" y="1444">Status</text>
<text x="192" y="1444">Telemetry</text>
<text x="276" y="1444">(including</text>
<text x="352" y="1444">backend</text>
<text x="436" y="1444">interaction)</text>
<text x="16" y="1460">~</text>
<text x="168" y="1460">~</text>
<text x="312" y="1460">~</text>
<text x="456" y="1460">~</text>
<text x="560" y="1460">~</text>
<text x="236" y="1492">mTLS</text>
<text x="240" y="1508">vStatus</text>
<text x="436" y="1524">mTLS</text>
<text x="368" y="1540">req</text>
<text x="412" y="1540">device</text>
<text x="464" y="1540">audit</text>
<text x="504" y="1540">log</text>
<text x="396" y="1556">device</text>
<text x="448" y="1556">audit</text>
<text x="488" y="1556">log</text>
<text x="264" y="1572">[verify</text>
<text x="320" y="1572">audit</text>
<text x="364" y="1572">log]</text>
<text x="312" y="1588">|</text>
<text x="16" y="1604">~</text>
<text x="168" y="1604">~</text>
<text x="312" y="1604">~</text>
<text x="456" y="1604">~</text>
<text x="560" y="1604">~</text>
<text x="20" y="1620">(10)</text>
<text x="68" y="1620">Enroll</text>
<text x="124" y="1620">Status</text>
<text x="192" y="1620">Telemetry</text>
<text x="16" y="1636">~</text>
<text x="168" y="1636">~</text>
<text x="312" y="1636">~</text>
<text x="456" y="1636">~</text>
<text x="560" y="1636">~</text>
<text x="236" y="1668">mTLS</text>
<text x="240" y="1684">eStatus</text>
<text x="16" y="1716">~</text>
<text x="168" y="1716">~</text>
<text x="312" y="1716">~</text>
<text x="456" y="1716">~</text>
<text x="560" y="1716">~</text>
<text x="20" y="1732">(11)</text>
<text x="64" y="1732">Query</text>
<text x="116" y="1732">Pledge</text>
<text x="172" y="1732">Status</text>
<text x="16" y="1748">~</text>
<text x="168" y="1748">~</text>
<text x="312" y="1748">~</text>
<text x="456" y="1748">~</text>
<text x="560" y="1748">~</text>
<text x="76" y="1780">opt.</text>
<text x="112" y="1780">TLS</text>
<text x="96" y="1796">tStatus</text>
<text x="96" y="1812">pStatus</text>
<text x="16" y="1844">~</text>
<text x="168" y="1844">~</text>
<text x="312" y="1844">~</text>
<text x="456" y="1844">~</text>
<text x="560" y="1844">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The following sub sections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>

<t><list style="numbers">
  <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr-proc"/>, as well as the artifact processing by these entities.</t>
  <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
  <t><xref target="req_cacerts"/> describes the retrival exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
  <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="cacerts"/> describes the certificate provisioning exchange initiated by the Registrar-Agent to the pledge.</t>
  <t><xref target="enroll_response"/> describes the Enroll-Response exchange (containing the LDevID (Pledge) certificate) initiated by the Registrar-Agent to the pledge and the returned status information.</t>
  <t><xref target="vstatus"/> describes the Voucher status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
  <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
  <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
</list></t>

<section anchor="tpvr"><name>Trigger Pledge Voucher-Request</name>

<t>This exchange assumes that the Registrar-Agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> and <xref target="exchangesfig_uc2_all"/> based on DNS-SD or similar.</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>

<figure title="PVR acquisition exchange" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(1)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="216" y="132">Voucher-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPVR</text>
<text x="96" y="212">PVR</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PVR via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tpvr</spanx>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field to <spanx style="verb">application/json</spanx>.</t>

<t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact in the body of a 200 OK response.
The Content-Type field header of the response <bcp14>MUST</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>If the pledge is unable to create the PVR, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or if the request is not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-voucher-request-trigger-tpvr"><name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>

<t>The Pledge Voucher-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters.
The following CDDL <xref target="RFC8610"/> explains the Pledge Voucher-Request Trigger structure.</t>

<figure title="CDDL for Pledge Voucher-Request Trigger" anchor="tpvr_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">pledgevoucherrequesttrigger</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: X.509 v3 certificate structure of the domain registrar EE certificate (base64-encoded value); may be configured at the Registrar-Agent or may be fetched by the Registrar-Agent based on a prior TLS connection with this domain registrar</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded JWS structure containing the SubjectKeyIdentifier of the EE (RegAgt) certificate and signing Data including the creation date and serial number of the pledge. Note that <xref target="I-D.ietf-anima-rfc8366bis"/> defines an opaque binary element for agent-signed data, for which the structure is defined in BRSKI-PRM.</t>
</list></t>

<figure title="JWS structure for the agent-signed-data member in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(prmasd)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>The BRSKI-PRM Agent Signed Data structure <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="prmasd_CDDL_def"/>.
The JWS Payload is further base64url-encoded to become the string value of the <spanx style="verb">payload</spanx> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains the BRSKI-PRM Agent Signed Data structure.</t>

<figure title="CDDL for BRSKI-PRM Agent Signed Data" anchor="prmasd_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created": tdate,
    "serial-number": text
  }
]]></artwork></figure>

<t>The fields contained in the <spanx style="verb">prmasd</spanx> are:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: creation date and time as standard date/time string as defined in <xref target="RFC3339"/></t>
  <t><spanx style="verb">serial-number</spanx>: product-serial-number in the X520SerialNumber field of the IDevID certificate of the pledge as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/></t>
</list></t>

<t><xref target="prmasd_payload"/> below shows an example for unsigned BRSKI-PRM Agent Signed Data in JSON syntax.</t>

<figure title="Data example for prmasd" anchor="prmasd_payload"><artwork align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}
]]></artwork></figure>

<t>The JWS Protected Header of the <spanx style="verb">agent-signed-data</spanx> JWS structure <bcp14>MUST</bcp14> contain the following parameters (see <xref target="asd_header"/> for an example):</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">kid</spanx>: base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value) of the EE (RegAgt) certificate.</t>
</list></t>

<figure title="Protected Header example inside agent-signed-data" anchor="asd_header"><artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

<t>Note that at the time of receiving the PVR trigger, the pledge cannot verify the registrar LDevID certificate and has no proof-of-possession of the corresponding private key for the certificate.
Hence, the tPVR is an unsigned artifact and the pledge only accepts the registrar LDevID certificate provisionally until it receives the voucher as described in <xref target="voucher"/>.</t>

<t>The pledge will also be unable to verify the agent-signed-data itself as it does not possess the EE (RegAgt) certificate and the domain trust has not been established at this point of the communication.
Verification <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

</section>
<section anchor="response-artifact-pledge-voucher-request-pvr"><name>Response Artifact: Pledge Voucher-Request (PVR)</name>

<t>The Pledge Voucher-Request (PVR) artifact is a JWS Voucher Request as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
Its unsigned data <bcp14>SHALL</bcp14> be constructed similar to the Voucher-Request artifact defined in <xref target="RFC8995"/>.
It will contain additional data provided by the Registrar-Agent as specified in the following.</t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request:voucher as defined in <xref target="I-D.ietf-anima-rfc8366bis"/> and thus makes optional leaves in the YANG definition mandatory:</t>

<t><list style="symbols">
  <t><spanx style="verb">created-on</spanx>: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t><spanx style="verb">nonce</spanx>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t><spanx style="verb">serial-number</spanx>: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t><spanx style="verb">assertion</spanx>: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity" (different value as in RFC 8995)..</t>
</list></t>

<t>The ietf-voucher-request:voucher data is extended with two additional parameters that <bcp14>MUST</bcp14> be included:</t>

<t><list style="symbols">
  <t><spanx style="verb">agent-provided-proximity-registrar-cert</spanx>: base64-encoded registrar EE certificate (provided in tPVR by the Registrar-Agent); enables the registrar to verify that it is the desired registrar for handling the PVR</t>
  <t><spanx style="verb">agent-signed-data</spanx>: base64-encoded agent-signed-data (provided in tPVR by the Registrar-Agent); enables the registrar to verify and log, which Registrar-Agent was in contact with the pledge, when verifying the PVR</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr_example"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
    "alg": "ES256",
    "typ": "voucher-jws+json",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="tper"><name>Trigger Pledge Enroll-Request</name>

<t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>

<t>Optionally, TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge, see <xref target="pledgehttps"/>.</t>

<t><xref target="exchangesfig_uc2_2"/> shows the the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>

<figure title="PER acquisition exchange" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 72,192" fill="none" stroke="black"/>
<path d="M 112,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 80,208" fill="none" stroke="black"/>
<path d="M 112,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(2)</text>
<text x="64" y="132">Trigger</text>
<text x="124" y="132">Pledge</text>
<text x="212" y="132">Enroll-Request</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="92" y="196">tPER</text>
<text x="96" y="212">PER</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent triggers the pledge to create the PER via HTTP POST on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/tper</spanx>.
As the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.
To avoid an empty request body an artifact is provided containing the description of the requested operation.</t>

<t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge is unable to create the PER, it <bcp14>SHOULD</bcp14> respond with an HTTP error code. The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request.</t>
  <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <spanx style="verb">application/json</spanx>.</t>
</list></t>

<section anchor="request-artifact-pledge-enroll-request-trigger-tper"><name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>

<t>This document specifies the trigger for a generic certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing RA/CA.</t>

<t>The Pledge Enroll-Request Trigger (tPVR) artifact is an unsigned JSON structure providing the trigger parameters (tPER-data).
The following CDDL <xref target="RFC8610"/> explains the Pledge Enroll-Request Trigger structure.</t>

<figure title="CDDL for Pledge Enroll-Request Trigger" anchor="tper_CDDL_def"><artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
    "enroll-type": "enroll-generic-cert"
  }
]]></artwork></figure>

<t>The enroll-type field is an enum, identifying what is being enrolled. 
Currently only "enroll-generic-cert" for the LDevID certificate is defined.</t>

<t><xref target="tPER_payload"/> below shows an example for unsigned Pledge Enroll-Request Trigger in JSON syntax.</t>

<figure title="Data example for pledgeenrollrequesttrigger" anchor="tPER_payload"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MUST</bcp14> be encoded in JSON as defined in <xref target="RFC8259"/> following the CDDL definition <xref target="tper_CDDL_def"/>.</t>

<t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional data, like CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>

</section>
<section anchor="response-artifact-pledge-enroll-request-per"><name>Response Artifact: Pledge Enroll-Request (PER)</name>

<t>The Pledge Enroll-Request (PER) artifact is a JWS-signed PKCS#10 Certificate Signing Request (CSR) utilizing the csr-grouping of the <spanx style="verb">ietf-ztp-types</spanx> YANG module as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID, POI is provided.</t>

<t>The pledge constructs the Pledge Enroll-Request (PER) artifact as a JWS structure containing the PKCS#10 request wrapped in ietf-ztp-types YANG structrue as JWS payload.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>MUST</bcp14> construct the PER as PKCS#10 and <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain.
This generic LDevID certificate can be used to request further (application specific) LDevID certificates if necessary for operation.
The Registrar-Agent <bcp14>SHALL</bcp14> use the enrollment endpoint <spanx style="verb">requestenroll</spanx> specified in this document to provide the Pledge Enroll-Request artifact to the Registrar.</t>

<t>The JWS Protected Header of the PER <bcp14>MUST</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">alg</spanx>: algorithm type used to create the signature, e.g., <spanx style="verb">ES256</spanx> as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
  <t><spanx style="verb">x5c</spanx>: base64-encoded pledge IDevID certificate;
it <bcp14>MAY</bcp14> optionally contain the certificate chain for this certificate; if the certificate chain is not included, it <bcp14>MUST</bcp14> be available at the registrar for verification of the IDevID certificate</t>
</list></t>

<t>The body of the Pledge Enroll-Request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t><spanx style="verb">p10-csr</spanx>: base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<t>While BRSKI-PRM targets the initial enrollment, re-enrollment <bcp14>SHOULD</bcp14> be supported as described in a similar way as for enrollment in this document, if no other re-enrollment mechanism is supported.
Note that in this case the current LDevID credential is used instead of the IDevID credential to create the signature of the PKCS#10 request.</t>

<figure title="Representation of PER" anchor="per_example"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded Payload "ietf-ztp-types" Representation
  in JSON Syntax
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}

# Example: Decoded "JWS Protected Header" Representation
  in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the Registrar-Agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider to ignore any but the newest PER from the same pledge in the case the registrar has at any point in time more than one pending PER from the pledge.</t>

<t>As the Registrar-Agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the Registrar-Agent and the domain registrar.</t>

</section>
</section>
<section anchor="pvr"><name>Supply PVR to Registrar (including backend interaction)</name>

<t>Similar to BRSKI "requestvoucher" endpoint in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.</t>

<t>The Registrar-Agent has acquired one or more PVR and PER object pairs</t>

<t>The Registrar-Agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using Registrar-Agent EE credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the Registrar-Agent is authorized to establish a connection to the registrar based on the TLS client authentication.
If the connection from Registrar-Agent to registrar is established, the authorization <bcp14>SHOULD</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized Registrar-Agent.</t>

<t>With BRSKI-PRM, the pledge generates PVR and PER as JSON-in-JWS objects and the Registrar-Agent forwards them to the registrar.
In <xref target="RFC8995"/>, the pledge generates PVR as CMS-signed JSON and PER as PKCS#10 or PKCS#7 according to <xref target="RFC7030"/> and inherited by <xref target="RFC8995"/>.</t>

<t><xref target="exchangesfig_uc2_3"/> shows the exchanges for the Voucher Request processing and the following subsections describe the corresponding artifacts.</t>

<figure title="Voucher issuing exchange" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="416" width="576" viewBox="0 0 576 416" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,384" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,384" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,176" fill="none" stroke="black"/>
<path d="M 312,272 L 312,384" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,280" fill="none" stroke="black"/>
<path d="M 456,368 L 456,384" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,304" fill="none" stroke="black"/>
<path d="M 560,352 L 560,384" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,224 L 224,224" fill="none" stroke="black"/>
<path d="M 256,224 L 304,224" fill="none" stroke="black"/>
<path d="M 320,288 L 416,288" fill="none" stroke="black"/>
<path d="M 456,288 L 552,288" fill="none" stroke="black"/>
<path d="M 320,304 L 424,304" fill="none" stroke="black"/>
<path d="M 456,304 L 552,304" fill="none" stroke="black"/>
<path d="M 320,352 L 408,352" fill="none" stroke="black"/>
<path d="M 472,352 L 552,352" fill="none" stroke="black"/>
<path d="M 176,368 L 208,368" fill="none" stroke="black"/>
<path d="M 272,368 L 304,368" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,304 548,298.4 548,309.6" fill="black" transform="rotate(0,552,304)"/>
<polygon class="arrowhead" points="560,288 548,282.4 548,293.6" fill="black" transform="rotate(0,552,288)"/>
<polygon class="arrowhead" points="328,352 316,346.4 316,357.6" fill="black" transform="rotate(180,320,352)"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(180,320,288)"/>
<polygon class="arrowhead" points="312,224 300,218.4 300,229.6" fill="black" transform="rotate(0,304,224)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,368 172,362.4 172,373.6" fill="black" transform="rotate(180,176,368)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(3)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PVR</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="308" y="196">[Registrar-Agent</text>
<text x="308" y="212">authenticated&amp;authorized?]</text>
<text x="240" y="228">PVR</text>
<text x="312" y="228">|</text>
<text x="280" y="244">[accept</text>
<text x="348" y="244">device?]</text>
<text x="284" y="260">[contact</text>
<text x="352" y="260">vendor]</text>
<text x="436" y="292">mTLS</text>
<text x="440" y="308">RVR</text>
<text x="460" y="324">[extract</text>
<text x="536" y="324">DomainID]</text>
<text x="456" y="340">[update</text>
<text x="512" y="340">audit</text>
<text x="556" y="340">log]</text>
<text x="440" y="356">Voucher</text>
<text x="240" y="372">Voucher</text>
<text x="16" y="404">~</text>
<text x="168" y="404">~</text>
<text x="312" y="404">~</text>
<text x="456" y="404">~</text>
<text x="560" y="404">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |-------PVR------>|                 |            |
 |                  |          [accept device?]         |            |
 |                  |          [contact vendor]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit log]
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The HTTP request Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="tpvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The Registrar-Agent sets the Accept field in the request-header indicating the acceptable Content-Type for the Voucher.</t>

<t>The HTTP response Content-Type header field is set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> if no content negotiation is used.</t>

<section anchor="request-artifact-pledge-voucher-request-pvr"><name>Request Artifact: Pledge Voucher-Request (PVR)</name>

<t>For BRSKI-PRM, the Registrar-Agent sends the PVR by HTTP POST to the same registrar endpoint as introduced by BRSKI: "/.well-
known/brski/requestvoucher", but with a Content-Type header field for JSON-in-JWS"</t>

</section>
<section anchor="rvr-proc"><name>Supply RVR to MASA (backend interaction)</name>

<t>The registrar needs to convert the PVR to an RVR and supply it to the MASA.</t>

<t>If the MASA address/URI is learned from the IDevID MASA URI extension (<xref section="2.3" sectionFormat="of" target="RFC8995"/>), then the MASA on that URI <bcp14>MUST</bcp14> support the procedures defined in this document if the PVR used JSON-JWS encoding.
If the MASA is only configured on the registrar, then a registrar supporting BRKSI-PRM and other voucher encoding formats (such as those in <xref target="RFC8995"/>) <bcp14>SHOULD</bcp14> support per-message-format MASA address/URI configuration for the same IDevID trust anchor."</t>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>, Section 5.5.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied from the PVR</t>
  <t>serial-number: product-serial-number of pledge.
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as received from Registrar-Agent, see <xref target="tpvr"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be extended with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: EE (RegAgt) certificate or the EE (RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.
If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded EE (RegAgt) certificate.</t>
</list></t>

<t>The MASA uses this information for verification that the Registrar-Agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar LDevID credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher-request:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher-request:voucher"
  representation in JSON syntax
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "callee4711",
     "assertion": "agent-proximity",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>This document uses the JSON-in-JWS format throughout the definition of exchanges and in the examples.
Nevertheless, alternative encodings of the voucher as used in BRSKI <xref target="RFC8995"/> with JSON-in-CMS or CBOR-in-COSE_Sign <xref target="RFC9052"/> for constraint environments are possible as well.
The assumption is that a pledge typically supports a single encoding variant and creates the PVR in the supported format.
To ensure that the pledge is able to process the voucher, the registrar <bcp14>MUST</bcp14> use the media type for Accept header in the RVR based on the media type used for the PVR.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar LDevID certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar LDevID credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar LDevID certificate is used or that different registrar LDevID certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The EE (RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding EE (RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar LDevID certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the EE (RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

<t>The registrar provides the EE certificate of the Registrar-Agent identified by the SubjectKeyIdentifier (SKID) in the header of the "agent-signed-data" from the PVR in its RVR (see also <xref target="rvr-proc"/>).</t>

<t>The MASA in turn verifies the registrar LDevID certificate is included in the PVR (contained in the "prior-signed-voucher-request" field of RVR) in the "agent-provided-proximity-registrar-cert" leaf and may assert the PVR as "verified" or "logged".</t>

<t>In addition, the MASA may issue the assertion "agent-proximity" as follows:
The MASA verifies the signature of the "agent-signed-data" contained in the "prior-signed-voucher-request", based on the provided EE certificate of the Registrar-Agent in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.
The assertion of "agent-proximity" is similar to the proximity assertion by the MASA when using BRSKI.
Note that the different assertions do not provide a metric of strength as the security properties are not comparable.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx response status codes as described in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
When successful, the Voucher will then be supplied via the registrar to the Registrar-Agent.</t>

</section>
<section anchor="exchanges_uc2_2_vc"><name>Issue Voucher by MASA (backend interaction)</name>

<t>The MASA creates a voucher with Media-Type of <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the MASA detects that the Accept header of the PVR does not match <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code "406 Not Acceptable" as the pledge will not be able to parse the response.
The voucher is according to <xref target="I-D.ietf-anima-rfc8366bis"/> but uses the new assertion value specified <xref target="agt_prx"/>.</t>

<t><xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(ietf-voucher:voucher)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation
  in JSON syntax
{
  "ietf-voucher:voucher": {
    "assertion": "agent-proximity",
    "serial-number": "callee4711",
    "nonce": "base64encodedvalue==",
    "created-on": "2022-01-04T00:00:02.000Z",
    "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The pinned-domain certificate to be put into the voucher is determined by the MASA as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>Supply Voucher to Registrar (backend interaction)</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar EE credentials.</t>

<t>The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see <xref target="RFC7515"/>, Section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain the registrar EE certificate as well as potential subordinate CA certificates up to (but not including) the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>(For many installations, with a single registrar credential, the registrar credential is what is pinned)</t>

<t>In <xref target="RFC8995"/>, the Registrar proved possession of the it's credential when the TLS session was setup.
While the pledge could not, at the time, validate the certificate truly belonged the registrar, it did validate that the certificate it was provided was able to authenticate the TLS connection.</t>

<t>In the BRSKI-PRM mode, with the Registrar-Agent mediating all communication, the Pledge has not as yet been able to witness that the intended Registrar really does possess the relevant private key.
This second signature provides for the same level of assurance to the pledge, and that it matches the public key (of the Registrar) that the pledge received in the trigger for the PVR (see <xref target="tpvr_CDDL_def"/>).</t>

<t>The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the Registrar-Agent.
This has some operational implications when the registrar may be part of a scalable framework as described in <xref section="1.3.1" sectionFormat="comma" target="I-D.richardson-anima-registrar-considerations"/>.</t>

<t>The second signature <bcp14>MUST</bcp14> either be done with the private key associated with the registrar EE certificate provided to the Registrar-Agent, or the use of a certificate chain is necessary.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher-request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".</t>

<t><xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": BASE64URL(ietf-voucher:voucher),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature)
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Reg))),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
{
  "ietf-voucher:voucher": {
     "assertion": "agent-proximity",
     "serial-number": "callee4711",
     "nonce": "base64encodedvalue==",
     "created-on": "2022-01-04T00:00:02.000Z",
     "pinned-domain-cert": "base64encodedvalue=="
  }
}

# Example: Decoded "JWS Protected Header (MASA)" representation
  in JSON syntax
{
  "alg": "ES256",
  "typ": "voucher-jws+json",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}

# Example: Decoded "JWS Protected Header (Reg)" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the Registrar-Agent.</t>

</section>
<section anchor="response-artifact-voucher"><name>Response Artifact: Voucher</name>

<t>After receiving the PVR from Registrar-Agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar LDevID certificate to ensure the registrar in proximity of the Registrar-Agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the Registrar-Agent provided data has been signed with the private key corresponding to the EE (RegAgt) certificate indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue Registrar-Agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the EE (RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar has access to the EE (RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.
Note, the registrar may have stored the EE (RegAgt) certificate if used during TLS establishment between Registrar-Agent and registrar or it may be provided via a repository.</t>
</list></t>

<t>If the registrar is unable to validate the PVR, it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the Registrar-Agent.</t>

<t>The following 4xx client error codes <bcp14>SHOULD</bcp14> be used:</t>

<t><list style="symbols">
  <t>403 Forbidden: if the registrar detected that one or more security related parameters are not valid or if the pledge-provided information could not be used with automated allowance.</t>
  <t>406 Not Acceptable: if the Content-Type indicated by the Accept header is unknown or unsupported.</t>
</list></t>

<t>If the validation succeeds, the registrar performs pledge authorization according to <xref section="5.3" sectionFormat="of" target="RFC8995"/> followed by obtaining a voucher from the pledge's MASA according to <xref section="5.4" sectionFormat="of" target="RFC8995"/> with the modifications described below in <xref target="rvr-proc"/>.</t>

</section>
</section>
<section anchor="per"><name>Supply PER to Registrar (including backend interaction)</name>

<t>After receiving the voucher, the Registrar-Agent sends the PER to the registrar in the same HTTP-over-TLS connection. Which is similar to the PER processing described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
In case the PER cannot be send in the same HTTP-over-TLS connection the Registrar-Agent may send the PER in a new HTTP-over-TLS connection. The registrar is able to correlate the PVR and the PER based on the signatures and the contained product-serial-number information.
Note, this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>

<t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER request handling and the following subsections describe the corresponding artifacts.</t>

<figure title="Enroll exchange" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,272" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 224,192" fill="none" stroke="black"/>
<path d="M 256,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 360,208" fill="none" stroke="black"/>
<path d="M 400,208 L 448,208" fill="none" stroke="black"/>
<path d="M 320,224 L 368,224" fill="none" stroke="black"/>
<path d="M 400,224 L 448,224" fill="none" stroke="black"/>
<path d="M 320,240 L 336,240" fill="none" stroke="black"/>
<path d="M 432,240 L 448,240" fill="none" stroke="black"/>
<path d="M 176,256 L 192,256" fill="none" stroke="black"/>
<path d="M 288,256 L 304,256" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,224 444,218.4 444,229.6" fill="black" transform="rotate(0,448,224)"/>
<polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,256 172,250.4 172,261.6" fill="black" transform="rotate(180,176,256)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(4)</text>
<text x="60" y="132">Supply</text>
<text x="104" y="132">PER</text>
<text x="132" y="132">to</text>
<text x="184" y="132">Registrar</text>
<text x="268" y="132">(including</text>
<text x="344" y="132">backend</text>
<text x="428" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">PER</text>
<text x="380" y="212">mTLS</text>
<text x="384" y="228">RER</text>
<text x="384" y="244">Enroll-Resp</text>
<text x="240" y="260">Enroll-Resp</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |<-----mTLS------>|            |
 |                  |                 |-------RER------>|            |
 |                  |                 |<--Enroll-Resp---|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-pledge-enroll-request-per"><name>Request Artifact: Pledge Enroll-Request (PER)</name>

<t>As specified in <xref target="tper"/> deviating from BRSKI the PER is not a raw PKCS#10.
As the Registrar-Agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per_example"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the EE (RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
</list></t>

</section>
<section anchor="enroll-pledge-by-domain-ca-backend-interaction"><name>Enroll Pledge by Domain CA (backend interaction)</name>

<t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the Enroll-Request with the corresponding domain CA.
It creates a Registrar Enroll-Request (RER) by utilizing the protocol expected by the domain CA.</t>

<t>The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.</t>

<t>The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>

</section>
<section anchor="response-artifact-enroll-response-enroll-resp"><name>Response Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the Registrar-Agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

<t>Note while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported in a similar way with the exception that the current LDevID certificate is used instead of the IDevID certificate to verify the wrapping signature of the PKCS#10 request (see also <xref target="tper"/>).</t>

</section>
</section>
<section anchor="req_cacerts"><name>Request CA Certificates</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t><xref target="exchangesfig_uc2_5"/> shows the request and provisioning of CA certificates in the infrastructure. 
The following subsections describe the corresponding artifacts.</t>

<figure title="CA certificates retrival exchange" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 192,192" fill="none" stroke="black"/>
<path d="M 280,192 L 304,192" fill="none" stroke="black"/>
<path d="M 176,208 L 192,208" fill="none" stroke="black"/>
<path d="M 288,208 L 304,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,208 172,202.4 172,213.6" fill="black" transform="rotate(180,176,208)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(5)</text>
<text x="64" y="132">Request</text>
<text x="108" y="132">CA</text>
<text x="172" y="132">Certificates</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="236" y="196">cACert-Req</text>
<text x="240" y="212">cACert-Resp</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Request CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |---cACert-Req--->|                 |            |
 |                  |<--cACert-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-cacert-request-cacert-req"><name>Request Artifact: cACert-Request (cACert-Req)</name>

<t>To support Registrar-Agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

</section>
<section anchor="response-artifact-cacert-response-cacert-resp"><name>Response Artifact: cACert-Response (cACert-Resp)</name>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar LDevID credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64-encoded "x5bag" (see definition in <xref target="RFC9360"/>) in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with registrar signature in 
# General JWS Serialization syntax
{
  "payload": BASE64URL(certs),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "certs" representation in JSON syntax
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="voucher"><name>Supply Voucher to Pledge</name>

<t>It is assumed that the Registrar-Agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:</t>

<t><list style="symbols">
  <t>voucher-response - Voucher (from MASA via Registrar)</t>
  <t>wrapped-CA-certificate(s)-response - CA certificates</t>
  <t>enrollment-response - LDevID (Pledge) certificate (from CA via registrar)</t>
</list></t>

<t>To deliver these response objects, the Registrar-Agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher and LDevID certificate and optionally IDevID CA certificates.
The IDevID CA certificate is necessary, when the connection between the Registrar-Agent and the pledge is established using TLS to enable the Registrar-Agent to validate the pledges' IDevID certificate during the TLS handshake as described in <xref target="tpvr"/>.</t>
</list></t>

<t>The Registrar-Agent <bcp14>MAY</bcp14> optionally use TLS to protect the communication as outlined in <xref target="tpvr"/>.</t>

<t>The Registrar-Agent provides the information via distinct pledge endpoints as following.
<xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Voucher exchange" anchor="exchangesfig_uc2_6"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(6)</text>
<text x="60" y="132">Supply</text>
<text x="120" y="132">Voucher</text>
<text x="164" y="132">to</text>
<text x="204" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Voucher</text>
<text x="96" y="212">vStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher-----|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-voucher"><name>Request Artifact: Voucher</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/svr".</t>

<t>The Registrar-Agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example is given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of several signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, against pre-installed manufacturer trust anchor (IDevID).</t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Validate the LDevID(Reg) certificate received in the agent-provided-proximity-registrar-cert in the Pledge-Voucher-Request trigger request (in the field "agent-provided-proximity-registrar-cert")</t>
  <t>Verify registrar signature of the voucher similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
</list></t>

<t>Step3 and step 4 have been introduced in BRSKI-PRM to enable verification of LDevID(Reg) certificate and also the proof-of-possession of the corresponding private key by the registrar, which is done in BRSKI based on the established TLS channel.
If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar LDevID certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="response-artifact-voucher-status-vstatus"><name>Response Artifact: Voucher Status (vStatus)</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the Registrar-Agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.
The reason-context is an arbitrary JSON object that may provide additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="vstat"/>.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": BASE64URL(pledge-voucher-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "pvs-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate because
  it starts in the future (1/1/2023).",
  "reason-context": {
    "pvs-details": "Current date: 1/1/1970"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>If the pledge did not did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/> and <bcp14>MAY</bcp14> resent the voucher depending on the Pledge status following the procedure described in <xref target="voucher"/>.</t>

</section>
</section>
<section anchor="cacerts"><name>Supply CA Certificates to Pledge</name>

<t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates aquired by the pledge-agent to the pledge. 
The following subsections describe the corresponding artifacts.</t>

<figure title="Certificate provisioning exchange" anchor="exchangesfig_uc2_7"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(7)</text>
<text x="60" y="132">Supply</text>
<text x="100" y="132">CA</text>
<text x="164" y="132">Certificates</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">cACerts</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----cACerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact"><name>Request Artifact:</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/scac".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHOULD</bcp14> only be done, if the voucher-response has been successfully processed by pledge as reflected in the voucher status telemetry.</t>

<t>The CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64-encoded "x5bag".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

</section>
<section anchor="response-no-artifact"><name>Response (no artifact)</name>

<t>The verification comprises the following steps the pledge <bcp14>MUST</bcp14> perform. Maintaining the order of versification steps as indicated allows to determine, which verification has already been passed:</t>

<t><list style="numbers">
  <t>Check content-type of the CA certificates message. If no Content-Type is contained in the HTTP header, the default Content-Type utilized in this document (JSON-in-JWS) is used. If the Content-Type of the response is in an unknown or unsupported format, the pledge <bcp14>SHOULD</bcp14> reply with a 415 Unsupported media type error code.</t>
  <t>Check the encoding of the payload. If the pledge detects errors in the encoding of the payload, it <bcp14>SHOULD</bcp14> reply with 400 Bad Request error code.</t>
  <t>Verify that the wrapped CA certificate object is signed using the registrar certificate against the pinned-domain certificate. This <bcp14>MAY</bcp14> be done by comparing the hash that is indicating the certificate used to sign the message is that of the pinned-domain certificate. If the validation against the pinned domain-certificate fails, the client <bcp14>SHOULD</bcp14> reply with a 401 Unauthorized error code. It signals that the authentication has failed and therefore the object was not accepted.</t>
  <t>Verify signature of the received wrapped CA certificate object using the domain certificate contained in the voucher. If the validation of the signature fails, the pledge <bcp14>SHOULD</bcp14> reply with a 403 Forbidden. It signals that the object could not be verified and has not been accepted.</t>
  <t>If the received CA certificates are not self-signed, i.e., an intermediate CA certificate, verify them against an already installed trust anchor, as described in section 4.1.3 of <xref target="RFC7030"/>.</t>
</list></t>

<t>In case of success, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.</t>

</section>
</section>
<section anchor="enroll_response"><name>Supply Enroll-Response to Pledge</name>

<t><xref target="exchangesfig_uc2_8"/> shows the supply of the Enroll-Response to the pledge.
The following subsections describe the corresponding artifacts.</t>

<figure title="Enroll-Response exchange" anchor="exchangesfig_uc2_8"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 48,192" fill="none" stroke="black"/>
<path d="M 144,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 56,208" fill="none" stroke="black"/>
<path d="M 120,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(8)</text>
<text x="60" y="132">Supply</text>
<text x="152" y="132">Enroll-Response</text>
<text x="228" y="132">to</text>
<text x="268" y="132">Pledge</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">Enroll-Resp</text>
<text x="88" y="212">eStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<section anchor="request-artifact-enroll-response-enroll-resp"><name>Request Artifact: Enroll-Response (Enroll-Resp)</name>

<t>The Registrar-Agent <bcp14>SHALL</bcp14> send the Enroll-Response to the pledge by HTTP(S) POST to the endpoint: "/.well-known/brski/ser".</t>

<t>The Content-Type header when using EST <xref target="RFC7030"/> as enrollment protocol between the Registrar-Agent and the infrastructure is <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the Registrar-Agent.
If the verification of the LDevID certificate succeeds, the status property <bcp14>SHALL</bcp14> be set to "status": true, otherwise to "status": false</t>

</section>
<section anchor="response-artifact-enroll-status-estatus"><name>Response Artifact: Enroll Status (eStatus)</name>

<t>After enrollment processing the pledge <bcp14>MUST</bcp14> reply with a enrollment status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The enroll-status is also a signed object in BRSKI-PRM and results in form of JSON-in-JWS here.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the enroll-status using its new LDevID credentials as shown in <xref target="estat"/>.
In failure case, the pledge <bcp14>SHALL</bcp14> use its IDevID credentials.
<xref section="5.9.4" sectionFormat="of" target="RFC8995"/> specifies the enrollment status telemetry message with two optional fields for "reason" and "reason-context". 
In BRSKI-PRM the optional fields are mandated to have a clear distinction between other status messages and <bcp14>MUST</bcp14> be provided therefore.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="estat"/>.</t>

<t>The following CDDL <xref target="RFC8610"/> explains enroll-status response structure. 
It is similar as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/> with the optional fields set to mandatory as described above.</t>

<figure title="CDDL for pledge-enrollment-status response" anchor="e_stat_res_def"><artwork type="cddl" align="left"><![CDATA[
enrollstatus-trigger = {
    "version": uint,
    "status": bool,
    "reason": text,
    "reason-context" : { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": BASE64URL(pledge-enroll-status),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "pledge-enroll-status" representation
  in JSON syntax for success case
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed",
  "reason-context": {
    "pes-details": "JSON"
  }
}

# Example: Decoded payload "pledge-voucher-status" representation
  in JSON syntax for error case
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "no matching trust anchor"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the Registrar-Agent has collected the information, it can connect to the registrar to provide it with the status responses.</t>

</section>
</section>
<section anchor="vstatus"><name>Voucher Status Telemetry (including backend interaction)</name>

<t>The following description requires that the Registrar-Agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="pvr"/>:</t>

<t><list style="symbols">
  <t>Registrar-Agent: obtained voucher status (vStatus) and enroll status (eStatus) from pledge.</t>
</list></t>

<figure><artset><artwork  type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="576" viewBox="0 0 576 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,272" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,272" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,240" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,200" fill="none" stroke="black"/>
<path d="M 456,256 L 456,272" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,272" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<path d="M 320,208 L 416,208" fill="none" stroke="black"/>
<path d="M 456,208 L 552,208" fill="none" stroke="black"/>
<path d="M 320,224 L 352,224" fill="none" stroke="black"/>
<path d="M 520,224 L 552,224" fill="none" stroke="black"/>
<path d="M 320,240 L 368,240" fill="none" stroke="black"/>
<path d="M 504,240 L 552,240" fill="none" stroke="black"/>
<polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
<polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
<polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
<polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="16" y="132">(9)</text>
<text x="64" y="132">Voucher</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="276" y="132">(including</text>
<text x="352" y="132">backend</text>
<text x="436" y="132">interaction)</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">vStatus</text>
<text x="436" y="212">mTLS</text>
<text x="368" y="228">req</text>
<text x="412" y="228">device</text>
<text x="464" y="228">audit</text>
<text x="504" y="228">log</text>
<text x="396" y="244">device</text>
<text x="448" y="244">audit</text>
<text x="488" y="244">log</text>
<text x="264" y="260">[verify</text>
<text x="320" y="260">audit</text>
<text x="364" y="260">log]</text>
<text x="312" y="276">|</text>
<text x="16" y="292">~</text>
<text x="168" y="292">~</text>
<text x="312" y="292">~</text>
<text x="456" y="292">~</text>
<text x="560" y="292">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit log---->|
 |                  |                 |<------device audit log-------|
 |                  |        [verify audit log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>
<t>{: #exchangesfig_uc2_9 title="Voucher Status telemetry exchange" artwork-align="center"}~~~~ aasvg</t>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<section anchor="request-artifact-voucher-status-vstatus"><name>Request Artifact: Voucher Status (vStatus)</name>

<t>The Registrar-Agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHOULD</bcp14> log the transaction provided for a pledge via Registrar-Agent and include the identity of the Registrar-Agent in these logs. For log analysis the following may be considered:</t>

<t><list style="symbols">
  <t>The registrar knows the interacting Registrar-Agent from the authentication of the Registrar-Agent towards the registrar using LDevID (RegAgt) and can log it accordingly.</t>
  <t>The telemetry information from the pledge can be correlated to the voucher response provided from the registrar to the Registrar-Agent and further to the pledge.</t>
  <t>The telemetry information, when provided to the registrar is provided via the Registrar-Agent and can thus be correlated.</t>
</list></t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device of the domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

</section>
<section anchor="response-no-artifact-1"><name>Response (no artifact)</name>

<t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK without a response body in the success case or fail with HTTP 4xx/5xx status codes.
The Registrar-Agent may use the response status code to signal success/failure to the service technician operating the Registrar-Agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>

</section>
</section>
<section anchor="estatus"><name>Enroll Status Telemetry</name>

<t>The Registrar-Agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the Enroll-Response (certificate) and holds the corresponding private key.</t>

<figure title="Enroll Status telemetry exchange" anchor="exchangesfig_uc2_10"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,208" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,208" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,208" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,208" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,208" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 176,176 L 216,176" fill="none" stroke="black"/>
<path d="M 256,176 L 304,176" fill="none" stroke="black"/>
<path d="M 176,192 L 208,192" fill="none" stroke="black"/>
<path d="M 272,192 L 304,192" fill="none" stroke="black"/>
<polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
<polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
<polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(10)</text>
<text x="68" y="132">Enroll</text>
<text x="124" y="132">Status</text>
<text x="192" y="132">Telemetry</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="236" y="180">mTLS</text>
<text x="240" y="196">eStatus</text>
<text x="16" y="228">~</text>
<text x="168" y="228">~</text>
<text x="312" y="228">~</text>
<text x="456" y="228">~</text>
<text x="560" y="228">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>In case the TLS connection to the registrar is already closed, the Registrar-Agent opens a new TLS connection with the registrar as stated in <xref target="pvr"/>.</t>

<section anchor="request-artifact-enroll-status-estatus"><name>Request Artifact: Enroll Status (eStatus)</name>

<t>The Registrar-Agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device of the domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the signature verification of the status information is an addition to the described handling in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, and is replacing the pledges TLS client authentication by DevID credentials in <xref target="RFC8995"/>.</t>

</section>
<section anchor="response-no-artifact-2"><name>Response (no artifact)</name>

<t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes.</t>

<t>Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
An example case for the registrar revoking the issued LDevID for the pledge is when the pledge was not able to verify the received LDevID certificate and therefore did send a 406 (Not Acceptable) response.
In this case the registrar may revoke the LDevID certificate as the pledge did no accepted it for installation.</t>

<t>The Registrar-Agent may use the response to signal success / failure to the service technician operating the Registrar-Agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="query"><name>Query Pledge Status</name>

<t>The following assumes that a Registrar-Agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide the dedicated endpoint for the Query Pledge Status operation.</t>

<figure title="Pledge Status exchange" anchor="exchangesfig_uc2_11"><artset><artwork  type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
<path d="M 8,32 L 8,80" fill="none" stroke="black"/>
<path d="M 16,160 L 16,224" fill="none" stroke="black"/>
<path d="M 80,32 L 80,80" fill="none" stroke="black"/>
<path d="M 120,32 L 120,80" fill="none" stroke="black"/>
<path d="M 168,160 L 168,224" fill="none" stroke="black"/>
<path d="M 224,32 L 224,80" fill="none" stroke="black"/>
<path d="M 264,32 L 264,80" fill="none" stroke="black"/>
<path d="M 312,160 L 312,224" fill="none" stroke="black"/>
<path d="M 360,32 L 360,80" fill="none" stroke="black"/>
<path d="M 400,32 L 400,80" fill="none" stroke="black"/>
<path d="M 456,160 L 456,224" fill="none" stroke="black"/>
<path d="M 472,32 L 472,80" fill="none" stroke="black"/>
<path d="M 512,32 L 512,80" fill="none" stroke="black"/>
<path d="M 560,160 L 560,224" fill="none" stroke="black"/>
<path d="M 568,32 L 568,80" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 224,32" fill="none" stroke="black"/>
<path d="M 264,32 L 360,32" fill="none" stroke="black"/>
<path d="M 400,32 L 472,32" fill="none" stroke="black"/>
<path d="M 512,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,80 L 80,80" fill="none" stroke="black"/>
<path d="M 120,80 L 224,80" fill="none" stroke="black"/>
<path d="M 264,80 L 360,80" fill="none" stroke="black"/>
<path d="M 400,80 L 472,80" fill="none" stroke="black"/>
<path d="M 512,80 L 568,80" fill="none" stroke="black"/>
<path d="M 24,176 L 56,176" fill="none" stroke="black"/>
<path d="M 128,176 L 160,176" fill="none" stroke="black"/>
<path d="M 24,192 L 64,192" fill="none" stroke="black"/>
<path d="M 128,192 L 160,192" fill="none" stroke="black"/>
<path d="M 24,208 L 64,208" fill="none" stroke="black"/>
<path d="M 128,208 L 160,208" fill="none" stroke="black"/>
<polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
<polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
<polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
<polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="172" y="52">Registrar-</text>
<text x="308" y="52">Domain</text>
<text x="436" y="52">Domain</text>
<text x="540" y="52">MASA</text>
<text x="168" y="68">Agent</text>
<text x="312" y="68">Registrar</text>
<text x="436" y="68">CA</text>
<text x="16" y="100">|</text>
<text x="168" y="100">|</text>
<text x="312" y="100">|</text>
<text x="456" y="100">|</text>
<text x="516" y="100">Internet</text>
<text x="560" y="100">|</text>
<text x="16" y="116">~</text>
<text x="168" y="116">~</text>
<text x="312" y="116">~</text>
<text x="456" y="116">~</text>
<text x="560" y="116">~</text>
<text x="20" y="132">(11)</text>
<text x="64" y="132">Query</text>
<text x="116" y="132">Pledge</text>
<text x="172" y="132">Status</text>
<text x="16" y="148">~</text>
<text x="168" y="148">~</text>
<text x="312" y="148">~</text>
<text x="456" y="148">~</text>
<text x="560" y="148">~</text>
<text x="76" y="180">opt.</text>
<text x="112" y="180">TLS</text>
<text x="96" y="196">tStatus</text>
<text x="96" y="212">pStatus</text>
<text x="16" y="244">~</text>
<text x="168" y="244">~</text>
<text x="312" y="244">~</text>
<text x="456" y="244">~</text>
<text x="560" y="244">~</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    | Domain |    | MASA |
|        |    |   Agent    |    | Registrar |    |   CA   |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork></artset></figure>

<t>The Registrar-Agent queries the Pledge Status via HTTP POST request on the well-known pledge endpoint <spanx style="verb">/.well-known/brski/qps</spanx>.
The request body <bcp14>MUST</bcp14> contain the JWS-signed Status Trigger (tStatus) artifact.
The request header <bcp14>MUST</bcp14> set the Content-Type field <spanx style="verb">application/jose+json</spanx>.</t>

<t>If the pledge provides the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> reply to this request with the Pledge Status (pStatus) artifact in the body of a 200 OK response.
The response header <bcp14>MUST</bcp14> have the Content-Type field set to <spanx style="verb">application/jose+json</spanx>.</t>

<section anchor="request-artifact-status-trigger-tstatus"><name>Request Artifact: Status Trigger (tStatus)</name>

<t>The Status Query artifact is a JWS structure signing information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> defines the structure of the unsigned Status Query data (i.e., JWS payload):</t>

<figure title="CDDL for unsigned Status Trigger data (statustrigger)" anchor="stat_req_def"><artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "created-on": tdate,
      "serial-number": text,
      "status-type": text
  }
]]></artwork></figure>

<t>The <spanx style="verb">version</spanx> field is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the version <bcp14>MUST</bcp14> be set to <spanx style="verb">1</spanx>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<t>The <spanx style="verb">created-on</spanx> field contains a standard date/time string following <xref target="RFC3339"/>.</t>

<t>The <spanx style="verb">serial-number</spanx> field takes the product-serial-number corresponding to the X520SerialNumber field of the IDevID certificate of the pledge.</t>

<t>The <spanx style="verb">status-type</spanx> value defined for BRSKI-PRM Status Query is <spanx style="verb">bootstrap</spanx>.
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).</t>

<t>As the Status Query artifact is defined generic, it may be used by other specifications to request further status information using other status types, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req_data"/> below shows an example for unsigned Status Query data in JSON syntax using status-type <spanx style="verb">bootstrap</spanx>.</t>

<figure title="Example of unsigned Status Query data in JSON syntax using status-type bootstrap for the Status Query artifact" anchor="stat_req_data"><artwork align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}
]]></artwork></figure>

<t>The Status Query data <bcp14>MUST</bcp14> be signed by the Registrar-Agent using its private key corresponding to the EE (RegAgt) certificate.
When using a JWS signature, the Status Query artifact looks as shown in <xref target="stat_req"/> and the Content-Type response header <bcp14>MUST</bcp14> be set to <spanx style="verb">application/jose+json</spanx>:</t>

<figure title="Status Query Representation in General JWS JSON Serialization Syntax" anchor="stat_req"><artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(status-query)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork></figure>

<t>For details on <spanx style="verb">JWS Protected Header</spanx> and <spanx style="verb">JWS Signature</spanx> see <xref target="I-D.ietf-anima-jws-voucher"/> or <xref target="RFC7515"/>.</t>

</section>
<section anchor="response-artifact-pledge-status-pstatus"><name>Response Artifact: Pledge Status (pStatus)</name>

<t>When the pledge receives a Status Query with status-type <spanx style="verb">bootstrap</spanx> it <bcp14>SHALL</bcp14> respond with previously collected telemetry information (see <xref target="vstatus"/> and <xref target="estatus"/>) in a single Pledge Status artifact.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t>The following CDDL defines the structure of the Pledge Status (pStatus) data:</t>

<figure title="CDDL for unsigned Pledge Status data (pledgestatus)" anchor="stat_res_def"><artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context": { * $$arbitrary-map }
  }
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment-response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>As the pledge is assumed to utilize its bootstrapped credentials (LDevID) in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success, which in turn implies voucher-success.
The reason-context is an arbitrary JSON object that provides additional information specific to a failure. 
The content of this field is not subject to standardization, but examples are provided in <xref target="stat_res"/>.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": BASE64URL(UTF8(status-response)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}

# Example: Decoded payload "status-response" representation
  in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Example: Decoded "JWS Protected Header" representation
  in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t><list style="symbols">
  <t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the Registrar-Agent in the bootstrapping-status request.</t>
  <t>In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the Registrar-Agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.</t>
  <t>The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.</t>
  <t>The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.</t>
  <t>The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>
</list></t>

<t>The pledge <bcp14>SHOULD</bcp14> by default only respond to requests from nodes it can authenticate (such as registrar
agent), once the pledge is enrolled with CA certificates and a matching domain certificate.</t>

</section>
</section>
</section>
<section anchor="iana-con"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<texttable title="BRSKI Well-Known URIs Additions" anchor="iana_table">
      <ttcol align='left'>Path Segment</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>requestenroll</c>
      <c>Supply PER to registrar</c>
      <c>[THISRFC]</c>
      <c>wrappedcacerts</c>
      <c>Request wrapped CA certificates</c>
      <c>[THISRFC]</c>
      <c>tpvr</c>
      <c>Trigger Pledge Voucher-Request</c>
      <c>[THISRFC]</c>
      <c>tper</c>
      <c>Trigger Pledge Enroll-Request</c>
      <c>[THISRFC]</c>
      <c>svr</c>
      <c>Supply Voucher to pledge</c>
      <c>[THISRFC]</c>
      <c>scac</c>
      <c>Supply CA certificates to pledge</c>
      <c>[THISRFC]</c>
      <c>ser</c>
      <c>Supply Enroll-Response to pledge</c>
      <c>[THISRFC]</c>
      <c>qps</c>
      <c>Query Pledge Status</c>
      <c>[THISRFC]</c>
</texttable>

</section>
<section anchor="dns-service-names"><name>DNS Service Names</name>

<t>IANA has registered the following service names:</t>

<t><strong>Service Name:</strong> brski-pledge<br />
<strong>Transport Protocol(s):</strong> tcp<br />
<strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Contact:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br />
<strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br />
<strong>Reference:</strong> [THISRFC]</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>potentially no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<t><xref target="tpvr"/> describes to optional apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>

<t>The credential used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component Registrar-Agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between Registrar-Agent and pledge</t>
</list></t>

<section anchor="sec_cons-dos"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM, the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>

<t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limited the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>

<t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resent the PVR previously sent.
Note that in case of resending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar LDevID certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the EE (RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a Registrar-Agent with a valid EE (RegAgt) certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The EE (RegAgt) certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the EE (RegAgt) certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the EE (RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the EE (RegAgt) certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the EE (RegAgt) certificate used in the TLS handshake with the Registrar-Agent. If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a Registrar-Agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if its product-serial-number is part of the request message.</t>

<t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>

<t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>

<t>The use of YANG to define data structures via the <xref target="RFC8971"/> "structure" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason, these guidelines do not follow the template described by <xref section="3.7" sectionFormat="of" target="RFC8407"/> (Security Considerations).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6762">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="RFC6763">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7030">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC8366">
  <front>
    <title>A Voucher Artifact for Bootstrapping Protocols</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
      <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
      <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8366"/>
  <seriesInfo name="DOI" value="10.17487/RFC8366"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8615">
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="May" year="2019"/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8615"/>
  <seriesInfo name="DOI" value="10.17487/RFC8615"/>
</reference>

<reference anchor="RFC8995">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-anima-jws-voucher">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="29" month="August" year="2023"/>
      <abstract>
	 <t>   [TODO: I-D.draft-ietf-anima-rfc8366bis] defines a digital artifact
   called voucher as a YANG-defined JSON document that is signed using a
   Cryptographic Message Syntax (CMS) structure.  This document
   introduces a variant of the voucher artifact in which CMS is replaced
   by the JSON Object Signing and Encryption (JOSE) mechanism described
   in RFC7515 to support deployments in which JOSE is preferred over
   CMS.

   In addition to explaining how the format is created, the
   &quot;application/voucher-jws+json&quot; media type is registered and examples
   are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-09"/>
   
</reference>


<reference anchor="I-D.ietf-netconf-sztp-csr">
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Russ Housley" initials="R." surname="Housley">
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname="Sean Turner" initials="S." surname="Turner">
         <organization>sn3rd</organization>
      </author>
      <date day="2" month="March" year="2022"/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-sztp-csr-14"/>
   
</reference>


<reference anchor="I-D.ietf-anima-rfc8366bis">
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname="Kent Watsen" initials="K." surname="Watsen">
         <organization>Watsen Networks</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software</organization>
      </author>
      <author fullname="Max Pritikin" initials="M." surname="Pritikin">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname="Qiufang Ma" initials="Q." surname="Ma">
         <organization>Huawei</organization>
      </author>
      <date day="4" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#x27;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge&#x27;s
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
   
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC3339">
  <front>
    <title>Date and Time on the Internet: Timestamps</title>
    <author fullname="G. Klyne" initials="G." surname="Klyne"/>
    <author fullname="C. Newman" initials="C." surname="Newman"/>
    <date month="July" year="2002"/>
    <abstract>
      <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3339"/>
  <seriesInfo name="DOI" value="10.17487/RFC3339"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC2986">
  <front>
    <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
    <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
    <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
    <date month="November" year="2000"/>
    <abstract>
      <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2986"/>
  <seriesInfo name="DOI" value="10.17487/RFC2986"/>
</reference>

<reference anchor="RFC3629">
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
    <date month="November" year="2003"/>
    <abstract>
      <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
  <seriesInfo name="DOI" value="10.17487/RFC3629"/>
</reference>

<reference anchor="RFC5272">
  <front>
    <title>Certificate Management over CMS (CMC)</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <author fullname="M. Myers" initials="M." surname="Myers"/>
    <date month="June" year="2008"/>
    <abstract>
      <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
      <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
      <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
      <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5272"/>
  <seriesInfo name="DOI" value="10.17487/RFC5272"/>
</reference>

<reference anchor="RFC9525">
  <front>
    <title>Service Identity in TLS</title>
    <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
    <author fullname="R. Salz" initials="R." surname="Salz"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
      <t>This document obsoletes RFC 6125.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9525"/>
  <seriesInfo name="DOI" value="10.17487/RFC9525"/>
</reference>

<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC7252">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8407">
  <front>
    <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="216"/>
  <seriesInfo name="RFC" value="8407"/>
  <seriesInfo name="DOI" value="10.17487/RFC8407"/>
</reference>

<reference anchor="RFC8792">
  <front>
    <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="Q. Wu" initials="Q." surname="Wu"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8792"/>
  <seriesInfo name="DOI" value="10.17487/RFC8792"/>
</reference>

<reference anchor="RFC8990">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9238">
  <front>
    <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="J. Latour" initials="J." surname="Latour"/>
    <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
      <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9238"/>
  <seriesInfo name="DOI" value="10.17487/RFC9238"/>
</reference>


<reference anchor="I-D.ietf-anima-brski-ae">
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
         <organization>Siemens AG</organization>
      </author>
      <date day="1" month="March" year="2024"/>
      <abstract>
	 <t>   This document defines an enhancement of Bootstrapping Remote Secure
   Key Infrastructure (BRSKI, RFC 8995).  It supports alternative
   certificate enrollment protocols, such as CMP, that use authenticated
   self-contained signed objects for certification messages.

   This offers the following advantages.  The origin of requests and
   responses can be authenticated independently of message transfer.
   This supports end-to-end authentication (proof of origin) also over
   multiple hops, as well as asynchronous operation of certificate
   enrollment.  This in turn provides architectural flexibility where
   and when to ultimately authenticate and authorize certification
   requests while retaining full-strength integrity and authenticity of
   certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-ae-10"/>
   
</reference>


<reference anchor="I-D.richardson-emu-eap-onboarding">
   <front>
      <title>EAP defaults for devices that need to onboard</title>
      <author fullname="Alan DeKok" initials="A." surname="DeKok">
         <organization>FreeRADIUS</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="2" month="April" year="2023"/>
      <abstract>
	 <t>   This document describes a method by which an unconfigured device can
   use EAP to join a network on which further device onboarding, network
   attestation or other remediation can be done.  While RFC 5216
   supports EAP-TLS without a client certificate, that document defines
   no method by which unauthenticated EAP-TLS can be used.  This draft
   addresses that issue.  First, by defining the @eap.arpa domain, and
   second by showing how it can be used to provide quarantined network
   access for onboarding unauthenticated devices.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-emu-eap-onboarding-03"/>
   
</reference>


<reference anchor="I-D.eckert-anima-brski-discovery">
   <front>
      <title>Discovery for BRSKI variations</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei USA</organization>
      </author>
      <author fullname="David von Oheimb" initials="D." surname="von Oheimb">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-brski-discovery-01"/>
   
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR"/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="March"/>
  </front>
  <format type="PDF" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
  <front>
    <title>Android Developer: Connect devices wirelessly</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
</reference>
<reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
  <front>
    <title>Security with Network Protocols</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
</reference>


<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>


<reference anchor="I-D.richardson-anima-registrar-considerations">
   <front>
      <title>Operational Considerations for BRSKI Registrar</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Wei Pan" initials="W." surname="Pan">
         <organization>Huawei Technologies</organization>
      </author>
      <date day="14" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-08"/>
   
</reference>

<reference anchor="RFC8971">
  <front>
    <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
    <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
    <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
    <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
    <author fullname="V. Govindan" initials="V." surname="Govindan"/>
    <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8971"/>
  <seriesInfo name="DOI" value="10.17487/RFC8971"/>
</reference>


<reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
   <front>
      <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="30" month="January" year="2024"/>
      <abstract>
	 <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-03"/>
   
</reference>




    </references>


<?line 2480?>

<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>

<t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge-Voucher-Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar-Voucher-Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher-Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>

<t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher-Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="pledgehttps"><name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>

<t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>

<t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependant upon the security of the TLS connection.</t>

<t>The use of HTTP-over-TLS is not mandated by this document for a number of reasons:</t>

<t><list style="numbers">
  <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods and raw public key, they do no help as there is no previous relationship between the Registrar-Agent.</t>
  <t>The pledge can use it's IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply as the pledge does not have a FQDN.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute which must be present in every IDevID.</t>
</list></t>

<t>If the Registrar-Agent has a preconfigured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>

<t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QRcodes may help automate this in some cases.</t>

<t><list style="numbers">
  <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="comma" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do it's own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involved use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures. See <xref target="androidtrustfail"/></t>
  <t>The use of the Host: (or :authority in HTTP/2) is explained in <xref section="7.2" sectionFormat="comma" target="RFC9110"/>. This header is mandatory, and so a compliant HTTPS client is going to insert it.
But, the contents of this header will at best be an IP address that came from the discovery process.
The pledge <bcp14>MUST</bcp14> therefore ignore the Host: header when it processes requests, and the pledge <bcp14>MUST NOT</bcp14> do any kind of name-base virtual hosting using the IP address/port combination.
Note that there is no requirement for the pledge to operate it's BRSKI-PRM service on port 80 or port 443, so if there is no reason for name-based virtual hosting.</t>
  <t>Note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge's IDevID certificate.
IDevID certificates are intended to be widely useable and EKU does not support that use.</t>
</list></t>

</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 12 -&gt; IETF draft 13:</t>

<t><list style="symbols">
  <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
  <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response.</t>
  <t>Updated CDDL source code integration to allow for automatic verification</t>
</list></t>

<t>From IETF draft 11 -&gt; IETF draft 12:</t>

<t><list style="symbols">
  <t>Updated acknowledgements to reflect early reviews</t>
  <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
</list></t>

<t>From IETF draft 10 -&gt; IETF draft 11:</t>

<t><list style="symbols">
  <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
  <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
  <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana-con"/></t>
  <t>removed unused reference RFC 5280</t>
  <t>removed site terminology</t>
  <t>deleted duplicated text in <xref target="pledge_ep"/></t>
  <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
  <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
  <t>addressed comments from SECDIR early review</t>
</list></t>

<t>From IETF draft 09 -&gt; IETF draft 10:</t>

<t><list style="symbols">
  <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
  <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
  <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
  <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
  <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
  <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_ep"/></t>
  <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
  <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr-proc"/></t>
  <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="exchanges_uc2_2_vc"/></t>
  <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges_uc2"/></t>
  <t>issue #130, aligned the usage of site and domain throughout the document</t>
  <t>changed naming of registrar certificate from LDevID(RegAgt) to EE (RegAgt) certificate throughout the document</t>
  <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
  <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
</list></t>

<t>From IETF draft 08 -&gt; IETF draft 09:</t>

<t><list style="symbols">
  <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
  <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
  <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
  <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
  <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
  <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
  <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
  <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
  <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="req_cacerts"/></t>
  <t>issue #94: clarified terminology (possess vs. obtained)</t>
  <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
  <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
  <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
  <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
  <t>issue #100: included negative example in <xref target="vstat"/></t>
  <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
  <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
  <t>issue #105: included negative example in <xref target="estat"/></t>
  <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
  <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
  <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
  <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_res"/></t>
  <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
  <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
  <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
  <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
  <t>updated references</t>
</list></t>

<t>From IETF draft 07 -&gt; IETF draft 08:</t>

<t><list style="symbols">
  <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
  <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
</list></t>

<t>From IETF draft 06 -&gt; IETF draft 07:</t>

<t><list style="symbols">
  <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
  <t>smaller editorial corrections</t>
</list></t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
  <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
  <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
  <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and an Pledge Enroll-Request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/>.</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
  <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to Registrar-Agent signing certificate using SKID
in Registrar-Agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
      <organization>Futurewei</organization>
      <address>
        <email>tte@cs.fau.de</email>
      </address>
    </contact>
    <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens Schweiz AG</organization>
      <address>
        <email>ietf@kovatsch.net</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y963YbR5Iu+p9PUUPvtU20AYgXXdnj7qEpus1uWdKQtL1n
9+ojFYEiWS0QhUYVKLNlz5oH2Xut8yznUeZJTlwzI7OyAJKWu+UL7WWTQFVe
IyPj8kXEYDBYa8pmUuxmnx0d/+kwe1s2F9nLSTE+L7Jymh0V9ayajot59mU1
LrINemjw8ujL3lp+ejovruQ9/GhtXI2m+SU0NZ7nZ82gLJqzQT4tL/PB6bx+
Uw5m88vB1s5aPi/y3ezFrJjnTVlN6yyfjrMv82l+XlwW02bt7flutvf88Mu9
7Js/rI3zBhrc3ty+v1Y38OCrfFJN4ZNmvijWytmcfqub7c3NJ5vba/Xi9LKs
a2j15HoGTx0enHwetreq81He7GZ1M16blbtrWdZUo93s4+ui/hj+GFWXs3zU
+A/q68t5cVabD6p5E34CQ5xWTXlWFmP4cFrRU8289M3ki+aimu+uDWC94cXj
Yfb5vCxqeI4X87gpzs6Kqfu0msN8jkscbp3t/QE+0Z2QD7mHooAeXjRNNfgi
v5gOjsrpefYQJ1E217vZl4tpObqgOY2hj48fbz3aecJzXEybOTzxh2J+mU+v
4aPiMi8nuCg0juEZjuPfau5rCGsCjyzm5W520TSzevfevbdv3w7N1/d0ZifD
7JtiPi3mbmonF9VlXvtP/1lTa2gcg7c0jrtM7WCYPStyP7GDSVk1+hHNar+s
R1V2fA2reGmncQRjbUr4K6/rInvkZvFNPpmUdTGZFFM3lf0vBo93Nu/bqRzD
ef17MZ8AFcPHsws6G+uf3N/K7t/PHj96nD2Bk7HuZzqBIf3bCMdC05Phfzmk
ceTzcV1N3SS+xI+KSbYffcu7BD0WE1jG7Lg6a97Cscq+qeZvat/V5Wj+CbKA
f6v10eEotwuq62m+vrc2qmBi5emiMUcCVvdp+dc3fnXrN5V+QoM5rE7gvXox
AQ4xuh5OJ34UBTw7HMOz/wY7Ej00UDKsYAWLus4ORm+KeaOtfr5oFvPibVEa
QmmKfxvVw7N8MRwXZvX+VF3lTU1UJ2uXN81FCbRtvgmo+3h0AS3/nalcWqfV
eiMvDKdFs3ZVTBcF8qHzebWYCRvDY4FcNeO33tEf/4YvD6GL7/FpYOKL011+
bPD2/F7EhdemFZyApryito8+33/46OG2/3VHfn20ubOpvz7YeiC/Pt55+FB/
fbi16X91Dzx5or8+2XlIDxwOng7NdfDXt/XgqlqMLop58C1MGbbobFD/vZkN
RvU88er8bIQDOC3r3bVyehbNY/vJYx3bzsPtJ/Lrg+1HOrsnD7Z1bA+372/p
7LYf6AOPN++7Kd3ffKS/Pnqy7WenDzzZdK892XIr8WR753Fi4Lz4eaFfzd2R
GhSXi0GRzwbV9LSCj4Cd6UMFEWTQwhgP71UBhx+fOTg4GDze3B5u7R3h33Bh
8WWOX2TyRXZcjICQs6fFVTkqssMx3HN4Ic3pBb1+8PeBHKdpDc0smiKrzoCV
FSO8r/IJXZX8ZwUsFo7L9LycFsW8ppf1pt56PNh8SJ/UBV4VuEvcPI8XWTIP
DJmykx4G+SlyQbgX7Tw+3pNP/YPZy3kF13I1yV7AMlyVxduPTf9f5vPRBcoL
2/QhE4h2//Lp556Xw/M5Ng0rPNTDc+8SmDKs/72trZ178CJMIJ/U9+pJOS7q
AXwoW7GYYW+wYbIpKDUNZiQ1DcrpYK5S0+ASGLeRfjY3kQ9MZ3lzIdPM5+d4
DazrqPBM4xSApv2o8IN7l/X5vTrPYYxb8yeL6v63//H36YvR2eMHB9dvNo8u
Fs2DJ4/vrdvFWx8Be4Z/YZjYYwY8iaYL8lk1A7kpPzsrR7/nV3jjUVxC7gIP
lONpPQ4H6VauuComFYhQQ3mS7kJor5zi2sERngKRDMZEb3CtlvMC2evkOhjc
Hr+LZMmtwQXHb2byZubfNIP8Q1WdT4oOAluXtRvDZNfNvV2cDnVVcUHh73tA
Izub7uc3997H7OQNEknPkDvfZf3yeVOOoMl7NZ5bkAYG0HqwdMfyBUvrz4vm
LVy97lzUP9Zi7WwDk995svPopmuVnsnaYDDI9LSvrZ1clHUGqsMC5W/Y+jPg
KXVWTC/gmiaZvAYpPPusqhp8YzZDaS8HxeSyAgYlrO1PxTVwrTMQomDpR3ht
i6rS1wuph40U0/x0UmSnQVug5YxB/IOrPDsrcngXP5xWsH5wcCbX2aS8LBtY
I9n48goX/hTWvAChPM/41BNvbC4KaSqbF+ck1M2Ha4dNVs+KEXBc4KHQHrD9
6TnMEJ8up8BiYBVAE8mQVUyys3l16VoFXlI2ZY6947f9DASKRQ1/QQ8yPZiV
e1rYDo6fH38LF2xBHckoYaXhVaAE4JzZvJoUw7XPYZ4gqtT92yqAOPh5NV7g
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
mJfqBMJLqppfq6Hppckt1QXreqlj2PsPU2KWzAk4jqaai+U4Sou2Z06Ef5RO
BFzX6AmbkCmC865Np9VCaukowKNO4OadDXW4FRpIh2tfzdBUYO1gcCarRhAt
Zm9ReufxaFGodr7jvLHokL0oejfbQPmi9k5e8o2D7jSp5mU9yBtKZtmZ361H
YxBPkBT3cuwNm3LZLEVusdykuwA2rPkLFDMdKwpBeKGyhXLnKR4Hq70xZhj2
WYQ+wXhQ7LUPt4WVVXNE4LNhz4IqIj58PCzGyEkZsJ7sRQXkCxznjHgb1VIJ
S0AJeFEEPX/wg6q2Lu3uUnhwNbfWZluuUS5vq+/gfFMzJN1k7SMn+tWR7Pfu
ozAEi9UTK5J3pHTryLZIEuwM1d1CSyaa3Kmas9LlTvDpsGFY9ypfy8XWsO2J
hVqNHZINi3GPNSfhZiNNjgHTja889qIxlZo0gg5HyhsUAA3N4NREjwmz+yYr
9jPQFA9AazpH4Oazgx5V23hegJLzOd1o+6H76Pnn+z1FlpvWqX9aE4kClzRx
iWpqFVYRaWUpX+lvQvXK1Sv2zY4Khv6KF1/ztQQ3DkML0YSGheO1rp4327lm
XZllAos2+bVnNzllLhdQTZwi2GmI6tntiBRs510+MfVdl92gPkWuZPP54zfH
CsqiMl+1LxIJ+4f1s/Tr/c9eHJmvez59XzI989ILuh1H10anmgDIs/Kc/CNw
BYJA6hGE01YBL9/7GFHc/sY06Ip6cVr7kkYm3D+MHm/Xdfik8wP71ye2DkYW
FK0Y6Cc+hlw+kL/lL4rw+y6q/ID/ceHkccv+EVCUzAukQLyveYV1QMzQbvDJ
IXJNtLV9p8046+NtmvF/uNHMjMZ552bI1Er6152bCYP/8edOzbRa+d0PWJtb
vJRs5j/bzbQ/WvHJf65tbPVW2DveV0/va968mdWsGSIQ5u67IDTRvPz66H3Q
hGvmZ0AT2y2aCAW9nz1JHLwfkjj4+ZDETs9FyX0dRcmZgjCnmEA4LIHa++CI
JdEMb/ylEM/qDVu1PX+OpcJbNxNIiv/Th8f8/i83bua2jGklzf1ZAuPZkC8j
uUMzUkVFwJF3beZmn9y4mUBE8JSgS3fTZkL54MjdLbdsJvzzz8W3DeUCZ1H0
8Olf7tjOYsaofzitDVZ+vXE7dnVUPvA/y06VffqnxvTu9zpDg38uTG8DSb33
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
6N/nOeg7cswu/n/23nW5UW1LF/zvp3Cs+nEyKzKzAFle6VXn1OmUBEjYIIvL
RHCyYwUC0kiAhCVsXXbUa/UL9Iv1NyYgIV9y5a5d3dHRXRW1I5dtmMw55hjf
+MaYl3GEFPLBLyyl2S68pBfo3pp/bjfxxz//8yXf7PW5EsB/n63/DY/YdFid
kJtzNrqD9MPmIz1bhkX9yLcNT97yFkaypV7+d4Q5D/8brY18Wa0f/q1+rF9t
4fmLp1r2Sk8S+vbOEqFmnNPBBou2wMeXt/Ee7OPsvtP7dvePpk2NHSejBsR7
WhIM9y8wkZ+Eqsvi1d6/fi48x84XO0F4Lnb/YpcB3X/55UI53i5UNRTw4iOb
417ns5P31AK/VYg+3dQ2bbOUVshH1++vloR1LwgOXj8mLdCp5aq6dYBPZBbs
49YZguaaxrfOkVeqQMFcyY9jHc9/cGM7XiBYjZxOclTbI8oqTo1fZHJ+5fLa
t+8Sr+4rqJlenfOu+ezrzzTHuegv1Ke6Q6f99638ebMF4q0utQsU8JWIF6cX
ajpgjE97IINlVVvmZTzOx1N1n2/A4O6Qeg3vVSfJNrRj7u1TBptVOD+lU5oB
zzdNuZr6SFWrsO6vt/SXZwiqxuvljOB5NY+o789xkJ1lxuhy1WYD11sSoDGe
toZXBdusb82EvKsmTcRQa8erAGXTKn9LZ/Iu+Q2anFW+IfNWciOab+jkIgEG
L789WGXx82cvWF0GZUkXMq0vP0AWv60Kiks3lAhazaozE799/NvfVssCTIMW
dgcvC8wdOWB9s22VVfr0AoxfZCzr7nDG+c/ttch3jsC9UZ2l2VjYZL8abb1n
ZlMDnYrtnPJcr25Qu7x8dayimun6zo8XN45UmkF3TPBbrNqZ3WoPGi9mA4U4
wVeVEavHxIOEStlW66ocTH2eDK3P6QTl83y9WuY8Xru8/Lb5C0j5C12p04xr
0txDoy5bMFweFkCb07oUVHv8VRY3DjbzqhRUHDzHm2i9olEeY5FjI8uYx/18
LEDlcL2valdcXsq8Zv37jx8f5o3OaeNKXJ2crTIJW9pwlsZVWedlBeGfpVpX
N5cfvpn3/2IMLjG1qx8Q4se644AEvhGQNu1+Jo09KvFpOxn9+kutdPY8p1xu
XlSAVzVS6UDleiiHXtszbRE804Smkfbi7dkD5+293vzFp7e1qe5F++cn2BrR
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
VxsbufdDhx6eoEoZn/yoMurWzQAUkWc85jnOHbp3UtNOpaX8M1fC7z/T0iZv
/S2kDTOEzfzQzsWFG9cJimye1iucwTKtudKakgiEtPN4yzevQ3XIw8zDJ6oD
11sTy5W/XPaDdcHvjfl02U+CdTaPL2+Dpx8Q4OUHGT/vLy25PxiZdVMfP13q
1AoCrMX/+X+s0+wJcqsfpOkZjPv22LTOng5Xl/Y8W4VB8+BobJ+1ON6k6FIf
LniJiCb6dDmMl9F6nqKXqzBNgqdNldkbLR9Wly7+dlxhnVO2q3gqGx0Knzik
X/ID53G917DaAghr+EHrTKdMfPX9uoFt0PIemCqNdApyWj0d5ujRYJXPl+iR
TSt+VW/6yZqUFoKywIOjjDbkWwQcfAkEM8EZtLxJV3DFi/RI7OmesDgums8f
i7Hm/PPVCS44D17w0ardBEUgqz7fGc61uoFBGhlfHC43dT6OZ+oaGzp//tUY
hyvaJvE0v7yb86aGCMZj/EqbB5XSff78mRedqTVQbrZ0/+2fmt3d1anrTXy+
3RuGQJ8Izu9UJF3//UaCrlvVIdAeZbazYJMgGMzi403Z9bbZdzYffbhn5sfL
z9Ug74+Jm1dJNvvlvoDWjvLG4W2OVQiCVlNvR6Rg7D8/R1xfz9qsqm7oJEuz
c57yQvPNH5dX11c3kHxJ+3D4vuH/cf5/tEdA/uPyv33/b7TOGFd7uLhOQBch
v0sS4OWLl/7HxYvt6tVG5nivFf7UzO+m/nPkGit/OirDnO0ilx2ivrgNc+E6
ym9ET0qycD66xvNJ2DGycGkWM+nq+8V8PNcSX2JP1dM3V4ErFtEwnd/1tYM/
1QrP3ZazJSu9nO1Hi9VcH8h7/TARjUV4NbZGm1He/X7xPMuNjP5qDwzNWvir
cGiOJkJmzoTulecq87GTTCe2cDOab+deR8u8qZn5ffF5hj6NFqOtvhh9vyj1
waTUF76jD5xr3fbwv/DJOHzrunP6jrL03a5wN+3tZx2/8FWWVv+dFDM3E2JL
3Ptu9P2iCDvm3oMcPIntoz7aT0XNckZCkBqDCcsKX1A6lqP1fCEbTljiGwdt
7mWFMXFvhhPB2Jmi8f3CMAZZf+KIA9sxWSyz6wnT+r7QdSep8mw7xlq3mTnL
/GuPheJM1Q/2NJGZrOiTPBqzVOt5gvj9om+m3a0vR2jBvJ443aYFw3a0jZPv
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
etqVhCr3YlTTPDCouvd6jn7G9Vs5FYrmNlSVSMesxrzKYzXs90tFJrwcIl6D
PlbAFx0LbFZNv1kU8sPm46cKAevvt4oj8rL38a5oysVu4vhTdZ3ovORz0ipN
zkt7VyrdGGRddi441flclVVd5VM1RioZi0/u61pevNQija555UV3NpdUJA0f
TmgSyAjnOfq0WVFxxXxVV/18VSoXXd0kdem2V5NQ3zb6IXnCxz7WKEMF7pMV
rw7JB9waKZfvOj+i5Z4b1qYMqvLWc15deFlWBUTrKu11rdGgfHsSvrRxY4Pu
LnltzIkZckPlNZe5YT2Vq7wqNzvnBTw3q7wugwZRdiqb6X87Fqclp9WuVL6d
Zxmvj3xeA5PjL1qlKsiv6xH+T16QcF3++FxK5frhcxnsVstVvv/cbuNzsAyT
FRWia0rgXX0RmzKP9d9qfKd6WfgQ78uSdJure6s6ag0tbjzjHapfro0KoqZi
gpXNRHVZWZr4TY4mimS1jBtHQcWzeU1nXvXzlb+E0Te4V/elEhpNw6my5bf7
0eYMWudLkANeZXnJIb7tAI6lWOu6rdSFehhVpd2m+CKXyssO1Bf1Psc1gnO0
I21vQ11VML7dWsvQNiVVFn5hNlVx5EaOdZHm+PLbMlpTEVLgRV35ulaq51VG
lwnX2hhchngbara+tKkdnZdeXP9RWW17DFD1OCPRH3H1VBuZivWt1sCmksoL
1666chCko3wsVMzxaZPQ4NdxvnqutbyiLKSX8wrk1nDL5EK576OaeJWiHl3z
j2CeUcroC1SRalYG1UC5FOhv/w52dVWZSj1GEscQOvTH5Qdo6B91KWyqfFtN
8b9IH6mnQMLsWNq+diuiKJxU/vcvElT+klfIJYCqCv9WLn+1rgdOWFVV/57T
kGsVyuY18XhY1QX1MKUxlQaEN+w9lZ/qqra8cujmmKCvv8LVJyC/UTkPKq5+
3ypuHRAG5nGr7PmxeHB9H/RZZWPdsexqgn6QPmGCmoLVlZSar9aeoLlSetMU
3tscp/isRWNsk2aQ3qTzJYdvqsvM6xpfPgNhnuAZktWGW+5TVdebsOs4kn/h
xRJbNZxfXPx8ZBy1Kz7yqlZPqPo0h4eaTfBq9Z/vTf1YKxoTyb/zVaCCvvw/
r6463MlU5ZFbnyGKxr9wHEj0ciQA5u6Xy1M/qS7nDrNIhPsWzsPhyy4f5Fvn
I2+JyKLrurzOM3Hgc4ZGvmHF57jyy6da4NX43uRHsPlXv6sqOc6XdU8glhm5
qSiGWcEsuP+hSUS/TlzoVNY44EWAv/CoZ06wwylxH2yISkv/L1rvkRFFrQAU
6BhNMFWnLeP/HYEOQOPPpHrp33n0gTfp5dUyjOFi+/B5pwLRFxcKKe1ItpXL
aB38KC9F6fLzv539ogOS/M+XA/6B6LKO+iCWxi5/a/ZlfaPhAxb/eK/6pL2e
PwDdLj+UdNH6b3xC+JIZQKciZMdS1vTEpxYs1VexAyLCit73B4M7dMspKsJf
Kcvn2oRrJ1s0hZ+pgi5nyHVMWi/HbS4/VHHJ5+qBT8eFweZnDin8v49rhV9a
X6VOQHOf1iGhR1TN+ENdcJpoMy9py2OPilvA8badyxviF1+KX+Lib74YHOvY
xlXhUo7nPzLMxWXM68NWlVE3eOdbZddU1TyJCwwrasqmcj4gXX64f8ooCq9m
55/EjvTxXzkKAodhW3/wi/Pny1W2eoAzoni8qkLc1CaGGVaFV+u+1GDfBF3/
WmllPaMUyBMobiqcPIYt1TDpDxS7/Cu5YGh5VVT8B6cDFJJimCTsTxUsAh14
OeP5pq3Kr4UpvBSmyIXJ16Ev/+n3m09wDcG6CuG51XG8auF3bf1crXacQp0Q
rY45idg0Tuv44p9PofTnOn4gjnb8nigA5yrnS1oVF5fXly/ZBgYfZXVFAP5p
vtBLqnYepPLovinAHtTUvuYLHFx+YO7aUfff/hYG1MAGDvrUI+nrH3VYik9g
NEf7AwUNImjrMSvQTO5LosfHHazDZE7pZ0ADFV04RbpVOV4SL8mvKjtrkqqJ
rV50BHql5NwdjyKMPLqL01QsuYuFVGbrTTr/8+Rw4orOn558WXqh3VOwgoBQ
gkuhmYunJaf0vEJEDJjkC+pd6avQemYzL+O2PeBPUQ2J0VNF05pR8g9V/fsz
LviXTmp2rNrQ6jCP+uvonUZU6digrYVv6tZZw6fmKBbkX9/8VBTnDRZFQDPX
jOkkC/RHNb9Z96RlXDsrZX/RR3QlOMLNsaoyn++6BHYbnV6bqnDz0lSF9031
1+yTF9lodHu+pIihZvQzCiJ+PPENJqe24iWGF9ZQhoZB+GMAJa9Dzrv0CyZ+
0/n0s29ScAtVKckTrbKnxj3lpPHU3UrQ783OCyQ5fucfBxD+xbfwQbhufaeV
ueXSJtsD9K64iPKGxJ4UvPa6xx7xrzxXv62Lxv/tb3Hzc+urIr5azwbQYGW9
dOd/+xvCkT8hzM3naPUC0IRWh6npiqaiU3UyskniUlBbM+2aYR+7eG66x5al
T42zmWd1kvLNdMPZvK+WLYEEVb7kqMf8a2XxvD7/EOa2f3zmiRNYChURiq2J
mD+fUrjVd7i2oqX18/ozjeW8tSsy6gq4jkBezJcUaEUA+fl5ABxRhB/wFvmu
opubbluhacJ2lYfecMWU/nx+8b1u4+OIJsTLhzLh8RjGs6k+fsw/U434yrtX
TuSh/LNY706a0f7Q2TfIX3A6Ekd11ruWEQdpXs2+GlmZrFdPDzxn0CYmhJu8
6Yi8Cs07zwg309SWB0ewO87vPwBFvz2UH3lhevny+ONZqvQvPni5687offwT
PLxR4v2mcy3woT7VfI/T42N5eEBkezXosvfNkq+vHPPuA+0+s5q/fHwDX7++
wFfhpo2vX4WWxb0JPlUuqNbd8KjcVUGgt6ygiVG59mxqxeMA1/qs2PpswwCO
qR5gSkmps3kdBXLz+bMqJvQnxBO0GpJaZn9chmkWUupApWYw5J2els0YgEzp
r6z61J7mrJMwufjxM5CcPGeltC+t+WvnTLAl6NRRwfmj1UiXqyrPvo4/nzhb
q5Xf2+7vSHnPPczb2dk3Mebr11Z7n04rU1TRqfVCtYImH3/H+07p0jpGqMT5
Mn325XL0o0pQVU/R1JZVjmLWCj2bDh/tru1GxVfMvOWNKanTTgtSj4Jsw2Ps
Jjdbr35Vo2pGwAfAOd2mysIBqKpQ5zLm4TQlz3kXNkdeQPLmXNpV7/qXH6oo
sI7pa/1HG9y/8aw6AWdMCx5ivWWU/lv6WCfTah/DnSX5L7zxIlzdtKQg/XGZ
Usx+HHm8jIrVvE67HB27ZZ67Ga6Wf77hzm+u/miLtRXcfQBJ31A263nz5XI1
q6btY+vNbvvNo4HViY9zakHByKuDVKeWrv84gtsR4X/MHzjSdKoVAJ7KpP9c
UGqVPNJPyEur6d//OPLXyi6qpOKyWX67PPddnTq/QPoD1cnnmwyE4LzJmz8a
FHpJtMjd0GpQ1NqtjF833q0iO9UP55RKaIdc4CXcozc7k08ciRKprbfE1lsn
RvWj/ZHjt0sIIY9Lzo9PAEFplCq79bOqdi/nSxSghRSc7Li9HDN/1XpDPS+b
X6WT3b8ce1yPvfXS762Xmmfp422NQFyxOi6zvkMrha80EoojI079asdbVz20
KrbaZENWJFr853p/Tk3b81CXEXyZXWrxyTr1c1qmPyZxq26+8QGIG0QbT/7W
bKlI4/3lFkSBXnnnkxUpxi8Rkbzg0p0/Tg6ozaNJf5tWCKOoq79R+m613n+O
4h8B4Oq3mlm+0U1ASZ8ALGrlB84cb0XK8P59vf/g7PFNu63uP9hWDfjk50+r
oNn+uPOBx9YvArLae81Wq5L0vtpMn83TuJFK62G48DJsJ3JEgJj8XoBCsJ8j
UHqox1IcOe5xESU8G+2m8mMt1neMvjdvZLWE319Sua+cyh292q/6sk1JCxur
gtYZqgeP/vBju70f8/WmfBHUk+xeZhWD6ktPPAdAk2WCaXQbL/nNGOnfLh/A
dp5mbwzq+uWgfueD4j1tL0QFVXSBwdV0rgG9s/CdrwDBEZBeV91tbwaBuvDg
pnN9PZtvPrVSnpSxPW+JZjN4esib5PTmxXfbya7Wr4+1OCGUbUzrR9UmBYRE
lHMIHtZBTjawyfFF6v1xzmr3x23ktZi6L8V03UoP8zRrvbRfzUm8po+MKrW9
BovcJKs1DCQ+Wz9qaEVtSMQ2aoRFJ2Acc05Rimy15zKhFhsILDmV42s00IBT
Q/Wkn0hJbW+khlxZ3k4nnqWRarX6y2zS5Yc2lTkLUTC5LWto5ao//vWXRmP7
P+dLr2fx6uUsdvksmnGTWefB+Ulb610ytDQPbSsbxDjmeFazBWHfD1ptIIU9
EgS+fnGc8nbw8umYWpOqpQLKl7yJT5Wnr1YMeaaqWYYHJS/ikCTwdgh4+kQX
nzilNN72YdWSGcb8lHFacHq7w0VTpWF5DMgLyn4m919bd72uRDEh35hB4pph
7Nt5RDsOeXqVpyQqXNjRGOtQvcHn0+co69uv0wPt6SYpnDIBH19ukTqp+t2r
5cBmJeu41NfshqhWk6sXjj24vj7OCBnVcWf3MV+FYCCnlM7lh2oPQPR5tfzI
EReRDo2/Xkj8AdkmS07rg2weBWfzft0W61m6t/+td6ms1k/5ZXC2xEECaC3o
1nNPnvbUKM300TPG6zUHEdplMz/6ucvul+4X8fhK5+YT3rtqv/eeHvJwvPbp
5386tta9OeFdV2iZ+GxfDXJdsz6eN4IDnB/is92JzcbLUzNXv1cnA1+y/9dZ
Ib6HkZYpfqYLTW6q/43Ln/a6vlA0tP1be2Pm/1XbtS3HcdzQd33FhHohU9wV
udQlcsoPiizHLEkWi5SUqrwN92KOudzZ2llKYvzzAQ4uje6ZpaRcqhw5Jmd6
+oIGDoADCJd777DaS6NgCv7z8LCZHf8lIxffncmz+E22dVaYmGdg5a/J5gib
hCdIMlp1jEQuo19F08X+iHPA2+srxLp7Ry9aKfxkkoThKVLNC0QNokWB8Km5
yjGbwzX+epLEkyfxuw5hD6vTF7++GBKs9Gge/z0tXA9Rhx1TqxiEYJ+7/Fv2
JLlkCRzYTpsHw6WgSW5P+DaetWeyTmWMMfDPNEtGU/WwfEaCUST38GSCVT18
HC7EST+sInQPV8oSS5kCtghr5lEnTAme1+J2A4Lr/mZ+kIWp7KZMeuMnijcr
EcgV7pF4nT0TIAxx8IU7kMudBWgMSGYbk52t6KZUeflu+kvNQcP93IDSqt+d
bdp1yWdmn/F6XgaxwnJOessJI3RXfH+Y44QBlIzVRB6Q2SU7eiG4yEOZN97d
raZkjlasjA6ru/mWnY0LFbEADZUAIhsUQCoITTwFGGn690yTFOMB8HFSgo/H
AB+nzDGbr+nEgHRIX77qrtvqp+b364rjIviICtdkMnr49PgwsAb5r7FHTlu2
XWkQ8xmvo2E2FvYQSfuU1uePKLbeBZ+xlyETIfxg4FsZh8MN2K6+YgI6Cnp1
z5TJnoQJAUmDX+CX8TgZ4DzgnYu0RlglILoEBYMDqPRVtsOcqSZBBLtxRQr2
Npne42c+fh2SVBh9xTydJWy2OjYanqqnzN9h+bBR/pJvrmPHXBkRGBjNV5+Q
ltcXnwfL/3vLUYVN+0XTzLfTiVB8NPxbZ9vKTCTO/SWLcuRLKYILivJevpAA
kSvy9ZJuvGkSB6qSTPvUSMFAmbQMkQ41sykqn1bqEae/Sji4dgjlLP6kSn0+
+0Hxe9B7wEgcONpOg4RA8z1zTpvFpAcHHTM1c/XlJXsXtYcJYuYoRIkDzJpM
cuzAqe9VJBTExJK9I8FVyPNdRU+u55mvELwA0Tu5e1MJ/Q6B5sxZGtAwJYXs
6CTjMLkhZajK0l/t8eBPHwNmzGcEVm/nP/4o/LAvT6ZVOyU8qPEQN8iSuaEh
Lj7+vSJlsyZdxGZLazfc08z8KhU1Bx/8/mLJ9PNVddXQe5vp1V2EolnEE5Gd
lJNqsgzQoMbO6FHfsYMlC+xIWGBqmI5DTjYk5Qfj0FCgmRs+JO/pZ56FfVCB
xFui3hvOYgh+sepxZkJlrPY0WgqARyRV0P34mO/vooFHTGyyocTFSABCuGWq
HBZs/5WmhTgFXwAx1LWFfUuOIgdsV9UAos7WpQm1oEdTGC2QDaJ68417eXEu
ovRKuIfnPvmZCGg/LqnBIyHHL6ttvfltzuRlS7+m0Ds45bgCdBv6zocQs03z
uA5ss1qvXj6Nd/8GzHRxSBauv2PaZwhrlAS8o+NCjg1Z9DLFXk4nMfTVDkFf
FBpZV2LS72mODCHSwkC9pj8+164nh7KnwZkuL8LZu7Pe57sMuu+4a0USaswb
8jdTDR5hPtQiKD+jz6gdkYMbtETGg5svG6OBRf7PgEj7pujB7zMZpF3RgB2W
DkJ+dfb65cXD4yMsp4HrIkMdjIUXPG06JQNYdpnf5TvntnHX6clhpZmlhjwa
0dLsVMoRVy/kKhR3Rzj6IEHG3PT9F4E0w5RhpBRNXd42y5kMDsp8dHis6EsP
/3bbWW7ZrmRaw65deWa7YgKVK4Rddx+hI7cc9y+qvMQyqXwl+YXlsBzomUF9
PXwSNFgp9c18uxj9a7sebe/WpLEkMUMzlOcI71fom8Slcm27GNE/UyWeD+hP
TOCXlnTMNXkeYBx7nG/JXsxdCODEPAVQg3PzRbXMGimAGT/oYSMpGrvJyRuo
uJP/q1DVcvubEVdw8jA/N5z13MuimnseDUHE7eP5o/OP5w8cPZECaDcjIamM
Sm/Gigk8gFdgZvolbaBL+9D7qkmwSpQ9CMpNv2Gz191eEvCWiCpr8ETxoOGR
YMBKZQ0hJ9ZpTHLtNcutK82x211T0cvmptlmKaxq35zjJR2oWDn3+7kCor6G
iNyux1YjwBRu/jGqSXvkFbXdxhk5qPbNdByJ+nlhJDIIpLPCEEcIqXjyID3b
kyiuyArSdIJojf0Ljw8yoJESHSnJUbIFhZ48325heaITnoEfpwNKJZRCHJrq
9BojlLsgqoHx2JsLQIruijdswL6QemS77fle8eQeVJFNZ1yLerk09tFWa7jT
ZMBOp3/zF5dceYY1vNqRR/7uJdGMMpWWovp0aRDF37U2erNY3X+0Nj701S4I
mBZsaYBsfohpcnyUrNpmU9/lhR7Ji1WVyzcuC9ul+4Z0M6wIiRy/YhFTs+95
iLk3EmpTCyCwo1BfUkheeElDpW92BbEz38V9Z3bSjavEbAIdulNtYSnVbgjy
kAa9NUoHKlzZbtSr5qYebRZTvYuCoFOZCt4kRAYk69896CmeLBJbe5jt6+ie
5o+Yhh19ghH4dR/BjsK8UXcwqjlWpyS9UYilxWfWm5vRkfDX38KafXg5cRIC
194okjODf+bBjHMzQfTiTCKJNOdvnAqUdYhn2Wn1DkriOvV6m2IO5vTrpetS
nSiNAiNbMBwSRYEf/fDyeJyf5YLU/mWt17+0Y1nwEqZZIoMts0/4ioec62F1
M69Xn9FpQbAByLL3CFXMuTdFZ4ki8L/PlxHNNIQWJCNiX4s5Hyiu+NpzPDsW
iPLnLBT0O95NUxdqKZaN1GQGarTJypxLGbUuKpo2WHFPzdtb+w8nR7gsHyzE
hGmWE8G0Yyh16KkHMC/OrTDVgApuGV2hu+ri4vXc5NnLOOkgzKv5lpH1qGNA
Oe02o6OnAXoKWilDxjRfflLgJ62+LVwId25szkNu6Y4AVYSiCScMevaY1uCe
JfJs15N78uGiASv74ZAzvMh3LoJeGttU63w5VHcVpufcesbjHE5TE8aBXkZt
UnNEG8lgtl53t1p8JFn+i3++P2MMqVr8YGgLd0SoLHfHaeHER7AsGesCzg1s
6qlrHtKN4+qdEhhgGiM6kMFRKPru4lUlJjiVEGjFqaq0VBIAFG3cXvu64gG2
X2vaiHp6NVDRoND6feR54Lc/eCDV/AUp56Bt6EcNeAlyu6WvD7dsLZ+yiq+v
fe+kOvvw5s2jsw8Xv/DH9OPaKKFVZ6UKXPXCkRHsjcmkmnX3E73ATwBPxo33
bTJ+fEie9RGdlVQg006aWlsZjc4uXpuedUzHuJIpmpek/K5u0LBXTXPXtdOm
IMGBaw33FeIAsVnUn1rt5CNdkyDrV81v/NiyvgtaSypDIBrAlioPiIVx6XT4
Gc9iE3OrDHTUhuxAizxri2LVPAdX2haBiYCoaMLkmiFDWbhHW/J5hEeFBhOD
3X0G6hWi/+ijPj4kr57+9/ygKObJFYiaOIlLC10k6BTwiEZLhNMyuvcCNrs3
l7y0fttyqK0bmNwznpSijB12WpVi8N5x8IGzUn4dfS9o0hEwq3J7ffqTaOqh
d0xGbHInzw5y1yck/JNV/Kb74Xa/F7nTjHiporNUFw2QEPFuvfXfyI1HATUM
9A3CcrEmB5cPg/Pg8EYmQfXDPLMdcVS5Y97fGjdONEfJXzVZglPT4EgOQaIk
PR2z/jAVHYpJmNWgUUDug7JCHccq5HdoACG+2cpCZKlY8pAxll5GEGK1SLTh
qw6hv3sarEXbMg54uun0iqApGu3fikBApkIHRlUTpWOnIy5IqR5jjjgrjjOW
YBjTgAvX387SLkYlwGxfoj6oc+H9OniQGICJph9KlteJaRiwXAq1ABVIYhTH
lO6PQwVe0UgaWKX3pFcOlCJziMEgToDr0Ti89OH8lGxCEjE45kvyOrebrE6B
veCsMYrV9tGJP4Jn1mu153je5sWmyrpabOtr+pP3wSyNdCHAOs2XG8cEarKM
OVp8f0Wb01X/mG9WqK+MS5UYiM8sjPuzhEZnzadmxp1VtBXDAFHk6IeeK94/
QhaK/+UJ4iZzJsSwgzQp4kYglo1KXLLj8YnodonN+5qwgHTbY2MWC8eDrEF3
mpEMuqUVmXi6jKtBeeABLWCK83jbSPHHTHWxR1N98wtfOmpMv6R6d13L9Lss
zMe/jQVrcr7/hhAG6IXWv0tPqCjOygTp5duzWH2j7bkIRl+RJuE/8URwFek/
D01riFBYoN7aTeohr+ZcAlOTXGR3zI9VdWlIrmvpAM/a3XwvfLMTxv6EpPu4
unB2c8k/4QQEx/kW2qiTLOpls/KOlDeaW+XM2Rd1wY38adPzQgOyNk30aroY
1khAUwIjKtccuPHbgdOF//vHH3/iaPTz509AD+TQCaDBJ24XNmu5Oxuj2Y3S
OjaQZ2eBTJt5F+wQ6CP8telW+x3kGY5LLcynjenWCcvpIUkemSkf2oxg7BSG
0OKlCO+F6FJipqt/YQR1cLvUGkUGxaGLM29OOi/r3aUtEbL70fWkoGMNbH2R
XFY4y0mn++U+jQa/P2OjQNFHkje/yu0tR6l6teh/yVCpeMJsHzY81HXqln1u
UyNU3NfkFGoCvyhR1vGUDenyyarJE5bjwgilSnZp7CZDKHnM63J460iPxWYC
aKxiJDM6xs66wGAEgXnKMkt5QITVgz5KvqIpOcuMJpXKwiLbQCMsUKt/9vp0
ENtL7tt1n4Sc8O49B+HYHKW5aD/LiUiBPAL+0RvupumsdpRlWJrsegFQgcBi
BDUzqHotkrkRq510eceuHbsn4iFCjvK7hHdjSQZ2NTT9U918KNENd0UBZwRR
JD6+f/i+C4CozdGkuAC51tDWHtOlRWGXWuGwDa0WaApa/Mtze2PdU+OohT7O
pAUFqkqp8tBB571vdvob7oblFXQAoqrDB7j8Yb9Dpxg3AHDHgiWKFsF0Utc3
PfdsM9yXns9iaYvDrHZCkoZMPlD5bq2gn2XLYfrnFlciSoddj67wg8ber822
3vjF7W0X42+iYOyvPRKcLL0TnU1g3yi1Tc/0TRH7MDRwOY+9gjhTFqdww96L
pKoabWbMfBzGee3Wj5YBk6TQ/BamMsC8CBBfThptXWviT/7WqRW5LsgUHruX
lcJMuSH6muAZ4vx/yHavBPZbRNoEWoDOd4t0IdB/rn4NQJsMwQZvWCKVPjKE
mgand+mkaNGzly0ZPcaDXDLfqBn/N1po01kx/wIA

-->

</rfc>

