<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-prm-06" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>

    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>CH-8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>

    <date year="2022"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    

    <abstract>


<t>This document defines enhancements to bootstrapping a remote secure key infrastructure (BRSKI, RFC8995) to facilitate bootstrapping in domains featuring no or only time limited connectivity between a pledge and the domain registrar.
It specifically targets situations, in which the interaction model changes from a pledge-initiated-mode, as used in BRSKI, to a pledge-responding-mode as described in this document.
To support the pledge-responding mode, BRSKI-PRM introduces a new component, the registrar-agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and domain registrar, BRSKI-PRM relies on object security rather than transport security.</t>

<t>The approach defined here is agnostic with respect to the underlying enrollment protocol which connects the pledge and the domain registrar to the Domain CA.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a (customer) site domain.
This includes the discovery of network elements in the customer site/domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>

<t>Security information about the customer site/domain, specifically the customer site/domain certificate, is exchanged utilizing voucher request objects and voucher response objects as defined in <xref target="RFC8995"/>.
Voucher objects are specified in <xref target="RFC8366"/>. Vouchers are signed objects from the Manufacturer's Authorized Signing Authority (MASA).
The MASA issues the voucher object and provides it via the domain registrar to the pledge.</t>

<t>For the certificate enrollment of devices, BRSKI relies on EST <xref target="RFC7030"/> to request and distribute customer site/domain specific device certificates.
EST in turn relies on a binding of the certification request to an underlying TLS connection between the EST client and the EST server.</t>

<t>BRSKI addresses scenarios in which the pledge initiates the bootstrapping acting as a client (this document refers to this approach as pledge-initiator-mode).
In industrial environments the pledge may behave as a server and thus does not initiate the bootstrapping with the domain registrar.
In this scenario it is expected that the pledge will be triggered to generate bootstrapping requests in the customer site/domain.
This document refers to this approach as pledge-responder-mode and</t>

<t><list style="symbols">
  <t>introduces the registrar-agent as new component to facilitate the communication between the pledge and the registrar, as the pledge is in responder mode, and acts as server.
For the interaction with the domain registrar the registrar-agent will use existing BRSKI <xref target="RFC8995"/> endpoints as well as additional endpoints defined in this document.</t>
  <t>specifies the interaction (data exchange and data objects) between a pledge acting as server and a registrar-agent and the domain registrar.
The security is addressed on application layer only to enable usage of arbitrary transport means between the pledge and the domain registrar via the registrar-agent.
Connectivity between the pledge and the registrar-agent may be via IP-based networks (wired or wireless) but also via Bluetooth or NFC.</t>
  <t>allows the application of registrar-agent credentials to establish TLS connections to the domain registrar. These registrar-agent credentials are different from the pledge's IDevID.</t>
</list></t>

<t>The term endpoint used in the context of this document is similar to resources in CoAP <xref target="RFC7252"/> and also in HTTP <xref target="RFC9110"/>.
It is not used to describe a device.
Endpoints are accessible via .well-known URIs.</t>

<t>To utilize the EST server endpoints on the domain registrar, the registrar-agent will act as client towards the domain registrar.</t>

<t>The registrar-agent also acts as a client when communicating with a pledge in responder mode.
Here, TLS with server-side, certificate-based authentication is not directly applicable, as the pledge only possesses an IDevID certificate.
The IDevID does not contain any anchor for which any kind of <xref target="RFC6125"/> validation can be done.
Second, the registrar-agent may not be aware of manufacturer trust anchors to validate the IDevIDs.
Finally, IDevID do not typically set Extended Key Usage (EKU) for TLS WWW Server authentication.</t>

<t>The inability to effectively do TLS in responder mode is one reason for relying on object security.
Another reason is the application on different transports channels, for which TLS may not be available, such as Bluetooth and NFC.</t>

<t>Therefore, BRSKI-PRM relies on an additional signature wrapping of the exchanged data objects .
For EST <xref target="RFC7030"/> the registrar then needs to do some pre-processing to verify this signature, which is not present in EST.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>This document relies on the terminology defined in <xref target="RFC8995"/>, section 1.2.
The following terms are defined additionally:</t>

<dl>
  <dt>authenticated self-contained object:</dt>
  <dd>
    <t>Describes an object, which is cryptographically bound to the end entity (EE) certificate (IDevID certificate or LDEVID certificate).
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the EE certificate.</t>
  </dd>
  <dt>CA:</dt>
  <dd>
    <t>Certification authority, issues certificates.</t>
  </dd>
  <dt>Commissioning tool:</dt>
  <dd>
    <t>Tool to interact with devices to provide configuration data</t>
  </dd>
  <dt>CSR:</dt>
  <dd>
    <t>Certificate Signing Request</t>
  </dd>
  <dt>EE:</dt>
  <dd>
    <t>End entity</t>
  </dd>
  <dt>mTLS:</dt>
  <dd>
    <t>Mutual authenticated Transport Layer Security.</t>
  </dd>
  <dt>on-site:</dt>
  <dd>
    <t>Describes a component or service or functionality available in the customer site/domain.</t>
  </dd>
  <dt>off-site:</dt>
  <dd>
    <t>Describes a component or service or functionality not available within the customer site/domain.
It may be at a central site or an internet resident "cloud" service.
The connection may also be a temporary and, e.g., only available at times when workers are present on a construction side, for instance.</t>
  </dd>
  <dt>PER:</dt>
  <dd>
    <t>Pledge-enrollment-request is a signature wrapped CSR, signed by the pledge that requests enrollment to a domain</t>
  </dd>
  <dt>POP:</dt>
  <dd>
    <t>Proof of possession (of a private key)</t>
  </dd>
  <dt>POI:</dt>
  <dd>
    <t>Proof of identity (see <xref target="req-sol"/>)</t>
  </dd>
  <dt>PVR:</dt>
  <dd>
    <t>Pledge-Voucher-Request is a request for a voucher signed by the Pledge to the Registrar.</t>
  </dd>
  <dt>RA:</dt>
  <dd>
    <t>Registration authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.</t>
  </dd>
  <dt>RER:</dt>
  <dd>
    <t>Registrar-enrollment-request is the CSR of PER send to the CA by the registrar (RA/LRA)</t>
  </dd>
  <dt>RVR:</dt>
  <dd>
    <t>Registrar-Voucher-Request is a request for a voucher signed by the Registrar to the MASA.
It may contain the PVR received from the pledge.</t>
  </dd>
</dl>

<t>This document includes many examples that would contain many long sequences of base64 encoded objects with no content directly comprehensible to a human reader.
In order to keep them readable the examples use the token "base64encodedvalue==" whenever such a thing occurs.
This token is in fact valid base64.
The full examples are in appendix.</t>

<t>This protocol unavoidably has a mix of both base64 encoded data (as is normal for many JSON encoded protocols), and also BASE64URL encoded data, as specified by JWS.
The later is indicated by a string like "BASE64URL(THING)"</t>

</section>
<section anchor="scope-of-solution"><name>Scope of Solution</name>

<section anchor="sup-env"><name>Supported Environments and Use Case Examples</name>

<t>BRSKI-PRM is applicable to environments where pledges may have different behavior: pledge-responder-mode, or pledges may have no direct connection to the domain registrar.
Either way pledges are expected to be managed by the same registrar.</t>

<t>This can be motivated by pledges deployed in environments not yet connected to the operational customer site/domain network, e.g., at a construction site where a building is going up.</t>

<t>Another environment relates to the assembly of cabinets, which are prepared in advance to be installed on a customer site/domain.</t>

<t>As there is no direct connection to the registrar available in these environments the solution specified allows the pledges to act in a server role so they can be triggered for bootstrapping e.g., by a commissioning tool.</t>

<t>As BRSKI focuses on the pledge in a client role, initiating the bootstrapping (pledge-initiated-mode), BRSKI-PRM defines pledges acting as a server (pledge-responder-mode) responding to PVR and PER and consumption of the results.</t>

<t>The following examples motivate support of BRSKI-PRM to support pledges acting as server as well as pledges with limited connectivity to the registrar.</t>

<t>While BRSKI-PRM defines support for pledges in responder mode, there may be pledges, which can act as both initiator or responder.
In these cases BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="I-D.ietf-anima-brski-ae"/> to allow for more bootstrapping flexibility.</t>

<t>A pledge which can initiate, <bcp14>SHOULD</bcp14> listen for BRSKI messages as described in <xref section="4.1" sectionFormat="comma" target="RFC8995"/>.  Upon discovery of a potential Registrar, it <bcp14>SHOULD</bcp14> initiate the bootstrapping to that Registrar.
At the same time (so as to avoid the Slowloris-attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the pledge-responder-mode connections described in this document.</t>

<t>Once a pledge with such combined functionality has been bootstrapped, it may act as client for enrollment or re-enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined endpoints can be used to trigger a Pledge-Enrollment-Request (PER) for further certificates.</t>

<section anchor="building-automation"><name>Building Automation</name>

<t>In building automation a typical use case exists where a detached building (or a cabinet) or the basement of a building is equipped with sensors, actuators and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>

<t>During the installation, for instance, in the basement, a service technician collects the device specific information from the basement network and provides them to the central building management system.  This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may visit every new house in a subdivision collecting device specific information before connecting to the Registrar.</t>

<t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.</t>

</section>
<section anchor="infrastructure-isolation-policy"><name>Infrastructure Isolation Policy</name>

<t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>

</section>
<section anchor="less-operational-security-in-the-target-domain"><name>Less Operational Security in the Target-Domain</name>

<t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer site/domain does not offer enough security to operate a RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>

</section>
</section>
<section anchor="limitations"><name>Limitations</name>

<t>The mechanism described in this document presumes the availability of the pledge to communicate with the registrar-agent.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the registrar-agent is similarly presumed to be unavailable for certain periods of time.</t>

</section>
</section>
<section anchor="req-sol"><name>Requirements Discussion and Mapping to Solution-Elements</name>

<t>Based on the intended target environment described in <xref target="sup-env"/> the following requirements are derived to support bootstrapping of pledges in responder mode (acting as server).</t>

<t><list style="symbols">
  <t>To facilitate the communication between a pledge in responder mode and registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as registrar-agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment. These requests are than provided by the  registrar-agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the registrar-agent.</t>
  <t>The communication between the registrar-agent and the pledge <bcp14>MUST NOT</bcp14> rely on transport layer security (TLS) because the pledge does not have certificate a that can easily be verified by <xref target="RFC6125"/> methods.
It is also more difficult to use TLS over other technology stacks (e.g., BTLE).</t>
  <t>The use of authenticated self-contained objects provides a work around for both the TLS challenges, and the technology stack challenge.</t>
  <t>By contrast, the registrar-agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition the registrar must be able to verify, which registrar-agent was in direct contact with the pledge.</t>
  <t>It would be inaccurate for the voucher request and voucher response to use an assertion with value "proximity" in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore a new "agent-proximity" assertion value is necessary for distinguishing assertions the MASA can state.</t>
</list></t>

<t>At least the following properties are required for the voucher and enrollment processing:</t>

<t><list style="symbols">
  <t>Proof of Identity (POI): provides data-origin authentication of a data object, e.g., a voucher request or an enrollment request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
  <t>Proof of Possession (POP): proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature using the private key to the certification request.</t>
</list></t>

<t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>

<t><list style="symbols">
  <t>Voucher requests and responses as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
  <t>Certification requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and proof of possession of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore needs to be additionally bound to the existing credential of the pledge (IDevID).
This binding supports the authorization decision for the certification request may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
</list></t>

</section>
<section anchor="architecture"><name>Architectural Overview</name>

<t>For BRSKI with pledge in responder mode, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate the new use cases in which the pledge acts as server.
The pledge-responder-mode allows delegated bootstrapping using a registrar-agent instead of a direct connection between the pledge and the domain registrar.</t>

<t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.</t>

<t>For the authenticated self-contained objects used for the certification request, BRSKI-PRM relies on the defined message wrapping mechanisms of the enrollment protocols stated in <xref target="req-sol"/> above.</t>

<t>The security used within the document for bootstrapping objects produced or consumed by the pledge bases on JOSE <xref target="RFC7515"/>. In constrained environments it may provided based on COSE <xref target="RFC9052"/>.</t>

<t>An abstract overview of the BRSKI-PRM protocol can be found in  <xref target="BRSKI-PRM-abstract"/>.</t>

<section anchor="uc2"><name>Pledge-Responder-Mode (PRM): Registrar-Agent Communication with Pledges</name>

<t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer site/domain, this document specifies the exchange of authenticated self-contained objects (the voucher request/response as known from BRSKI and the enrollment request/response as introduced by BRSKI-PRM) with the help of a registrar-agent.</t>

<t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.
Note that the Join Proxy is neglected in the figure as not needed by the registrar-agent.
The registrar-agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the registrar-agent and the domain registrar.
The addition of the registrar-agent influences the sequences of the data exchange between the pledge and the domain registrar as described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>

<t><list style="symbols">
  <t>uses existing endpoints where the required functionality is provided</t>
  <t>enhances existing with new supported media types, e.g., for JWS voucher</t>
  <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, CA certificates, or new status information.</t>
</list></t>

<figure title="Architecture overview using registrar-agent" anchor="uc2figure"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="448" viewBox="0 0 448 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,240 L 8,384" fill="none" stroke="black"/>
<path d="M 32,48 L 32,232" fill="none" stroke="black"/>
<path d="M 72,240 L 72,384" fill="none" stroke="black"/>
<path d="M 144,240 L 144,336" fill="none" stroke="black"/>
<path d="M 200,368 L 200,432" fill="none" stroke="black"/>
<path d="M 240,32 L 240,144" fill="none" stroke="black"/>
<path d="M 240,240 L 240,336" fill="none" stroke="black"/>
<path d="M 304,240 L 304,336" fill="none" stroke="black"/>
<path d="M 352,152 L 352,232" fill="none" stroke="black"/>
<path d="M 352,336 L 352,368" fill="none" stroke="black"/>
<path d="M 360,72 L 360,144" fill="none" stroke="black"/>
<path d="M 400,240 L 400,336" fill="none" stroke="black"/>
<path d="M 400,368 L 400,432" fill="none" stroke="black"/>
<path d="M 440,32 L 440,144" fill="none" stroke="black"/>
<path d="M 240,32 L 440,32" fill="none" stroke="black"/>
<path d="M 32,48 L 64,48" fill="none" stroke="black"/>
<path d="M 160,48 L 232,48" fill="none" stroke="black"/>
<path d="M 240,64 L 440,64" fill="none" stroke="black"/>
<path d="M 240,144 L 440,144" fill="none" stroke="black"/>
<path d="M 8,240 L 72,240" fill="none" stroke="black"/>
<path d="M 144,240 L 240,240" fill="none" stroke="black"/>
<path d="M 304,240 L 400,240" fill="none" stroke="black"/>
<path d="M 80,304 L 136,304" fill="none" stroke="black"/>
<path d="M 248,304 L 296,304" fill="none" stroke="black"/>
<path d="M 144,336 L 240,336" fill="none" stroke="black"/>
<path d="M 304,336 L 400,336" fill="none" stroke="black"/>
<path d="M 200,368 L 400,368" fill="none" stroke="black"/>
<path d="M 8,384 L 72,384" fill="none" stroke="black"/>
<path d="M 200,432 L 400,432" fill="none" stroke="black"/>
<polygon class="arrowhead" points="360,232 348,226.4 348,237.6" fill="black" transform="rotate(90,352,232)"/>
<polygon class="arrowhead" points="360,152 348,146.4 348,157.6" fill="black" transform="rotate(270,352,152)"/>
<polygon class="arrowhead" points="304,304 292,298.4 292,309.6" fill="black" transform="rotate(0,296,304)"/>
<polygon class="arrowhead" points="256,304 244,298.4 244,309.6" fill="black" transform="rotate(180,248,304)"/>
<polygon class="arrowhead" points="144,304 132,298.4 132,309.6" fill="black" transform="rotate(0,136,304)"/>
<polygon class="arrowhead" points="88,304 76,298.4 76,309.6" fill="black" transform="rotate(180,80,304)"/>
<polygon class="arrowhead" points="40,232 28,226.4 28,237.6" fill="black" transform="rotate(90,32,232)"/>
<g class="text">
<text x="92" y="52">Drop</text>
<text x="132" y="52">Ship</text>
<text x="276" y="52">Vendor</text>
<text x="336" y="52">Service</text>
<text x="256" y="84">M</text>
<text x="312" y="84">anufacturer</text>
<text x="256" y="100">A</text>
<text x="304" y="100">uthorized</text>
<text x="400" y="100">Ownership</text>
<text x="256" y="116">S</text>
<text x="292" y="116">igning</text>
<text x="392" y="116">Tracker</text>
<text x="256" y="132">A</text>
<text x="300" y="132">uthority</text>
<text x="396" y="180">BRSKI-</text>
<text x="104" y="196">BRSKI-PRM</text>
<text x="396" y="196">MASA</text>
<text x="232" y="212">.............................</text>
<text x="392" y="212">.........</text>
<text x="120" y="228">.</text>
<text x="424" y="228">.</text>
<text x="120" y="244">.</text>
<text x="424" y="244">.</text>
<text x="120" y="260">.</text>
<text x="424" y="260">.</text>
<text x="36" y="276">Pledge</text>
<text x="120" y="276">.</text>
<text x="192" y="276">Registrar</text>
<text x="272" y="276">BRSKI</text>
<text x="340" y="276">Domain</text>
<text x="424" y="276">.</text>
<text x="120" y="292">.</text>
<text x="176" y="292">Agent</text>
<text x="272" y="292">EST</text>
<text x="352" y="292">Registrar</text>
<text x="424" y="292">.</text>
<text x="332" y="308">(PKI</text>
<text x="368" y="308">RA)</text>
<text x="424" y="308">.</text>
<text x="120" y="324">.</text>
<text x="212" y="324">LDevID</text>
<text x="424" y="324">.</text>
<text x="120" y="340">.</text>
<text x="424" y="340">.</text>
<text x="36" y="356">IDevID</text>
<text x="120" y="356">.</text>
<text x="424" y="356">.</text>
<text x="120" y="372">.</text>
<text x="424" y="372">.</text>
<text x="120" y="388">.</text>
<text x="224" y="388">Key</text>
<text x="300" y="388">Infrastructure</text>
<text x="424" y="388">.</text>
<text x="120" y="404">.</text>
<text x="236" y="404">(e.g.,</text>
<text x="280" y="404">PKI</text>
<text x="344" y="404">Certificate</text>
<text x="424" y="404">.</text>
<text x="120" y="420">.</text>
<text x="300" y="420">Authority)</text>
<text x="424" y="420">.</text>
<text x="120" y="436">.</text>
<text x="424" y="436">.</text>
<text x="272" y="452">.......................................</text>
<text x="220" y="468">&quot;Domain&quot;</text>
<text x="300" y="468">components</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
                             +------------------------+
   +---- Drop Ship ----------| Vendor Service         |
   |                         +------------------------+
   |                         | M anufacturer|         |
   |                         | A uthorized  |Ownership|
   |                         | S igning     |Tracker  |
   |                         | A uthority   |         |
   |                         +--------------+---------+
   |                                       ^
   |                                       |  BRSKI-
   |    BRSKI-PRM                          |   MASA
   |          .............................|.........
   V          .                            v        .
+-------+     .  +-----------+       +-----------+  .
|       |     .  |           |       |           |  .
|Pledge |     .  | Registrar | BRSKI | Domain    |  .
|       |     .  | Agent     |  EST  | Registrar |  .
|       |<------>|           |<----->| (PKI RA)  |  .
|       |     .  |     LDevID|       |           |  .
|       |     .  +-----------+       +-----+-----+  .
|IDevID |     .                            |        .
|       |     .         +------------------+-----+  .
+-------+     .         | Key Infrastructure     |  .
              .         | (e.g., PKI Certificate |  .
              .         |       Authority)       |  .
              .         +------------------------+  .
              .......................................
                       "Domain" components
]]></artwork></artset></figure>

<t>The following list describes the components in a (customer) site domain:</t>

<t><list style="symbols">
  <t>Pledge: The pledge is expected to respond with the necessary data objects for bootstrapping to the registrar-agent.
The protocol used between the pledge and the registrar-agent is assumed to be HTTP in the context of this document.
Other protocols may be used like CoAP, Bluetooth, or NFC, but are out of scope of this document.
A pledge acting as a server during bootstrapping leads to some differences to BRSKI:  <list style="symbols">
      <t>Discovery of the pledge by the registrar-agent must be possible.</t>
      <t>As the registrar-agent must be able to request data objects for bootstrapping of the pledge, the pledge must offer corresponding endpoints.</t>
      <t>The registrar-agent may provide additional data to the pledge in the context of the voucher triggering request, to make itself visible to the domain registrar.</t>
      <t>Order of exchanges in the call flow may be different as the registrar-agent collects both, PVR and PER, at once and provides them to the registrar.
This approach is used in order to allow for bulk bootstrapping of several devices in a single pass through a new site by the commissioning personnel.</t>
      <t>The data objects utilized for the data exchange between the pledge and the registrar are self-contained authenticated objects (signature-wrapped objects).</t>
    </list></t>
  <t>Registrar-agent: provides a communication path to exchange data objects between the pledge and the domain registrar.
The registrar-agent brokers in situations in which the domain registrar is not directly reachable by the pledge.
This may be due to a different technology stack or due to missing connectivity.
The registrar-agent triggers a pledge to create bootstrapping artifacts such as the voucher-request and the enrollment-request on one or multiple pledges and performs a (bulk) bootstrapping based on the collected data.
The registrar-agent is expected to possess information about the domain registrar: the registrar EE certificate, LDevID(CA) certificate, IP address, either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/>.
There is no trust assumption between the pledge and the registrar-agent as only authenticated self-contained objects are used, which are transported via the registrar-agent and provided either by the pledge or the registrar.
The trust assumption between the registrar-agent and the registrar is based on the LDevID of the registrar-agent, provided by the PKI responsible for the domain.
This allows the registrar-agent to authenticate towards the registrar, e.g., in a TLS handshake.
Based on this, the registrar is able to distinguish a pledge from a registrar-agent during the TLS session establishment and also to verify that the registrar-agent is authorized to perform the bootstrapping of the distinct pledge.
The registrar-agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the registrar itself.</t>
  <t>Join Proxy (not shown): same functionality as described in <xref target="RFC8995"/> if needed.
Note that a registrar-agent may use a join proxy to facilitate the TLS connection to the registrar, in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the registrar-agent does not have full IP connectivity via the domain network, or cases where it has no other means to locate the registrar on the network.</t>
  <t>Domain Registrar: In general the domain registrar fulfills the same functionality regarding the bootstrapping of the pledge in a (customer) site domain by facilitating the communication of the pledge with the MASA service and the domain PKI service.
In contrast to <xref target="RFC8995"/>, the domain registrar does not interact with a pledge directly but through the registrar-agent.
The registrar detects if the bootstrapping is performed by the pledge directly or by the registrar-agent.</t>
  <t>The manufacturer provided components/services (MASA and Ownership tracker) are used as defined in <xref target="RFC8995"/>.
For issuing a voucher, the MASA may perform additional checks on a voucher-request, to issue a voucher indicating agent-proximity instead of (registrar-)proximity.</t>
</list></t>

</section>
<section anchor="agt_prx"><name>Agent-Proximity Assertion</name>

<t>"Agent-proximity" is a statement, that the proximity registrar certificate was provided via the registrar-agent as defined in <xref target="exchanges_uc2"/> and not directly to the pledge.
"Agent-proximity" is therefore a weaker assertion then "proximity".
It is defined as additional assertion type in <xref target="I-D.ietf-anima-rfc8366bis"/>.
This can be verified by the registrar and also by the MASA during the voucher-request processing.
Note that at the time of creating the voucher-request, the pledge cannot verify the registrar's registrar EE  certificate and has no proof-of-possession of the corresponding private key for the certificate.
The pledge therefore accepts the registrar EE certificate provisionally until it receives the voucher as described in <xref target="exchanges_uc2_3"/>.
See also <xref target="RFC8995"/> "PROVISIONAL accept of server cert".</t>

<t>Trust handover to the domain is established via the "pinned-domain-certificate" in the voucher.</t>

<t>In contrast to the above, "proximity" provides a statement, that the pledge was in direct contact with the registrar and was able to verify proof-of-possession of the private key in the context of the TLS handshake.
The provisionally accepted registrar EE certificate can be verified after the voucher has been processed by the pledge.
As the returned voucher includes an additional signature by the registrar as defined in <xref target="exchanges_uc2_2_vs"/>, the pledge can also verify that the registrar possesses the corresponding private key.</t>

</section>
<section anchor="pledge_ep"><name>Behavior of Pledge in Pledge-Responder-Mode</name>

<t>The pledge is triggered by the registrar-agent to generate the PVR and PER as well as for the processing of the responses and the generation of status information.
Due to the use of the registrar-agent, the interaction with the domain registrar is changed as shown in <xref target="exchangesfig_uc2_1"/>.
To enable interaction with the registrar-agent, the pledge provides endpoints using the BRSKI defined endpoints based on the "/.well-known/brski" URI tree.</t>

<t>The following endpoints are defined for the <em>pledge</em> in this document.
The endpoints are defined with short names to also accommodate for the constraint case.
The URI path begins with "http://www.example.com/.well-known/brski" followed by a path-suffix that indicates the intended operation.</t>

<t>Operations and their corresponding URIs:</t>

<texttable title="Endpoints on the pledge" anchor="eppfigure1">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Trigger pledge-voucher-request creation - Returns PVR</c>
      <c>/tv</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Trigger pledge-enrollment-request - Returns PER</c>
      <c>/te</c>
      <c><xref target="exchanges_uc2_1"/></c>
      <c>Provide voucher to pledge - Returns pledge-voucher-status</c>
      <c>/sv</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide enrollment response to pledge - Returns pledge-enrollment-status</c>
      <c>/se</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Provide CA certs to pledge</c>
      <c>/cc</c>
      <c><xref target="exchanges_uc2_3"/></c>
      <c>Query bootstrapping status of pledge - Returns pledge-status</c>
      <c>/ps</c>
      <c><xref target="exchanges_uc2_5"/></c>
</texttable>

</section>
<section anchor="behavior-of-registrar-agent"><name>Behavior of Registrar-Agent</name>

<t>The registrar-agent as a new component provides connectivity between the pledge and the domain registrar. 
It facilitates the exchange of data between the pledge and the domain registrar, which are the voucher request/response, the enrollment request/response, as well as related telemetry and status information.</t>

<t>For the communication with the pledge the registrar-agent utilizes communication endpoints provided by the pledge.
The transport in this specification is based on HTTP but may also be done using other transport mechanisms.
This new component changes the general interaction between the pledge and the domain registrar as shown in <xref target="uc2figure"/>.</t>

<t>For the communication with the registrar, the registrar-agent uses the endpoints of the domain registrar side already specified in <xref target="RFC8995"/> if suitable.
The EST <xref target="RFC7030"/> standard endpoints used by BRSKI do not expect signature wrapped-objects, which are used b BRSKI-PRM.
This specifically applies for the enrollment request and the provisioning of CA certificates. 
To accommodate the use of signature-wrapped object, the following additional endpoints are defined for the <em>registrar</em>.
Operations and their corresponding URIs:</t>

<texttable title="Additional endpoints on the registrar" anchor="eppfigure2">
      <ttcol align='left'>Operation</ttcol>
      <ttcol align='left'>Operation path</ttcol>
      <ttcol align='left'>Details</ttcol>
      <c>Supply PER to registrar</c>
      <c>/requestenroll</c>
      <c><xref target="exchanges_uc2_2_per"/></c>
      <c>Request (wrapped) CA certificates - Returns wrapped CA Certificates</c>
      <c>/wrappedcacerts</c>
      <c><xref target="exchanges_uc2_2_wca"/></c>
</texttable>

<t>For authentication to the domain registrar, the registrar-agent uses its LDevID(RegAgt).
The provisioning of the registrar-agent LDevID is out of scope for this document, but may be done in advance using a separate BRSKI run or by other means like configuration.
It is recommended to use short lived registrar-agent LDevIDs in the range of days or weeks as outlined in <xref target="sec_cons_reg-agt"/>.</t>

<t>The registrar-agent will use its LDevID(RegAgt) when establishing a TLS session with the domain registrar for TLS client authentication.
The LDevID(RegAgt) certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier (SKID), which is used as reference in the context of an agent-signed-data object as defined in <xref target="exchanges_uc2_1"/>.
Note that this is an additional requirement for issuing the certificate, as <xref target="IEEE-802.1AR"/> only requires the SKID to be included for intermediate CA certificates.
<xref target="RFC8995"/> makes a similar requirement.
In BRSKI-PRM, the SKID is used in favor of a certificate fingerprint to avoid additional computations.</t>

<t>Using an LDevID for TLS client authentication of the registrar-agent is a deviation from <xref target="RFC8995"/>, in which the pledge's IDevID credential is used to perform TLS client authentication.
The use of the LDevID(RegAgt) allows the domain registrar to distinguish, if bootstrapping is initiated from a pledge or from a registrar-agent and to adopt different internal handling accordingly.
If a registrar detects a request that originates from a registrar-agent it is able to switch the operational mode from BRSKI to BRSKI-PRM.
This may be supported by a specific naming in the SAN (subject alternative name) component of the LDevID(RegAgt) certificate.
Alternatively, the domain may feature a CA specifically for issuing registrar-agent LDevID certificates.
This allows the registrar to detect registrar-agents based on the issuing CA.</t>

<t>As BRSKI-PRM uses authenticated self-contained data objects between the pledge and the domain registrar, the binding of the pledge identity to the requests is provided by the data object signature employing the pledge's IDevID.
The objects exchanged between the pledge and the domain registrar used in the context of this specifications are JOSE objects.</t>

<t>In addition to the LDevID(RegAgt), the registrar-agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow the discovery of pledge(s) by the registrar-agent using mDNS (see <xref target="discovery_uc2_ppa"/>)
The list may be provided by administrative means or the registrar agent may get the information via an interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, the product-serial-number would be initialized from the 12N B005 Product Serial Number.</t>

<t>According to <xref target="RFC8995"/> section 5.3, the domain registrar performs the pledge authorization for bootstrapping within his domain based on the pledge voucher-request object.</t>

<t>The following information <bcp14>MUST</bcp14> be available at the registrar-agent:</t>

<t><list style="symbols">
  <t>LDevID(RegAgt): own operational key pair.</t>
  <t>Registrar EE certificate: certificate of the domain registrar.</t>
  <t>Serial-number(s): product-serial-number(s) of pledge(s) to be bootstrapped.</t>
</list></t>

<section anchor="discovery_uc2_reg"><name>Discovery of Registrar by Registrar-Agent</name>

<t>The discovery of the domain registrar may be done as specified in <xref target="RFC8995"/> with the
deviation that it is done between the registrar-agent and the domain registrar.
Alternatively, the registrar-agent may be configured with the address of the domain registrar and the certificate of the domain registrar.</t>

</section>
<section anchor="discovery_uc2_ppa"><name>Discovery of Pledge by Registrar-Agent</name>

<t>The discovery of the pledge by registrar-agent should be done by using DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge. The pledge constructs a local host name based on device local information (product-serial-number), which results in "product-serial-number._brski-pledge._tcp.local".</t>

<t>The registrar-agent <bcp14>MAY</bcp14> use</t>

<t><list style="symbols">
  <t>"product-serial-number._brski-pledge._tcp.local", to discover a specific pledge, e.g., when connected to a local network.</t>
  <t>"_brski-pledge._tcp.local" to get a list of pledges to be bootstrapped.</t>
</list></t>

<t>A manufacturer may allow the pledge to react on mDNS discovery without his product-serial-number contained. This allows a commissioning tool to discover pledges to be bootstrapped in the domain. The manufacturer may opt out of this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>

<t>To be able to detect the pledge using mDNS, network connectivity is required.
For Ethernet it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping.
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>

</section>
</section>
</section>
<section anchor="exchanges_uc2"><name>Bootstrapping Data Objects and Corresponding Exchanges</name>

<t>The interaction of the pledge with the registrar-agent may be accomplished using different transport means (protocols and/or network technologies).
This specification descibes the usage of HTTP as in BRSKI <xref target="RFC8995"/>.
Alternative transport channels may be CoAP, Bluetooth Low Energy (BLE), or Nearfield Communication (NFC).
These transport means may differ from, and are independent of, the ones used between the registrar-agent and the registrar.
Transport channel independence is realized by data objects which are not bound to specific transport security.
Therefore, authenticated self-contained objects (here: signature-wrapped objects) are applied for data exchanges between the pledge and the registrar.</t>

<t>The registrar-agent provides the domain registrar certificate (registrar EE certificate) to the pledge to be included in the PVR leaf "agent-provided-proximity-registrar-certificate".
This enables the registrar to verify that it is the desired registrar for handling the request.</t>

<t>The registrar certificate may be configured at the registrar-agent or may be fetched by the registrar-agent based on a prior TLS connection with this domain registrar.
In addition, the registrar-agent provides agent-signed-data containing the pledge product-serial-number, signed with the LDevID(RegAgt).
This enables the registrar to verify and log, which registrar-agent was in contact with the pledge, when verifying the PVR.</t>

<t>The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate based on the SubjectKeyIdentifier (SKID) in the header of the agent-signed-data from the PVR.
The registrar includes the LDevID(RegAgt) certificate information into the RVR if the PVR asked for the assertion "agent-proximity".</t>

<t>The MASA in turn verifies the registrar EE certificate is included in the PVR ("prior-signed-voucher-request" of RVR) in the "agent-provided-proximity-registrar-certificate" leaf
and may assert the PVR as "verified" or "logged" instead of "proximity", as there is no direct connection between the pledge and the registrar.</t>

<t>In addition, the MASA can state the assertion "agent-proximity" as follows:
The MASA can verify the signature of the agent-signed-data contained in the prior-signed-voucher-request, based on the provided LDevID(RegAgt) certificate in the "agent-sign-cert" leaf of the RVR.
If both can be verified successfully, the MASA can assert "agent-proximity" in the voucher.</t>

<t>Depending on the MASA verification policy, it may also respond with a suitable 4xx or 5xx status code as described in section 5.6 of <xref target="RFC8995"/>.
The voucher then can be supplied via the registrar to the registrar-agent.</t>

<t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following sub sections.</t>

<figure title="Overview pledge-responder-mode exchanges" anchor="exchangesfig_uc2_all"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1056" width="576" viewBox="0 0 576 1056" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 32,104 L 32,208" fill="none" stroke="black"/>
<path d="M 32,256 L 32,320" fill="none" stroke="black"/>
<path d="M 32,384 L 32,576" fill="none" stroke="black"/>
<path d="M 32,624 L 32,688" fill="none" stroke="black"/>
<path d="M 32,720 L 32,736" fill="none" stroke="black"/>
<path d="M 32,800 L 32,864" fill="none" stroke="black"/>
<path d="M 32,928 L 32,1040" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 120,32 L 120,96" fill="none" stroke="black"/>
<path d="M 176,104 L 176,208" fill="none" stroke="black"/>
<path d="M 176,256 L 176,320" fill="none" stroke="black"/>
<path d="M 176,384 L 176,576" fill="none" stroke="black"/>
<path d="M 176,624 L 176,688" fill="none" stroke="black"/>
<path d="M 176,720 L 176,736" fill="none" stroke="black"/>
<path d="M 176,800 L 176,864" fill="none" stroke="black"/>
<path d="M 176,928 L 176,1040" fill="none" stroke="black"/>
<path d="M 216,32 L 216,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 328,104 L 328,208" fill="none" stroke="black"/>
<path d="M 328,256 L 328,320" fill="none" stroke="black"/>
<path d="M 328,496 L 328,576" fill="none" stroke="black"/>
<path d="M 328,624 L 328,688" fill="none" stroke="black"/>
<path d="M 328,720 L 328,736" fill="none" stroke="black"/>
<path d="M 328,800 L 328,864" fill="none" stroke="black"/>
<path d="M 328,928 L 328,976" fill="none" stroke="black"/>
<path d="M 328,1008 L 328,1040" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 392,32 L 392,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,208" fill="none" stroke="black"/>
<path d="M 448,256 L 448,320" fill="none" stroke="black"/>
<path d="M 448,384 L 448,480" fill="none" stroke="black"/>
<path d="M 448,560 L 448,576" fill="none" stroke="black"/>
<path d="M 448,624 L 448,688" fill="none" stroke="black"/>
<path d="M 448,720 L 448,736" fill="none" stroke="black"/>
<path d="M 448,800 L 448,864" fill="none" stroke="black"/>
<path d="M 448,928 L 448,944" fill="none" stroke="black"/>
<path d="M 448,1008 L 448,1040" fill="none" stroke="black"/>
<path d="M 464,32 L 464,96" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 552,104 L 552,208" fill="none" stroke="black"/>
<path d="M 552,256 L 552,320" fill="none" stroke="black"/>
<path d="M 552,384 L 552,496" fill="none" stroke="black"/>
<path d="M 552,544 L 552,576" fill="none" stroke="black"/>
<path d="M 552,624 L 552,688" fill="none" stroke="black"/>
<path d="M 552,720 L 552,736" fill="none" stroke="black"/>
<path d="M 552,800 L 552,864" fill="none" stroke="black"/>
<path d="M 552,928 L 552,976" fill="none" stroke="black"/>
<path d="M 552,1008 L 552,1040" fill="none" stroke="black"/>
<path d="M 568,32 L 568,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 120,32 L 216,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 392,32 L 464,32" fill="none" stroke="black"/>
<path d="M 488,32 L 568,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 120,96 L 216,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 392,96 L 464,96" fill="none" stroke="black"/>
<path d="M 488,96 L 568,96" fill="none" stroke="black"/>
<path d="M 40,176 L 168,176" fill="none" stroke="black"/>
<path d="M 40,192 L 168,192" fill="none" stroke="black"/>
<path d="M 40,256 L 80,256" fill="none" stroke="black"/>
<path d="M 136,256 L 168,256" fill="none" stroke="black"/>
<path d="M 40,272 L 80,272" fill="none" stroke="black"/>
<path d="M 128,272 L 168,272" fill="none" stroke="black"/>
<path d="M 40,304 L 80,304" fill="none" stroke="black"/>
<path d="M 136,304 L 168,304" fill="none" stroke="black"/>
<path d="M 40,320 L 80,320" fill="none" stroke="black"/>
<path d="M 128,320 L 168,320" fill="none" stroke="black"/>
<path d="M 184,384 L 232,384" fill="none" stroke="black"/>
<path d="M 280,384 L 320,384" fill="none" stroke="black"/>
<path d="M 184,432 L 224,432" fill="none" stroke="black"/>
<path d="M 272,432 L 320,432" fill="none" stroke="black"/>
<path d="M 336,496 L 424,496" fill="none" stroke="black"/>
<path d="M 472,496 L 544,496" fill="none" stroke="black"/>
<path d="M 336,544 L 408,544" fill="none" stroke="black"/>
<path d="M 488,544 L 544,544" fill="none" stroke="black"/>
<path d="M 184,560 L 216,560" fill="none" stroke="black"/>
<path d="M 296,560 L 320,560" fill="none" stroke="black"/>
<path d="M 184,624 L 232,624" fill="none" stroke="black"/>
<path d="M 280,624 L 320,624" fill="none" stroke="black"/>
<path d="M 336,640 L 360,640" fill="none" stroke="black"/>
<path d="M 408,640 L 440,640" fill="none" stroke="black"/>
<path d="M 336,656 L 360,656" fill="none" stroke="black"/>
<path d="M 416,656 L 440,656" fill="none" stroke="black"/>
<path d="M 184,672 L 200,672" fill="none" stroke="black"/>
<path d="M 304,672 L 320,672" fill="none" stroke="black"/>
<path d="M 184,720 L 200,720" fill="none" stroke="black"/>
<path d="M 304,720 L 320,720" fill="none" stroke="black"/>
<path d="M 184,736 L 200,736" fill="none" stroke="black"/>
<path d="M 304,736 L 320,736" fill="none" stroke="black"/>
<path d="M 40,800 L 64,800" fill="none" stroke="black"/>
<path d="M 144,800 L 168,800" fill="none" stroke="black"/>
<path d="M 40,816 L 64,816" fill="none" stroke="black"/>
<path d="M 144,816 L 168,816" fill="none" stroke="black"/>
<path d="M 40,832 L 64,832" fill="none" stroke="black"/>
<path d="M 144,832 L 168,832" fill="none" stroke="black"/>
<path d="M 40,848 L 56,848" fill="none" stroke="black"/>
<path d="M 152,848 L 168,848" fill="none" stroke="black"/>
<path d="M 40,864 L 56,864" fill="none" stroke="black"/>
<path d="M 136,864 L 168,864" fill="none" stroke="black"/>
<path d="M 184,928 L 232,928" fill="none" stroke="black"/>
<path d="M 280,928 L 320,928" fill="none" stroke="black"/>
<path d="M 184,944 L 208,944" fill="none" stroke="black"/>
<path d="M 296,944 L 320,944" fill="none" stroke="black"/>
<path d="M 336,960 L 352,960" fill="none" stroke="black"/>
<path d="M 528,960 L 544,960" fill="none" stroke="black"/>
<path d="M 336,976 L 368,976" fill="none" stroke="black"/>
<path d="M 520,976 L 544,976" fill="none" stroke="black"/>
<path d="M 184,1024 L 208,1024" fill="none" stroke="black"/>
<path d="M 296,1024 L 320,1024" fill="none" stroke="black"/>
<polygon class="arrowhead" points="552,960 540,954.4 540,965.6" fill="black" transform="rotate(0,544,960)"/>
<polygon class="arrowhead" points="552,496 540,490.4 540,501.6" fill="black" transform="rotate(0,544,496)"/>
<polygon class="arrowhead" points="448,640 436,634.4 436,645.6" fill="black" transform="rotate(0,440,640)"/>
<polygon class="arrowhead" points="344,976 332,970.4 332,981.6" fill="black" transform="rotate(180,336,976)"/>
<polygon class="arrowhead" points="344,656 332,650.4 332,661.6" fill="black" transform="rotate(180,336,656)"/>
<polygon class="arrowhead" points="344,544 332,538.4 332,549.6" fill="black" transform="rotate(180,336,544)"/>
<polygon class="arrowhead" points="328,1024 316,1018.4 316,1029.6" fill="black" transform="rotate(0,320,1024)"/>
<polygon class="arrowhead" points="328,944 316,938.4 316,949.6" fill="black" transform="rotate(0,320,944)"/>
<polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(0,320,928)"/>
<polygon class="arrowhead" points="328,720 316,714.4 316,725.6" fill="black" transform="rotate(0,320,720)"/>
<polygon class="arrowhead" points="328,624 316,618.4 316,629.6" fill="black" transform="rotate(0,320,624)"/>
<polygon class="arrowhead" points="328,432 316,426.4 316,437.6" fill="black" transform="rotate(0,320,432)"/>
<polygon class="arrowhead" points="328,384 316,378.4 316,389.6" fill="black" transform="rotate(0,320,384)"/>
<polygon class="arrowhead" points="192,928 180,922.4 180,933.6" fill="black" transform="rotate(180,184,928)"/>
<polygon class="arrowhead" points="192,736 180,730.4 180,741.6" fill="black" transform="rotate(180,184,736)"/>
<polygon class="arrowhead" points="192,672 180,666.4 180,677.6" fill="black" transform="rotate(180,184,672)"/>
<polygon class="arrowhead" points="192,560 180,554.4 180,565.6" fill="black" transform="rotate(180,184,560)"/>
<polygon class="arrowhead" points="192,384 180,378.4 180,389.6" fill="black" transform="rotate(180,184,384)"/>
<polygon class="arrowhead" points="176,864 164,858.4 164,869.6" fill="black" transform="rotate(0,168,864)"/>
<polygon class="arrowhead" points="176,816 164,810.4 164,821.6" fill="black" transform="rotate(0,168,816)"/>
<polygon class="arrowhead" points="176,320 164,314.4 164,325.6" fill="black" transform="rotate(0,168,320)"/>
<polygon class="arrowhead" points="176,272 164,266.4 164,277.6" fill="black" transform="rotate(0,168,272)"/>
<polygon class="arrowhead" points="176,192 164,186.4 164,197.6" fill="black" transform="rotate(0,168,192)"/>
<polygon class="arrowhead" points="48,848 36,842.4 36,853.6" fill="black" transform="rotate(180,40,848)"/>
<polygon class="arrowhead" points="48,832 36,826.4 36,837.6" fill="black" transform="rotate(180,40,832)"/>
<polygon class="arrowhead" points="48,800 36,794.4 36,805.6" fill="black" transform="rotate(180,40,800)"/>
<polygon class="arrowhead" points="48,304 36,298.4 36,309.6" fill="black" transform="rotate(180,40,304)"/>
<polygon class="arrowhead" points="48,256 36,250.4 36,261.6" fill="black" transform="rotate(180,40,256)"/>
<polygon class="arrowhead" points="48,176 36,170.4 36,181.6" fill="black" transform="rotate(180,40,176)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="168" y="52">Registrar</text>
<text x="292" y="52">Domain</text>
<text x="428" y="52">Domain</text>
<text x="524" y="52">Vendor</text>
<text x="152" y="68">Agent</text>
<text x="304" y="68">Registrar</text>
<text x="412" y="68">CA</text>
<text x="528" y="68">Service</text>
<text x="164" y="84">(RegAgt)</text>
<text x="296" y="84">(JRC)</text>
<text x="524" y="84">(MASA)</text>
<text x="508" y="116">Internet</text>
<text x="92" y="132">discover</text>
<text x="92" y="148">pledge</text>
<text x="60" y="164">mDNS</text>
<text x="104" y="164">query</text>
<text x="56" y="244">trigger</text>
<text x="104" y="244">PVR</text>
<text x="148" y="244">(tPVR)</text>
<text x="192" y="244">and</text>
<text x="224" y="244">PER</text>
<text x="268" y="244">(tPER)</text>
<text x="340" y="244">generation</text>
<text x="396" y="244">on</text>
<text x="436" y="244">pledge</text>
<text x="108" y="260">tPVR</text>
<text x="104" y="276">PVR</text>
<text x="108" y="308">tPER</text>
<text x="104" y="324">PER</text>
<text x="32" y="340">~</text>
<text x="176" y="340">~</text>
<text x="328" y="340">~</text>
<text x="448" y="340">~</text>
<text x="552" y="340">~</text>
<text x="56" y="372">provide</text>
<text x="104" y="372">PVR</text>
<text x="132" y="372">to</text>
<text x="204" y="372">infrastructure</text>
<text x="256" y="388">TLS</text>
<text x="328" y="388">|</text>
<text x="292" y="404">[Reg-Agt</text>
<text x="384" y="404">authenticated</text>
<text x="280" y="420">and</text>
<text x="348" y="420">authorized?]</text>
<text x="248" y="436">PVR</text>
<text x="328" y="436">|</text>
<text x="292" y="452">[Reg-Agt</text>
<text x="380" y="452">authorized?]</text>
<text x="288" y="468">[accept</text>
<text x="356" y="468">device?]</text>
<text x="292" y="484">[contact</text>
<text x="360" y="484">vendor]</text>
<text x="448" y="500">RVR</text>
<text x="452" y="516">[extract</text>
<text x="528" y="516">DomainID]</text>
<text x="448" y="532">[update</text>
<text x="504" y="532">audit</text>
<text x="548" y="532">log]</text>
<text x="448" y="548">Voucher</text>
<text x="256" y="564">Voucher</text>
<text x="56" y="612">provide</text>
<text x="104" y="612">PER</text>
<text x="132" y="612">to</text>
<text x="204" y="612">infrastructure</text>
<text x="256" y="628">PER</text>
<text x="384" y="644">CSR</text>
<text x="388" y="660">Cert</text>
<text x="256" y="676">Enroll-Resp</text>
<text x="48" y="708">query</text>
<text x="104" y="708">cACerts</text>
<text x="156" y="708">from</text>
<text x="236" y="708">infrastructure</text>
<text x="252" y="724">cACert-Req</text>
<text x="256" y="740">cACert-Resp</text>
<text x="32" y="756">~</text>
<text x="176" y="756">~</text>
<text x="336" y="756">~</text>
<text x="456" y="756">~</text>
<text x="560" y="756">~</text>
<text x="56" y="788">provide</text>
<text x="120" y="788">voucher</text>
<text x="168" y="788">and</text>
<text x="232" y="788">certificate</text>
<text x="296" y="788">and</text>
<text x="344" y="788">collect</text>
<text x="404" y="788">status</text>
<text x="452" y="788">info</text>
<text x="104" y="804">Voucher</text>
<text x="104" y="820">vStatus</text>
<text x="104" y="836">cACerts</text>
<text x="104" y="852">Enroll-Resp</text>
<text x="96" y="868">eStatus</text>
<text x="32" y="884">~</text>
<text x="176" y="884">~</text>
<text x="328" y="884">~</text>
<text x="448" y="884">~</text>
<text x="552" y="884">~</text>
<text x="56" y="916">provide</text>
<text x="120" y="916">voucher</text>
<text x="180" y="916">status</text>
<text x="224" y="916">and</text>
<text x="268" y="916">enroll</text>
<text x="324" y="916">status</text>
<text x="364" y="916">to</text>
<text x="416" y="916">registrar</text>
<text x="256" y="932">TLS</text>
<text x="256" y="948">vStatus</text>
<text x="376" y="964">req</text>
<text x="420" y="964">device</text>
<text x="472" y="964">audit</text>
<text x="512" y="964">log</text>
<text x="404" y="980">device</text>
<text x="456" y="980">audit</text>
<text x="496" y="980">log</text>
<text x="296" y="996">[verify</text>
<text x="352" y="996">audit</text>
<text x="396" y="996">log]</text>
<text x="256" y="1028">eStatus</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+    +-----------+    +-----------+    +--------+  +---------+
| Pledge |    | Registrar |    | Domain    |    | Domain |  | Vendor  |
|        |    | Agent     |    | Registrar |    | CA     |  | Service |
|        |    | (RegAgt)  |    |  (JRC)    |    |        |  | (MASA)  |
+--------+    +-----------+    +-----------+    +--------+  +---------+
   |                 |                  |              |   Internet |
   |   discover      |                  |              |            |
   |    pledge       |                  |              |            |
   | mDNS query      |                  |              |            |
   |<----------------|                  |              |            |
   |---------------->|                  |              |            |
   |                 |                  |              |            |

   trigger PVR (tPVR) and PER (tPER) generation on pledge
   |<----- tPVR -----|                  |              |            |
   |------ PVR ----->|                  |              |            |
   |                 |                  |              |            |
   |<----- tPER -----|                  |              |            |
   |------ PER ----->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide PVR to infrastructure
   |                 |<------ TLS ----->|              |            |
   |                 |          [Reg-Agt authenticated |            |
   |                 |           and authorized?]      |            |
   |                 |------ PVR ------>|              |            |
   |                 |          [Reg-Agt authorized?]  |            |
   |                 |          [accept device?]       |            |
   |                 |          [contact vendor]       |            |
   |                 |                  |------------ RVR --------->|
   |                 |                  |           [extract DomainID]
   |                 |                  |           [update audit log]
   |                 |                  |<--------- Voucher --------|
   |                 |<---- Voucher ----|              |            |
   |                 |                  |              |            |

   provide PER to infrastructure
   |                 |------- PER ----->|              |            |
   |                 |                  |---- CSR ---->|            |
   |                 |                  |<--- Cert ----|            |
   |                 |<-- Enroll-Resp---|              |            |
   |                 |                  |              |            |
   query cACerts from infrastructure
   |                 |--- cACert-Req -->|              |            |
   |                 |<-- cACert-Resp---|              |            |
   ~                 ~                   ~              ~            ~

   provide voucher and certificate and collect status info
   |<--- Voucher ----|                  |              |            |
   |---- vStatus --->|                  |              |            |
   |<--- cACerts ----|                  |              |            |
   |<--Enroll-Resp---|                  |              |            |
   |--- eStatus ---->|                  |              |            |
   ~                 ~                  ~              ~            ~

   provide voucher status and enroll status to registrar
   |                 |<------ TLS ----->|              |            |
   |                 |----  vStatus --->|              |            |
   |                 |                  |--- req device audit log-->|
   |                 |                  |<---- device audit log ----|
   |                 |           [verify audit log]
   |                 |                  |              |            |
   |                 |----  eStatus --->|              |            |
   |                 |                  |              |            |
]]></artwork></artset></figure>

<t>The following sub sections split the interactions between the different components into:</t>

<t><list style="symbols">
  <t><xref target="exchanges_uc2_1"/> describes the request object acquisition by the registrar-agent from pledge.</t>
  <t><xref target="exchanges_uc2_2"/> describes the request object processing initiated by the registrar-agent to the registrar and also the interaction of the registrar with the MASA and the domain CA including the response object processing by these entities.</t>
  <t><xref target="exchanges_uc2_3"/> describes the supply of response objects between the registrar-agent and the pledge including the status information.</t>
  <t><xref target="exchanges_uc2_5"/> describes the general status handling and addresses corresponding exchanges between the registrar-agent and the registrar.</t>
</list></t>

<section anchor="exchanges_uc2_1"><name>Request Objects Acquisition by Registrar-Agent from Pledge</name>

<t>The following description assumes that the registrar-agent has already discovered the pledge.
This may be done as described in <xref target="discovery_uc2_ppa"/> based on mDNS or similar.</t>

<t>The focus is on the exchange of signature-wrapped objects using endpoints defined for the pledge in <xref target="pledge_ep"/>.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Pledge: possesses IDevID</t>
  <t>Registrar-agent: possesses/trusts IDevID CA certificate and has own LDevID(RegAgt) credentials for the registrar domain (site).
In addition, the registrar-agent <bcp14>MUST</bcp14> know the product-serial-number(s) of the pledge(s) to be bootstrapped.
The registrar-agent <bcp14>MAY</bcp14> be provided with the product-serial-number(s) in different ways:
  <list style="symbols">
      <t>configured, e.g., as a list of pledges to be bootstrapped via QR code scanning</t>
      <t>discovered by using standard approaches like mDNS as described in <xref target="discovery_uc2_ppa"/></t>
      <t>discovered by using a vendor specific approach, e.g., RF beacons
The registrar-agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
    </list></t>
  <t>Registrar: possesses/trusts IDevID CA certificate and has own registrar EE credentials.</t>
</list></t>

<figure title="Request collection (registrar-agent - pledge)" anchor="exchangesfig_uc2_1"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="520" viewBox="0 0 520 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,304" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 320,32 L 320,96" fill="none" stroke="black"/>
<path d="M 368,104 L 368,304" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 320,32 L 416,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 320,96 L 416,96" fill="none" stroke="black"/>
<path d="M 48,144 L 72,144" fill="none" stroke="black"/>
<path d="M 336,144 L 360,144" fill="none" stroke="black"/>
<path d="M 48,208 L 80,208" fill="none" stroke="black"/>
<path d="M 280,208 L 360,208" fill="none" stroke="black"/>
<path d="M 48,240 L 88,240" fill="none" stroke="black"/>
<path d="M 320,240 L 360,240" fill="none" stroke="black"/>
<path d="M 48,288 L 88,288" fill="none" stroke="black"/>
<path d="M 312,288 L 360,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="368,288 356,282.4 356,293.6" fill="black" transform="rotate(0,360,288)"/>
<polygon class="arrowhead" points="368,208 356,202.4 356,213.6" fill="black" transform="rotate(0,360,208)"/>
<polygon class="arrowhead" points="56,240 44,234.4 44,245.6" fill="black" transform="rotate(180,48,240)"/>
<polygon class="arrowhead" points="56,144 44,138.4 44,149.6" fill="black" transform="rotate(180,48,144)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="368" y="52">Registrar</text>
<text x="352" y="68">Agent</text>
<text x="364" y="84">(RegAgt)</text>
<text x="400" y="116">-create</text>
<text x="448" y="132">agent-signed-data</text>
<text x="112" y="148">trigger</text>
<text x="236" y="148">pledge-voucher-request</text>
<text x="204" y="164">-agent-provided-proximity-registrar-cert</text>
<text x="116" y="180">-agent-signed-data</text>
<text x="180" y="212">pledge-voucher-request</text>
<text x="396" y="212">-store</text>
<text x="440" y="212">PVR</text>
<text x="128" y="244">trigger</text>
<text x="204" y="244">enrollment</text>
<text x="280" y="244">request</text>
<text x="128" y="260">(empty)</text>
<text x="200" y="292">pledge-enrollment-request</text>
<text x="396" y="292">-store</text>
<text x="448" y="292">(PER)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                             +-----------+
| Pledge |                             | Registrar |
|        |                             | Agent     |
|        |                             | (RegAgt)  |
+--------+                             +-----------+
    |                                        |-create
    |                                        | agent-signed-data
    |<--- trigger pledge-voucher-request ----|
    |-agent-provided-proximity-registrar-cert|
    |-agent-signed-data                      |
    |                                        |
    |----- pledge-voucher-request ---------->|-store PVR
    |                                        |
    |<----- trigger enrollment request ------|
    |       (empty)                          |
    |                                        |
    |------ pledge-enrollment-request ------>|-store (PER)
    |                                        |
]]></artwork></artset></figure>

<t>Note: The registrar-agent may trigger the pledge for the PVR or the PER or both. It is expected that this will be aligned with a service technician workflow, visiting and installing each pledge.</t>

<section anchor="pledge-voucher-request-pvr-trigger"><name>Pledge-Voucher-Request (PVR) - Trigger</name>

<t>Triggering the pledge to create the PVR is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/tv"</t>

<t>The registrar-agent PVR trigger Content-Type header is: <spanx style="verb">application/json</spanx>.
Following parameters are provided in the JSON object:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: base64-encoded registrar EE TLS certificate.</t>
  <t>agent-signed-data: base64-encoded JSON-in-JWS object.</t>
</list></t>

<t>The trigger for the pledge to create a PVR is depicted in the following figure:</t>

<figure title="Representation of trigger to create PVR" anchor="pavrt"><artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": "base64encodedvalue=="
}
]]></artwork></figure>

<t>The pledge provisionally accepts the agent-provided-proximity-registrar-cert, it <bcp14>SHOULD</bcp14> verify it after a voucher is received.
The pledge will be unable to verify the agent-signed-data itself as it does not possess the LDevID(RegAgt) certificate and the domain trust has not been established at this point of the communication.
It <bcp14>SHOULD</bcp14> be done, after the voucher has been received.</t>

<t>The agent-signed-data is a JSON-in-JWS object and contains the following information:</t>

<t>The header of the agent-signed-data contains:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>kid: <bcp14>MUST</bcp14> contain the base64-encoded bytes of the SubjectKeyIdentifier (the "KeyIdentifier" OCTET STRING value), excluding the ASN.1 encoding of "OCTET STRING" of the LDevID(RegAgt) certificate.</t>
</list></t>

<t>The body of the agent-signed-data contains an "ietf-voucher-request-prm:agent-signed-data" element (defined in <xref target="voucher-request-prm-yang"/>):</t>

<t><list style="symbols">
  <t>created-on: <bcp14>MUST</bcp14> contain the creation date and time in yang:date-and-time format.</t>
  <t>serial-number: <bcp14>MUST</bcp14> contain the product-serial-number as type string as defined in <xref target="RFC8995"/>, section 2.3.1.
The serial-number corresponds with the product-serial-number contained in the X520SerialNumber field of the IDevID certificate of the pledge.</t>
</list></t>

<figure title="Representation of agent-signed-data in General JWS Serialization syntax" anchor="asd"><artwork align="left"><![CDATA[
# The agent-signed-data in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:agent-signed-data)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:agent-signed-data"
  representation in JSON syntax

"ietf-voucher-request-prm:agent-signed-data": {
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "callee4711"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork></figure>

</section>
<section anchor="pledge-voucher-request-pvr-response"><name>Pledge-Voucher-Request (PVR) - Response</name>

<t>Upon receiving the voucher-request trigger, the pledge <bcp14>SHALL</bcp14> construct the body of the PVR as defined in <xref target="RFC8995"/>.
It will contain additional information provided by the registrar-agent as specified in the following.
This PVR becomes a JSON-in-JWS object as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
If the pledge is unable to construct the PVR it <bcp14>SHOULD</bcp14> respond with a HTTP error code to the registrar-agent to indicate that it is not able to create the PVR.</t>

<t>The following client error responses <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request, e.g. missing field, wrong data types, etc. or it's not valid JSON even though the PVR media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters from the trigger message to create the PVR were not valid, e.g., the LDevID (Reg) certificate.</t>
</list></t>

<t>The header of the PVR <bcp14>SHALL</bcp14> contain the following parameters as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The payload of the PVR <bcp14>MUST</bcp14> contain the following parameters as part of the ietf-voucher-request-prm:voucher as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: <bcp14>SHALL</bcp14> contain the current date and time in yang:date-and-time format.
If the pledge does not have synchronized the time, it <bcp14>SHALL</bcp14> use the created-on time from the agent-signed-data, received in the trigger to create a PVR.</t>
  <t>nonce: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
  <t>serial-number: <bcp14>SHALL</bcp14> contain the pledge product-serial-number as X520SerialNumber.</t>
  <t>assertion: <bcp14>SHALL</bcp14> contain the requested voucher assertion "agent-proximity".</t>
</list></t>

<t>The ietf-voucher-request:voucher is enhanced with additional parameters:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> be included and contains the base64-encoded registrar EE certificate (provided as trigger parameter by the registrar-agent).</t>
  <t>agent-signed-data: <bcp14>MUST</bcp14> contain the base64-encoded agent-signed-data (as defined in <xref target="asd"/>) and provided as trigger parameter.</t>
</list></t>

<t>The enhancements of the YANG module for the ietf-voucher-request with these new leaves are defined in <xref target="voucher-request-prm-yang"/>.</t>

<t>The PVR is signed using the pledge's IDevID credential contained as x5c parameter of the JOSE header.</t>

<figure title="Representation of PVR" anchor="pvr"><artwork align="left"><![CDATA[
# The PVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-voucher-request-prm:voucher" Representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2021-04-16T00:00:02.000Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
   "agent-signed-data": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON syntax
{
    "alg": "ES256",
    "x5c": [
      "base64encodedvalue==",
      "base64encodedvalue=="
    ],
    "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The PVR Content-Type is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as <spanx style="verb">application/voucher-jws+json</spanx>.</t>

<t>The pledge <bcp14>SHOULD</bcp14> include this Content-Type header field indicating the included media type for the PVR.
Note that this is also an indication regarding the acceptable format of the voucher response.
This format is included by the registrar as described in <xref target="exchanges_uc2_2"/>.</t>

</section>
<section anchor="pledge-enrollment-request-per-trigger"><name>Pledge-Enrollment-Request (PER) - Trigger</name>

<t>Once the registrar-agent has received the PVR it can trigger the pledge to generate a PER.
As in BRSKI the PER contains a PKCS#10, but additionally signed using the pledge's IDevID.
Note, as the initial enrollment aims to request a generic certificate, no certificate attributes are provided to the pledge.</t>

<t>Triggering the pledge to create the enrollment-request is done using HTTP POST on the defined pledge endpoint: "/.well-known/brski/te"</t>

<t>The registrar-agent PER trigger Content-Type header is: <spanx style="verb">application/json</spanx> with an empty body by default.
Note that using HTTP POST allows for an empty body, but also to provide additional data, like CSR attributes or information about the enroll type "enroll-generic-cert" or "re-enroll-generic-cert".
The "enroll-generic-cert" case is shown in <xref target="raer"/>.</t>

<figure title="Example of trigger to create a PER" anchor="raer"><artwork align="left"><![CDATA[
{
  "enroll-type" : "enroll-generic-cert"
}
]]></artwork></figure>

</section>
<section anchor="pledge-enrollment-request-per-response"><name>Pledge-Enrollment-Request (PER) - Response</name>

<t>In the following the enrollment is described as initial enrollment with an empty HTTP POST body.</t>

<t>Upon receiving the enrollment-trigger, the pledge <bcp14>SHALL</bcp14> construct the PER as authenticated self-contained object.
The CSR already assures proof of possession of the private key corresponding to the contained public key.
In addition, based on the additional signature using the IDevID, proof of identity is provided.
Here, a JOSE object is being created in which the body utilizes the YANG module ietf-ztp-types with the grouping for csr-grouping for the CSR as defined in <xref target="I-D.ietf-netconf-sztp-csr"/>.</t>

<t>Depending on the capability of the pledge, it constructs the enrollment request (PER) as plain PKCS#10.
Note, the focus in this use case is placed on PKCS#10 as PKCS#10 can be transmitted in different enrollment protocols in the infrastructure like EST, CMP, CMS, and SCEP.
If the pledge has already implemented an enrollment protocol, it may leverage that functionality for the creation of the CSR.
Note, <xref target="I-D.ietf-netconf-sztp-csr"/> also allows for inclusion of certification requests in different formats used by CMP or CMC.</t>

<t>The pledge <bcp14>SHOULD</bcp14> construct the PER as PKCS#10.
In BRSKI-PRM it <bcp14>MUST</bcp14> sign it additionally with its IDevID credentials to provide proof-of-identity bound to the PKCS#10 as described below.</t>

<t>If the pledge is unable to construct the PER it <bcp14>SHOULD</bcp14> respond with a HTTP 4xx/5xx error code to the registrar-agent to indicate that it is not able to create the PER.</t>

<t>The following 4xx client error codes <bcp14>MAY</bcp14> be used:</t>

<t><list style="symbols">
  <t>400 Bad Request: if the pledge detected an error in the format of the request or detected invalid JSON even though the PER media type was set to <spanx style="verb">application/json</spanx>.</t>
  <t>403 Forbidden: if the pledge detected that one or more security parameters (if provided) from the trigger message to create the PER are not valid.</t>
  <t>406 Not Acceptable: if the request's Accept header indicates a type that is unknown or unsupported. For example, a type other than <spanx style="verb">application/jose+json</spanx>.</t>
  <t>415 Unsupported Media Type: if the request's Content-Type header indicates a type that is unknown or unsupported. For example, a type other than 'application/json'.</t>
</list></t>

<t>A successful enrollment will result in a generic LDevID certificate for the pledge in the new domain, which can be used to request further (application specific) LDevID certificates if necessary for operation.
The registrar-agent <bcp14>SHALL</bcp14> use the endpoints specified in this document.</t>

<t><xref target="I-D.ietf-netconf-sztp-csr"/> considers PKCS#10 but also CMP and CMC as certification request format. Note that the wrapping signature is only necessary for plain PKCS#10 as other request formats like CMP and CMS support the signature wrapping as part of their own certificate request format.</t>

<t>The registrar-agent enrollment-request Content-Type header for a signature-wrapped PKCS#10 is: <spanx style="verb">application/jose+json</spanx></t>

<t>The header of the pledge enrollment-request <bcp14>SHALL</bcp14> contain the following parameter as defined in <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used for creating the object signature.</t>
  <t>x5c: contains the base64-encoded pledge IDevID certificate.
It may optionally contain the certificate chain for this certificate.</t>
</list></t>

<t>The body of the pledge enrollment-request <bcp14>SHOULD</bcp14> contain a P10 parameter (for PKCS#10) as defined for ietf-ztp-types:p10-csr in <xref target="I-D.ietf-netconf-sztp-csr"/>:</t>

<t><list style="symbols">
  <t>P10: contains the base64-encoded PKCS#10 of the pledge.</t>
</list></t>

<t>The JOSE object is signed using the pledge's IDevID credential, which corresponds to the certificate signaled in the JOSE header.</t>

<figure title="Representation of PER" anchor="per"><artwork align="left"><![CDATA[
# The PER in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-ztp-types)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded Payload "ietf-ztp-types" Representation in JSON Syntax
"ietf-ztp-types": {
  "p10-csr": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" Representation in JSON Syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit":["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork></figure>

<t>With the collected PVR and PER, the registrar-agent starts the interaction with the domain registrar.</t>

<t>The new protected header field "created-on" is introduced to reflect freshness of the PER.
The field is marked critical "crit" to ensure that it must be understood and validated by the receiver (here the domain registrar) according to section 4.1.11 of <xref target="RFC7515"/>.
It allows the registrar to verify the timely correlation between the PER and previously exchanged messages, i.e., created-on of PER &gt;= created-on of PVR &gt;= created-on of PVR trigger.</t>

<t>As the registrar-agent is intended to facilitate communication between the pledge and the domain registrar, a collection of requests from more than one pledge is possible.
This allows bulk bootstrapping of several pledges using the same connection between the registrar-agent and the domain registrar.</t>

</section>
</section>
<section anchor="exchanges_uc2_2"><name>Request Object Handling initiated by the Registrar-Agent on Registrar, MASA and Domain CA</name>

<t>The BRSKI-PRM bootstrapping exchanges between registrar-agent and domain registrar resemble the BRSKI exchanges between pledge and domain registrar (pledge-initiator-mode) with some deviations.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses it's own LDevID(RegAgt) credentials of the site domain.
In addition, it may possess the IDevID CA certificate of the pledge vendor/manufacturer to verify the pledge certificate in the received request messages.
It has the address of the domain registrar through configuration or by discovery, e.g., mDNS/DNSSD.
The registrar-agent has acquired one or more PVR and PER objects.</t>
  <t>Registrar: possesses the IDevID CA certificate of the pledge vendor/manufacturer and it's own registrar EE credentials of the site domain.</t>
  <t>MASA: possesses it's own vendor/manufacturer credentials (voucher signing key, TLS server certificate) related to pledges IDevID and <bcp14>MAY</bcp14> possess the site-specific domain CA certificate.
The latter is only necessary if the MASA needs to verify that the domain of the Registrar is a-priori authorized to enroll a particular pledge, or a particular type of pledge.
In such case is out of scope of this document how the MASA will obtain the domain CA certificate.
In other cases, a MASA may allow the pledge to enroll into an anonymous and/or yet-unknown domain and then the a-priori possession of the domain CA certificate is not needed.</t>
</list></t>

<figure title="Request processing between registrar-agent and bootstrapping services" anchor="exchangesfig_uc2_2"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="624" width="504" viewBox="0 0 504 624" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,144 L 40,608" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 152,32 L 152,96" fill="none" stroke="black"/>
<path d="M 200,104 L 200,176" fill="none" stroke="black"/>
<path d="M 200,224 L 200,256" fill="none" stroke="black"/>
<path d="M 200,320 L 200,608" fill="none" stroke="black"/>
<path d="M 248,32 L 248,96" fill="none" stroke="black"/>
<path d="M 312,32 L 312,96" fill="none" stroke="black"/>
<path d="M 352,104 L 352,288" fill="none" stroke="black"/>
<path d="M 352,416 L 352,608" fill="none" stroke="black"/>
<path d="M 384,32 L 384,96" fill="none" stroke="black"/>
<path d="M 416,32 L 416,96" fill="none" stroke="black"/>
<path d="M 456,104 L 456,352" fill="none" stroke="black"/>
<path d="M 456,400 L 456,608" fill="none" stroke="black"/>
<path d="M 496,32 L 496,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 152,32 L 248,32" fill="none" stroke="black"/>
<path d="M 312,32 L 384,32" fill="none" stroke="black"/>
<path d="M 416,32 L 496,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 152,96 L 248,96" fill="none" stroke="black"/>
<path d="M 312,96 L 384,96" fill="none" stroke="black"/>
<path d="M 416,96 L 496,96" fill="none" stroke="black"/>
<path d="M 48,176 L 88,176" fill="none" stroke="black"/>
<path d="M 144,176 L 192,176" fill="none" stroke="black"/>
<path d="M 48,240 L 64,240" fill="none" stroke="black"/>
<path d="M 176,240 L 192,240" fill="none" stroke="black"/>
<path d="M 208,320 L 304,320" fill="none" stroke="black"/>
<path d="M 360,320 L 448,320" fill="none" stroke="black"/>
<path d="M 208,336 L 272,336" fill="none" stroke="black"/>
<path d="M 384,336 L 448,336" fill="none" stroke="black"/>
<path d="M 208,400 L 288,400" fill="none" stroke="black"/>
<path d="M 368,400 L 448,400" fill="none" stroke="black"/>
<path d="M 48,416 L 80,416" fill="none" stroke="black"/>
<path d="M 160,416 L 192,416" fill="none" stroke="black"/>
<path d="M 48,448 L 64,448" fill="none" stroke="black"/>
<path d="M 168,448 L 192,448" fill="none" stroke="black"/>
<path d="M 208,480 L 248,480" fill="none" stroke="black"/>
<path d="M 304,480 L 344,480" fill="none" stroke="black"/>
<path d="M 208,496 L 224,496" fill="none" stroke="black"/>
<path d="M 328,496 L 344,496" fill="none" stroke="black"/>
<path d="M 208,528 L 224,528" fill="none" stroke="black"/>
<path d="M 328,528 L 344,528" fill="none" stroke="black"/>
<path d="M 48,544 L 64,544" fill="none" stroke="black"/>
<path d="M 176,544 L 192,544" fill="none" stroke="black"/>
<path d="M 48,576 L 64,576" fill="none" stroke="black"/>
<path d="M 176,576 L 192,576" fill="none" stroke="black"/>
<path d="M 48,592 L 64,592" fill="none" stroke="black"/>
<path d="M 176,592 L 192,592" fill="none" stroke="black"/>
<polygon class="arrowhead" points="456,336 444,330.4 444,341.6" fill="black" transform="rotate(0,448,336)"/>
<polygon class="arrowhead" points="456,320 444,314.4 444,325.6" fill="black" transform="rotate(0,448,320)"/>
<polygon class="arrowhead" points="352,496 340,490.4 340,501.6" fill="black" transform="rotate(0,344,496)"/>
<polygon class="arrowhead" points="352,480 340,474.4 340,485.6" fill="black" transform="rotate(0,344,480)"/>
<polygon class="arrowhead" points="216,528 204,522.4 204,533.6" fill="black" transform="rotate(180,208,528)"/>
<polygon class="arrowhead" points="216,480 204,474.4 204,485.6" fill="black" transform="rotate(180,208,480)"/>
<polygon class="arrowhead" points="216,400 204,394.4 204,405.6" fill="black" transform="rotate(180,208,400)"/>
<polygon class="arrowhead" points="200,576 188,570.4 188,581.6" fill="black" transform="rotate(0,192,576)"/>
<polygon class="arrowhead" points="200,448 188,442.4 188,453.6" fill="black" transform="rotate(0,192,448)"/>
<polygon class="arrowhead" points="200,240 188,234.4 188,245.6" fill="black" transform="rotate(0,192,240)"/>
<polygon class="arrowhead" points="200,176 188,170.4 188,181.6" fill="black" transform="rotate(0,192,176)"/>
<polygon class="arrowhead" points="56,592 44,586.4 44,597.6" fill="black" transform="rotate(180,48,592)"/>
<polygon class="arrowhead" points="56,544 44,538.4 44,549.6" fill="black" transform="rotate(180,48,544)"/>
<polygon class="arrowhead" points="56,416 44,410.4 44,421.6" fill="black" transform="rotate(180,48,416)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="60" y="52">Registrar-</text>
<text x="188" y="52">Domain</text>
<text x="348" y="52">Domain</text>
<text x="452" y="52">Vendor</text>
<text x="40" y="68">agent</text>
<text x="200" y="68">Registrar</text>
<text x="332" y="68">CA</text>
<text x="456" y="68">Service</text>
<text x="52" y="84">(RegAgt)</text>
<text x="192" y="84">(JRC)</text>
<text x="452" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="412" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="136" y="132">enrollment]</text>
<text x="20" y="148">[PVR</text>
<text x="64" y="148">PER</text>
<text x="120" y="148">available</text>
<text x="168" y="148">]</text>
<text x="116" y="180">mTLS</text>
<text x="164" y="196">[Reg-Agt</text>
<text x="256" y="196">authenticated</text>
<text x="152" y="212">and</text>
<text x="220" y="212">authorized?]</text>
<text x="120" y="244">Voucher-Req</text>
<text x="120" y="260">(PVR)</text>
<text x="164" y="276">[Reg-Agt</text>
<text x="252" y="276">authorized?]</text>
<text x="160" y="292">[accept</text>
<text x="228" y="292">device?]</text>
<text x="164" y="308">[contact</text>
<text x="232" y="308">vendor]</text>
<text x="332" y="324">mTLS</text>
<text x="328" y="340">Voucher-Req</text>
<text x="328" y="356">(RVR)</text>
<text x="388" y="372">[extract</text>
<text x="464" y="372">DomainID]</text>
<text x="384" y="388">[update</text>
<text x="440" y="388">audit</text>
<text x="484" y="388">log]</text>
<text x="328" y="404">Voucher</text>
<text x="120" y="420">Voucher</text>
<text x="116" y="452">Enroll-Req</text>
<text x="112" y="468">(PER)</text>
<text x="276" y="484">mTLS</text>
<text x="276" y="500">Enroll-Req</text>
<text x="264" y="516">(RER)</text>
<text x="280" y="532">Enroll-Resp</text>
<text x="120" y="548">Enroll-Resp</text>
<text x="120" y="580">caCerts-Req</text>
<text x="120" y="596">caCerts-Res</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+     +-----------+       +--------+   +---------+
| Registrar-|     | Domain    |       | Domain |   | Vendor  |
| agent     |     | Registrar |       | CA     |   | Service |
| (RegAgt)  |     |  (JRC)    |       |        |   | (MASA)  |
+-----------+     +-----------+       +--------+   +---------+
    |                   |                  |   Internet |
[voucher + enrollment]  |                  |            |
[PVR, PER available ]   |                  |            |
    |                   |                  |            |
    |<----- mTLS ------>|                  |            |
    |           [Reg-Agt authenticated     |            |
    |            and authorized?]          |            |
    |                   |                  |            |
    |--- Voucher-Req -->|                  |            |
    |       (PVR)       |                  |            |
    |           [Reg-Agt authorized?]      |            |
    |           [accept device?]           |            |
    |           [contact vendor]                        |
    |                   |------------- mTLS ----------->|
    |                   |--------- Voucher-Req -------->|
    |                   |             (RVR)             |
    |                   |                   [extract DomainID]
    |                   |                   [update audit log]
    |                   |<---------- Voucher -----------|
    |<---- Voucher -----|                  |            |
    |                   |                  |            |
    |--- Enroll-Req --->|                  |            |
    |      (PER)        |                  |            |
    |                   |<----- mTLS ----->|            |
    |                   |--- Enroll-Req -->|            |
    |                   |     (RER)        |            |
    |                   |<-- Enroll-Resp---|            |
    |<-- Enroll-Resp ---|                  |            |
    |                   |                  |            |
    |--- caCerts-Req -->|                  |            |
    |<-- caCerts-Res ---|                  |            |
    |                   |                  |            |
]]></artwork></artset></figure>

<t>The registrar-agent establishes a TLS connection to the registrar.
As already stated in <xref target="RFC8995"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the registrar-agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>

<section anchor="connection-establishment-registrar-agent-to-registrar"><name>Connection Establishment (Registrar-Agent to Registrar)</name>

<t>In contrast to BRSKI <xref target="RFC8995"/> TLS client authentication to the registrar is achieved by using registrar-agent LDevID(RegAgt) credentials instead of pledge IDevID credentials.
Consequently BRSKI (pledge-initiator-mode) is distinguishable from BRSKI-PRM (pledge-responder-mode) by the registrar.
The registrar <bcp14>SHOULD</bcp14> verify that the registrar-agent is authorized to establish a connection to the registrar by TLS client authentication using LDevID(RegAgt) credentials.
If the connection from registrar-agent to registrar is established, the authorization <bcp14>SHALL</bcp14> be verified again based on agent-signed-data contained in the PVR.
This ensures that the pledge has been triggered by an authorized registrar-agent.</t>

<t>The registrar can receive request objects in different formats as defined in <xref target="RFC8995"/>.
Specifically, the registrar will receive JSON-in-JWS objects generated by the pledge for voucher-request and enrollment-request (instead of BRSKI voucher-request as CMS-signed JSON and enrollment-request as PKCS#10).</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PVR by HTTP POST to the registrar endpoint: "/.well-known/brski/requestvoucher"</t>

<t>The Content-Type header field for JSON-in-JWS PVR is: <spanx style="verb">application/voucher-jws+json</spanx> (see <xref target="pvr"/> for the content definition), as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The registrar-agent <bcp14>SHOULD</bcp14> set the Accept field in the request-header indicating the acceptable Content-Type for the voucher-response.
The voucher-response Content-Type header field <bcp14>SHOULD</bcp14> be set to <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

</section>
<section anchor="pledge-voucher-request-rvr-processing-by-registrar"><name>Pledge-Voucher-Request (RVR) Processing by Registrar</name>

<t>After receiving the PVR from registrar-agent, the registrar <bcp14>SHALL</bcp14> perform the verification as defined in section 5.3 of <xref target="RFC8995"/>.
In addition, the registrar <bcp14>SHALL</bcp14> verify the following parameters from the PVR:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: <bcp14>MUST</bcp14> contain registrar's own registrar EE certificate to ensure the registrar in proximity of the registrar-agent is the desired registrar for this PVR.</t>
  <t>agent-signed-data: The registrar <bcp14>MUST</bcp14> verify that the agent provided data has been signed with the LDevID(RegAgt) credentials indicated in the "kid" JOSE header parameter.
The registrar <bcp14>MUST</bcp14> verify that the LDevID(ReAgt) certificate, corresponding to the signature, is still valid.
If the certificate is already expired, the registrar <bcp14>SHALL</bcp14> reject the request.
Validity of used signing certificates at the time of signing the agent-signed-data is necessary to avoid that a rogue registrar-agent generates agent-signed-data objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.
The registrar <bcp14>MUST</bcp14> fetch the LDevID(RegAgt) certificate, based on the provided SubjectKeyIdentifier (SKID) contained in the "kid" header parameter of the agent-signed-data, and perform this verification.
This requires, that the registrar can fetch the LDevID(RegAgt) certificate data (including intermediate CA certificates if existent) based on the SKID.</t>
</list></t>

<t>If the validation fails the registrar <bcp14>SHOULD</bcp14> respond with HTTP 404 Not Found status code to the registrar-agent.
HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used if the Content-Type indicated by the Accept header is unknown or unsupported.</t>

<t>If the validation succeeds, the registrar <bcp14>SHOULD</bcp14> accept the PVR to join the domain as defined in section 5.3 of <xref target="RFC8995"/>.
The registrar then establishes a TLS connection to MASA as described in section 5.4 of <xref target="RFC8995"/> to obtain a voucher for the pledge.</t>

</section>
<section anchor="registrar-voucher-request-rvr-processing-registrar-to-masa"><name>Registrar-Voucher-Request (RVR) Processing (Registrar to MASA)</name>

<t>The registrar <bcp14>SHALL</bcp14> construct the payload of the RVR as defined in <xref target="RFC8995"/>.
The RVR encoding <bcp14>SHALL</bcp14> be JSON-in-JWS as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>The header of the RVR <bcp14>SHALL</bcp14> contain the following parameter as defined for JWS <xref target="RFC7515"/>:</t>

<t><list style="symbols">
  <t>alg: algorithm used to create the object signature</t>
  <t>x5c: base64-encoded registrar LDevID certificate(s)
(It optionally contains the certificate chain for this certificate)</t>
</list></t>

<t>The payload of the RVR <bcp14>MUST</bcp14> contain the following parameter as part of the voucher-request as defined in <xref target="RFC8995"/>:</t>

<t><list style="symbols">
  <t>created-on: current date and time in yang:date-and-time format of RVR creation</t>
  <t>nonce: copied form the PVR</t>
  <t>serial-number: product-serial-number of pledge
The registrar <bcp14>MUST</bcp14> verify that the IDevID certificate subject serialNumber of the pledge (X520SerialNumber) matches the serial-number value in the PVR.
In addition, it <bcp14>MUST</bcp14> be equal to the serial-number value contained in the agent-signed data of PVR.</t>
  <t>assertion: voucher assertion requested by the pledge (agent-proximity).
The registrar provides this information to assure successful verification of agent proximity based on the agent-signed-data.</t>
  <t>prior-signed-voucher-request: PVR as in <xref target="RFC8995"/></t>
</list></t>

<t>The RVR <bcp14>MUST</bcp14> be enhanced with the following parameter, when the assertion "agent-proximity" is requested, as defined in <xref target="voucher-request-prm-yang"/>:</t>

<t><list style="symbols">
  <t>agent-sign-cert: LDevID(RegAgt) certificate or the LDevID(RegAgt) certificate including certificate chain.
In the context of this document it is a JSON array of base64encoded certificate information and handled in the same way as x5c header objects.</t>
</list></t>

<t>If only a single object is contained in the x5c it <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.
If multiple certificates are included in the x5c, the first <bcp14>MUST</bcp14> be the base64-encoded LDevID(RegAgt) certificate.</t>

<t>The MASA uses this information for verification that the registrar-agent is in proximity to the registrar to state the corresponding assertion "agent-proximity".</t>

<t>The object is signed using the registrar EE credentials, which corresponds to the certificate referenced in the JOSE header.</t>

<figure title="Representation of RVR" anchor="rvr"><artwork align="left"><![CDATA[
# The RVR in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher-request-prm:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher-request-prm:voucher" representation
  in JSON syntax
"ietf-voucher-request-prm:voucher": {
   "created-on": "2022-01-04T02:37:39.235Z",
   "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
   "serial-number": "callee4711",
   "assertion": "agent-proximity",
   "prior-signed-voucher-request": "base64encodedvalue==",
   "agent-sign-cert": [
     "base64encodedvalue==",
     "base64encodedvalue==",
     "..."
   ]
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The registrar <bcp14>SHALL</bcp14> send the RVR to the MASA endpoint by HTTP POST: "/.well-known/brski/requestvoucher"</t>

<t>The RVR Content-Type header field is defined in <xref target="I-D.ietf-anima-jws-voucher"/> as: <spanx style="verb">application/voucher-jws+json</spanx></t>

<t>The registrar <bcp14>SHOULD</bcp14> set the Accept header of the RVR indicating the desired media type for the voucher-response.
The media type is <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>

<t>Once the MASA receives the RVR it <bcp14>SHALL</bcp14> perform the verification as described in section 5.5 in <xref target="RFC8995"/>.</t>

<t>In addition, the following processing <bcp14>SHALL</bcp14> be performed for PVR contained in RVR "prior-signed-voucher-request" field:</t>

<t><list style="symbols">
  <t>agent-provided-proximity-registrar-cert: The MASA <bcp14>MAY</bcp14> verify that this field contains the registrar EE certificate.
If so, it <bcp14>MUST</bcp14> correspond to the registrar EE credentials used to sign the RVR.
Note: Correspond here relates to the case that a single registrar EE certificate is used or that different registrar EE certificates are used, which are issued by the same CA.</t>
  <t>agent-signed-data: The MASA <bcp14>MAY</bcp14> verify this data to issue "agent-proximity" assertion.
If so, the agent-signed-data <bcp14>MUST</bcp14> contain the pledge product-serial-number, contained in the "serial-number" field of the PVR (from "prior-signed-voucher-request" field) and also in "serial-number" field of the RVR.
The LDevID(RegAgt) certificate to be used for signature verification is identified by the "kid" parameter of the JOSE header.
If the assertion "agent-proximity" is requested, the RVR <bcp14>MUST</bcp14> contain the corresponding LDevID(RegAgt) certificate data in the "agent-sign-cert" field of the RVR.
It <bcp14>MUST</bcp14> be verified by the MASA to the same domain CA as the registrar EE certificate.
If the "agent-sign-cert" field is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value, e.g.: "logged" or "verified".
Note: Sub-CA certificate(s) <bcp14>MUST</bcp14> also be carried by "agent-sign-cert", in case the LDevID(RegAgt) certificate is issued by a sub-CA and not the domain CA known to the MASA.
As the "agent-sign-cert" field is defined as array (x5c), it can handle multiple certificates.</t>
</list></t>

<t>If validation fails, the MASA <bcp14>SHOULD</bcp14> respond with an HTTP 4xx client error status code to the registrar.
The HTTP error status codes are kept the same as defined in section 5.6 of <xref target="RFC8995"/> and comprise the codes: 403, 404, 406, and 415.</t>

</section>
<section anchor="voucher-issuance-by-masa"><name>Voucher Issuance by MASA</name>

<t>The expected voucher-response format for BRSKI-PRM (pledge-responder-mode) <spanx style="verb">application/voucher-jws+json</spanx> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> <bcp14>SHOULD</bcp14> be applied.
If the MASA detects that the Accept header of the PVR does not match the <spanx style="verb">application/voucher-jws+json</spanx> it <bcp14>SHOULD</bcp14> respond with the HTTP status code 406 Not Acceptable as the pledge will not be able to parse the response.
The voucher syntax is described in detail by <xref target="RFC8366"/>. <xref target="MASA-vr"/> shows an example of the contents of a voucher.</t>

<figure title="Representation of MASA issued voucher" anchor="MASA-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher in General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
  "assertion": "agent-proximity",
  "serial-number": "callee4711",
  "nonce": "base64encodedvalue==",
  "created-on": "2022-01-04T00:00:02.000Z",
  "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}
]]></artwork></figure>

<t>The MASA returns the voucher-response (voucher) to the registrar.</t>

</section>
<section anchor="exchanges_uc2_2_vs"><name>MASA issued Voucher Processing by Registrar</name>

<t>After receiving the voucher the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in section 5.6 of <xref target="RFC8995"/>.
The registrar <bcp14>MUST</bcp14> add an additional signature to the MASA provided voucher using its registrar credentials.
The signature is created by signing the original "JWS Payload" produced by MASA and the registrar added "JWS Protected Header" using the registrar EE credentials (see<xref target="RFC7515"/>, section 5.2 point 8.
The x5c component of the "JWS Protected Header" <bcp14>MUST</bcp14> contain registrar EE certificate as well as potential intermediate CA certificates up to the pinned domain certificate.
The pinned domain certificate is already contained in the voucher payload ("pinned-domain-cert").</t>

<t>This signature provides a proof of possession of the private key corresponding to the registrar EE certificate the pledge received in the trigger for the PVR (see <xref target="pavrt"/>).
The registrar <bcp14>MUST</bcp14> use the same registrar EE credentials used for authentication in the TLS handshake to authenticate towards the registrar-agent.
This ensures that the same registrar EE certificate can be used to verify the signature as transmitted in the voucher request as also transferred in the PVR in the "agent-provided-proximity-registrar-cert".
<xref target="MASA-REG-vr"/> below provides an example of the voucher with two signatures.</t>

<figure title="Representation of MASA issued voucher with additional registrar signature" anchor="MASA-REG-vr"><artwork align="left"><![CDATA[
# The MASA issued voucher with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(ietf-voucher:voucher)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (MASA)))",
      "signature": "base64encodedvalue=="
    },
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header (Reg)))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "ietf-voucher:voucher" representation in
  JSON syntax
"ietf-voucher:voucher": {
   "assertion": "agent-proximity",
   "serial-number": "callee4711",
   "nonce": "base64encodedvalue==",
   "created-on": "2022-01-04T00:00:02.000Z",
   "pinned-domain-cert": "base64encodedvalue=="
}

# Decoded "JWS Protected Header (MASA)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "voucher-jws+json"
}

# Decoded "JWS Protected Header (Reg)" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Depending on the security policy of the operator, this signature can also be interpreted by the pledge as explicit authorization of the registrar to install the contained trust anchor.
The registrar sends the voucher to the registrar-agent.</t>

</section>
<section anchor="exchanges_uc2_2_per"><name>Pledge-Enrollment-Request (PER) Processing (Registrar-Agent to Registrar)</name>

<t>After receiving the voucher, the registrar-agent sends the PER to the registrar.
Deviating from BRSKI the PER is not a raw PKCS#10.
As the registrar-agent is involved in the exchange, the PKCS#10 is wrapped in a JWS object by the pledge and signed with pledge's IDevID to ensure proof-of-identity as outlined in <xref target="per"/>.</t>

<t>EST <xref target="RFC7030"/> standard endpoints (/simpleenroll, /simplereenroll, /serverkeygen, /cacerts) on the registrar cannot be used for BRSKI-PRM.
This is caused by the utilization of signature wrapped-objects in BRSKI-PRM.
As EST requires to sent a raw PKCS#10 request to e.g., "/.well-known/est/simpleenroll" endpoint, this document makes an enhancement by utilizing EST but with the exception to transport a signature wrapped PKCS#10 request.
Therefore a new endpoint for BRSKI-PRM on the registrar is defined as "/.well-known/brski/requestenroll"</t>

<t>The Content-Type header of PER is: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
Note, the registrar is already aware that the bootstrapping is performed in a pledge-responder-mode due to the use of the LDevID(RegAgt) certificate for TLS and the provided PVR as JSON-in-JWS object.</t>

<t><list style="symbols">
  <t>If the registrar receives a PER with Content-Type header: <spanx style="verb">application/jose+json</spanx>, it <bcp14>MUST</bcp14> verify the wrapping signature using the certificate indicated in the JOSE header.</t>
  <t>The registrar verifies that the pledge's certificate (here IDevID), carried in "x5c" header field, is accepted to join the domain after successful validation of the PVR.</t>
  <t>If both succeed, the registrar utilizes the PKCS#10 request contained in the JWS object body as "P10" parameter of "ietf-sztp-csr:csr" for further processing of the enrollment request with the corresponding domain CA.
It creates a registrar-enrollment-request (RER) by utilizing the protocol expected by the domain CA.
The domain registrar may either directly forward the provided PKCS#10 request to the CA or provide additional information about attributes to be included by the CA into the requested LDevID certificate.
The approach of sending this information to the CA depends on the utilized certificate management protocol between the RA and the CA and is out of scope for this document.</t>
</list></t>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the PER to the registrar by HTTP POST to the endpoint: "/.well-known/brski/requestenroll"</t>

<t>The registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.</t>

<t>A successful interaction with the domain CA will result in a pledge LDevID certificate, which is then forwarded by the registrar to the registrar-agent using the Content-Type header: <spanx style="verb">application/pkcs7-mime</spanx>.</t>

</section>
<section anchor="exchanges_uc2_2_wca"><name>Request Wrapped-CA-certificate(s) (Registrar-Agent to Registrar)</name>

<t>As the pledge will verify it own certificate LDevID certificate when received, it also needs the corresponding CA certificates.
This is done in EST <xref target="RFC7030"/> using the "/.well-known/est/cacerts" endpoint, which provides the CA certificates over a TLS protected connection.
BRSKI-PRM requires a signature wrapped CA certificate object, to avoid that the pledge can be provided with arbitrary CA certificates in an authorized way.
The registrar signed CA certificate object will allow the pledge to verify the authorization to install the received CA certificate(s).
As the CA certificate(s) are provided to the pledge after the voucher, the pledge has the required information (the domain certificate) to verify the wrapped CA certificate object.</t>

<t>To support registrar-agents requesting a signature wrapped CA certificate(s) object, a new endpoint for BRSKI-PRM is defined on the registrar: "/.well-known/brski/wrappedcacerts"</t>

<t>The registrar-agent <bcp14>SHALL</bcp14> requests the EST CA trust anchor database information (in form of CA certificates) by HTTP GET.</t>

<t>The Content-Type header of the response <bcp14>SHALL</bcp14> be: <spanx style="verb">application/jose+json</spanx>.</t>

<t>This is a deviation from the Content-Type header values used in EST <xref target="RFC7030"/> and results in additional processing at the domain registrar (as EST server).
The additional processing is to sign the CA certificate(s) information using the registrar EE credentials.
This results in a signed CA certificate(s) object (JSON-in-JWS), the CA certificates are provided as base64 encoded "x5b" in the JWS payload.</t>

<figure title="Representation of CA certificate(s) data with additional registrar signature" anchor="PCAC"><artwork align="left"><![CDATA[
# The CA certificates data with additional registrar signature in
  General JWS Serialization syntax
{
  "payload": "BASE64URL(certs)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "certs" representation in JSON syntax
{
  "x5b": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}


# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
</section>
<section anchor="exchanges_uc2_3"><name>Response Object Supply by Registrar-Agent to Pledge</name>

<t>It is assumed that the registrar-agent already obtained the bootstrapping response objects from the domain registrar and can supply them to the pledge:
* voucher-response - Voucher (from MASA via Registrar)
* wrapped-CA-certificate(s)-response - CA certificates
* enrollment-response - LDevID(Pledge) certificate (from CA via Registrar)</t>

<t>The registrar-agent will re-connect to the pledge.
To contact the pledge, it may either discover the pledge as described in <xref target="discovery_uc2_ppa"/> or use stored information from the first contact with the pledge.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher and LDevID certificate and optionally CA certificates.</t>
</list></t>

<figure title="Responses and status handling between pledge and registrar-agent" anchor="exchangesfig_uc2_3"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="528" viewBox="0 0 528 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,336" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 280,32 L 280,96" fill="none" stroke="black"/>
<path d="M 328,144 L 328,336" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 280,32 L 376,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 280,96 L 376,96" fill="none" stroke="black"/>
<path d="M 48,160 L 104,160" fill="none" stroke="black"/>
<path d="M 240,160 L 320,160" fill="none" stroke="black"/>
<path d="M 48,192 L 112,192" fill="none" stroke="black"/>
<path d="M 248,192 L 320,192" fill="none" stroke="black"/>
<path d="M 48,224 L 88,224" fill="none" stroke="black"/>
<path d="M 296,224 L 320,224" fill="none" stroke="black"/>
<path d="M 48,256 L 72,256" fill="none" stroke="black"/>
<path d="M 304,256 L 320,256" fill="none" stroke="black"/>
<path d="M 48,288 L 112,288" fill="none" stroke="black"/>
<path d="M 240,288 L 320,288" fill="none" stroke="black"/>
<path d="M 48,320 L 72,320" fill="none" stroke="black"/>
<path d="M 296,320 L 320,320" fill="none" stroke="black"/>
<polygon class="arrowhead" points="328,288 316,282.4 316,293.6" fill="black" transform="rotate(0,320,288)"/>
<polygon class="arrowhead" points="328,192 316,186.4 316,197.6" fill="black" transform="rotate(0,320,192)"/>
<polygon class="arrowhead" points="56,320 44,314.4 44,325.6" fill="black" transform="rotate(180,48,320)"/>
<polygon class="arrowhead" points="56,256 44,250.4 44,261.6" fill="black" transform="rotate(180,48,256)"/>
<polygon class="arrowhead" points="56,224 44,218.4 44,229.6" fill="black" transform="rotate(180,48,224)"/>
<polygon class="arrowhead" points="56,160 44,154.4 44,165.6" fill="black" transform="rotate(180,48,160)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="332" y="52">Registrar-</text>
<text x="312" y="68">Agent</text>
<text x="324" y="84">(RegAgt)</text>
<text x="284" y="116">[voucher</text>
<text x="336" y="116">and</text>
<text x="400" y="116">enrollment]</text>
<text x="292" y="132">[responses</text>
<text x="380" y="132">available]</text>
<text x="140" y="164">supply</text>
<text x="200" y="164">voucher</text>
<text x="152" y="196">voucher</text>
<text x="212" y="196">status</text>
<text x="344" y="196">-</text>
<text x="376" y="196">store</text>
<text x="380" y="212">pledge</text>
<text x="440" y="212">voucher</text>
<text x="500" y="212">status</text>
<text x="124" y="228">supply</text>
<text x="164" y="228">CA</text>
<text x="228" y="228">certificates</text>
<text x="108" y="260">supply</text>
<text x="180" y="260">enrollment</text>
<text x="260" y="260">response</text>
<text x="148" y="292">enroll</text>
<text x="204" y="292">status</text>
<text x="344" y="292">-</text>
<text x="376" y="292">store</text>
<text x="380" y="308">pledge</text>
<text x="436" y="308">enroll</text>
<text x="492" y="308">status</text>
<text x="108" y="324">supply</text>
<text x="168" y="324">CAcerts</text>
<text x="244" y="324">(optional)</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                        +-----------+
| Pledge |                        | Registrar-|
|        |                        | Agent     |
|        |                        | (RegAgt)  |
+--------+                        +-----------+
    |                          [voucher and enrollment]
    |                          [responses available]
    |                                   |
    |<------- supply voucher -----------|
    |                                   |
    |--------- voucher status --------->| - store
    |                                   |   pledge voucher status
    |<----- supply CA certificates  ----|
    |                                   |
    |<--- supply enrollment response ---|
    |                                   |
    |--------- enroll status ---------->| - store
    |                                   |   pledge enroll status
    |<--- supply CAcerts (optional) ----|
    |                                   |

]]></artwork></artset></figure>
<t>The content of the response objects is defined by the voucher <xref target="RFC8366"/> and the certificate <xref target="RFC5280"/>.</t>

<t>The registrar-agent provides the information via distinct pledge endpoints as following.</t>

<section anchor="pledge-voucher-response-processing"><name>Pledge: Voucher Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the voucher-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/sv".</t>

<t>The registrar-agent voucher-response Content-Type header is <spanx style="verb">application/voucher-jws+json</spanx> and contains the voucher as provided by the MASA. An example if given in <xref target="MASA-vr"/> for a MASA  signed voucher and in <xref target="MASA-REG-vr"/> for the voucher with the additional signature of the registrar.</t>

<t>A nonceless voucher may be accepted as in <xref target="RFC8995"/> and may be allowed by a manufacture's pledge implementation.</t>

<t>To perform the validation of multiple signatures on the voucher object, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>

<t><list style="numbers">
  <t>Verify MASA signature as described in section 5.6.1 in <xref target="RFC8995"/></t>
  <t>Install trust anchor contained in the voucher ("pinned-domain-cert")  provisionally</t>
  <t>Verify registrar signature as described in section 5.6.1 in <xref target="RFC8995"/>, but take the registrar certificate instead of the MASA certificate for the verification</t>
  <t>Validate the registrar certificate received in the agent-provided-proximity-registrar-cert in the pledge-voucher-request trigger request (in the field "agent-provided-proximity-registrar-cert").</t>
</list></t>

<t>If all steps stated above have been performed successfully, the pledge <bcp14>SHALL</bcp14> terminate the "PROVISIONAL accept" state for the domain trust anchor and the registrar EE certificate.</t>

<t>If an error occurs during the verification and validation of the voucher, this <bcp14>SHALL</bcp14> be reported in the reason field of the pledge voucher status.</t>

</section>
<section anchor="pledge-voucher-status-telemetry"><name>Pledge: Voucher Status Telemetry</name>

<t>After voucher verification and validation the pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.7 of <xref target="RFC8995"/>.
The pledge generates the voucher-status and provides it as signed JSON-in-JWS object in response to the registrar-agent.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the IDevID of the pledge as shown in <xref target="vstat"/>.
As the reason field is optional (see <xref target="RFC8995"/>), it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<figure title="Representation of pledge voucher status telemetry" anchor="vstat"><artwork align="left"><![CDATA[
# The "pledge-voucher-status" telemetry in general JWS
  serialization syntax
{
  "payload": "BASE64URL(pledge-voucher-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-voucher-status" representation in JSON
  syntax
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-wrapped-ca-certificates-processing"><name>Pledge: Wrapped-CA-Certificate(s) Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> provide the set of CA certificates requested from the registrar to the pledge by HTTP POST to the endpoint: "/.well-known/brski/cc".</t>

<t>As the CA certificate provisioning is crucial from a security perspective, this provisioning <bcp14>SHALL</bcp14> only be done, if the voucher-response has been successfully processed by pledge.</t>

<t>The supply CA certificates message has the Content-Type <spanx style="verb">application/jose+json</spanx> and is signed using the credential of the registrar pledge as shown in <xref target="PCAC"/>.</t>

<t>The CA certificates are provided as base64 encoded "x5b".
The pledge <bcp14>SHALL</bcp14> install the received CA certificates as trust anchor after successful verification of the registrar's signature.</t>

<t>If validation of the wrapping signature or another security check fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is in an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the pledge detects errors in the encoding of the payload.</t>

</section>
<section anchor="pledge-enrollment-response-processing"><name>Pledge: Enrollment Response Processing</name>

<t>The registrar-agent <bcp14>SHALL</bcp14> send the enroll-response to the pledge by HTTP POST to the endpoint: "/.well-known/brski/se".</t>

<t>The registrar-agent enroll-response Content-Type header, when using EST <xref target="RFC7030"/> as enrollment protocol between the registrar-agent and the infrastructure is: <spanx style="verb">application/pkcs7-mime</spanx>.
Note: It only contains the LDevID certificate for the pledge, not the certificate chain.</t>

<t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received LDevID certificate.
The pledge <bcp14>SHALL</bcp14> generate the enroll status and provide it in the response to the registrar-agent.
If the verification of the LDevID certificate succeeds, the status <bcp14>SHALL</bcp14> be set to true, otherwise to FALSE.</t>

</section>
<section anchor="pledge-enrollment-status-telemetry"><name>Pledge: Enrollment Status Telemetry</name>

<t>The pledge <bcp14>MUST</bcp14> reply with a status telemetry message as defined in section 5.9.4 of <xref target="RFC8995"/>.
As for the other objects, the enroll-status is signed and results in a JSON-in-JWS object.
If the pledge verified the received LDevID certificate successfully it <bcp14>SHALL</bcp14> sign the response using its new LDevID credentials as shown in <xref target="estat"/>.
In the failure case, the pledge <bcp14>SHALL</bcp14> use the available IDevID credentials.
As the reason field is optional, it <bcp14>MAY</bcp14> be omitted in case of success.</t>

<t>The response has the Content-Type <spanx style="verb">application/jose+json</spanx>.</t>

<figure title="Representation of pledge enroll status telemetry" anchor="estat"><artwork align="left"><![CDATA[
# The "pledge-enroll-status" telemetry in General JWS Serialization
  syntax
{
  "payload": "BASE64URL(pledge-enroll-status)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "pledge-enroll-status" representation in
  JSON syntax
{
  "version": 1,
  "status": true,
  "reason": "Enrollment response successfully processed",
  "reason-context": {
    "additional": "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

<t>Once the registrar-agent has collected the information, it can connect to the registrar-agent to provide the status responses to the registrar.</t>

</section>
<section anchor="exchanges_uc2_4"><name>Telemetry Voucher Status and Enroll Status Handling (Registrar-Agent to Domain Registrar)</name>

<t>The following description requires that the registrar-agent has collected the status information from the pledge.
It <bcp14>SHALL</bcp14> provide the status information to the registrar for further processing.</t>

<t>Preconditions in addition to <xref target="exchanges_uc2_2"/>:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses voucher status and enroll status from pledge.</t>
</list></t>

<figure title="Bootstrapping status handling" anchor="exchangesfig_uc2_4"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="496" viewBox="0 0 496 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,160 L 40,304" fill="none" stroke="black"/>
<path d="M 104,32 L 104,96" fill="none" stroke="black"/>
<path d="M 176,32 L 176,96" fill="none" stroke="black"/>
<path d="M 224,104 L 224,240" fill="none" stroke="black"/>
<path d="M 224,272 L 224,304" fill="none" stroke="black"/>
<path d="M 272,32 L 272,96" fill="none" stroke="black"/>
<path d="M 304,32 L 304,96" fill="none" stroke="black"/>
<path d="M 344,104 L 344,208" fill="none" stroke="black"/>
<path d="M 344,272 L 344,304" fill="none" stroke="black"/>
<path d="M 376,32 L 376,96" fill="none" stroke="black"/>
<path d="M 408,32 L 408,96" fill="none" stroke="black"/>
<path d="M 448,104 L 448,240" fill="none" stroke="black"/>
<path d="M 448,272 L 448,304" fill="none" stroke="black"/>
<path d="M 488,32 L 488,96" fill="none" stroke="black"/>
<path d="M 8,32 L 104,32" fill="none" stroke="black"/>
<path d="M 176,32 L 272,32" fill="none" stroke="black"/>
<path d="M 304,32 L 376,32" fill="none" stroke="black"/>
<path d="M 408,32 L 488,32" fill="none" stroke="black"/>
<path d="M 8,96 L 104,96" fill="none" stroke="black"/>
<path d="M 176,96 L 272,96" fill="none" stroke="black"/>
<path d="M 304,96 L 376,96" fill="none" stroke="black"/>
<path d="M 408,96 L 488,96" fill="none" stroke="black"/>
<path d="M 48,176 L 104,176" fill="none" stroke="black"/>
<path d="M 160,176 L 216,176" fill="none" stroke="black"/>
<path d="M 48,208 L 64,208" fill="none" stroke="black"/>
<path d="M 200,208 L 216,208" fill="none" stroke="black"/>
<path d="M 232,224 L 248,224" fill="none" stroke="black"/>
<path d="M 424,224 L 440,224" fill="none" stroke="black"/>
<path d="M 232,240 L 264,240" fill="none" stroke="black"/>
<path d="M 416,240 L 440,240" fill="none" stroke="black"/>
<path d="M 48,288 L 64,288" fill="none" stroke="black"/>
<path d="M 192,288 L 216,288" fill="none" stroke="black"/>
<polygon class="arrowhead" points="448,224 436,218.4 436,229.6" fill="black" transform="rotate(0,440,224)"/>
<polygon class="arrowhead" points="240,240 228,234.4 228,245.6" fill="black" transform="rotate(180,232,240)"/>
<polygon class="arrowhead" points="224,288 212,282.4 212,293.6" fill="black" transform="rotate(0,216,288)"/>
<polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(0,216,208)"/>
<polygon class="arrowhead" points="224,176 212,170.4 212,181.6" fill="black" transform="rotate(0,216,176)"/>
<polygon class="arrowhead" points="56,176 44,170.4 44,181.6" fill="black" transform="rotate(180,48,176)"/>
<g class="text">
<text x="56" y="52">Registrar</text>
<text x="212" y="52">Domain</text>
<text x="340" y="52">Domain</text>
<text x="444" y="52">Vendor</text>
<text x="40" y="68">Agent</text>
<text x="224" y="68">Registrar</text>
<text x="324" y="68">CA</text>
<text x="448" y="68">Service</text>
<text x="48" y="84">RegAgt)</text>
<text x="216" y="84">(JRC)</text>
<text x="444" y="84">(MASA)</text>
<text x="40" y="116">|</text>
<text x="404" y="116">Internet</text>
<text x="36" y="132">[voucher</text>
<text x="80" y="132">+</text>
<text x="116" y="132">enroll</text>
<text x="152" y="132">]</text>
<text x="32" y="148">[status</text>
<text x="84" y="148">info</text>
<text x="148" y="148">available]</text>
<text x="132" y="180">mTLS</text>
<text x="104" y="212">Voucher</text>
<text x="164" y="212">Status</text>
<text x="300" y="228">req-device</text>
<text x="368" y="228">audit</text>
<text x="408" y="228">log</text>
<text x="300" y="244">device</text>
<text x="352" y="244">audit</text>
<text x="392" y="244">log</text>
<text x="184" y="260">[verify</text>
<text x="240" y="260">audit</text>
<text x="280" y="260">log</text>
<text x="304" y="260">]</text>
<text x="100" y="292">Enroll</text>
<text x="156" y="292">Status</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+-----------+        +-----------+   +--------+   +---------+
| Registrar |        | Domain    |   | Domain |   | Vendor  |
| Agent     |        | Registrar |   | CA     |   | Service |
| RegAgt)   |        |  (JRC)    |   |        |   | (MASA)  |
+-----------+        +-----------+   +--------+   +---------+
    |                      |              |   Internet |
[voucher + enroll ]        |              |            |
[status info available]    |              |            |
    |                      |              |            |
    |<------- mTLS ------->|              |            |
    |                      |              |            |
    |--- Voucher Status -->|              |            |
    |                      |--- req-device audit log-->|
    |                      |<---- device audit log ----|
    |              [verify audit log ]
    |                      |              |            |
    |--- Enroll Status --->|              |            |
    |                      |              |            |
]]></artwork></artset></figure>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the collected pledge voucher status to the registrar.
This status indicates if the pledge could process the voucher successfully or not.</t>

<t>If the TLS connection to the registrar was closed, the registrar-agent establishes a TLS connection with the registrar as stated in <xref target="exchanges_uc2_2"/>.</t>

<t>The registrar-agent sends the pledge voucher status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/voucher_status". The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="vstat"/>.</t>

<t>The registrar <bcp14>SHALL</bcp14> verify the signature of the pledge voucher status and validate that it belongs to an accepted device in his domain based on the contained "serial-number" in the IDevID certificate referenced in the header of the voucher status.</t>

<t>According to <xref target="RFC8995"/> section 5.7, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server logs the server <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

<t>The registrar <bcp14>SHOULD</bcp14> proceed with collecting and logging status information by requesting the MASA audit-log from the MASA service as described in section 5.8 of <xref target="RFC8995"/>.</t>

<t>The registrar-agent <bcp14>MUST</bcp14> provide the pledge's enroll status to the registrar.
The status indicates the pledge could process the enroll-response (certificate) and holds the corresponding private key.</t>

<t>The registrar-agent sends the pledge enroll status without modification to the registrar with an HTTP-over-TLS POST using the registrar endpoint "/.well-known/brski/enrollstatus".
The Content-Type header is kept as <spanx style="verb">application/jose+json</spanx> as described in <xref target="exchangesfig_uc2_3"/> and depicted in the example in <xref target="estat"/>.</t>

<t>The registrar <bcp14>MUST</bcp14> verify the signature of the pledge enroll status.
Also, the registrar <bcp14>SHALL</bcp14> validate that the pledge is an accepted device in his domain based on the contained product-serial-number in the LDevID certificate referenced in the header of the enroll status.
The registrar <bcp14>SHOULD</bcp14> log this event.
In case the pledge enroll status indicates a failure, the pledge was unable to verify the received LDevID certificate and therefore signed the enroll status with its IDevID credential.
Note that the verification of a signature of the status information is an addition to the described handling in section 5.9.4 of <xref target="RFC8995"/>.</t>

<t>According to <xref target="RFC8995"/> section 5.9.4, the registrar <bcp14>SHOULD</bcp14> respond with an HTTP 200 OK in the success case or fail with HTTP 4xx/5xx status codes as defined by the HTTP standard.
Based on the failure case the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain. In this case the registrar <bcp14>MUST</bcp14> revoke the certificate.
The registrar-agent may use the response to signal success / failure to the service technician operating the registrar agent.
Within the server log the registrar <bcp14>SHOULD</bcp14> capture this telemetry information.</t>

</section>
</section>
<section anchor="exchanges_uc2_5"><name>Request Pledge-Status by Registrar-Agent from Pledge</name>

<t>The following assumes that a registrar-agent may need to query the status of a pledge.
This information may be useful to solve errors, when the pledge was not able to connect to the target domain during the bootstrapping.
The pledge <bcp14>MAY</bcp14> provide a dedicated endpoint to accept status-requests.</t>

<t>Preconditions:</t>

<t><list style="symbols">
  <t>Registrar-agent: possesses LDevID (RegAgt), list of serial numbers of pledges to be queried and a list of corresponding manufacturer trust anchors to be able to verify signatures performed with the IDevID credential.</t>
  <t>Pledge: may already possess domain credentials and LDevID(Pledge), or may not possess one or both of these.</t>
</list></t>

<figure title="Pledge-status handling between registrar-agent and pledge" anchor="exchangesfig_uc2_5"><artset><artwork  type="svg" align="left"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="360" viewBox="0 0 360 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
<path d="M 8,32 L 8,96" fill="none" stroke="black"/>
<path d="M 40,104 L 40,176" fill="none" stroke="black"/>
<path d="M 80,32 L 80,96" fill="none" stroke="black"/>
<path d="M 256,32 L 256,96" fill="none" stroke="black"/>
<path d="M 304,104 L 304,176" fill="none" stroke="black"/>
<path d="M 352,32 L 352,96" fill="none" stroke="black"/>
<path d="M 8,32 L 80,32" fill="none" stroke="black"/>
<path d="M 256,32 L 352,32" fill="none" stroke="black"/>
<path d="M 8,96 L 80,96" fill="none" stroke="black"/>
<path d="M 256,96 L 352,96" fill="none" stroke="black"/>
<path d="M 48,128 L 72,128" fill="none" stroke="black"/>
<path d="M 264,128 L 296,128" fill="none" stroke="black"/>
<path d="M 48,160 L 72,160" fill="none" stroke="black"/>
<path d="M 272,160 L 296,160" fill="none" stroke="black"/>
<polygon class="arrowhead" points="304,160 292,154.4 292,165.6" fill="black" transform="rotate(0,296,160)"/>
<polygon class="arrowhead" points="56,128 44,122.4 44,133.6" fill="black" transform="rotate(180,48,128)"/>
<g class="text">
<text x="44" y="52">Pledge</text>
<text x="308" y="52">Registrar-</text>
<text x="288" y="68">Agent</text>
<text x="300" y="84">(RegAgt)</text>
<text x="136" y="132">pledge-status</text>
<text x="224" y="132">request</text>
<text x="136" y="164">pledge-status</text>
<text x="228" y="164">response</text>
</g>
</svg>
</artwork><artwork  type="ascii-art" align="left"><![CDATA[
+--------+                     +-----------+
| Pledge |                     | Registrar-|
|        |                     | Agent     |
|        |                     | (RegAgt)  |
+--------+                     +-----------+
    |                                |
    |<--- pledge-status request -----|
    |                                |
    |---- pledge-status response --->|
    |                                |
]]></artwork></artset></figure>

<section anchor="pledge-status-trigger-registrar-agent-to-pledge"><name>Pledge-Status - Trigger (Registrar-Agent to Pledge)</name>

<t>The registrar-agent requests the pledge-status via HTTP POST on the defined pledge endpoint: "/.well-known/brski/ps"</t>

<t>The registrar-agent Content-Type header for the pledge-status request is: <spanx style="verb">application/jose+json</spanx>.
It contains information on the requested status-type, the time and date the request is created, and the product serial-number of the pledge contacted as shown in <xref target="stat_req_def"/>.
The pledge-status request is signed by registrar-agent using the LDevID(RegAgt) credential.</t>

<t>The following Concise Data Definition Language (CDDL) <xref target="RFC8610"/> explains the structure of the format for the pledge-status request. It is defined following the status telemetry definitions in BRSKI <xref target="RFC8995"/>.
Consequently, format and semantics of pledge-status requests below are for version 1.
The version field is included to permit significant changes to the pledge-status request and response in the future.
A pledge or a registrar-agent that receives a pledge-status request with a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and alert a human.</t>

<figure title="CDDL for pledge-status request" anchor="stat_req_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-request = {
      "version": uint,
      "created-on": tdate ttime,
      "serial-number": text,
      "status-type": text
  }
<CODE ENDS>
]]></artwork></figure>

<t>The status-type defined for BRSKI-PRM is "bootstrap".
This indicates the pledge to provide current status information regarding the bootstrapping status (voucher processing and enrollment of the pledge into the new domain).
As the pledge-status request is defined generic, it may be used by other specifications to request further status information, e.g., for onboarding to get further information about enrollment of application specific LDevIDs or other parameters.
This is out of scope for this specification.</t>

<t><xref target="stat_req"/> below shows an example for querying pledge-status using status-type bootstrap.</t>

<figure title="Example of registrar-agent request of pledge-status using status-type bootstrap" anchor="stat_req"><artwork align="left"><![CDATA[
# The registrar-agent request of "pledge-status" in general JWS
  serialization syntax
{
  "payload": "BASE64URL(status-request)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-request" representation in JSON syntax
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "pledge-callee4711",
  "status-type": "bootstrap"
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork></figure>

</section>
<section anchor="pledge-status-response-pledge-registrar-agent"><name>Pledge-Status - Response (Pledge - Registrar-Agent)</name>

<t>If the pledge receives the pledge-status request with status-type "bootstrap" it <bcp14>SHALL</bcp14> react with a status response message based on the telemetry information described in section <xref target="exchanges_uc2_3"/>.</t>

<t>The pledge-status response Content-Type header is <spanx style="verb">application/jose+json</spanx>.</t>

<t>The following CDDL explains the structure of the format for the status response, which is :</t>

<figure title="CDDL for pledge-status response" anchor="stat_res_def"><artwork align="left"><![CDATA[
<CODE BEGINS>
  status-response = {
    "version": uint,
    "status":
      "factory-default" /
      "voucher-success" /
      "voucher-error" /
      "enroll-success" /
      "enroll-error" /
      "connect-success" /
      "connect-error",
    ?"reason" : text,
    ?"reason-context" : { $$arbitrary-map }
  }
<CODE ENDS>
]]></artwork></figure>

<t>Different cases for pledge bootstrapping status may occur, which <bcp14>SHOULD</bcp14> be reflected using the status enumeration.
This document specifies the status values in the context of the bootstrapping process and credential application.
Other documents may enhance the above enumeration to reflect further status information.</t>

<t>The pledge-status response message is signed with IDevID or LDevID, depending on bootstrapping state of the pledge.</t>

<t><list style="symbols">
  <t>"factory-default": Pledge has not been bootstrapped.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-success": Pledge processed the voucher exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"voucher-error": Pledge voucher processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
  <t>"enroll-success": Pledge has processed the enrollment exchange successfully.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"enroll-error": Pledge enrollment response processing terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its IDevID(Pledge).</t>
</list></t>

<t>The reason and the reason-context <bcp14>SHOULD</bcp14> contain the telemetry information as described in section <xref target="exchanges_uc2_3"/>.</t>

<t>As the pledge is assumed to utilize the bootstrapped credential information in communication with other peers, additional status information is provided for the connectivity to other peers, which may be helpful in analyzing potential error cases.</t>

<t><list style="symbols">
  <t>"connect-success": Pledge could successfully establish a connection to another peer.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
  <t>"connect-error": Pledge connection establishment terminated with error.
Additional information may be provided in the reason or reason-context.
The pledge signs the response message using its LDevID(Pledge).</t>
</list></t>

<t>The pledge-status responses are cumulative in the sense that connect-success implies enroll-success implies voucher-success.</t>

<t><xref target="stat_res"/> provides an example for the bootstrapping-status information.</t>

<figure title="Example of pledge-status response" anchor="stat_res"><artwork align="left"><![CDATA[
# The pledge "status-response" in General JWS Serialization syntax
{
  "payload": "BASE64URL(status-response)",
  "signatures": [
    {
      "protected": "BASE64URL(UTF8(JWS Protected Header))",
      "signature": "base64encodedvalue=="
    }
  ]
}

# Decoded payload "status-response" representation in JSON syntax
{
  "version": 1,
  "status": "enroll-success",
  "reason-context": {
    "additional" : "JSON"
  }
}

# Decoded "JWS Protected Header" representation in JSON syntax
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "typ": "jose+json
}
]]></artwork></figure>

<t>In case "factory-default" the pledge does not possess the domain certificate resp. the domain trust-anchor.
It will not be able to verify the signature of the registrar-agent in the bootstrapping-status request.
In cases "vouchered" and "enrolled" the pledge already possesses the domain certificate (has domain trust-anchor) and can therefore validate the signature of the registrar-agent.
If validation of the JWS signature fails, the pledge <bcp14>SHOULD</bcp14> respond with the HTTP 403 Forbidden status code.
The HTTP 406 Not Acceptable status code <bcp14>SHOULD</bcp14> be used, if the Accept header in the request indicates an unknown or unsupported format.
The HTTP 415 Unsupported Media Type status code <bcp14>SHOULD</bcp14> be used, if the Content-Type of the request is an unknown or unsupported format.
The HTTP 400 Bad Request status code <bcp14>SHOULD</bcp14> be used, if the Accept/Content-Type headers are correct but nevertheless the status-request cannot be correctly parsed.</t>

</section>
</section>
</section>
<section anchor="artifacts"><name>Artifacts</name>

<section anchor="voucher-request-prm-yang"><name>Voucher Request Artifact</name>

<t>The following enhancement extends the voucher-request as defined in <xref target="RFC8995"/> to include additional fields necessary for handling bootstrapping in the pledge-responder-mode.</t>

<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>The following tree diagram is mostly a duplicate of the contents of <xref target="RFC8995"/>, with the addition of the fields agent-signed-data, the registrar-proximity-certificate, and agent-signing certificate.
The tree diagram is described in <xref target="RFC8340"/>.
Each node in the diagram is fully described by the YANG module in Section <xref target="voucher-request-prm-yang-module"/>.</t>

<figure><artwork align="left"><![CDATA[
module: ietf-voucher-request-prm

 grouping voucher-request-prm-grouping
  +-- voucher
     +-- created-on?                               yang:date-and-time
     +-- expires-on?                               yang:date-and-time
     +-- assertion?                                enumeration
     +-- serial-number                             string
     +-- idevid-issuer?                            binary
     +-- pinned-domain-cert?                       binary
     +-- domain-cert-revocation-checks?            boolean
     +-- nonce?                                    binary
     +-- last-renewal-date?                        yang:date-and-time
     +-- prior-signed-voucher-request?             binary
     +-- proximity-registrar-cert?                 binary
     +-- agent-signed-data?                        binary
     +-- agent-provided-proximity-registrar-cert?  binary
     +-- agent-sign-cert?                          binary
]]></artwork></figure>

</section>
<section anchor="voucher-request-prm-yang-module"><name>YANG Module</name>

<t>The following YANG module extends the <xref target="RFC8995"/> Voucher Request to include a signed artifact from the registrar-agent (agent-signed-data) as well as the registrar-proximity-certificate and the
agent-signing certificate.</t>

<figure><artwork align="left"><![CDATA[
<CODE BEGINS> file "ietf-voucher-request-prm@2022-07-05.yang"

module ietf-voucher-request-prm {
  yang-version 1.1;

  namespace "urn:ietf:params:xml:ns:yang:ietf-voucher-request-prm";
  prefix vrprm;

  import ietf-restconf {
    prefix rc;
    description
      "This import statement is only present to access
       the yang-data extension defined in RFC 8040.";
    reference "RFC 8040: RESTCONF Protocol";
  }

  import ietf-voucher-request {
    prefix vcr;
    description
      "This module defines the format for a voucher request,
          which is produced by a pledge as part of the RFC8995
          onboarding process.";
    reference
      "RFC 8995: Bootstrapping Remote Secure Key Infrastructure";
  }

  organization
   "IETF ANIMA Working Group";

  contact
   "WG Web:   <http://tools.ietf.org/wg/anima/>
    WG List:  <mailto:anima@ietf.org>
    Author:   Steffen Fries
              <mailto:steffen.fries@siemens.com>
    Author:   Eliot Lear
              <mailto: lear@cisco.com>
    Author:   Thomas Werner
              <mailto: thomas-werner@siemens.com>
    Author:   Michael Richardson
              <mailto: mcr+ietf@sandelman.ca>";

  description
   "This module defines the format for a voucher-request form the
    pledge in responder mode. It bases on the voucher-request
    defined in RFC 8995, which is a superset of the voucher itself.
    It provides content to the MASA for consideration
    during a voucher-request.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.

    Copyright (c) 2021 IETF Trust and the persons identified as
    authors of the code. All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC xxxx; see the
    RFC itself for full legal notices.";


  revision 2022-07-05 {
    description
     "Initial version";
    reference
     "RFC XXXX: BRSKI for Pledge in Responder Mode";
  }

  // Top-level statement
  rc:yang-data voucher-request-prm-artifact {
    // YANG data template for a voucher-request.
    uses voucher-request-prm-grouping;
  }
  // Grouping defined for future usage
  grouping voucher-request-prm-grouping {
    description
      "Grouping to allow reuse/extensions in future work.";
    uses vcr:voucher-request-grouping {

      augment voucher {
        description "Base the voucher-request-prm upon the
          regular one";

        leaf agent-signed-data {
          type binary;
          description
            "The agent-signed-data field contains a JOSE [RFC7515]
             object provided by the Registrar-Agent to the Pledge.

             This artifact is signed by the Registrar-Agent
             and contains a copy of the pledge's serial-number.";
        }

        leaf agent-provided-proximity-registrar-cert {
          type binary;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             The first certificate in the registrar TLS server
             certificate_list sequence (the end-entity TLS
             certificate; see RFC 8446) presented by the
             registrar to the registrar-agent and provided to
             the pledge.
             This MUST be populated in a pledge's voucher-request
             when an agent-proximity assertion is requested.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile
             RFC 8446: The Transport Layer Security (TLS)
             Protocol Version 1.3";
        }

        leaf-list agent-sign-cert{
          type binary;
          min-elements 1;
          description
            "An X.509 v3 certificate structure, as specified by
             RFC 5280, Section 4, encoded using the ASN.1
             distinguished encoding rules (DER), as specified
             in ITU X.690.
             This certificate can be used by the pledge,
             the registrar, and the MASA to verify the signature
             of agent-signed-data. It is an optional component
             for the pledge-voucher request.
             This MUST be populated in a registrar's
             voucher-request when an agent-proximity assertion
             is requested.
             It is defined as list to enable inclusion of further
             certificates along the certificate chain if different
             issuing CAs have been used for the registrar-agent
             and the registrar.";
          reference
            "ITU X.690: Information Technology - ASN.1 encoding
             rules: Specification of Basic Encoding Rules (BER),
             Canonical Encoding Rules (CER) and Distinguished
             Encoding Rules (DER)
             RFC 5280: Internet X.509 Public Key Infrastructure
             Certificate and Certificate Revocation List (CRL)
             Profile";
        }
      }
    }
  }
}

<CODE ENDS>
]]></artwork></figure>

<t>Examples for the PVR are provided in <xref target="exchanges_uc2_2"/>.</t>

</section>
</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document requires the following IANA actions.</t>

<section anchor="brski-well-known-registry"><name>BRSKI .well-known Registry</name>

<t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>

<figure><artwork align="left"><![CDATA[
 URI                        Description                       Reference
 tv                         create pledge-voucher-request     [THISRFC]
 te                         create pledge-enrollment-request  [THISRFC]
 sv                         supply voucher response           [THISRFC]
 se                         supply enrollment response        [THISRFC]
 cc                         supply CA certificates to pledge  [THISRFC]
 ps                         query pledge status               [THISRFC]
 requestenroll              supply PER to registrar           [THISRFC]
 wrappedcacerts             request wrapped CA certificates   [THISRFC]

]]></artwork></figure>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>

<t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<t>The credential used by the registrar-agent to sign the data for the pledge should not contain any personal information.
Therefore, it is recommended to use an LDevID certificate associated with the commissioning device instead of an LDevID certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>

<t>The communication between the pledge and the registrar-agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (a "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>

<t><list style="symbols">
  <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the registrar-agent may be realized over wireless link, this information could be easily be eavesdropped, if the wireless network is unencrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert on-path observer into the path.</t>
  <t>the Timestamp data could reveal the activation time of the device.</t>
  <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
</list></t>

</section>
<section anchor="sec_cons"><name>Security Considerations</name>

<t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>

<t><list style="symbols">
  <t>the introduction of the additional component registrar-agent</t>
  <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
  <t>no transport layer security between registrar-agent and pledge</t>
</list></t>

<section anchor="denial-of-service-dos-attack-on-pledge"><name>Denial of Service (DoS) Attack on Pledge</name>

<t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.</t>

<t>A DoS attack with a faked registrar-agent may block the bootstrapping of the pledge due to state creation on the pledge (the pledge may produce a voucher, and refuse to produce another one).
One mitigation may be that the pledge does does not limited the number of voucher requests it creates until at least one has finished, or a single onboarding state may expire after a certain time.</t>

</section>
<section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent"><name>Misuse of acquired PVR and PER by Registrar-Agent</name>

<t>A registrar-agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the "proximity-registrar-cert" field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the IDevID certificate of the pledge. (This is just part of the supply chain integration)
Moreover, the domain registrar verifies if the registrar-agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the LDevID(RegAgt) certificate data contained in the PVR.</t>

<t>Misbinding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref target="RFC8995"/> (section 11.4).</t>

</section>
<section anchor="sec_cons_reg-agt"><name>Misuse of Registrar-Agent Credentials</name>

<t>Concerns of misusage of a registrar-agent with a valid LDevID(RegAgt), may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the registrar-agent against the domain registrar.
The LDevID(RegAgt) certificate may be acquired by a prior BRSKI run for the registrar-agent, if an IDevID is available on registrar-agent.
Alternatively, the LDevID may be acquired by a service technician from the domain PKI system in an authenticated way.</t>

<t>In addition it is required that the LDevID(RegAgt) certificate is valid for the complete bootstrapping phase.
This avoids that a registrar-agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the LDevID(RegAgt) certificate, due to missing trusted timestamp in the registrar-agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".
Furthermore the registrar also verifies the LDevID(RegAgt) certificate used in the TLS handshake with the registrar-agent. If both certificates are verified successfully, the registrar-agent's signature can be considered as valid.</t>

</section>
<section anchor="sec_cons_mDNS"><name>Misuse of mDNS to obtain list of pledges</name>

<t>To discover a specific pledge a registrar-agent may request the service name in combination with the product-serial-number of a specific pledge.
The pledge reacts on this if his product-serial-number is part of the request message.</t>

<t>If the registrar-agent performs DNS-based Service Discovery without a specific product-serial-number, all  pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing a LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>

</section>
<section anchor="yang-module-security-considerations"><name>YANG Module Security Considerations</name>

<t>The enhanced voucher-request described in section <xref target="voucher-request-prm-yang"/> is bases on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
Therefore similar considerations as described in <xref target="RFC8995"/> section 11.7 (Security Considerations) apply.
The YANG module specified in this document defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.
The use of YANG to define data structures via the "yang-data" statement, is relatively
new and distinct from the traditional use of YANG to define an API accessed by network management protocols such as NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>.
For this reason these guidelines do not follow the template described by <xref target="RFC8407"/> section 3.7 (Security Considerations Section).</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows. 
Further review input was provided by Jesser Bouzid, Dominik Tacke, and Christian Spindler.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC5280' target='https://www.rfc-editor.org/info/rfc5280'>
<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author fullname='D. Cooper' initials='D.' surname='Cooper'><organization/></author>
<author fullname='S. Santesson' initials='S.' surname='Santesson'><organization/></author>
<author fullname='S. Farrell' initials='S.' surname='Farrell'><organization/></author>
<author fullname='S. Boeyen' initials='S.' surname='Boeyen'><organization/></author>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<author fullname='W. Polk' initials='W.' surname='Polk'><organization/></author>
<date month='May' year='2008'/>
<abstract><t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5280'/>
<seriesInfo name='DOI' value='10.17487/RFC5280'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8366' target='https://www.rfc-editor.org/info/rfc8366'>
<front>
<title>A Voucher Artifact for Bootstrapping Protocols</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<date month='May' year='2018'/>
<abstract><t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a &quot;voucher&quot;.</t><t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t><t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t></abstract>
</front>
<seriesInfo name='RFC' value='8366'/>
<seriesInfo name='DOI' value='10.17487/RFC8366'/>
</reference>



<reference anchor='RFC8610' target='https://www.rfc-editor.org/info/rfc8610'>
<front>
<title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
<author fullname='H. Birkholz' initials='H.' surname='Birkholz'><organization/></author>
<author fullname='C. Vigano' initials='C.' surname='Vigano'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2019'/>
<abstract><t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8610'/>
<seriesInfo name='DOI' value='10.17487/RFC8610'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>


<reference anchor='I-D.ietf-anima-jws-voucher'>
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname='Thomas Werner' initials='T.' surname='Werner'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software Works</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   [RFC8366] defines a digital artifact called voucher as a YANG-defined
   JSON document that has been signed using a Cryptographic Message
   Syntax (CMS) structure.  This memo introduces a variant of the
   voucher structure in which CMS is replaced by the JSON Object Signing
   and Encryption (JOSE) mechanism described in [RFC7515] to support
   deployments in which JOSE is preferred over CMS.

   In addition to explaining how the format is created, MIME types are
   registered and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-jws-voucher-05'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-jws-voucher-05.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-netconf-sztp-csr'>
   <front>
      <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero Touch Provisioning (SZTP) Bootstrapping Request</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Watsen Networks</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Sean Turner' initials='S.' surname='Turner'>
         <organization>sn3rd</organization>
      </author>
      <date day='2' month='March' year='2022'/>
      <abstract>
	 <t>   This draft extends the input to the &quot;get-bootstrapping-data&quot; RPC
   defined in RFC 8572 to include an optional certificate signing
   request (CSR), enabling a bootstrapping device to additionally obtain
   an identity certificate (e.g., an LDevID from IEEE 802.1AR) as part
   of the &quot;onboarding information&quot; response provided in the RPC-reply.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netconf-sztp-csr-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-netconf-sztp-csr-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-anima-rfc8366bis'>
   <front>
      <title>A Voucher Artifact for Bootstrapping Protocols</title>
      <author fullname='Kent Watsen' initials='K.' surname='Watsen'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Michael Richardson' initials='M.' surname='Richardson'>
         <organization>Sandelman Software</organization>
      </author>
      <author fullname='Max Pritikin' initials='M.' surname='Pritikin'>
         <organization>Cisco Systems</organization>
      </author>
      <author fullname='Toerless Eckert' initials='T. T.' surname='Eckert'>
         <organization>Futurewei Technologies Inc.</organization>
      </author>
      <author fullname='Qiufang Ma' initials='Q.' surname='Ma'>
         <organization>Huawei</organization>
      </author>
      <date day='31' month='January' year='2022'/>
      <abstract>
	 <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge&#39;s manufacturer.  This artifact is known as a &quot;voucher&quot;.

   This document defines an artifact format as a YANG-defined JSON
   document that has been signed using a Cryptographic Message Syntax
   (CMS) structure.  Other YANG-derived formats are possible.  The
   voucher artifact is normally generated by the pledge&#39;s manufacturer
   (i.e., the Manufacturer Authorized Signing Authority (MASA)).

   This document only defines the voucher artifact, leaving it to other
   documents to describe specialized protocols for accessing it.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-rfc8366bis-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-rfc8366bis-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC2986' target='https://www.rfc-editor.org/info/rfc2986'>
<front>
<title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
<author fullname='M. Nystrom' initials='M.' surname='Nystrom'><organization/></author>
<author fullname='B. Kaliski' initials='B.' surname='Kaliski'><organization/></author>
<date month='November' year='2000'/>
<abstract><t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process.  The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2986'/>
<seriesInfo name='DOI' value='10.17487/RFC2986'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC7252' target='https://www.rfc-editor.org/info/rfc7252'>
<front>
<title>The Constrained Application Protocol (CoAP)</title>
<author fullname='Z. Shelby' initials='Z.' surname='Shelby'><organization/></author>
<author fullname='K. Hartke' initials='K.' surname='Hartke'><organization/></author>
<author fullname='C. Bormann' initials='C.' surname='Bormann'><organization/></author>
<date month='June' year='2014'/>
<abstract><t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t><t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t></abstract>
</front>
<seriesInfo name='RFC' value='7252'/>
<seriesInfo name='DOI' value='10.17487/RFC7252'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC8407' target='https://www.rfc-editor.org/info/rfc8407'>
<front>
<title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<date month='October' year='2018'/>
<abstract><t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t></abstract>
</front>
<seriesInfo name='BCP' value='216'/>
<seriesInfo name='RFC' value='8407'/>
<seriesInfo name='DOI' value='10.17487/RFC8407'/>
</reference>



<reference anchor='RFC8792' target='https://www.rfc-editor.org/info/rfc8792'>
<front>
<title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='E. Auerswald' initials='E.' surname='Auerswald'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='Q. Wu' initials='Q.' surname='Wu'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the &quot;single backslash&quot; strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the &quot;double backslash&quot; strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t></abstract>
</front>
<seriesInfo name='RFC' value='8792'/>
<seriesInfo name='DOI' value='10.17487/RFC8792'/>
</reference>



<reference anchor='RFC9052' target='https://www.rfc-editor.org/info/rfc9052'>
<front>
<title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='August' year='2022'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need to be able to define basic security services for this data format.  This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  </t><t>This document, along with RFC 9053, obsoletes RFC 8152.</t></abstract>
</front>
<seriesInfo name='STD' value='96'/>
<seriesInfo name='RFC' value='9052'/>
<seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>



<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
<front>
<title>HTTP Semantics</title>
<author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'><organization/></author>
<author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'><organization/></author>
<author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'><organization/></author>
<date month='June' year='2022'/>
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes. </t><t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t></abstract>
</front>
<seriesInfo name='STD' value='97'/>
<seriesInfo name='RFC' value='9110'/>
<seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>



<reference anchor='RFC9238' target='https://www.rfc-editor.org/info/rfc9238'>
<front>
<title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='J. Latour' initials='J.' surname='Latour'><organization/></author>
<author fullname='H. Habibi Gharakheili' initials='H.' surname='Habibi Gharakheili'><organization/></author>
<date month='May' year='2022'/>
<abstract><t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t><t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t></abstract>
</front>
<seriesInfo name='RFC' value='9238'/>
<seriesInfo name='DOI' value='10.17487/RFC9238'/>
</reference>


<reference anchor='I-D.ietf-anima-brski-ae'>
   <front>
      <title>BRSKI-AE: Alternative Enrollment Protocols in BRSKI</title>
      <author fullname='David von Oheimb' initials='D.' surname='von Oheimb'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Steffen Fries' initials='S.' surname='Fries'>
         <organization>Siemens AG</organization>
      </author>
      <author fullname='Hendrik Brockhaus' initials='H.' surname='Brockhaus'>
         <organization>Siemens AG</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document enhances Bootstrapping Remote Secure Key Infrastructure
   (BRSKI, RFC 8995) to allow employing alternative enrollment
   protocols, such as CMP.

   Using self-contained signed objects, the origin of enrollment
   requests and responses can be authenticated independently of message
   transfer.  This supports end-to-end security and asynchronous
   operation of certificate enrollment and provides flexibility where to
   authenticate and authorize certification requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-anima-brski-ae-03'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-anima-brski-ae-03.txt' type='TXT'/>
</reference>


<reference anchor="IEEE-802.1AR" >
  <front>
    <title>IEEE 802.1AR Secure Device Identifier</title>
    <author >
      <organization>Institute of Electrical and Electronics Engineers</organization>
    </author>
    <date year="2018" month="June"/>
  </front>
  <seriesInfo name="IEEE" value="802.1AR "/>
</reference>
<reference anchor="BRSKI-PRM-abstract" >
  <front>
    <title>Abstract BRSKI-PRM Protocol Overview</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022" month="April"/>
  </front>
  <format type="PNG" target="https://raw.githubusercontent.com/anima-wg/anima-brski-prm/main/pics/brski_prm_overview.png"/>
</reference>
<reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
  <front>
    <title>can an on-path attacker drop traffic?</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC6125' target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<author fullname='J. Hodges' initials='J.' surname='Hodges'><organization/></author>
<date month='March' year='2011'/>
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>

<section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent"><name>Example Pledge Voucher Request - PVR (from Pledge to Registrar-agent)</name>

<t>The following is an example request sent from a Pledge to the Registrar-agent, in "General JWS JSON Serialization".<br />
The message size of this PVR is: 4649 bytes</t>

<figure title="Example Pledge Voucher Request - PVR" anchor="ExamplePledgeVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5\
vbmNlIjoiTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjI\
tMDQtMjZUMDU6MTY6MTcuNzA5WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbWl0eS1yZWd\
pc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW9HQ0NxR1N\
NNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01\
CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd05qRTRNVEp\
hRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzN\
NeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibEpsWjJsemR\
ISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNksvaTc5b1J\
rSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1dSZmZlV2t\
5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUUdDQ3NHQVF\
VRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQVlEVlIwUkJ\
FRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1WlhTQ0huSmx\
aMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncWhrak9QUVF\
EQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUmF1YnBDN01\
hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaDR4SVhrMSI\
sImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRnBZVW0xTVd\
GcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VVhSak1teHV\
ZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSmFrbDNUV3B\
KZEUxRVVYUk5hbHBWVFVSVk5rMUVZelpPUkVWMVRrUlJORmRwU1hOSmJrNXNZMjFzYUd\
KRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaXdpYzJsbmJ\
tRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYVVwWlkwaHd\
jMVJWZERSaVNFSkNUbXBvYWxaVVZrZFZWVEZaVmxoYWRWTldVVEpWV0dNNVNXbDNhVmx\
YZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrY3pWM2hHU0d\
WMFdGQTRiR3hTVmkwNWRXSnlURmxxU25aUllUWmZlUzFRYWxGWk5FNWhkMW81Y0ZKaGI\
yeE9TbTlFTm1SbFpXdHVTVjlGV0daemVWWlRZbmM0VTBONlRWcE1iakJoUVhWb2FVZFp\
UakJSSW4xZGZRPT0iLCJhZ2VudC1zaWduLWNlcnQiOlsiTUlJQjFEQ0NBWHFnQXdJQkF\
nSUVZbWQ0T1RBS0JnZ3Foa2pPUFFRREFqQStNUk13RVFZRFZRUUtEQXBOZVVKMWMybHV\
aWE56TVEwd0N3WURWUVFIREFSVGFYUmxNUmd3RmdZRFZRUUREQTlVWlhOMFVIVnphRTF\
2WkdWc1EwRXdIaGNOTWpJd05ESTJNRFEwTWpNeldoY05Nekl3TkRJMk1EUTBNak16V2p\
BOU1STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1\
SY3dGUVlEVlFRRERBNVNaV2RwYzNSeVlYSkJaMlZ1ZERCWk1CTUdCeXFHU000OUFnRUd\
DQ3FHU000OUF3RUhBMElBQkd4bHJOZmozaVJiNy9CUW9kVys1WWlvT3poK2pJdHlxdVJ\
JTy9XejdZb1czaXdEYzNGeGV3TFZmekNyNU52RDEzWmFGYjdmcmFuK3Q5b3RZNVdMaEo\
2alp6QmxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQWZCZ05WSFNNRUdEQVdnQlJ2b1QxdWR\
lMmY2TEVRaFU3SEhqK3ZKL2Q3SXpBZEJnTlZIUTRFRmdRVVhwemxNS3hscEE2OGNVNUZ\
RTVhVdm5JVDZRd3dFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3Q2dZSUtvWkl6ajB\
FQXdJRFNBQXdSUUlnYzJ5NnhvT3RvUUJsSnNnbE9MMVZ4SEdvc1R5cEVxUmZ6MFF2NFp\
FUHY0d0NJUUNWeWIyRjl6VjNuOTUrb2xnZkZKZ1pUV0V6NGRTYUYzaHpSUWIzWnVCMjl\
RPT0iLCJNSUlCekRDQ0FYR2dBd0lCQWdJRVhYakhwREFLQmdncWhrak9QUVFEQWpBMU1\
STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRFZRUUhEQVJUYVhSbE1ROHd\
EUVlEVlFRRERBWlVaWE4wUTBFd0hoY05NVGt3T1RFeE1UQXdPRE0yV2hjTk1qa3dPVEV\
4TVRBd09ETTJXakErTVJNd0VRWURWUVFLREFwTmVVSjFjMmx1WlhOek1RMHdDd1lEVlF\
RSERBUlRhWFJsTVJnd0ZnWURWUVFEREE5VVpYTjBVSFZ6YUUxdlpHVnNRMEV3V1RBVEJ\
nY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRsRzBmd1QzM29leloxdmtIUWJldGV\
ibWorQm9WK1pGc2pjZlF3MlRPa0pQaE9rT2ZBYnU5YlMxcVppOHlhRVY4b2VyS2wvNlp\
YYmZ4T21CanJScmNYbzJZd1pEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTRHQTF\
VZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUdEQVdnQlRvWklNelFkc0Qvai8rZ1gvN2N\
CSnVjSC9YbWpBZEJnTlZIUTRFRmdRVWI2RTliblh0bitpeEVJVk94eDQvcnlmM2V5TXd\
DZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUG5CMHcxTkN1cmhNeEp3d2ZqejdnRGlpeGt\
VWUxQU1o5ZU45a29oTlFVakFpRUF3NFk3bHR4V2lQd0t0MUo5bmp5ZkRObDVNdUVEQml\
teFIzQ1hvWktHUXJVPSJdfX0",
    "signatures":[{
      "protected":"eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVN\
U1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBe\
EthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ\
0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q\
1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZR\
FZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtb\
GpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjR\
UVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2T\
XgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxa\
GMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CY\
UFGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR\
0FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBR\
EJFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnW\
ENtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sImFsZ\
yI6IkVTMjU2In0",
      "signature":"Y_ohapnmvbwjLuUicOB7NAmbGM7igBfpUlkKUuSNdG-eDI4BQ\
yuXZ2aw93zZId45R7XxAK-12YKIx6qLjiPjMw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa"><name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>

<t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a Pledge voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>

<t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 13257 bytes</t>

<figure title="Example Registrar Voucher Request - RVR" anchor="ExampleRegistrarVoucherRequestfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":
    "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3NlcnRpb24\
iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiY2FmZmUtOTg3NDUiLCJ\
ub25jZSI6ImM1VEVPb29NTE5hNEN4L1UrVExoQ3c9PSIsInByaW9yLXNpZ25lZC12b3V\
jaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbTFNV0ZwMlpGZE9\
iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYVVrMlpYbEthR01\
6VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1pFaHJhVXhEU25\
wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFWa3lSbTFhYlZWMFQxUm5NMDVFVldsTVE\
wcDFZakkxYWxwVFNUWkpiVTB4VmtWV1VHSXlPVTVVUlRWb1RrVk9ORXd4VlhKV1JYaHZ\
VVE5qT1ZCVFNYTkpiVTU1V2xkR01GcFhVWFJpTWpScFQybEplVTFFU1hsTVZFRjVURlJ\
KZVZaRVFUTlBhazE2VDJwQk5FeHFSVFZPYkc5cFRFTkthRm95Vm5Wa1F6RjNZMjA1TW1\
GWFVteGFRekYzWTIwNU5HRlhNWEJrU0d0MFkyMVdibUZZVGpCamJVWjVURmRPYkdOdVV\
XbFBhVXBPVTFWc1JGSkdVa1JSTUVacFZESmtRbVF3YkVOUlYyUktVakJHV1ZkWVRuZFR\
WMVoyVkZWR2RsSXdUa1JqVldSVVZGUlJOVkZyUms1Uk1ERkhaRE5vUkdWclJrdFJiV1J\
QVm10S1FsZFdVa0poTUZwVFZGWktTbVF3VmtKWFZWSlhWVlpHVEZKRlJuTlViVlpXVkc\
1YWFWZEZTbTlaYlRWeVpVVmFWVkZXVWtOYU1EVlhVV3RHZWxSVlVrWk5WRlpXVFRGYWN\
GbDZTbk5oTWtaWVVtNXNiRlpGVmxGVVZVVjNVakJGZUZaVlZrTmtNMlJJVmtab2MxWkh\
SbGxWYlhoT1ZXdFdNMUpJWkZwU1JscFNWVlZTUlZGWGFFOWFWbHBQWTBkU1NGWnJVbEp\
XUlVac1VtNWpkMlZWTVVWU1dHeE9Va1pHTTFSdWNFcE5WVFZGWVVkR1IyUjZRalpVVlZ\
KR1pWVXhSVlZZWkU5bGEydDRWR3RTYjFsVk1VaFRXR2hFWld0R1MxRnRaRTlXYTBwQ1Y\
xWlNRbUV3V2xOVVZrcEtaREJXUWxkVlVsZFZWa1pNVWtWR2MxUnRWbFpVYmxwcFYwVkt\
iMWx0TlhKbFJWcEZVVlpPUTFvd05WZFJhMFo2VkZWTmQwMVVWbFpOTVZwd1dYcEtjMkV\
4YkZsVGFsWk9WVlJvTTFKR1JscFNSbHBTVlZWb1JWRldjRTlhVmxwUFkwZFNTRlpZYUV\
oU1JVWllVVzFrVDFaclNrSlVWVEZGVFVSRk1WWlVTbk5OUm5CWFUyMTRZVTF0ZURaYVJ\
XaExZVWRPY1ZGc2NFNVJhekZJVVc1c2VGSXhUazVPUkd4Q1dqQldTRkV3VG5oU01VNU9\
Ua1JzUW1Rd1ZrbFJWRUpLVVZWS1NsVklhRmhrVlRGSlVucG9TMVJIV2taVlJVVTFUMWh\
hZDAxdVZrbFNWVFZxVlROc2JWa3pWVE5VUjJSYVRraEJlRTVGUmtOT01GSk9XbFJGTkU\
xSVRrWmxSV1J4VkZOME0yTnJOVFJPTURVMVdWaE9lRXQ2Um5CTlJXUlVVVEZKTlU1VVV\
UTk5SRVp0VWpKV1dGUldSbWxqVjNCWVpXdEtZVlJWU1hkU01FVjRWbGRTUzFWV1JsaFV\
WVXBTVWpCT1JHTXdaRUpWVmxaSFVXNWtUbEZyU201YU0wcERXakJXUjFGc1JtcFNSV2h\
GVVZVNVExb3dOVmRUUmtVMFVXdEdiVTlGVmtOUlZURkVVV3BTUW1Rd2RFSlhWVkpYVld\
wQ1UxRnJUa1prTUdjd1UxZFNhVmRIZURaWlZtaFRZa2RPZEZadE5XaFhSVFIzV1RJeFI\
yVlZlSFJOVkZaYVRXcHNNRmt3WkVka1YxWlVUbGR3YVUxcVFqTlJNbVJhVTFWMGRsZHJ\
iRFpoYWtKR1VWaGtTbEpHVGtKUldHUlRWVlZzYjFGV1FqVlBXRnBOVTFkR01WVnJWbEp\
qYlhnMVlteGtNRlI2VmxOaVZYQXdZVmhTVW1GNlpFOVhSRkpMVlVoV2RWVklRazlVYXp\
BeFZWUnNRbUZWUm5sa1JVNTBWRVprWVZSVmJFMVdiRTEyVFZWc1JWbFhjR2xqTVU1Sll\
tNXdkbUpYYjNkV1F6a3paVmhKY21Nd2RFdGpRM1IxVFhwU1VsQlVNR2xNUTBwb1dqSld\
kV1JETVhwaFYyUjFXbGRSZEZwSFJqQlpVMGsyU1cxV05WTnVaRnBYUjNoNldXcEtSMkV\
3YkhGaU1teGhWMGQ0VEZrd1duZFhWbFowVFZVeFdGSnVRWGxYYTFwclZESkplR05HYkZ\
SWFJrcHhXV3hhWVU1R2NFZGFSbVJzWWxaS1JWUldhR3RoYlVwVlVWUktXRlp0VW5KWmE\
yUkxaRlpXV1ZWdGNFNWlXR2d4VjFjd2VGWXlSWGRsUm1oV1lsZG9jbFZxUWxkalJsRjV\
UbGh3YUZadGREWlZNakUwVjJ4a1IxTnVUbGhoTURFMFdrY3hTMk5HVGxWWGEzQm9ZVEo\
zZWxaR1pIZFNiVkpHVFZaV1UxZEdTazlXYTFwM1ZteFNWbFZyY0U5aGVrVXlWVlpTWVZ\
Sc1NrWlNha1pWVmxaS1ExcEVSbXRqUms1WlZHdHdhV0Y2Vm5wWFZFbDRZekpHU0ZOclV\
rNVhSbHB5Vm01d1IyTkdaSE5oUlhCb1ZsUnNkMVV5TVhkWGJGbDRZMGhTV0dKRk1UTlV\
iRlUxVWxac05sRnJPVlpOUnpneFYyMTRSbUZWZUVSVGJuQm9WakpTTVZkV2FGTk5WMDU\
wVm01d1NtRnVRbWxhV0d4TFpESk9kRTlVUW1GV01EUjNWMnhrVW1GVk9YQlRiWGhzVmx\
oQ2RsZFhkR3RoYlVaV1QxaENWR0V4Y0ZkYVYzUnlaVVpTZEdKRmNHcE5SM2d3V2tWb1E\
xbFdSWGRoZWtwVVZqTm9kbFZ0ZEhwbFZsWlpVMnhTYVdKclNrcFdhMVpUVVcxV2MxSnV\
VbFJpVlZwVlZXdGFjbVZzVFhwalJ6bFhUVlpHTmxkWWNFTmhiRWw1V1ROa1ZVMUdSak5\
aVm1SaFZXdHNjR1F5YkdwTmJYaDFXVzB4UjAxSFVsbFRiWGhLWVcwNWNGZEVRazlsYXp\
sV1QxWm9VMkpyY0dGWmJHTTFaV3hOZDA5WVZsSlhSMUpUVjFSR1YyRXhiM2RqUlZaWVV\
qRndUVmxzVWt0WFZUbFhVMnhXVjFJd05URlVSazE0WXpGUmQwNVdRbWxTZWxaMlZqSjB\
SazFGT1VaWGJYUlhZa2hCZDFReFVrOWhNbEY0Vld0d1YxWlVWbGRYUkVwaFYyczVWMWR\
1UWxkaVJHdzFWWHBPVDFaV1JuSmhSa3BRVmpOQ2Vsa3haSHBsVjBsNldUSnNiVlpxUlR\
WSmFYZHBXVmRrYkdKdVVYUmpNbXh1WW1reGFscFlTakJKYW5CaVNXc3hTbE5WVGt0U1J\
VNUVVVmRPZUZvd1JqTlRWVXBDV2pCc1JsZEhlSEZSTURGRlVWVjBRMW95WkhoaFIzUnh\
WREZDVWxWVlVrSmhhMHB6VkZaR2VtUXdUbEpYVlZKWFZWWkdTRkpZWkV0UmJGWlZVbFp\
PVGxGclJraFJWRVpXVWxWT2JtUXdjRlZYUjNoRldXcEplR1F4YkZoT1ZGWk9WV3hXTTF\
KWVpGcFNSbHBTVlZWNFJWRllhRTlhVmxwUFRWWnNkVlJ1UW1GU01uaHZXVEkxY21WRlV\
qWlJWVFZEV2pBMVYxRnJSbXBVVlVweVRWUldWazF0ZDNkWGJGSkdXVlV4UTFvd1pFSk5\
WbFpHVVZoa00xVnNVbGxpUmxKb1YwWktjMVpWYUZkbGJVWkdUVmhhWVZJeFducFZWRUp\
HWkRCb2Ixa3dOVTVoYTBZelZGZHdTazVGTVVWWk0zQk9aV3RGZDFZeWFHcFVhekUyVVZ\
oa1RtRnJhekJVVlZKcVpXc3hObEZVUWxoaGEwcDBWRlpHZW1Rd1RsSlhWVkpYVlZaR1N\
GSllaRXRSYkZaVlVsWk9UbEZyUmtoUlZFWldVbFZPYm1Rd2NGVlhSM2hGV1dwSmVHUXh\
iRmhPVkZaT1ZXeFdNMUpZWkZwU1JscFNWVlY0UlZGWWFFOWFWbHBQVFZac2RWUnVRbUZ\
TTW5odldUSTFjbVZGVWpaUlZUVkRXakExVjFGclJtcFVWVXB5VFZSV1ZrMXRkM2RYYkZ\
KR1dXc3hRMkV3WkVKTlZsWkdVVmhrTTFVeFVsbGlSbEpvVjBaS2MxWlZhRmRsYlVaR1R\
WaGFZVkl4V25wVlZtaERaREF4UjJFelpFWmtNV3hKVXpJNVlWTlljSEZOUlU1Q1ZWWnN\
TbE15T1dGVFdIQnhUVVZTUWxWWFRrVlZWMlJDVWxSWmQwMVZPSEppTW5CRVlUTktSVlZ\
1WXpOYU1Hd3lWMnRWTUdGVVRUQmFSMHB2VVROR2NGSjZaSEZpTWprelYyNUJNR1ZJV2p\
aU2JsSk5XbnBhVlZaNlFtOVViVkpKWkd4Q1JWVXhVbnBrVm1oVVpWWmpOV1JJU1hwUld\
HUkVZa2RhUkdJd1VsZFVia1pRWkhwc05WUldaekpVYlRWT1VqRldNMUpIWkZwU1JscFR\
UVVpDUWxWVlozWlJhMFpTVWtWR2JscFZSazVSYW1oSVVWUkdWbHBGYkROVlZteE9VVzF\
HUWxKcmJ6TlRTRkpVWkROQ1RWUklWbEJYYW1ScVlUQkdjMVZWYUZaTk1tUkNWRmRqZGx\
Ock1VTk5SV1JDVFZaV2ExSkhaRkpXTUVwRFZXMU9WVTVVVFRCaWF6RmFaR3hTYWxKdVV\
uSmFia295VGpOb1ZrNHdVbkJpVldoeFpXdEdWVkZ0WkU5V2EyaFVWbFZXUlZKRlJreFJ\
iV1J1WTJ0S2JsSlZXa05WVjA1RlVWZHdRbE13U201YU0wWnZZVEp3VUZWR1JsSlNSVVp\
1Vkd0c1FsSkZTa2RSVjJ4R1VWaENTMDR6YUhkVWJGWXlWVlZ3U0UxRk5XOVVSMGwyV2x\
oU2FVMXFRazFTUmxWNFRtMTRkMVV3YUZCT01rWnNZbnBDVjFkWVozZGxTR1JFVTFWRmN\
sUjZWWFpYVkZwRllVTjBhVkZxU1RSTmFsSXhZVmRHVUZWWFJsWlNSRnB1VVZVMWIxZFV\
iRmRTYlZGeVlXNUtlVmt3VmpKVGJsRnBURU5LVGxOVmJFUlNNVkpFVVRCR2FVc3laRUp\
rTUd4RFVWZGtTbEpXYUhOaGEwVjJaV3RHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1ZSVjN\
CRFdUQXhVbU16WkVSVlZteEZWbXhHVWxJd1ZqTlRhMHBXVmtWV1ZGUlZTa0pTTUVWNFZ\
sVldSRm96WkV0V1JtaHpVa2RKZVUxWVpGcFdlbFV4VkZaS1ZtUXdWak5YVlZKWFZWWkd\
UVkpGUmpSVWJWWlhWR3BHV21Kck5YZFhhMlJ6WVVkT2RXRXphRVZsYTBaUFVXMWtUMVp\
yU2tKWk1ERkRZWHBGTVZaVVNuTk5SbkJWVWxaS1RsRlVhRWhSVkVaV1VsVkdNMlF3YkZ\
WWFIzaFZXVlpvVTJKR1JYZFNXR1JKWVVkT1QxUlhjRUprTURGeFUxUlNUbEpIVGpWVWJ\
uQldUbFprYjFrd05VNWxhMFl6VkZkd1NrNUZNVVZaTTJ4UFpXeFZNVll5Y0VOaVJURlN\
Zek5rUkZWV2JFVldiRVpTVWpCV00xTnJTbFpXUlZaVVZGVktRbEl3UlhoV1ZWWkVXak5\
rUzFaR2FITlNSMGw1VFZoa1dsWjZWVEZVVmtwV1pEQldNMWRWVWxkVlZrWk5Va1ZHTkZ\
SdFZsZFVha1phWW1zMWQxZHJaSE5oUjA1MVlUTm9SV1ZyUms5UmJXUlBWbXRLUWxrd01\
VTmhla1V4VmxSS2MwMUdjRlZTVjBaT1VXMWtTRkZVUmxaU1ZVWXpaREZLVlZkSGVGVlp\
WbWhUWWtaV1NWWnVjR2hTVkVZeVYydGtWMk14UlhkU1dHUllWa1ZHVlZGdFpHcGpWMmh\
5WVdzNVVWVlZiRU5SYldSdVkxZG9jbUZyT1ZGVlZURkRVVzVrVDFFd1JrSlZhM0JEVm0\
wNWVscEZkRE5YVlRVMFlWWkNORk5JV25CU2JrWk1aV3RTYzA5WFdqQlVTRlpPV1ZjeGQ\
xSnNSbXBYU0dONFRXcGthRlJ0T1ZOWmJrNUpUREJhVG1OdE1UWlJNRVpKVFhwak0wMTZ\
UbXBOYlRscFZVZE9jMlJzVG5sWFZVb3lUVVZPTUZZeFJqQlpWRnBvU3pKT2RrMXNiRE5\
YYTFKQ1ZUQktibFJzV2tsVmF6RkRVVmRaTkZKVlRrVlJWV1JDVlZWbmRsRlhaRVpSVlR\
GQ1RrVmtRazFXVm10U1NHUkdVV2s1TTFWVlZrSmtNR3hFVVd0U1FscHJTbTVVYkZwSlZ\
UQXhSbEl3VWtKV01tUkRWVmh3TkdWdVpIZFZia0pOWlZNNWVWUldWbHBsYlVadlRXNU5\
lRTB5VmxaUFYyUkhaV3RHYTFGdFpFOVdhMmhTVGtWV1Ixb3hSbFppYms1c1RWVjRSR0V\
6VGpGT1JGWjFaRWhzVWxFeFdrSmFSbEpzVVZWR05WSkVhSEprTUU1dVYxVnNUR0l4Y0V\
wbGJXOTNVbFZHTTFOVlVsUlJWVVl6Vld4R1NtRkZSa3BqTVd4eldsWndUR015Y0VkVWE\
wNTZVMnQwYkZWSGVFaFVWVVpOV2xoQ1YxcFViRVpVUkdSUFlqTlJNVTFVVmpObFJ6Rlh\
aRlZ3UTFGWGJFSlpNRlpPVmxaV2IxSldUbnBVUm1SUlRsaG9WRlZXVlhkWFNFWTJWbTV\
GTkZkWVduQlNha1pwVm0wNU5sSXpjRFJPV0hCUFdqSk9lbVI2TURsSmJERTVabEVpTEN\
KemFXZHVZWFIxY21WeklqcGJleUp3Y205MFpXTjBaV1FpT2lKbGVVbzBUbGROYVU5c2M\
ybFVWV3hLVVRCb2NWRXdUa0paTVU1dVVWaGtTbEZyUm01VFZXUkNWMGRvTUUxVVVucGl\
NREZDWWpCa1JGRXpSa2hWTURBd1QxVktRbFJWVGs1U1ZtdzBVVE53UWxOclNtNVViRnB\
EVVZac1ZWRlhkRTlUVlRGVFZGaGtSbFZXYkVWV2JFWlNVekJTUW1OR1VtaFdNVm93VjJ\
4ak1XVnJiRVpTYTJoT1ZWUm9NMUpHUmxwU1JscFNWVlY0UlZGV2NFUldhMDVEVWtaV1I\
xUllhRVpXUlVaUlVXMWtUMVpyU2tKVVZURkVVbXh3YzFsdE1WTmtiVTV5Vkd0S1RsRXd\
SbGxTUmxKS1pVVXhSVlJZYkU5aGEwVXhWRmR3U21WVk5WZGlNV3hGWlcxek1WUXhVbkp\
sUlRGeFZGaG9UbUZyTUhoVU1WSldUbFprY1ZGdGFFNVZXRTR6VVRGR1dsSkdXbEpWVld\
SR1pEQndSVlV3VWtaV1JURkRVbFZrUWsxV1ZrWlJNbVF6VXpGVmVXSkhlR2xXTVZveFd\
UTnNRMUZzU2paU1ZrSk9VVlJDU0ZGVVJsWlNWVTR6WkRCa1VtSkdSbTVWVkVaRFZrVXh\
VMVZZWkVaYU1XeEZWbXhHVWxKclZqTmtSM0JhVmpGd2RGZHNUWGRPVlRsRldYcENUMVp\
GVmxoVVZVcFNVakJGZUZaVlZrSmtNMlJQVmxWYWIxSkZNVFZPVlZwUFpXeFdNRlJXVWt\
Ka01VWlZVV3h3VGxGck1VaFJibXg0VWpGT1RrNUViRUphTUZaSVVUQk9lRkl4VGs1T1J\
HeENaREJXU1ZGVVFrcFJWVXBQVFVSb2NWWXdlSHBOUjBadlV6Qm9XbGR1Vm05aVZ6Rmp\
UREpqTkdScVVsaFRNR2d5VVZoU2FGcHNSazFSVTNSS1pGVXhUMkZITVc1aFZ6RllUakJ\
HVG1OdVJtOWlWMHBWVFRCc2FGVkZUalZoUnpGaFUxWk9kMVI2V20xaVUzTXlVMWhhWTB\
3eldrcGphM1J2VlZaU01WWnRPVXhoYldSYVVWaGtiV0ZyUm5aUmJXUnVZMnRLYmxKVld\
rTlZWMDVEVTFWR1Vsa3dVa05qU0ZKYVYwVTFiMVJHYUZOaVIwMTZWVmhXYWsxdGVITlp\
iR1JYWkZkT05VNVhjR2xOYWtFeVZERlNVazFGTVRaUlZsSkRXakExVjFOR1RsWlNWVkp\
GVVZWMFExb3laSGxSYldSR1VtdEtVbGt3VWtKV1JVWlFVVzFrVDFacmFGSlBSVXBDV21\
wb1JsRnJSazVSTUVrd1VWaGtUVlZXYkVWV2JFbDNWV3RLUkZkWVpFdFRWV3h3V2tWa2I\
ySkZlSFZYYlhocFlsWktNbGt5YXpGaGJHeFlUa2hXYVdKVWEzZFVSekV3WkZkSmVsa3p\
WbXRTTW1oM1dUTnJNVTFzYkZobFJFWmhWa1ZHVEZGdFpHNWpWMmh5WVdzNVVWVldSa1Z\
SVjJSUFUxVkdSVkZyV2tKaFZVazFVVzB4ZUZRemNIRlZWR2hzV1ZkamVWTnVVblprVmx\
KdlVsWm9lVm93T1VOWFZsRjNVWHBvWVdSRGREVlBWemxKVWtad1JWbHNVbEpUVjJoQ1Z\
HMXpNbVJIT1ZOaU1sWkVXVmMxYUZSWGNFNVdSWGgwWWxaV2RXSlhTbkphYWtKNldsaGF\
jbEV3YnpSTmJXc3hWbGhHY1ZWcldsZFZVMHBrVEVOS2FHSkhZMmxQYVVwR1ZYcEpNVTV\
wU2praUxDSnphV2R1WVhSMWNtVWlPaUphWTFwa1dYbzBiMUl3UjJKc09UWnFNWGxZWm5\
kdlRYZGxVVGt6VGpCdFNVUmxjVFkyVTBacWRFdG9lR1pSWjNJMGRUWkpOVEJKWldNMmE\
xWTJhSEV3YVcxdlptTlBhVGs0VW1OSVpXUmpNVzFuZHpCWVp5SjlYWDA9IiwiY3JlYXR\
lZC1vbiI6IjIwMjItMDItMjJUMDc6MzM6MjUuMDIwWiIsImFnZW50LXNpZ24tY2VydCI\
6WyJNSUlDSkRDQ0FjcWdBd0lCQWdJRVhsakNNREFLQmdncWhrak9QUVFEQWpCbE1Rc3d\
DUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUVDZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVF\
MREF4TmVWTjFZbk5wWkdsaGNua3hEekFOQmdOVkJBY01CazE1VTJsMFpURWFNQmdHQTF\
VRUF3d1JUWGxUYVhSbFVIVnphRTF2WkdWc1EwRXdIaGNOTWpBd01qSTRNRGN6TXpBMFd\
oY05NekF3TWpJNE1EY3pNekEwV2pCbU1Rc3dDUVlEVlFRR0V3SkJVVEVTTUJBR0ExVUV\
DZ3dKVFhsRGIyMXdZVzU1TVJVd0V3WURWUVFMREF4TmVWTjFZbk5wWkdsaGNua3hEekF\
OQmdOVkJBY01CazE1VTJsMFpURWJNQmtHQTFVRUF3d1NUWGxUYVhSbFVIVnphRTF2Wkd\
Wc1FYQndNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU2MDFPK29qQ2t\
yRFJ3N2dJdlpFNGkzNGRiaENxaUc3am9vd1pwNHh2ekZ0TGc2VFcwaE5kSHZQRFNUc3V\
YU3lXOXRyM0F3Q2xmQ29EVk5xT3c5eU1YNk5uTUdVd0RnWURWUjBQQVFIL0JBUURBZ2V\
BTUI4R0ExVWRJd1FZTUJhQUZKN0h0U3dwTEx1T1o3Y2tBbFFIVTNnQU1nL0pNQjBHQTF\
VZERnUVdCQlJjVDUzNG5NWXZUY0Z0a2Zydjd4VTdEaW1IanpBVEJnTlZIU1VFRERBS0J\
nZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwSjd4cE5VdlFKRzB\
OaExiL2V0YjIwTERVMTZscFNITzdhZW8wVll4MHh3Q0lBK081L1k2RGgrYkIyODI0dWl\
hT1FhVUQ2Z0FOaFk5VkZkK2pycmNFdkp0IiwiTUlJQ0dUQ0NBYitnQXdJQkFnSUVYbGp\
BL3pBS0JnZ3Foa2pPUFFRREFqQmNNUXN3Q1FZRFZRUUdFd0pCVVRFU01CQUdBMVVFQ2d\
3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5OcFpHbGhjbmt4RHpBTkJ\
nTlZCQWNNQmsxNVUybDBaVEVSTUE4R0ExVUVBd3dJVFhsVGFYUmxRMEV3SGhjTk1qQXd\
Nakk0TURjeU56VTVXaGNOTXpBd01qSTRNRGN5TnpVNVdqQmxNUXN3Q1FZRFZRUUdFd0p\
CVVRFU01CQUdBMVVFQ2d3SlRYbERiMjF3WVc1NU1SVXdFd1lEVlFRTERBeE5lVk4xWW5\
OcFpHbGhjbmt4RHpBTkJnTlZCQWNNQmsxNVUybDBaVEVhTUJnR0ExVUVBd3dSVFhsVGF\
YUmxVSFZ6YUUxdlpHVnNRMEV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkN\
BQVJKQlZvc2RLd1lOeGlQeEh2aUZxS3pEbDlmdEx1TWFtcEZRY1h3MTI3YU5vUmJzSC9\
GTXJtekNBSDM3NzMzYzJvYlBjbHZTcllCdjBDdFdRdGE2YStjbzJZd1pEQVNCZ05WSFJ\
NQkFmOEVDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQWZCZ05WSFNNRUd\
EQVdnQlF6eHp3cFJwTHkvck1VWXphaDJzMTNlVTlnRnpBZEJnTlZIUTRFRmdRVW5zZTF\
MQ2tzdTQ1bnR5UUNWQWRUZUFBeUQ4a3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSXN\
ZbGVaS3NqRk5Dc0pLZVBsR01BTGVwVmU5RUw3Tm90NTE1d3htVnVKQkFpQWNFTVVVaEV\
Tc0xXUDV4U1FVMFhxelZxOFl2aUYxYlZvekd6eDV6Tmdjc3c9PSJdfX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQjhEQ0NBWmFnQXdJQkFnSUdBWEJoTUtZSU1\
Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5\
lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVV\
FQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1ZEUVRBZUZ3MHlNREF5TWp\
Bd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNSGt4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVM0d0xBWURWUVFERENWU1pXZHBjM1J\
5WVhJZ1ZtOTFZMmhsY2lCU1pYRjFaWE4wSUZOcFoyNXBibWNnUzJWNU1Ga3dFd1lIS29\
aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJUVFwvc1JmTDlsSnVGbVwvY24zU2pHcWp\
QXC9xdnBrNytoSTIwOE5oVkRvR2hcLzdLUCt2TXpYeVFRQStqUjZrNnJhTTI4ZlwvbHV\
FK1h1aHVwN1Vmem05Q3FNbk1DVXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBeHd3RGd\
ZRFZSMFBBUUhcL0JBUURBZ2VBTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhOK3VBbUp\
ldVhlc1wveWQxd1M0Mlo0RFhKNEptMWErZzNYa1pnZjhUaGxuQWlFQXBVdTZzZnljRWt\
veDdSWlhtZitLOHc0cDZzUldyamExUVJwWTAyNjQxSFk9IiwiTUlJQjhEQ0NBWmVnQXd\
JQkFnSUdBWEJoTUtZQk1Bb0dDQ3FHU000OUJBTUNNRnd4Q3pBSkJnTlZCQVlUQWtGUk1\
SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJBc01ERTE1VTNWaWMybGt\
hV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WURWUVFEREFoTmVWTnBkR1Z\
EUVRBZUZ3MHlNREF5TWpBd05qQXlNak5hRncwek1EQXlNakF3TmpBeU1qTmFNRnd4Q3p\
BSkJnTlZCQVlUQWtGUk1SSXdFQVlEVlFRS0RBbE5lVU52YlhCaGJua3hGVEFUQmdOVkJ\
Bc01ERTE1VTNWaWMybGthV0Z5ZVRFUE1BMEdBMVVFQnd3R1RYbFRhWFJsTVJFd0R3WUR\
WUVFEREFoTmVWTnBkR1ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMEl\
BQkluQ3VoV1ZzZ2NONzFvWmVzMUZHXC9xZFZnTVBva01wZlMyNzFcL2V5SWNcL29EVmJ\
NRkhDYmV2SjVMTTgxOTVOYVpLTlNvSFAzS3dMeXVCaDh2MncwOVp1alJUQkRNQklHQTF\
VZEV3RUJcL3dRSU1BWUJBZjhDQVFFd0RnWURWUjBQQVFIXC9CQVFEQWdJRU1CMEdBMVV\
kRGdRV0JCUXp4endwUnBMeVwvck1VWXphaDJzMTNlVTlnRnpBS0JnZ3Foa2pPUFFRREF\
nTkhBREJFQWlCZGJIU212YW9qaDBpZWtaSUtOVzhRMGxTbGI1K0RLTlFcL05LY1I3dWx\
6dGdJZ2RwejZiUkYyREZtcGlKb3JCMkd5VmE4YVdkd2xIc0RvRVdZY0k0UEdKYmc9Il0\
sImFsZyI6IkVTMjU2In0",
    "signature":"67t3n8zyEek4IM2Ko3Y_UvE1hzp794QFNTqG-HzTrBQtE4_4-yS\
yyFd3kP6YCn35YYJ7yK35d3styo_yoiPfKA"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>

<figure title="Example Voucher Response from MASA" anchor="ExampleVoucherResponsefigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork></figure>

</section>
<section anchor="example-voucher-response-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent"><name>Example Voucher Response, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-agent)</name>

<t>The following is an example voucher response from MASA to Pledge via Registrar and Registrar-agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 3006 bytes</t>

<figure title="Example Voucher Response from MASA, with additional Registrar signature" anchor="ExampleVoucherResponseWithRegSignfigure"><artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iUUJiSXMxNTJzbkFvVzdSeVFMWENvZz09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDktMjl\
UMDM6Mzc6MjYuMzgyWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0\
",
    "signature":"ShqW8uFRkuAXIzjAhB4bolMMndcY7GYq3Kbo94yvGtjCaxEX3Hp\
6QXZUTEJ_kulQ1G7DnaU4igDPdUGtcV9Lkw"},{
    "protected":"eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk1\
Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUx\
CZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRGN\
3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW5\
WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcGJ\
sSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCazE\
2S1wvaTc5b1JrSzVZYmVQZzhVU1I4XC91czFkUFVpWkhNdG9rU2RxS1c1Zm5Xc0JkK3F\
STDdXUmZmZVdreWdlYm9KZklsbHVyY2kyNXduaGlPVkNHamV6QjVNQjBHQTFVZEpRUVd\
NQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNESERBT0JnTlZIUThCQWY4RUJBTUNCNEF\
3U0FZRFZSMFJCRUV3UDRJZGNtVm5hWE4wY21GeUxYUmxjM1F1YzJsbGJXVnVjeTFpZEM\
1dVpYU0NIbkpsWjJsemRISmhjaTEwWlhOME5pNXphV1Z0Wlc1ekxXSjBMbTVsZERBS0J\
nZ3Foa2pPUFFRREFnTklBREJGQWlCeGxkQmhacTBFdjVKTDJQcldDdHlTNmhEWVcxeUN\
PXC9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm9cL2dHTjBcL2p3ekp\
aMFNsMmg0eElYazEiXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU\
2In0",
    "signature":"N4oXV48V6umsHMKkhdSSmJYFtVb6agjD32uXpIlGx6qVE7Dh0-b\
qhRRyjnxp80IV_Fy1RAOXIIzs3Q8CnMgBgg"
  }]
}
]]></artwork></figure>

</section>
</section>
<section anchor="app_history"><name>History of Changes [RFC Editor: please delete]</name>

<t>Proof of Concept Code available</t>

<t>From IETF draft 05 -&gt; IETF draft 06:</t>

<t><list style="symbols">
  <t>Update of list of reviewers</t>
  <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
  <t>Included table for new endpoints on the registrar in the overview of the registrar-agent</t>
  <t>addressed nits discovered in SECDIR review</t>
</list></t>

<t>From IETF draft 04 -&gt; IETF draft 05:</t>

<t><list style="symbols">
  <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
  <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
  <t>Clarified pledge-status responses are cumulative, issue #73</t>
  <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
  <t>Changed terminology for LDevID(Reg) certificate to registrar EE certificate, as it does not need to be an LDevID, issue #66</t>
  <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
  <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
  <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
  <t>Enhanced security considerations and privacy considerations, issue #59</t>
  <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
  <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar EE certificate domain CA</t>
  <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
  <t>Reworked all message representations to align with encoding</t>
  <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
  <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="exchanges_uc2_5"/>, IANA considerations and section <xref target="pledge_ep"/></t>
  <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
  <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
  <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
  <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
  <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
  <t>Several editorial changes and enhancements to increasing readability.</t>
</list></t>

<t>From IETF draft 03 -&gt; IETF draft 04:</t>

<t><list style="symbols">
  <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
  <t>Simplified YANG definition by augmenting the voucher request from RFC 8995 instead of redefining it.</t>
  <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
  <t>Added clarification that registrar-agent may collect PVR or PER or both in one run, issue #17</t>
  <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
  <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
  <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
  <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="exchanges_uc2_3"/>; also added new required registrar endpoint (section <xref target="exchanges_uc2_2"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
  <t>utilized defined abbreviations in the document consistently, issue #22</t>
  <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
  <t>Added several clarifications based on review comments</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
  <t>Include link to SVG graphic as general overview</t>
  <t>Restructuring of section 5 to flatten hierarchy</t>
  <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
  <t>Several editorial improvements based on review comments</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Issue #15 included additional signature on voucher from registrar in section <xref target="exchanges_uc2_2"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="exchanges_uc2_3"/></t>
  <t>Included representation for General JWS JSON Serialization for examples</t>
  <t>Included error responses from pledge if it is not able to create a pledge-voucher request or an enrollment request in section <xref target="exchanges_uc2_1"/></t>
  <t>Removed open issue regarding handling of multiple CSRs and enrollment responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the registrar-agent to support verification of POP of the registrars private key in section <xref target="exchanges_uc2_2"/> and <xref target="exchanges_uc2_3"/>.</t>
  <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
  <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the enrollment response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
  <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
  <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section {#exchanges_uc2_1}.</t>
  <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
  <t>Reworked text in from introduction to section pledge-responder-mode</t>
  <t>Fixed "serial-number" encoding in PVR/RVR</t>
  <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="exchanges_uc2_2"/>.</t>
  <t>Note added in <xref target="exchanges_uc2_2"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
  <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but registrar-agent is not available) (Issue #10).</t>
  <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
  <t>Included table for endpoints in <xref target="pledge_ep"/> for better readability.</t>
  <t>Included registrar authorization check for registrar-agent during
TLS handshake  in section <xref target="exchanges_uc2_2"/>. Also enhanced figure
<xref target="exchangesfig_uc2_2"/> with the authorization step on TLS level.</t>
  <t>Enhanced description of registrar authorization check for registrar-agent
based on the agent-signed-data in section <xref target="exchanges_uc2_2"/>. Also
enhanced figure <xref target="exchangesfig_uc2_2"/> with the authorization step
on pledge-voucher-request level.</t>
  <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the registrar-agent have different
issuing CAs in <xref target="exchangesfig_uc2_2"/> (issue #12).
This also required changes in the YANG module in <xref target="voucher-request-prm-yang-module"/></t>
  <t>Addressed YANG warning (issue #1)</t>
  <t>Inclusion of examples for a trigger to create a pledge-voucher-request
and an enrollment-request.</t>
</list></t>

<t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>

<t><list style="symbols">
  <t>Moved UC2 related parts defining the pledge in responder mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
  <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review in <xref target="voucher-request-prm-yang"/> as well as in the
security considerations (formerly named ietf-async-voucher-request).</t>
  <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
  <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
  <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
</list></t>

<t>From IETF draft 02 -&gt; IETF draft 03:</t>

<t><list style="symbols">
  <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="exchanges_uc2_1"/> as voucher-request was
enhanced with additional leaf.</t>
  <t>Included open issues in YANG model in <xref target="uc2"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
</list></t>

<t>From IETF draft 01 -&gt; IETF draft 02:</t>

<t><list style="symbols">
  <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges_uc2"/> .</t>
  <t>Terminology change: issue #2 pledge-agent -&gt; registrar-agent to
better underline agent relation.</t>
  <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
  <t>Communication approach between pledge and registrar-agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the pledge-voucher-request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
  <t>Details on trust relationship between registrar-agent and
registrar (issue #4, #5, #9) included in <xref target="uc2"/>.</t>
  <t>Recommendation regarding short-lived certificates for
registrar-agent authentication towards registrar (issue #7) in
the security considerations.</t>
  <t>Introduction of reference to agent signing certificate using SKID
in agent signed data (issue #37).</t>
  <t>Enhanced objects in exchanges between pledge and registrar-agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges_uc2"/>.</t>
  <t>Details on trust relationship between registrar-agent and
pledge (issue #5) included in <xref target="uc2"/>.</t>
  <t>Split of use case 2 call flow into sub sections in <xref target="exchanges_uc2"/>.</t>
</list></t>

<t>From IETF draft 00 -&gt; IETF draft 01:</t>

<t><list style="symbols">
  <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
  <t>Rework of use case 2 in <xref target="uc2"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
  <t>First description of exchanged object types (needs more work)</t>
  <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
  <t>Updated references.</t>
  <t>Included Thomas Werner as additional author for the document.</t>
</list></t>

<t>From individual version 03 -&gt; IETF draft 00:</t>

<t><list style="symbols">
  <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
  <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="uc2"/>, e.g. to
accommodate distribution of CA certificates.</t>
  <t>Updated CMP example in to use lightweight CMP instead of CMP, as the draft already provides
the necessary /.well-known endpoints.</t>
  <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
  <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
  <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
</list></t>

<t>From individual version 02 -&gt; 03:</t>

<t><list style="symbols">
  <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
  <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
  <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
</list></t>

<t>From individual version 01 -&gt; 02:</t>

<t><list style="symbols">
  <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
  <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
</list></t>

<t>From individual version 00 -&gt; 01:</t>

<t><list style="symbols">
  <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
  <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
  <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
  <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
  <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
</list></t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9+XrbRrYv+j+fApc532cpIWlJHhJrpwdZUhKlPaglJe50
dt9siIQkxCTADYCSFdv7We6z3Ce7a6qqVYUCSTlOd/qcq687lkig5lrz+q3h
cNhr8maa7SZPT07/cpTc5M1VcjzNJpdZkhfJSVbPy2KSVcnzcpIlG/TQ8Pjk
+WYvPT+vsmt5Dz/qTcpxkc6gqUmVXjTDPGsuhmmRz9LheVW/zofzajbcetxL
qyzdTV7Osypt8rKok7SYJM/TIr3MZlnR9G4ud5O9F0fP95JXX/cmaQMN7mzt
7PTqBh78KZ2WBXzSVIusl88r+q1udra2nmzBI4vzWV7X0OrZ7RyeOjo8+8pv
b1Xn47TZTepm0pvnu70kacrxbnLvNqvvwR/jcjZPx437oL6dVdlFrT4oq8b/
BIZYlE1+kWcT+LAo6ammyl0z6aK5Kqvd3hDWG148HSVfVXlWw3O8mKdNdnGR
FfbTsoL5nOY43DrZ+xo+MTshH3IPWQY9vGyacvhNelUMT/LiMnmMk8ib293k
+aLIx1c0pwn0ce+L7c8fPOE5Loqmgie+zqpZWtzCR9kszae4KDSO0QWO4881
9zWCNYFHFlW+m1w1zbzevX//5uZmpL6+b2Z2NkpeZVWRVXZqZ1flLK3dp/+q
qTU0juENjeNDpnY4Sp5lqZvY4TQvG/MRzWo/r8dlcnoLqzjT0ziBsTY5/JXW
dZZ8bmfxKp1O8zqbTrPCTmX/m+EXD7Ye6qmcwn39JaumcIrh4/kV3Y3+Zw+3
k4cPky8+/yJ5Ajej72Y6hSH9eYxjoenJ8J+PaBxpNanLwk7iOX6UTZP94Fve
Jegxm8IyJqflRXMD1yp5VVava9fVbFx9hiTgz7V5dDRO9YKa9VRf3++NS5hY
fr5o1JWA1T3If37tVrd+XZpPaDBH5Rm8Vy+mQCHGt6Ni6kaRwbOjCTz7Z9iR
4KHrrFhkeMsvq3IxFyKBhw5pVsLvv6U//owTGUFf7/FpIJGL811+bHhzeT+g
cb2ihPPV5NfU9slX+492vtiSXx9//njH/fpAfv1864F54PNH24/k1y+2HppP
v3jw+LH59fG2/fTJE3r2aHgwUsT255t6eF0uxldZ5X1bZLgAF8P6l2Y+HNdV
5NXqYoxdnef1bi8vLoJ57Dz5wozi8c7DbTPinUc7dphuxA+3Pje/fv7EPPBk
yz77ZNvO48nOgy8ig+EFTan3o8PDw+EXWzuj7b0T/BsoM3Mt/CKRL5LTbLyA
g3iQXefjLDmaAEFHylvRC4bO4u9DOTdFDc0smiwpL+DOZmMkzOmUeAL/WQIt
qZPD4jIvsqyq6WXDkra/QG6Gn9QZ0kRcMG6ex4u0RwaG5MfyyWF6jvcdOICe
yL09+dQ9mBxXJTCgcpq8vM6q6zy7uacGsDev8ilzRvyQN8v0f/zia0e1qvRm
xId2ASPFGwYLQ/Sr6wjfh8Nf3J/D3O/TZz/BZz+VMojRvLjEm1fM0+ZK5pBW
l0jN+qZLvDxpNb6CwzMyd+c+fnB/Vl/er9P08v5su3qyKB+++eGX4uX44otH
h7evt06uFs2jJ1/c7+uV6Y+BysD/ymKIPSZp06Tj1yCSTKpyDuw/vbjIx3/i
V3hbkev3hsNhYla61zu7yusEBJQFcvlkkl3AhtZJVlwBMSDOXwOvT87LssE3
5nPkKWlSZbMSTkfN5+p1dgsE6QJINcgc4wY/YoFoYG7jJjZykY7zad7AJgXt
gTw1KXFl6+QiS+F9/LAoYdAwt+ktzHeWJdN8ljfZBEh8UcAJzK+BHSTnWXOT
gQyQJnMWzfCENleZtAfjvCQeUo16R01Sz7MxnHs4ydgobU2d1HDQWeQZ4EBu
roCkUxM5HAdcI/gqmQGfmSZA64tLWJ2LqpzZLod5kTc5TGoyxKcGCTBuOE4T
bEwWAeZun65YcIQZ0uP49CSrx0Da+ZVG78eod1Ym9WI+B/GJxtRqJOE+3dWA
UVflZDGGYaZJkd2QcAbcr2gG1IJdkSFIdvghT9jtTU2PwVszlBdoZewyq0W2
7SQT3i98y9/W+VVaZzSFDETUc2DbvLAkmEID087Gw93TE4T3gKbAwUjK85/h
IPAhxMMAkiuQdugC7gS8VdS0bObrEZ51aH4+r8oUZsxHfZLAK7DXsFqXRQlU
b8ySPq4wNg5bh0NeoKg/vcVZZUVVTqd0W+aGDPEaysms1U51nkfT8AF/vr8H
w6ObOcsnk2nW630CRJh3Ehep12MthE4LjxveevtWrtf79+Zs07bX5XRBSwu0
z9xREIbKYYPcL9kAig/dwondDHYMqP2EeESdbPAE6k3sKE02xrBn5SyrNvHC
mPmMmHzkxXi6mMjJmaAQBRTxFlsD1noD0k+STYWW0AmH4yWtUWP3ZXHMWmVv
+KJhA3ZzLdeFacEqZ3WdQheNd7boXK0gCbDOp7E20/Ny0XSObRDQjq4pjLOq
oacauJSwMmYqkwQ2ZJr/gossIgichf9ewODlGLPC5b7DCw6Cr/2ya+NHve/l
Hfso7LY5DeppEF/g6USelsfyS2zRvEl0DecGet8CKAJS8uoeaBwkIeS/wKOn
8AZOQj6CRdx4vne6tzmiy4W/wrTrhZyFa29oNEO4M9c5npW8Sa7zdOnl4A2E
HfuqrHjN3fLqe+iOrRAKRSQOT894AVCWhHsCTZuFJ0qDPaJY3bGhZtulAz2C
etTDxvFEL6pCdZkm5zkTZxiYP2w8aaZ75AqFpixnz04td1N0EVvAjsbQftHY
44wfgdQCN21kqcNkAgenhlHU46xIq7ysfZY2N/YL5lh1hGgjw8N/kI5Ijxse
T4LxX+D5oT1CumkIKrzic8SyIhYHZ+OogD4nC1xqkCKz4joHAVKECzesWYoM
/Sq9zrh7np1MeIEjgBEXoD+a8UeGT8S7QwAQ5mrWBk8gXVEk9Bn2kWomC01N
pzAeICv55SUwiQlOGXgmWkjCbmVPl9K3USBrrV7HyhiZRFQAXbb3qebwEYaO
r3tsP5C8upl7hGspBpx6W0VEP7HjEykEX0uFWpmjaa6ulqY6Nyk6IdoHkKhg
p+BzXG0+7Zr7ZcVkXuYFd32TwQt4giaTHPujI2e+V1Q0ELVgaR0TDYe8AbpF
6jgTkQ78REjnZoTt2IukznHa3q5OgRUJqmN/tb3dE6Ix8/nUbOA0vc2MpAz8
sAB2CBJLnTIHTavzHBu8VTLRLIPflm18a2MMqQ6GP+rtx8TxZUdJ5s2Xndo9
Oh6epzgvkRZA+LjJ8b7B0cFfpjBrWGBgz+m0LumVp9NF1sANvMJnXny1T7sH
rLm84a3TywNrEHY+htZRB4b2fBHCJ8G1YUStzUlgc+r2pHS7yF8n+QXccfzG
slZeFmCqR6CNHx2IVAoHbWYPqVUf+K7CKXzTMCvR5AMpGahEU2aXcDLKRYU0
AaXJcu9YmN7Oox24HnT0cO3gy2/OzuRLtDSgAHFEjSFhpY6hNaORwHllvges
zt2wCg83SmA5HjTcjhFeueHrorwpku9OjmqcVSkiTxZwK3UXyyK6ulFFhckA
mgHgRgljasobNL513B9a2NZ1w1UwNMpyuJsrOLSKKhpGkjqOGRC7Ue8b2NgB
HRh6lCc3rHMkhEpKkKONRhY8GXImZb0ncLrHDdxbOa+wniGlpWs9L5GrI2MH
iYEPju6DaYV8brkknhwWq6H9YgziGukDLA3gh6+BJ+O5evv2T2i52t5BSnqd
TvMJDxLNC+e4sgX0AEIzzD6+NXiXsUc8MGTxhEZnSoQUyZwHQZdKeuGzwQOH
Q/NVXqB4PXBToWab27nI3XXWJIdvGjhBsKR/yW6T74jKbRz+5btNmhxux6tX
r5JTIbneqsuRgE7OkRsytYQLitQrg9ahO3y/tde4W7AG8Glai1IFRIlEtrYW
OurtwZhZhqfH8whFKhRlsFS5JvtCkU1BinUbhSPS63uNBiQ6J/WChQVHC/Ga
MzE8Q60WGsnimjPajRxzRC0gJavNjVIEtSbmM7uEuXpLstYnA/9CRS2b0H7D
0tYgD4H0nw1BzCHigTYDOAlZlV/cimRmBmKsEnJN4K2aSB6J86gpf5KcAcXM
i3JaXt7ytqIRCrgH9Nd//t3pWX/A/yYvXtLvJ4d//e7o5PAAfz/9Zu/ZM/tL
T544/ebld88O3G/uzf2Xz58fvjjgl+HTxPuo13++90OfpZ/+y+Ozo5cv9p71
WwIG0U00pYlgAZNCqTOte5795+n+8f/7/2w/hJX9v9CyvL39BJaW//hi+/OH
8AcSK+6NaAP/Cct924PNy2Dp8c4DrRyncxD58DShDHKFtBlPBbLKH3Fl/rGb
fHk+nm8//KN8gBP2PjRr5n1Ia9b+pPUyL2Lko0g3djW9z4OV9se794P3t1l3
9WFo23THvxGOK+enQ7Me4J2m+7o92mESe1GiiEEnF14XHi8vuws1vd3t9RTp
gS/rbHoxFIJsFe7d3m5yIHtPlJ0/Vod/XN3Om/ISbuWVUMDzclFMjFgCdDDB
PlALPzzc9NTjjTabQFnp2cHh9/6noJ4lKM5YpRVFTVDhZywKnGdGZUc5rioX
l8gWJ/klni1FOoRiIMWHz4UoLmpjGRyXlTJazqv8GgeEd1ZePDz0OVpvfw/X
Z99TnVNjdRgYK4Ovj4M0OhM/N5OXcoqNnMG/OBcj0DPHNpYu+EJmiCzzIr9c
sAucaB40eXriDySzRpAT1vp6vcNDfOTQbkevNwO6jZ89X9B6+KfhzAriz0h0
P3UmyrIYosoYHA2lzZFFryJbBDL0RTHmQ4eHwDKH5Wpor7y4+BW9IEV2PeFS
Lu3tyMr6oF5DH9B8RSeHD2Ra8LaA7I9sN0f5OemPp+Vi0jdj4MunTCPYIEly
JKI2GQybNJwUJZRsdDkaMG10w0TVPp/BLEnUQy3D2MAMcyHDDTpCyYeBvbAs
h6w4LzDGAgfSOz6k48CRIENnhBoas05OpgufpcKewzEaGHvb+a2W8MjuYA0I
yqxFbgNeRuj35TH1W5VwYeB/IhKSbopanr5Tm/j4kfc4rSsRijrLgMpBf8O6
nL5/j89+r6ckBsLhiZ6PmRwuRmrNev50JDhGaNOJEsRP6CqbT8KbjIRvbkQR
igPwjRcisCb7e3Blp9klGa40WZvZKBV7UmsrHUlHv4hIe5WNXyOhOOFttKPs
2EmcCewcriBsPJxHR3xhODJxJ/RsnOzdf3ayB2t68n3Q/gcv60loFUUjq71W
RsinDfj+BFocZyDNTkKFcxRyQ2uzx4gPEPTSGTxY82G8KRfTiW2aHpiWQO9q
HG6BNBPWA/Waxw/hvGIMhrMhE2ktykS8qU7FwT2tMrh9rDbS4b5aYKAECMqT
jA10IL9lNNHXWTbH4c/oW7rCLJDKONEeRGy8fA33uc+DkbGAcrHI/vCHPt31
DPUAPgwoj6FsOwZqW4s1jt9ncxaqK6yZyOSE6S9AmLIdI8nIyf4CZyF/Y9bV
uoIWRXpd5jji2+SKdMxZ/obWCyX0YNFIqt6Ap0jQrWZwA/Ao0Ip/e/ryhX3Q
NF9vDpwy/3Tv9PDxw+9Onnntsbhn7f9wir59dcozmcJtqXiyE2FF8HVKcVew
MNP8dZb0basbZ98cvfh6s4/S9um4nBOPPxXXEnwIn7JnEpo51CZdHOB3sD/7
MFlQ12Th3n5SL+Zwza7fi7ma3ZW10n3ZfKVauiHnnHii6LyTddgpT2Quzstq
N24yHSCHab0Op5NPpWYpXZae3mFO2twNvG1awjPgzMbEhZgG2Utbp7MssEWg
OMcK9axsiFTT06bNSTaflrcshHprgOz2NrNjzSwBKk2sHpyaqO9CzGmGIzL7
9RkcUE9e4zQ5X+RTI/9dlvjLYg4DN9qsGhO7bjNrHcMIrRmedzgfsI8g4Ta1
EWKFw87TiqeWwu0ECmIVIeCr06mYNLvElT2iw+ylXbZ3jg6HghAaj0Ong3WS
uruiDIhmWxqyFrEPVOxXwCfwbVK5zJY6HwHeX983wKtPF23cEk95emzQvgDa
XDsNxZmerJ0Kux4Y90fc6b4RjUrY1HYAE+Rhj7Ny+cgcN6LXaTNRMjysDDIc
vOzIGvFfCiObzY3VlfcEA8tqMb04/cnSU3MZbJgDvOiG2rjwh/ZojV3dWfzN
M8SEogEj4VGBgb26ymFD28tjOr5QNCTi9OCjKSKuPGdOPwXosMmSyL91jCVl
5RoS1xSe0nGKB8CNRY4XnJtzUhxpYqtCAaBtbmHvED7vCB5jVyideOY5ZRUe
pYtp9iZnUxkeU+sXs1MzZ2yQiGY/hUXN2ELGg5yhn552LQhzseMdoPZDJ+bh
aBsd1Ml3c7KPqSgCEG7Lhu3qThwaoP9O+l3iEKQNB9Kn5NG9xtFoCi3aQJsw
33Xk3fTtKSzMFATHeshhVR3DBwFaD4T4smys78UOnXnay7AsAKj3Esll6pyS
aGteULSJnAlfO0OZ4xx9MG4ZsgkNkZQmz36O+6Td6Hgmh75f/WJREfnXejaZ
9TKraTklPxYagzzhqiQl7ugCh1E3YshXbkI2K5vj7BwEcvyNW0KoLKyG6CqH
Tmg3cvUGECO2BceGTrZDkFyeGma3x6EwJNHALbRMMLWfo9zIBmgSOvGGsiey
tqxzksEJuUJ+bl7fIIFemOFmIj5QlP7MwvoMFwafk5oovoSiLis03KE1pUGb
uZDXBueb4VfoDqOHSdE1tA46Ytk7YI1G67Z9Kp2JdS6Rh6NEE08OTdnEegnf
5vWhK4TzxbMvD1jZhL6FVT9wQWL6ZV+9Hhi7hVmogXAktEM02fiqyMd5ip6a
6dQGWklghg3U0EE9VgmyK28CkrxQFNIz1l8pNJehNEdakjhI5BakIGPPm3I+
IFZPgYPnyF14kCSOws0R2bstDfAhN8YhXiw7G+MRbi0Hbs91DjJTkhHFRPf/
VYmHlcWWxfkkx+9Lu3LY37J1OyffgT0Ehoz6Wv1e20tsuGBaNS72ZdV6ikKD
eh69reVaOQ/eeZMtFKPQ6uaRiJA3wlj5dAcwVGADDRqDLuSWBiE/dXgoqeO6
sxnWykHXzeEZUkX59tZZgytZk9KfV87D67WDIZNm6YQM3LdUAK7DrORbNCNT
mrOBkDnUqh/cZEmatDY9JuklRtnC5jBlNGYWM0I6WvWKCZIfQ62nZXQd66Wi
T5x+1DrF92q5OoZEH/kBxUcgr/P+H5egLt6KSuWCaFBnJuLsRTyZ+x6EJ1t9
e4qhFdiyNpkcGYMk6+8gAGB8BdrcsOcBXGpYQtSW4W0bYkkRqOTyq0mgE5sD
DmlgySr7zbVlr317SCbj4zGGtUbzw62j/RN05aA4nFV5OSFLDJJYJqQiVbOR
EzhM2sAYKAzzxu4O+yxY2WQ2Avt4BXIejc8cDTKWmq14hmN+qU6DiqCkBTuj
WOrhgdgqtePdt/ahhWwTx460xjAE30RHvFEfbc+wCnJSQ7z4GKRLZyaUKBP2
eZobVidX+SWFH6qh272iMOHWPXBhmkR3+Fb5EsT+Xu0M0NKV6akOFsZbBXJ8
AoOUG+a0BheC7h/eqFZv/fslGkFAWCKXjJtWKdNFweRk7/7+XrA47GmV+4cW
MOQ30JIEuOGpGb8mOyeKzdQJLrxMcAoshoS62JryeUme4WHn+fBZmGXoRs7r
2RJJl+zwi5mEXokCz256IYdza192kRqZiyVrRSYRfVCuc7SY52ITYDNIKuJm
aHEiOQSZWD5eTFHTmMOFhPvJ4cX0MoqtE6W4eVkEfFaR5ubz1AstpMUmC21l
4wupcTTeoYeWSItMmEUnMS+Sk4JtxqBE/HIN/B0PFMxnthtE5qEJ0tg/kCrg
8cWT0yIZXbFZLrQIY094X4yha83G2Ul/wreDl/YAVLoFeyw4t9QqaMaoODw0
YeJvPzEOil7vaSoxb43E5FH0B6dveGapQEMz5kaOTHCmh0oPiqlhRSZzZWxo
hcV3GgCSjdAgsUnBaGdrRl12hxj5aRYDHbHhq3y50ciSjG2VpU98yNrA1h3M
FB5SprAjeuz/zTlstNWydW/X0dBFG0oFM7kU1SYIBHF6m3+LbSit9X3heTJO
kJScqUa9cwF38igLIakSQkSyaI2ybfGR6VouYXXP3DAgGaRTRK2pJBrG2iI9
uP9L42y7okClYxONQXFGtJ1WKeBgT0vuN86enWLw6Tg1HhFpwrIJMnlrfpoy
OUKxGMSVfMpxmBiGI/4CMm5IOBjIfFdwrU2QIPE8MhWhDR7JIy0w9o2BSmix
MQIESnYcXlGj/aRONthc8PTs2eGmXaIFi7trREvUTl9LE9bhKgqGYIurbAUF
cF6hTbkgO5xZ2HA47iEaylORsEBEjIe4iSXCH2fL/5d6XvSBsVXS5kN/F63b
gYfxyAVjBc0ZhmN8IxwrZYyLrQDJlMiTM483NtTB8wN+mhwZFx+Z4FP0h+HB
MApQmKASTUyRXcd7X9d4usyFIJUn6cNmvUE54LZvZCFpIgxwxGFzUH/n0N2K
tKzrErwisg1nvPVpPYZqBG6IPDoidiaHCNuccGT5Iq+vmJbL87X1uNIJqBuO
TdlrMGG8bgLOAj3O8T2Rsq2iFy6sT9sSFxC3i7tjffZH1md//PJoc9edf3Tz
DUFivsyLMLCUpGcVrGedP+20I4q9UMOQLwZKBsYHTNC9iVdOvFCYxXxCJkGU
s3S8ryY4RG7y2ggQ9MZk5E31WEUzHL88lskafzSNk1ZCB8Jag5gcJxVT5Ecb
GTvs4hzUN/ne0BYTuhLL0BmoyFN030zYMqiCO5zpU/duLUmRNjH9zDierA/k
3Eg4drEVuWIPmjA5eyXIV+S9gsm9mG5b0yH63t/tWoQJvry1zlHVngNjhTGW
EiSrgwQ2hN08LzGXdUkMGEdSNZQ3KbLaZaUkeEsBbsjl0rTiwmoJrNKnR/ZK
UjLMlTAmEgyVqOgs7ceWWwQ8vA9W+a9Nk84gGVgMbWBGVkloBmhRqHfA6hAD
9SLVOHounuPFDdtUYLwFx3/ZP/1ke4vXHZEDMASfuIB8wwzIs1VIRAi5x2v6
zC6tLLiRqueR+CCjP7WD7tw0WSSwm2F9u+6muOsjwyU9TUU1m+M8YMWOTg1J
mhLFWy9QYshF4tzD42RFihapjC+nr8na6GJkkSr6MgiSNBfEJWcEGqWESm5a
ydBEQoo2UEesFJNszBbV5QM2BlFzf200jL3IHVQiSZRbMiG3MNnUckvSQNLR
Tt00x3jUpjO0W6ZsTh9TrsjahO5nuzi8NNpFzmzLuvInGYbEKB0AxDgJWDDS
K2uFe4h/gId2gZZbA+EAOl/qvsjec9anAl/q0pMG1tpoDcqqHe0kbeeN5Rbq
YBLJk0NhYmG9srFMyjDb7azT3ycLZyLYJoGKadwHLVW8gBmlE+HrrciHO6Rw
wdq/sDJPiO9g9N615HCj9kcycVNCg5g3HGwyAxo7W8xUVlqVGYFfOI1VL/WW
2WxxnIvSuGqVCrzWSInHLb2h8fwIqxHC6+LCdrkR1ppV2zSJtt+zZllROKyN
tsQ08+tMoiGsEkfDVIG01ibWDiZRuhCmgJLHj8MuWnGl56kEk3z78vRQMjUe
bWPKOFLvTguYeIqdXm2Ek33bDKLVINfq7RUWSSQxKChmUdy6Wl+wKFEXRJ5h
rtBaG/yFGkYzovh4LdLakJHWEGNNB1bu0T3Z91RtBdaGtqTFeOd9T0NpzDgq
m9OSbPbfjCPK3I1qWeiJw0qzXv5WKzgrDiLgWzz9bFONerDW4d6I6Gr3rX4G
RInz8UiikZARA7DQEvq992yCMZ0oh2znmNZVNp0zSWqbPtiNDJebUysxW6sm
TUrOBQi1ZMBXRnc59jJITQls5gpdI9hHCs/P8Iy8KI1qge9+W8IToE68EXPY
pbAeaZpfS0TVFGtZqL47w3HEJCpUqA4VauuyvchM+rKIMl7KVOsm6wA58qaR
HOQSrtaxFsVzhq0xITQ22KlcTCWMl7m0CuqlVr1M57skCXcG+eB+nbWZAG+4
IbRBLgPolBLCbQz3ilaTjkNSkRVhnLGOwzK8vWiZNQ15g2aEF6qmOIYZSFlt
A1yBvOYUCILyLavUuKXfvjo1VxBaMpFj+Go4nGXWWzNM3bLJG+jgWqCQaK8U
RRbQiIHrLGo/bKDX+x/4SdK0vr4UGKyOn8+GHT+f9cy3yQGCS51e5fPEff0u
+R7mW1aUd4l+JfPzDt9794H9db/3LgGB1+WXugdX9PcO1A6HZZK8e3kD2mMN
c1n53mkiqin9eVYx0Nb6/cFG6wfvti6frbsu/s//fZeH3xkgNvuSY+DLXiLj
WNDRaNnPO/sbvvW9emvZ8K7tUz2zGp+Zt/RqfSaPBZ+NemZ478xbemHeBf/K
7/CWJLWot1w+xjshYO8MipN9q90XSynyIWbOBi3pt77kYf/RG82X5rMN9Hyj
F72zL/x5Rlpb97zCt7rX8DO1hpJTaN/q/rE9Rvrymo8c9M+iu2xbwbzvIDjE
zssfhH5LvA+4eNp+ueIt/rFgR5t6Dbve6iZqkbfW++mi2n0+eH0lTBGt773d
TT6x0hLjBf7h3p6WrKy4zppnICTcA7mEAmeGwKQuiz/0p9lF038fRnFPKSbQ
ZhCKl1OJdV3AYWzopru1mzil2cfjcZG0VuZyVvvl0lXL62dkOzbWuWydOhC1
VqCWtHJjCU1jBVQH9vqSnGJOOxTDEPVPeTeI2TFwufwDATbhCB3CVFhQy7XJ
xGl1saeMEmE8v4Rl+mtkhXRKzTdJNZISS6QNtilJPiXPvQ3G1hpmVIC2bisj
t424lb04XlHo5DKmsxUb7I1koEdFDXJwjG9dtiKZDCgm5yvVV4tsNBgvnju6
6U4fE5e3woYiGMhZCludN6jRUcimzLnDXoODfEkZcdC6kcgdxhQm+V+gU1oO
k0uLSuNLbeNmxa7v0jcoO6ikSPOuwFjPZymGUotZlTt/gk3hc7kF54vp6/b2
1RitimvrwgbRt1KA6pbMUzQsWlcDSbZIPeTE+ZGzc5DhUP+eqn31To84ppwp
aG0VR+k2VRYq4r6WbtVya3MdGhnegEShKP6pMl3Qruxqv7YfMUCoro3TCv1Z
3cn2l0RP+3lVUh50XnTGoLWUvBC6psrgANDl9cxP1phuDudCcj4V8knok0dH
LD9Gu4t2aRWG3jUJuWq1C6VxrpoA2w75PinxJjtYXdlh4GRIIhnBhN1Cwe6z
xbTJMdTSpiXhveG4RhzJBp75EF7zXEcyyWUUQ0HX5AKGKF6dDuTKcK92gzPs
YywMREjc2N/b9D8/OjZgYwMTUnR+G4AjlPSZc4C6hB0d7RdHrBSXveTzCThQ
bVPH7sCP01oS/dcxmKUVM1zP9GJcE/BcB8aZJokTtR5qeGXVJpG4m0un1mXV
8a6ad2R4vzrsOoNWKNQxAWGSXS834XrumNgLqlw6kdgpL3xcA26pyDQWrYl+
Y/wN7P6kvgJOh12o6L28HrQnaNi+isBwF9l6Y/1hKcRh7M/4OX1Drk2T1iBD
Yi2MiXXOLoD3jG8ye5ZicgcPd9x41K4T5S5HxyiOigPpBPPisuKwc88cxOHP
7cwQvG9INIbTkg95JDqGBQvyhit76AY5X9GKurnLSW8tS1uX1S7JL8RYihN0
Ftf2llD8B5qPk5+x5zn13PaoBRCnoWhhE4BomJhyLd2xom0ihih2KexNHJQs
iVwsphw/X2e+PTA4SF6QHCX6A+3zcp8CjFqbU41+F9V63lDmHYKWE31ghEWY
H29XsFFyn20mC2yYmBBOHO0+KiREchpnxDDci3wq0S+RfYUn4bLGs4R9OX6J
ooa0xO6hA/PRUorflj2WFDRl4swDwQQpk8V2ScQdRdF3uGQeBlN06goJViP6
WLphhZNz4owsRi7RB1XLWUO8Ir+IrBrajZkwtJxttsey6vQrSMijh4xnabbT
m++bPByGVqa1s4ZKZFhoety03GwZNDQ6SzGHgX3LNvzGbg9pO0LqlLbDKCmc
kx9IR6TFUFqECikTOAnqxQ+90/7rDbcgm/YB8fWReWx4bF/bswF7bz9JL5uf
5tWb971efy8M7MslqrmRdEGH4WubcnurfdYYdWjXvpPxBytrVbCf0KPIsJqe
LBzgVkfH26hoxZssfU0Z7Ga25AlSsZMm7lZFYat9Uu/dzjMeY2fhEvLBKBQK
HfEbqDqGc8o3dFQUzw0FZhe/qL1yJuOBskMvWCDvaMFT32F4uKaWZauR3at9
YdYPa4ZRCwmmIKgh/K8dBNWNQ9YOE8h0PIfet/E4mzeBFBQI13y4ahORtAAJ
aopMQvB5fHj0Ngf2TtpPD3DvTrOMd0Xz5/7xycvvj04J+k7Gxao1WX1wPH10
yZIYimIZBWj7BgfUMIzgpO5CHygenLghPzVUUwsDekeUOa0JOH5JgQ4DLw5Y
6bnRK+vigdeKBcYNx4f96Ohlm6+3O26+CcRXsRWqjeQ1zibdGx9er/Siyfzw
X5uiLxcnZCajnjWVIbJ8NlGEVkCbuqK8YhHp3STsp52frmvDZN31E5jlLplZ
BeEuvVFC2p8KRA+F+Vp5Ix7c8fYTHsVP2Vxszc4u7CBWOsyOOqWE1B+NTuIw
Qsw9VzCkDqvEhMeKuCLtyRGK+VYPFtaAt3CZuy3VDD9cDwE9rxMTAuAHP9id
AyWcNm/b96qvk5ni7bS9js5V7dR53zXvnvD00f59BfzMBZH6iP+cYA23NuSL
hyBtvf6yHZ/yqD6NQGCcXWUdLzNaAuXDYgU0ydMhhGfKv5/otAYb8dSQ5M7t
4mjJzHYOK1VIdEdfVWGTqFaqChWZLU8vEyAtbGlIca5v+OIYoC0HKE/JazZ5
EvE9/JKL8FweGq4RUnu313vncnDbrqB37juaj/9lcpA1aQ66wrveu90u/xT8
rPkltJKcSVKXhDuGQgHzexjNEHQaJGM1Xsh3yf3mGoYTEiI4y+gUf9fVdbu/
iHVO9QRXHrvKOrpa3tOx2P+tLb80V8b1EMxaSAP0Wcem92DtPr3QLJdq09W/
WgU1hNi0cQirltgMQoJLatUzNDsef9DM/rpAo6CvSMlYXaZda2LyBPY7r+kE
hz0/4p7/4P+Q5zObz9nzuW1cn4ch5rzA8Cfv20wqCC3swJFvlddy9DRaoWwd
K32C0n5YiUvHBZL9/w4tBkFmndGCg8DgHXlAcVCGf4MeKU63YdzVeOSRLdzT
Ds9Uw49xc/HZ1MGrjg+E1k4jO7Hd1aRLGm5iyzcZ+H3LyMiDi3YCDSqrIF0k
nVHVzjDhv6JP+afAOOmc+DD1WPMd4+m6oh9XreyKYgo2oUAVY7iID6ImV6iE
a0fqSllDYb3IUY2QLQjR4Sn1OK0mnrShIkwN2D97O9oAukOx4usjzQ24QCXZ
EK9UF2WoZE7sax9yl3xrJH2RCYMYO7ieZ75koaS+LqcfL78TgqI1aaLykN2B
T0f/tjICAoTCHiA7Js++i3e6b1KPaDsi5H3nJxjraqnAwn7Jsm+Gu6ZYi4Vi
3tMhQMQy5atxynwvNpybcboGx9mxwTaxjQ4zfIn/4E0Osjg7QgKW3OUcWhd3
HvCvvctmM9BePT3Hb0DcSljlQseY8ElUkvjAkklDIRWgp0lgqRHrEy+HFGJb
GFehtotTxIvnTzSGLlD64XoJxAOnGLN8PyWIhvjQbUhE5RjlbU3lg7LsNSXo
wMymTguus/FPqA78BO1BS5xzEGPztvZUe30ZZMeaTnj22h3VreOZSiWmoltQ
peTMuvpsX9rAQOAAYgmALk8XRGj+kt26ur7JBqz9waaqJGAsxYSXhEE+EQOI
wXAYcrrhUEUbrLAjbIcB+eyI8a0UCneDUd/EMB0Y3UjUePtWFzZGTMuCQg0U
YgPO0Oae0WJMBEwOazNguHaTtUh4T/MsDMZhsHYuo6QGSMgulq8MXIcq0OUi
vWaB0YcrgkW6xOoeufhPCVFSG9dBVFgIPA6cuu9qSbSWW7j0bHSG9NdSqUkl
sXpelEjumi1BpRMjzfSUC3TFQVVWj+DMKr9yrMCjcvgOUHxouVosgq1fb5cK
EsT9wilnfaaTct6oOBOuLwCzQ8velJYbmDi5xqa3BEupmrIeIIfOzkBIlG5P
/KKjd4H9EWtkDddf1ltDJVEuoErJMZF2SnwxoFA294Axug0qXZHOGIKRD+Xe
i2SjXsglndJEsZwR2UM2dUWH6B55xu499zoWYVIbh0PiyswZJ0N7Ipa+zB28
xb+EnWEHXHuMEsiDhgLLk+mO6ubuacRc4oZLw0E+NIhK8kz90p7GPmny0q1H
29SDbCsqmqw6MTebISSbhRMIq8ThVTNjjicJrVImlhWV87QjlkcpaVB6ZAu/
AykpI0cpLpvo6Tutj8saD7E6fDodFovZeVZt1Jv+muIHTN41kq2pOFz7RYA5
1pDmrWNVXUsdNmOWWmYHL05NYQz7PjG2+TzFEhm4+hTrHOZzEywEprlio3Tv
WMAJA4ISFyWBqFVsDHQhXOh0MYVQQhOu0Wu/8oBSOQ9z58EXwMdcAHaNzjM5
nWny15NkbPOjo4uuYWCQ2EqUpMFB3N55kTzd2nqEhiF8GdN7kEu8oJfx5hk6
GrjtbeWkR6MHHS58Gyunz66XYt+O+ZUUWZZJOTpBEwVpJbRE8iFumaP1+pNI
paurJfFAIQpb98/9boIKuibx6F2apzmjUrgcD99NtOsXZorr3tTCaXBLdpfe
n+V3h+EcvXBuN0A4y2FW7dtP/OsAIxO/zCQMCe9CsyQ9watIEVgOzEHvOfmF
Tefs+MbXPywXMsLOOsKzjCaiiZQEQHZOz/S73ja21/3YhtCvWnSkQR2L7uLw
w5mB0qTRiW2oJlA6qUhpUvXcqBj36/PHaNMlR/FzDHIdo1MXCaT5eoeh481g
NJHSqRy20gSKUhgFBfIXghuiYOLuraAQ8/f6Sm5ET/mmA7+iugJ4mPrRJ0c/
MdK9jOynZjwfUS/9DlXv+d4PyCPxyt21xYG3HkpWM9kJHCApVUZVprhZGBsI
Bn139sIOToyGI1akQAmjV33PDzRi66bhki5QGsO3KbCZmKA7YXgR0BwgxW0i
vMNKVD40SDR6Ua9P96iNeCIBqu1oKZwEyvZipyDZpRXM2KHq4/xYzy91uomI
m2pRnEwwsPDBnklfZexKJUw0bSBecN6EAl+NoZ8WH8CId7ZZtpdiG6/yr3Jb
AHngdyghBbpdY27BgprpZZXhhT4V9TEASMNVpPBAm62hYfWhrcfPylfHey/u
z7L6KtYwfJegDPoNHh44gyoOsrUwK7KUEP7lqcfTD1AafmkitIGo7ntmzUOb
9fL2Ez/8yhRzdSJTRyBiB9EnQ+5col541pGirCLPbbjMLRjjfUq25gWwSQx5
Vm+GBmiBCqrHNj3OluUmtwOHurRgaTzepcZi6sOaKQQ5Y8kz2KDDIqsub5ON
p88ONzmJLEsr4LvTSYCRsfHiq/1NA/Udzhc74NUgaVCKTlUhzA9z1bLIjDH/
LuHt0Hc4M9U8gxMDdWKZ9DzI+HNOAEL3NYBPlvK6CTlw4jNXFHc9gA18frfT
tF9zDCY7GNj25OUVLVUutXAQ40Y6BastfHiFPrsikTaDhLXAVpa7onHTLL1Q
qIlEZFzU4tCNTUeByVnn6JOIHq/jh3JbTA+mRIAMvjHUGmaU7hwuTFDyLxTc
OiL7SyuIXmQN1+iIa4JWIqFKisYI50LVhZw41UPtoFKO43Kmi3xr2VcDLDoX
m9PmuLZ+pCVtbYv/GjuCRxDo1QoY0Q78UJFiuCkzaDhDrd0ilYrWfIXdydfh
llizzYm9onKBtuBsa0Wt+krD8kdlA+hWjElLosBipPgFXBWJC6fYsvq18te5
WNwW/KisDYXR4hwWVWHCA1cEkZIVtH1fN/p0RM2sA4W3T2rd9yd2we56s4ke
9PCYkNBIE1OzTvomtrGP16sPZ+kSf1eh3irq08C9LinftiaZbN0yH5Z11S5w
7B/JqLtuP/B1FWrcrmfcdWHdjizbi0FgoTAS3NKjpzcNm6XN4V0xwzrBo30k
RSXDiNN6QVUmqHBEsFKyme3FaYX0HhAfFvRi2wb3YdJTpRxGrmInvIz91MYE
JA/fvMHD8gj+kUCRMaHiBZHPzm70GKfqAwhdqZAsUqV43mgoJw7cCuPvRAHo
RcIpQX0BxdZR6qKFaOYY+4Q85QpeylqV6sW5mUQdIO9YXIjPQpSIFR98pr/8
DOO0FChJACOShGgk6oN3+LsA9aAj23n+kxZESbTh/T3z9TtrPmi3Y0+1+SDZ
+PZkf1M94Z5/xzku+OxHWx/dhYpuWPUR/mkLv1h8Hqu13qEV94cdi5C1X9MK
6ef/TcF0H97Kl614jQ9pJWzkjx+8LsteWd0KNmNqCxBfbI6R7Zmgb/gTa8Hp
IO5CdkItRoIvJb92MRLbyL9qMRI9o8OPMaPDXzOj/2m90v4k/Mj7839oew0W
By4vZp55uD8dKyeHnCT46ATuuP4/AkEbAkULtMa77iKp0DbL+E//uMNYwjP2
UWfkxnPXViThiG24ZkJ3bsVoGtfEmT6wFfuRpksksSsq9UE37cfsTUMppsxF
jw7+8WHNMO49rDiIsKh/3aEZR7Utrrul38vugPf0P4sg2xt7uP6NNbPrJDm/
5jQk+6fc6h8/tJUvqRUUnFsLuWT9E65OSjlO/6T1h/+whDDe26dARtKF190C
eQtLqSYfuAVf6lbWm/ZajOIOnEIX2QjzQwVzRceqW7657LK0Rt7JN5PrU277
gyWBL91O1B8+Fmhl6fFbe0ZJ5ib0u5AEzP7KHrpaKuYTHWn8m0oI1MSyDf8V
VAutoMY5alnG3XgYs4CwjWQZ11C//2ishR/Ar5b8uXwts4+/lktbsViJMWuA
ieS2BQriwP721TUxE7WFIKnn09wVSzEw9z4IuXVKedCKTUnBKLHsNh+Q0Q+D
SdLxfy+wVjAZ3uKmcGIaqlxUKxZ+VR8qtdYFcXZn7QaRUha3J+7ec0/6UCNB
IMj+nphOnVtB0unag+ShYV1vDOLLqfBpe9oPWtOuOb0BBhY0Xq/lCbPoK3qY
0TSq9mAetQZjko2kARfrWkxMMAtlU3mIiFFX1RqeO0qaM7kXxnu75x+tMK6F
jpWYrgJnLhzb8Jrw5Bg1iyE3pRhUbISYUW8rSojFJtOL7IfWmpikAHQhEvrn
zLdkfsFavxwsbsPJsAxTbjM7dLJep9/QFF+xaSFh7o+D5Xn71iXEY+zCMeZH
FGwErz0QVZeUzyGjcaRB89B9QiazEeB+mLyF0sDIttBSrQrFXLSiHOXubSCA
0GZQ2y7uGSM3EWZUf4TI0DgEF8b16OCJ1WGohD5hiO5NegsLjbCSztloi6rV
awXjkGFagjFtiCY1qc6qjemwiXImXCOTfBk6gWud2s62U1GynZ/cdGKmdPIV
jD7FgJmO5Tz95uV3zw4YMKu+LcZXVVkwahpXff1UQ1h9wHnzfWHutC01pnf+
eEbjwHLe+eNZvgPz9pKXlP18/ZeUsfzD5rS6E93fkHEx7/hW2wvGDZCq0izH
AbDiJnS+ph/Sf1z73uLDu+NspHWSOJcM2hiNhnWDoD/H3598UD/GJCurFEk/
VYYc2/pGNps7uPGPO2k76xiEgj/pDTSg37WnbqHapuMbyUH0cQpHCgmNGeZm
p1yNCWe7nbCLkaLDhmGhHdX8eki/oh91lBwFeKs2l82U6qYBZM67KT4wigHL
x3laUGFaxGQeELxzYwQwCtyfkjyGcLlOuv7EFToS+8PQprSSM2NogC8Qxsli
SvthPQJ2a6ZmwqaZ5lOg2fFLYLNBYaugyPFuDM7lfnPdjwcokUFelngf00ng
FJ0hCpmEZ+T1bvJfqjzg/Z/rsvgvjHW01VLTKp1lDSH36hqX4lP99vTlC5GY
SNBZk3jsksj2+CGcbuS3AVATBfXonCfbsCIzrSZwKMO8GGK1Fy+bwCxAILjp
UpFmQ7J57hUkssvAMsVuT+4N3LZ14zX6sGU8UhkoFbf9wx/6A9eImlbn4733
7s7O02sM9jDXVOrOu+RDc6nsDGF+SxVfDTYUoGjVKsJi5WQpzECEDzFNwAcM
rqWQCGuDsDbxwNvMBV4UAVpYPMZDENpTqoZmwSYN+PKK2KFAEW0EfI3bINwv
jbdmSAzdQYdSpyI1KTVaZi7Ky2AZqphbAC4H1Z4diq3tM21L6tpqq9FkmV1u
dlUUlmmI7+70chf/g0U0rmauLJ8HChimxNHlfJ1PdllJkAbp0eB+nt82rnxV
PIKMQmq8z/rJy/2zw7Pk9Ozk6MXXXBh6c4AanNLG905fjLYT6kfSqvr6rf46
aZW8Xufl5Hb1amHYSZ/gGwORBO7FbLd9pU2pxGTDy86OvDy8BVb8/v0m7Qff
3ckQdrO9uBa5aWJPM2I4wrfYxC5+OoRPh/QpHwvaKk+PirQbzyLA6DBkG3DT
pWhFHMx0YGODdkYPRttG2wtTElwB2+V6XjuM62+PdrY414rT2xIOmpYtO2rl
sfo66Ujo9ydJx50rkq/FQIM3jjsymW6gRzXpG6b98/R2WqYTJNZP904PHz/8
7uTZxvonYpOJv71ENTT0I0lwb6WITF8qBmdBH9+dffXFBo7t2HyffEN3fJPb
pHdtu93MBJ9DDfQfwFZgOQ4yvqMyrzudbmil8lkQLCPJBbJivbu0tktL0Hdn
H+ews7WzPdx6ONx+fLa1tYv/2x5tbW39XZZRHxl8HBOes+zh59vbfX96/djK
9VcMn5n99BJbPjzdefSYewWatxavTutJN6f+oCPYycnXkVNPxAba6303Lw0b
6sKMFUHCAyQ8/Wbv2TOXN8aUXpFNCT/tAjs+ErgOQ3MU5oIO5w3TsSPIXl6u
oscIxY6IIzlHpJKsi5UGwwxQeX++qc2hpZH7ueS1ElP81SBh0goDQawlCfpZ
VVFF2EnWEfzIPvmJ4Pm74HwUTmynnj7RypwVNAjuyoFmiqENmTsxmYdbW8lT
uPFyTnZN7LRBzM7krgDL46bsYlPNdL9EOdunbF0Qos2D5KYq0VRMxXmkNGMz
HqFClzf3eE5wcXKW4JPsmgzcFgwcV9PVdaTA9zqjBYopLjSjB8lXZXWeT0CK
6JwPw0VImZCyUnV+lcZjg9SNRG3KDLfVuZtMslxoKsZQ56QOsiGFMkdbRMOm
7A2zTPkiqo61LxlXDv6VwtybR+NdX8IMBDlZyjazJVtyY/L/jBrhSS0agvcK
P7X4Re2VMcxILU1LXOlaGfjLHs5O7uMhO8fIVUsMa28NHBqyQN9FDINV8g+l
V+DAt9deMTi3KFbYO2K5WAmQxsV92sPaYioDq22Y29vWEFMhIp/CQIpxFk4V
hN/qdt6Ul1U6vxJEEaBXeLHndbaYlMMKgatnSWFQB1qiZnvtlqXR4KaEwh4b
AkzyQKxFg1c2UajdyzI+ODsxcj52la5qa88zCXcMyx25u9k+DJCBzRpp6XTL
rCNeWpnlk2ntbLxmWB3Mc7PLoLJKg2tLKxvh1QFpB9QXvxhPbGhyxb0K93Jd
f9gDRW8GR0IVw4ltkdUd6ozQHadZipDtGqZvhZolgxDjj6RtOXTlJQhMqrxY
jQRTrbnMgpBZmLb7Wgf19tvoGfLZ71a7OF6pXchn/cQXlaGpQChf3QQrEqs1
iR2nSSR9on34XHZQf/bZ/a8WB998/V1x8ubFg8Pth/t/FavdcpWDn7B0B78N
KY888hEMiHe0IK7WhU5W6kIxbQg+g1tgz1mybMSd39KX/5DmQNjDLswOgyz+
GYp4vhn0uupWrVaZPPEeeibx/A7aAF57T/wMx/lfI8+wKrqAwQMkgSdmj2dr
hqrUwuE1wiaUGKycJFFMP4JXL2xLpOnpQkNs202l4JiS5B34MGsMokvJQzrV
MV7FYEmBjB2iuEpHPXSuLaemHvrulJeYY94VTWLFGqV2Yb5ZxKuk6w6k6FCi
+g02r994mZyJLzn+y/7pJ9tbUtvVcn0UfFZwCt4Rk1NpUJu0VzHNZ7Uuo5ry
4PKxj7FYlL7NuoGJwWiywBcTFLRZywUVcSt+VI9U1uWROvwQj5SIXkVCHle2
NyDYQHaRLqaNvgHh4AXvBO+L97psq5Se6ygmO5Cqv6cneu1JCY5VdpQIV7qg
ff5jKPsq2aGYiVsZn67/HXtC4q9hJQQSURzOdJWyVUI5pORV7L6f7Mab0uQT
m7DQ61xAIe49ovuyltVpyY12hqejUHXzzyMTYkNH0jp2f/zj4HYbd3YUNW2p
876uVUtKkqyBQsF7R8dE4tswGA4xUKnODQUeLa1z4wf8yX12vcwX53AfuFyL
F6zl5S1Ha804IsW0aeCGZOEQFRrOqPdNRtAbGlqQkNgzMiqxMOUjldJttEjw
oQhPLPSXZk7nUhn8L6tyQdgyZJWoq6H3QWPWs4spF1mDoV7DGpuG1+kutNKh
x+k8Pc9NyUa336ROK+yr4ARW3tlFc8KUC+IRRzDknQ8xhRYKfj2q5uauwitj
3ht5Ddsxv0pSNOGfgMgnS+ri2dRYHKaNKGV+oghTqMPTs0Gy//wY/3PKODCn
+4fHodFSR2B61S6LWI82Z3xKNaAvhcL6UE62bovxR8k6w+aZdVq6ayKqOCpN
8oW5J477sQhj8Dr1WjEldkD1sAxIZ/ef70dlsOgdtzurAYVx+qQS420iP7YW
Augg501EO6w1R7GFruxtszA41L87G47mnWewGoilsLbF+XCVxfnhmzf3Ma3/
o1ueD9uWZ0QR8KzP2N1vbHmmqtTmjbxYZk8+/NfZkzfgZUNpN9e2LuMR1cZl
GdVjLPWa7FlB3g5NluReLV9a0cqWOZK58/bisSLRDYe+KCyi8QhnnUhlpYF5
RwptgFgfrFdZZ5+pRdt+lHzn2kqe04qjoBcZZlQO/MiDvRdu7j1C33MoHL54
MZ0KeCGh51vpvA2UHAkHx7/QIMWhJQbBR8O5Kcn/YlHRIDfU+Gzg72YMmZnL
/RpYXexeFaqKidy+2dgFtAcONB8CbjnRRvIDh7hyHM1K00h+CSHu+T5StSgF
N5bwRGuuUkSEoqut+JJL6XB/wh47JjTBRhXMsRyBhXc7nlOD1k2dBbVLJKxB
+Q3yikKd9V4Hw49rOBHNKqrqlwRC2Uo/MLNqK0L2hsUcR1Yra3W+ljvpf39v
kvZRL1ssIySI2+MYtsKt0gZ2IDu0qdeMJBdP0t2db2/hbVkpt3KCyPbW8mUy
xyKMZzm7ykJR/Q6GbEucVEiO0T7U4tKWKiQd37jtWbcPP4p1267iv4kt2463
04B6qu3W7nEJd5Gz8puYbk+XhrFos+0yo23n6pDBtg+Sa9Pf/VFb280Xgfl9
Z7j1ZLj9IDC/e2bdbJlZd4kl4pXRLSViHbfJlReNpzbVTVo1rvDjytKfcuWQ
v9uD51tv9ZTZYNqQg9Pw/QtKbr+AeV0VCruaJGkSpNkGjHlwFWLX4dKix1UW
GRvJCrQuWPF8hrGrFDeLLLkpS/YokrDoZ3WSubRizMzo9DZd1Q1C6pRovoej
7dH2tgX7Ys5AwTxdBSJU5C56p6di45imLTA5km/JX5hd5+Wihkdd7QQRiWvQ
RUfZaKCd3nwYkj/+Ifzw+44PRczmWhSxs8CbZcsauRp/Qf22O5WjSHX+BCWh
ihJL4j+pCiSgou7gND00F+VSps2hNp8vpq8DtH2qI31NxNbktjnCT4DCHRh+
60O0R9JIk29M4mordThMKIVuT9xq2CTgA5sAHGaZGtBgp4f7M26nw8am0kJj
RToyIwXWtB1pSe1mq4ENSciRGZecWb4p5W3LWeZq+9TRJNDuRE8OhFqRyCl0
ArM2DfZ2mLsp9hodAh/P5fPlIE43vO+BePtX2KDFtxEQrQvGSFDmxor4diVO
kFVI/c1VRSq6V29MipLZ5EkTVoVJlvfh/6cHXfmkZOkaM/y3p5bretOucEo8
H/JXLSAlFJlt7cqXjG4qjAavSfR8xHrS7W1Y4A3gjHhbXmewalzwzFabt9DD
tkZoaYmHTBdHjwYbfZRwkEObk+oy+AOZHbcDmm04eCbQ3kT3JzJQZBmLm2ER
c2naoGg6XFjY0yEBeeYKE4sZInleUtLf8vECC4UZSy/pWepztgxcWBGa7lC9
IBWdTbdL4dGTK0mDpjmQpaA8typJ56pAH6ykYic1sgV6vwvwXyZEqLaICFqU
xe2sXFhg89usGRpLiPQpBFx8AWad2n6H6BCNiQ/3hJJSYlm8Num1/YkP9Bgg
YTrCxwmKLfBL/dk7+kMDYKY+5GXSwrykzxzsZeLjXgZIl/hfH+pS/SuvR+Au
P2zuXtvqpwMDRSFb/mgu8mdKTQ3R3yKNwZtA4gYsVdlCOf/o7lO9ecfRhm9K
Eu3M4vWsRiJq99kB47fOaOPQfR9/nkMHQ9WBwrWiT47Fv1Of6pMOWMB13oxD
Aa7zZhz+rz307rUd6h99SOSkrPFmsOqr3/T+2jhxq75ytJHP4hCD678ehRaM
v64AYFtYgi4LvY0euBI/7KOcfQtZ9t9r4ad5fbJH9W59xkbbojUR2MDO0+TP
YO03eQInXRNYPtplOINuP/VTyT9rP8cpwdjdkZZ96b1Z/9aj7cYr2AnxCjRm
1BIN0dcqBSVgOT5Yy9RvU4RrKSuslO3Qv0oBZ7ZEe2PiKLzsSXxBarVia9uj
B8kGlbG5yapNjkUflwv0xWPmND2xk5gH8PuTw79+d3RyeNAqYm3MXfkkM296
bbvUZSc1hG1wzJTpVvlz79oiildLGuOQon23lIdmnTmLNjQxwErbjzYpvgjZ
FQZJ2MqtXjG77sq9LZwzVDnGV3l2rQF6wkVdorSrcguBo0OD5uxjYBQc3qIB
ZYnH22VtQE3E1eTlAE5bqJasJeZNHwGvXVwzrLrhp+13onjldah7mc0hU1fn
8cf+uxeeF7Z7IW0ki+qB5h0JX/B2T2Xx8/Xyy1eyc0zXZUgvvZKVa5SWkAom
dDs56ssunoq7oax/MUHyYUK9zq1ku/yBvz3oPxZjS4Dk1xEPsyQJ81QVBg7M
4sb3zR21kyZrG0ZrLX4KtyVM0XC4n56XbUNdCz7urRdrdNjKurMfo6MtF72z
2eGQ5T2us8LFCZ/roMHWSV0e2iodmzwD7rM7mBuXRS8jZ5vsrggfN4Vu59fo
brdBVtwL7yvZ/DYHd8xi7Vghuvq1FL2VsBETjK6jNYZ+eEYknNxbCTNwt70u
qrz96ZJVdMwkFqzTXr47LsrSzGnSG449IErLbnq9PcL48INNcY9j1Cm8a3wy
TQ13WihdusWfhKrW26q60o3gJ30oW240ZVKXY/qAZDbjL7dfRu2eytyknVh+
6afEdtXCEnUciOxY0SJljWR+d+W4+USVBh9yPK8amFQitxR8eXGvgPdPxHph
qgUhZoB2nut8uGSdodneQgCTQTyE2Pq3BxQY0CBtlxgym4QaWAGNhJq9meeV
YZrhcaqyn009TlsILkm+x5Zl4yhExBihvfAlmQrlrAoApyUjMRQcv4T4dZlL
sF2aVOXlon08DH+K1XEzPAxaKovzkgAcq/Mc3761JnBqGw3jleD95IXk4CJN
piAnVbEUuoeOG7yF0S1cp7paVwGqZXXWWmIIn67wYHWi2XCUsKM9sNKa+PBs
XBHVehARCUkoWat8HGeLOhBd8rVTGCZ86ZuiKcAtewM9YK5qUHjuL5hdY2RB
cXCTLAgaRuiFjoXDcjDs1kOKnfyKInF1pauuUlTyWhhy6b3rWBSdffF0+Clm
liKI6BQEaHZGN8amTKGL2aRu31Aah9j6DDuCmf1c+k6K9dmLf6zJybBK9WVH
b2fhsIdBH3QjzyXmypi+/dBKw6ad9reSUztN0QxpMxSrY4kfAfDAyXJEkzN5
xOJPWZ1Ci30fIKX5AX4n6yJDhGFp2Ps68Xx+1HEYzGdj+TpT09uhqhs1wlJu
HDWRAL76DhF8m1E8iJM18SBCOIiIqrEm+sPdsR6kyKPNjlD4CuNyLgVpreAV
AU2IYyNYa8J6UkMEFqteyP5qLC3fqb0Rwi9sJjAjQjom0cIbEQWEeQpxOzTB
wB7AuqdTK6FEmmmxNs28pMLwhRPyHCBEG/TBAUL4yupGkJK92ebeqrhv7kG9
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
czUd50eP4fmr8YMX03FxMj/fefifvfxl/u3V33e+X/DTTx6mr7bnk29e58/2
v/3l73/7dv7Dq5vmvPi++WH2/e3Rz2X+/ODw9vkvf91+8fP44cvTo/po9ug/
e9fnsxdT/Pbs4MW3pz//vRx/c3L0163pyfnWo4c/vPoqf/nd1d/+erb15Ci/
yX948O30h7+dTP++v319DmM6+vno5vnPR/9fe2/b5CiSrIl+z19R1vOl+1pX
HUCp7M6zttesJAESmaBUQASCrbUxBOpCAiRSIlMvx+a/38cD0EtWVnXPObvX
7O4ds5mpyUwIIjzcH3/c48W/3FT2YFLZy5DbA35newH+G784x89df0HfMVah
31Uep73DrBOWoSmy+v+n5czPlbmrHkI/+XJTxh12CCCHQBOHpI/2M9Vy+UiJ
MmcwEXkZKkbH5VYvVPLhRKShc7QWQV46E/9+OFGcPVOdLzeOM8j7E64OPM7E
XBd3E2H1Q6XrTzLj1ePOxvYEm+XhXSBidWbaR2+a6kI37EmRjEVm9QJF/XLT
Z1l3F+oJWmB3E95tW3A8bm15sV/aqqVzwXohDzv2MHeYLrr44jJRus/MY47Q
yy83KVvFu3mm6myKJ0yn4xWl4egqdwvDYQN2y6Zlj2fWyoNMMQpnom33jjBe
xKpMxVFsgyONCH3gE75v+7BEH0xv1cuYKm6ZwnpCaVrgKlrtuUlhTdmqt5jp
5dZfWtt5wb7cjNwiXUaZFeFthylWN+aJ53mT7sRPDKY4g9PP08RwdX3ncqM/
KdCfbPsaeXF3plpfbjbuUYTQqEl4TAVXR7ePHXG0fTYRfh65uqrMtMoLh8Yj
el/M8uQ4KSabWFi2oyZuWIS50KovN13o7WKmlIXr77fJ1FpG3khNtO464vf+
REmew2nZd7jat/WkZwuRubnBhKL2OU8Gk46D2Te+3AiWWR2Mph9qyQGzZ+Bn
FihsxHTjqZ7NlI116MsyNWjuJspIweg86JIu8tEOkv9yY7BpMnH0PAs01Z8V
RuAte8sZD7uekbqkH3wqlnax3wZ54sNSu7afZ5OjUP089SZK+uIW+y83EZ64
C/X0ITKd0vZ6ka/f7rwiU+eFMRUrFkEed56RPNj6vnL8fYY+PqKPq9hPN1F2
P+E0Ih1zMYbc9UkW9iJu3c5M1o+Mcm/rQnN4adt57yAUR5kLW4t0Foqj0Z0o
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
+vPXx8PWGX3VX/M4r3rfvx7ixMZq9vI+HfuGSp04zl+5F+Lt27/W7IhqOM+T
01/rkijncmFnunSuOfD/fQb3/VsPLhlcR1H+/8DgOLcW7tTeO551BCi/imPi
zoVh+7rzGh7/jMFllby/DAzOvrOPMRhc8GIfvx7+xeD+xeD+xeD+xeD+xeD+
xeD+lzK4ZJjvyKmdXaT6nHTsTbRyyDW9l3n7cvMeyXPTZ//3F4NlL5+no+Py
c9q7na1z214lcfCbGTx3Hmbr+9vDq1kt+9Fen3aGEM0dBsE93fp79pJPVPO3
wSrit4uvg6eEm1Us7h+z3U//+PUvLbGxZ5nA968N1zeyjl1YCz/7ruHWvuWv
ehZS0O/7lu94FiOvvdvpVnYYy8W97GZy7N3Vhko7Y6CAGVfgHx/oPhdnmBrz
zHBbjztT1AHtWuG07u3TTmfHh49V1FtAQc/TL9a9s3Acm2wopukQCjttW/DQ
qm1YWpAnJsz0y83WLfaXt4nTfv76krtV3vIE8AhxyRug0GI08XrWBCaJ/ny5
0Vy6Mq++tf2bO9vpwrn4aGTcEKWfpU5i3m+4xvauGqth0Z3GipU9dAy6c3WQ
THkRFqFINnM/yYPi/iHM8i3A4hBo2cGZJi+RCbDLnGFUgLMsRbv7pL6Qj+4A
dya5UV/Jd76Qry+9FuaI4WdaaqO7UD2lXa1Opd9ktVb0HUqBd+C5m6Utq4+G
O3zArNB0KlF0U1ruCzTVnPN9ULMcQ5V3bZvWVKzEEr67DHX7y41KN8VyxRnN
stPd+PXN+J6+k7cu693SmULT1FABbKnzbD91lz175olteLEj5u1VgTml501K
z8/NfTYp0iimW2WX4sEbWJM4TwYwbs8pUt0X8X7OoXVPmAc3mIpFrNtgWIYF
329F4HNcKRehsn8JtXQRwHZsky3h9IQoAB7y3vYe/i07c9otGtmGs7WLr8pc
zwPM/X8GSKAv30niO7frqbj9Xdy9FNuh/ZCliesWVmBUYnYXfV0OOtrLtBzl
5v7uWei/DVLl4wwYmzJ2WK725e/KSPzdOKjs83g6Gh23ncnv/ZX9tff161+N
Fn3EbAiDXHTpnw0cf/0rAd/3o8sPQzy73sjq7f00WlFps/9BkY+O9tabf6d6
Z9GW6vhQmcX/+eE//oYI6e9p/RIaeNqs8Sa9TDU7ywr/JvNzgbKbG4M6OtI9
40Oyif6oPijdDx//76tf3MnC17xMmuqubV27U+ke/HVEMe6Hv9399mtdt3O+
akoYN9Xk5qtEFlGs6zFu5mVdAaYuiQVZLGRlqjJfH+rSQWhxFecv8q5AWUiN
nqVKTOeG1m/qHrY381HVOFkvZ/1u0Tk0fS44upLVcJtSc3W5KlfvD0asGdw7
4rl9K56uFA8mvq0vlZyLbWGwafQ6l4XEmupRbV2ltshPXadSlhyS0TaVOMxl
3TX8cJblZc3xX+uUwoe//abhy58TktL3qsDSZ15kHTdZnfCvF9NrP9HFJ/p5
1JROrKfz47auFd8mEprK6S/FS1016/x2R4qmWL/Kql1tnUhZGLm5tXGz+Pp1
3tYfW3/YkrhmGDvQg8xGFtyj95tSontZOzPdrF++ph/WpRzk+XMKdVZaSSLv
w1ys1vn6a13e7lxm8rrGJD76vQLMv9L1jovqXJybqi3TCzNZ2qtu8fT1u7vT
bJCmnsuVpfMooSqi0SYq5lQI9Oe6lmbycb36RVZs0tlleb4/INd0RdU6ZZnJ
6GrO7y5FKq/7nK9iOYr+594HY715KajXbW/ndS1WWZ/24xOzT/MeyeKXbaM0
y3pbWm++2UjLTOoyiq3Gdj91P6mnVzr3v+K928v3vqeDstj8ZvEaxW//dGqt
e38Gka5yXRJYDnLTVIgik6lrBM/bKs1XNdTOzdz+Vqe26rKf8alI45tyo02b
Wyqh+T09aKtI9j9L2RNQv1EwtPvTRW9qo/7p1w8/nVuRnz/9/uLh9kLT0x/n
VfzpJBntt8tvUnWyNqsGFIWQzjW+6NJX8h61w2nrFZ50cr4v82h1EoOUTV3c
l0R7GqEc9zfTXqPRxW+0syKQ2g9kvbvkCqKl4rU1rq+K7TbwsVjR189a2Ole
126c7+Pa4/39Jdb+Li+6HX12Pr+nXueX6g/+fV7+4x+XXuRUeow6tZ2/yuRl
WyP4zVebqmX/wO/pbQmejczbVCplNM/a2yGbfFo/1SMmTYfOZPPDNbZcFUpu
+wVTLTCAiNx1094WDWpyVH+7vTCLDmwvPgGxvKi2rvd6gmVZ7ZPqnKLROF9A
M/6NKsQCcKhffzTF7H7ezH85a9+FvWjftH9mKu+Vmf/GCdRER1ZP30qO1Fym
e6gr3te16SHP6gNs5k0W+nxZ75p6uVvgD4uq+W6yWZeXbKIpw7rO5m+rFV8M
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
42ZzAgA=

-->

</rfc>

