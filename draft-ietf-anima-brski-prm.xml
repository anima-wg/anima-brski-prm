<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.2.3) -->
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-brski-prm-19" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.28.1 -->
  <front>
    <title abbrev="BRSKI-PRM">BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-19"/>
    <author initials="S." surname="Fries" fullname="Steffen Fries">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </author>
    <author initials="E." surname="Lear" fullname="Eliot Lear">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Richtistrasse 7</street>
          <city>Wallisellen</city>
          <code>8304</code>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>lear@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/</uri>
      </address>
    </author>
    <date year="2025"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA WG</workgroup>
    <abstract>
      <?line 136?>

<t>This document defines enhancements to Bootstrapping a Remote Secure Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in domains featuring no or only limited connectivity between a pledge and the domain registrar.
It specifically changes the interaction model from a pledge-initiated mode, as used in BRSKI, to a pledge-responding mode, where the pledge is in server role.
For this, BRSKI with Pledge in Responder Mode (BRSKI-PRM) introduces new endpoints for the Domain Registrar and pledge, and a new component, the Registrar-Agent, which facilitates the communication between pledge and registrar during the bootstrapping phase.
To establish the trust relation between pledge and registrar, BRSKI-PRM relies on object security rather than transport security.
This approach is agnostic to the enrollment protocol that connects the domain registrar to a Key Infrastructure (e.g., domain Certification Authority).</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-anima-brski-prm/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/anima-wg/anima-brski-prm"/>.</t>
    </note>
  </front>
  <middle>
    <?line 144?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>BRSKI as defined in <xref target="RFC8995"/> specifies a solution for secure zero-touch (automated) bootstrapping of devices (pledges) in a customer domain, which may be associated with a specific installation location.
This includes the discovery of the BRSKI registrar in the customer domain and the exchange of security information necessary to establish trust between a pledge and the domain.</t>
      <t>Security information about the customer domain, specifically the customer domain certificate, are exchanged and authenticated utilizing signed data objects, the voucher artifacts as defined in <xref target="RFC8995"/>.
In response to a voucher-request, the Manufacturer Authorized Signing Authority (MASA) issues the voucher and provides it via the domain registrar to the pledge.
<xref target="I-D.ietf-anima-rfc8366bis"/> specifies the format of the voucher artifacts, including the voucher-request artifact.</t>
      <t>For the certificate enrollment of devices, BRSKI relies on Enrollment over Secure Transport (EST, <xref target="RFC7030"/>) to request and distribute customer domain specific device certificates.
EST in turn relies for the authentication and authorization of the certification request on the credentials used by the underlying TLS between the EST client and an EST server.</t>
      <t>BRSKI addresses scenarios in which a pledge initiates the bootstrapping acting as client (referred to as initiator mode by this document).
BRSKI with Pledge in Responder Mode (BRSKI-PRM) defined in this document allows the pledge to act as server, so that it can be triggered externally and at a specific time to generate bootstrapping requests in the customer domain.
For this approach, this document:</t>
      <ul spacing="normal">
        <li>
          <t>defines additional endpoints for the domain registrar and new endpoints for the pledge to enable responder mode.</t>
        </li>
        <li>
          <t>introduces the Registrar-Agent as new component to facilitate the communication between the pledge and a domain registrar.
The Registrar-Agent may be implemented as an integrated functionality of a commissioning tool or be co-located with the domain registrar itself.
BRSKI-PRM supports the identification of the Registrar-Agent that was performing the bootstrapping allowing for accountability of the pledges installation, when the Registrar-Agent is a component used by an installer and not co-located with the domain registrar.</t>
        </li>
        <li>
          <t>specifies additional artifacts for the exchanges between a pledge acting as server, the Registrar-Agent acting as client, and the domain registrar acting as server toward the Registrar-Agent.</t>
        </li>
        <li>
          <t>allows the application of Registrar-Agent credentials to establish TLS connections to a domain registrar; these are different from the pledge IDevID credentials.</t>
        </li>
        <li>
          <t>also enables the usage of alternative transports, both IP-based and non-IP (e.g., Bluetooth-based or NFC-based communication), between the pledge and the domain registrar via the Registrar-Agent;
security is addressed at the application layer through object security with an additional signature wrapping the exchanged artifacts.</t>
        </li>
      </ul>
      <t>The term endpoint used in the context of this document is equivalent to resource in HTTP <xref target="RFC9110"/> and CoAP <xref target="RFC7252"/>; it is not used to describe a device.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
      <t>To utilize EST <xref target="RFC7030"/> for enrollment, the domain registrar performs pre-processing of the wrapping signature before actually using EST as defined in <xref target="RFC7030"/>.</t>
      <t>There may be pledges that can support both modes, initiator and responder mode.
In these cases, BRSKI-PRM can be combined with BRSKI as defined in <xref target="RFC8995"/> or BRSKI-AE <xref target="RFC9733"/> to allow for more bootstrapping flexibility.
Providing information about capabilities of BRSKI components like the pledge or registrar is handled as part of the discovery. BRSKI-PRM relies only on a minimum necessary set of capabilities for the interaction and leaves the definition of more advanced mechanisms allowing to signal specific capabilities to <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

<t>This document makes use of the terms defined in <xref section="1.2" sectionFormat="of" target="RFC8995"/>.
The following terms are defined in addition:</t>
      <dl>
        <dt>authenticated self-contained object:</dt>
        <dd>
          <t>Describes a data object, which is cryptographically bound to an end entity (EE) certificate.
The binding is assumed to be provided through a digital signature of the actual object using the corresponding private key of the certificate.</t>
        </dd>
        <dt>CA:</dt>
        <dd>
          <t>Certification Authority.
An entity, which issues certificates and maintains certificate revocation information.</t>
        </dd>
        <dt>Commissioning tool:</dt>
        <dd>
          <t>Tool to interact with devices to provide configuration data.</t>
        </dd>
        <dt>CSR:</dt>
        <dd>
          <t>Certificate Signing Request, as defined in <xref target="RFC2986"/>.</t>
        </dd>
        <dt>EE:</dt>
        <dd>
          <t>End entity, as defined in <xref target="RFC9483"/>.
Typically, a device or service that owns a public-private key pair for which it manages a public key certificate.</t>
        </dd>
        <dt>EE certificate:</dt>
        <dd>
          <t>the certificate of the EE signed by its owner (e.g., CA).
For domain components, the EE certificate is signed by the domain owner.
For the pledge, the EE certificate is either the IDevID certificate signed by the manufacturer or the LDevID certificate signed by the domain owner or an application-specific EE certificate signed by the domain owner.</t>
        </dd>
        <dt>endpoint:</dt>
        <dd>
          <t>Term equivalent to resource in HTTP <xref target="RFC9110"/>.
Endpoints are accessible via Well-Known URIs <xref target="RFC8615"/>.</t>
        </dd>
        <dt>IDevID:</dt>
        <dd>
          <t>An Initial Device Identifier X.509 certificate installed by the vendor on new equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>LDevID:</dt>
        <dd>
          <t>A Local Device Identifier X.509 certificate installed by the owner of the equipment.
This is a term from 802.1AR <xref target="IEEE-802.1AR"/>.</t>
        </dd>
        <dt>mTLS:</dt>
        <dd>
          <t>mutual Transport Layer Security, refers to mutual authenticated TLS as specified in <xref target="RFC8446"/>.</t>
        </dd>
        <dt>PER:</dt>
        <dd>
          <t>Pledge Enroll-Request is a signature-wrapped CSR, signed by the pledge that requests enrollment to a domain via the Registrar-Agent.</t>
        </dd>
        <dt>POI:</dt>
        <dd>
          <t>Proof-of-Identity, as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>POP:</dt>
        <dd>
          <t>Proof-of-Possession (of a private key), as defined in <xref target="RFC5272"/>.</t>
        </dd>
        <dt>PVR:</dt>
        <dd>
          <t>Pledge Voucher-Request is a signature-wrapped voucher-request, signed by the pledge that sends it to the domain registrar via the Registrar-Agent.</t>
        </dd>
        <dt>RA:</dt>
        <dd>
          <t>Registration Authority, an optional system component to which a CA delegates certificate management functions such as authorization checks.
In BRSKI-PRM, this is a functionality of the domain registrar, as in BRSKI <xref target="RFC8995"/>.</t>
        </dd>
        <dt>Registrar-Agent:</dt>
        <dd>
          <t>Component facilitating the data exchange between a pledge in responder mode and a domain registrar.</t>
        </dd>
        <dt>RVR:</dt>
        <dd>
          <t>Registrar Voucher-Request is a signature-wrapped voucher-request, signed by the domain registrar that sends it to the MASA.
For BRSKI-PRM, it contains a copy of the original PVR received from the pledge.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations in the given JWS-signed artifact examples:</t>
      <dl>
        <dt>BASE64(OCTETS):</dt>
        <dd>
          <t>Denotes the base64 encoding of an octet sequence using the character set defined in <xref section="4" sectionFormat="of" target="RFC4648"/> and without the inclusion of any line breaks, whitespace, or other additional characters.
Note that the base64 encoding of the empty octet sequence is the empty string.</t>
        </dd>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of an octet sequence, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octet sequence of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
      <t>This document includes many examples that would contain many long sequences of base64-encoded objects with no content directly comprehensible to a human reader.
In order to keep those examples short, they use the token <tt>base64encodedvalue==</tt> as a placeholder for base64 data.
The full base64 data is included in the appendices of this document.</t>
    </section>
    <section anchor="scope-of-solution">
      <name>Scope of Solution</name>
      <section anchor="sup-env">
        <name>Supported Environments and Use Case Examples</name>
        <t>BRSKI-PRM is applicable to scenarios where pledges may have no direct connection to a domain registrar, may have no continuous connection, or require coordination of the pledge requests to be provided to a domain registrar.</t>
        <t>This can be motivated by pledges deployed in environments not yet connected to the operational customer domain network, e.g., at a building construction site, or environments intentionally disconnected from the Internet, e.g., critical industrial facilities.
Another example is the assembly of electrical cabinets, which are prepared in advance before the installation at a customer domain.</t>
        <section anchor="building-automation">
          <name>Building Automation</name>
          <t>In building automation, a typical use case exists where a detached building or the basement is equipped with sensors, actuators, and controllers, but with only limited or no connection to the central building management system.
This limited connectivity may exist during installation time or also during operation time.</t>
          <t>During the installation, for instance, a service technician collects the device-specific information from the basement network and provides them to the central building management system.
This could be done using a laptop, common mobile device, or dedicated commissioning tool to transport the information.
The service technician may successively collect device-specific information in different parts of the building before connecting to the domain registrar for bulk bootstrapping.</t>
          <t>A domain registrar may be part of the central building management system and already be operational in the installation network.
The central building management system can then provide operational parameters for the specific devices in the basement or other detached areas.
These operational parameters may comprise values and settings required in the operational phase of the sensors/actuators, among them a certificate issued by the operator to authenticate against other components and services.
These operational parameters are then provided to the devices in the basement facilitated by the service technician's laptop.
The Registrar-Agent, defined in this document, may be run on the technician's laptop to interact with pledges.</t>
        </section>
        <section anchor="infrastructure-isolation-policy">
          <name>Infrastructure Isolation Policy</name>
          <t>This refers to any case in which the network infrastructure is normally isolated from the Internet as a matter of policy, most likely for security reasons.
In such a case, limited access to a domain registrar may be allowed in carefully controlled short periods of time, for example when a batch of new devices are deployed, but prohibited at other times.</t>
        </section>
        <section anchor="less-operational-security-in-the-target-domain">
          <name>Less Operational Security in the Target-Domain</name>
          <t>The registration authority (RA) performing the authorization of a certificate request is a critical PKI component and therefore requires higher operational security than other components utilizing the issued certificates.
CAs may also require higher security in the registration procedures.
There may be situations in which the customer domain does not offer enough physical security to operate an RA/CA and therefore this service is transferred to a backend that offers a higher level of operational security.</t>
        </section>
      </section>
      <section anchor="potential-limitations">
        <name>Potential Limitations</name>
        <t>The mechanism described in this document presumes the ability of the pledge and the Registrar-Agent to communicate with one another.
This may not be possible in constrained environments where, in particular, power must be conserved.
In these situations, it is anticipated that the transceiver will be powered down most of the time.
This presents a rendezvous problem: the pledge is unavailable for certain periods of time, and the Registrar-Agent is similarly presumed to be unavailable for certain periods of time.
To overcome this situation, the pledges may need to be powered on, either manually or by sending a trigger signal.</t>
      </section>
    </section>
    <section anchor="req-sol">
      <name>Requirements Discussion and Mapping to BRSKI-PRM Functional Elements</name>
      <t>Based on the intended target environment described in <xref target="sup-env"/>, the following boundary conditions are derived to support bootstrapping of pledges in responder mode (acting as server):</t>
      <ul spacing="normal">
        <li>
          <t>To facilitate the communication between a pledge in responder mode and a registrar, additional functionality is needed either on the registrar or as a stand-alone component.
This new functionality is defined as Registrar-Agent and acts as an agent of the registrar to trigger the pledge to generate requests for voucher and enrollment.
These requests are then provided by the Registrar-Agent to the registrar.
This requires the definition of pledge endpoints to allow interaction with the Registrar-Agent.</t>
        </li>
        <li>
          <t>The security of communication between the Registrar-Agent and the pledge does not rely on Transport Layer Security (TLS) to enable application of BRSKI-PRM in environments, in which the communication between the Registrar-Agent and the pledge is done over other technologies like BTLE or NFC, which may not support TLS protected communication.
In addition, the pledge does not have a certificate that can easily be verified by <xref target="RFC9525"/> methods.</t>
        </li>
        <li>
          <t>The use of authenticated self-contained objects addresses both, the TLS challenges and the technology stack challenge.</t>
        </li>
        <li>
          <t>By contrast, the Registrar-Agent can be authenticated by the registrar as a component, acting on behalf of the registrar.
In addition, the registrar must be able to verify, which Registrar-Agent was in direct contact with the pledge.</t>
        </li>
        <li>
          <t>It would be inaccurate for the voucher-request and voucher-response to use the assertion type <tt>proximity</tt> in the voucher, as the pledge was not in direct contact with the registrar for bootstrapping.
Therefore, a new assertion type is necessary for distinguishing assertions the MASA can state.</t>
        </li>
      </ul>
      <t>At least the following properties are required for the voucher and enrollment processing:</t>
      <ul spacing="normal">
        <li>
          <t>POI: provides data-origin authentication of an artifact, e.g., a voucher-request or an Enroll-Request, utilizing an existing IDevID.
Certificate updates may utilize the certificate that is to be updated.</t>
        </li>
        <li>
          <t>POP: proves that an entity possesses and controls the private key corresponding to the public key contained in the certification request, typically by adding a signature computed using the private key to the certification request.</t>
        </li>
      </ul>
      <t>Solution examples based on existing technology are provided with the focus on existing IETF RFCs:</t>
      <ul spacing="normal">
        <li>
          <t>Voucher-Requests and Vouchers as used in <xref target="RFC8995"/> already provide both, POP and POI, through a digital signature to protect the integrity of the voucher, while the corresponding signing certificate contains the identity of the signer.</t>
        </li>
        <li>
          <t>Enroll-Requests are data structures containing the information from a requester for a CA to create a certificate.
The certification request format in BRSKI is PKCS#10 <xref target="RFC2986"/>.
In PKCS#10, the structure is signed to ensure integrity protection and POP of the private key of the requester that corresponds to the contained public key.
In the application examples, this POP alone is not sufficient.
A POI is also required for the certification request and therefore the certification request needs to be additionally bound to the existing pledge IDevID credential.
This binding supports the authorization decision for the certification request and may be provided directly with the certification request.
While BRSKI uses the binding to TLS, BRSKI-PRM aims at an additional signature of the PKCS#10 using existing credentials on the pledge (IDevID). This allows the process to be independent of the selected transport.</t>
        </li>
      </ul>
    </section>
    <section anchor="architecture">
      <name>Solution Architecture</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>For BRSKI-PRM, the base system architecture defined in BRSKI <xref target="RFC8995"/> is enhanced to facilitate new use cases in which the pledge acts as server.
The responder mode allows delegated bootstrapping using a Registrar-Agent instead of a direct connection between the pledge and the domain registrar.</t>
        <t>Necessary enhancements to support authenticated self-contained objects for certificate enrollment are kept at a minimum to enable reuse of already defined architecture elements and interactions.
The format of the bootstrapping objects produced or consumed by the pledge is usually based on JSON Web Signature (JWS) <xref target="RFC7515"/> and further specified in <xref target="exchanges"/> to address the requirements stated in <xref target="req-sol"/>.
In constrained environments, it may be based on COSE <xref target="RFC9052"/>.</t>
        <t>An abstract overview of the BRSKI-PRM protocol can be found on slide 8 of <xref target="BRSKI-PRM-abstract"/>.</t>
        <t>To support mutual trust establishment between the domain registrar and pledges not directly connected to the customer domain, this document specifies the exchange of authenticated self-contained objects with the help of the Registrar-Agent.</t>
        <t>This leads to extensions of the logical components in the BRSKI architecture as shown in <xref target="uc2figure"/>.</t>
        <t>Note that the Join Proxy is not shown in the figure.
In certain situations the Join Proxy may still be present and could be used by the Registrar-Agent to connect to the Registrar.
For example, a Registrar-Agent application on a smartphone often can connect to local Wi-Fi without giving up their cellular network connection <xref target="androidnsd"/>, but only can make link-local connections.</t>
        <t>The Registrar-Agent interacts with the pledge to transfer the required data objects for bootstrapping, which are then also exchanged between the Registrar-Agent and the domain registrar.
The addition of the Registrar-Agent influences the sequences of the data exchange between the pledge and the domain registrar described in <xref target="RFC8995"/>.
To enable reuse of BRSKI defined functionality as much as possible, BRSKI-PRM:</t>
        <ul spacing="normal">
          <li>
            <t>uses existing endpoints where the required functionality is provided.</t>
          </li>
          <li>
            <t>enhances existing endpoints with new supported media types, e.g., for JWS voucher.</t>
          </li>
          <li>
            <t>defines new endpoints where additional functionality is required, e.g., for wrapped certification request, wrapped CA certificates, and new status information.</t>
          </li>
        </ul>
        <figure anchor="uc2figure">
          <name>BRSKI-PRM architecture overview using Registrar-Agent</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="464" width="456" viewBox="0 0 456 464" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,240 L 8,384" fill="none" stroke="black"/>
                <path d="M 80,240 L 80,384" fill="none" stroke="black"/>
                <path d="M 152,240 L 152,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,368 L 224,416" fill="none" stroke="black"/>
                <path d="M 256,240 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,240 L 328,336" fill="none" stroke="black"/>
                <path d="M 336,64 L 336,144" fill="none" stroke="black"/>
                <path d="M 376,152 L 376,232" fill="none" stroke="black"/>
                <path d="M 376,336 L 376,368" fill="none" stroke="black"/>
                <path d="M 424,240 L 424,336" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,416" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,144" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 8,240 L 80,240" fill="none" stroke="black"/>
                <path d="M 152,240 L 256,240" fill="none" stroke="black"/>
                <path d="M 328,240 L 424,240" fill="none" stroke="black"/>
                <path d="M 88,304 L 144,304" fill="none" stroke="black"/>
                <path d="M 264,304 L 320,304" fill="none" stroke="black"/>
                <path d="M 152,336 L 256,336" fill="none" stroke="black"/>
                <path d="M 328,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 224,368 L 424,368" fill="none" stroke="black"/>
                <path d="M 8,384 L 80,384" fill="none" stroke="black"/>
                <path d="M 224,416 L 424,416" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="384,232 372,226.4 372,237.6" fill="black" transform="rotate(90,376,232)"/>
                <polygon class="arrowhead" points="384,152 372,146.4 372,157.6" fill="black" transform="rotate(270,376,152)"/>
                <polygon class="arrowhead" points="328,304 316,298.4 316,309.6" fill="black" transform="rotate(0,320,304)"/>
                <polygon class="arrowhead" points="272,304 260,298.4 260,309.6" fill="black" transform="rotate(180,264,304)"/>
                <polygon class="arrowhead" points="152,304 140,298.4 140,309.6" fill="black" transform="rotate(0,144,304)"/>
                <polygon class="arrowhead" points="96,304 84,298.4 84,309.6" fill="black" transform="rotate(180,88,304)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="224" y="84">M</text>
                  <text x="280" y="84">anufacturer</text>
                  <text x="40" y="100">:</text>
                  <text x="224" y="100">A</text>
                  <text x="272" y="100">uthorized</text>
                  <text x="384" y="100">Ownership</text>
                  <text x="40" y="116">:</text>
                  <text x="224" y="116">S</text>
                  <text x="260" y="116">igning</text>
                  <text x="376" y="116">Tracker</text>
                  <text x="40" y="132">:</text>
                  <text x="224" y="132">A</text>
                  <text x="268" y="132">uthority</text>
                  <text x="40" y="148">:</text>
                  <text x="40" y="164">:</text>
                  <text x="40" y="180">:</text>
                  <text x="412" y="180">BRSKI-</text>
                  <text x="40" y="196">:</text>
                  <text x="404" y="196">MASA</text>
                  <text x="40" y="212">:</text>
                  <text x="248" y="212">...............................</text>
                  <text x="416" y="212">.........</text>
                  <text x="40" y="228">V</text>
                  <text x="128" y="228">.</text>
                  <text x="448" y="228">.</text>
                  <text x="128" y="244">.</text>
                  <text x="448" y="244">.</text>
                  <text x="128" y="260">.</text>
                  <text x="448" y="260">.</text>
                  <text x="44" y="276">Pledge</text>
                  <text x="116" y="276">BRSKI-</text>
                  <text x="204" y="276">Registrar-</text>
                  <text x="292" y="276">BRSKI-</text>
                  <text x="364" y="276">Domain</text>
                  <text x="448" y="276">.</text>
                  <text x="112" y="292">PRM</text>
                  <text x="184" y="292">Agent</text>
                  <text x="288" y="292">PRM</text>
                  <text x="376" y="292">Registrar</text>
                  <text x="448" y="292">.</text>
                  <text x="448" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="188" y="324">EE</text>
                  <text x="224" y="324">cert.</text>
                  <text x="356" y="324">EE</text>
                  <text x="392" y="324">cert.</text>
                  <text x="448" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="448" y="340">.</text>
                  <text x="44" y="356">IDevID</text>
                  <text x="128" y="356">.</text>
                  <text x="448" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="448" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="248" y="388">Key</text>
                  <text x="324" y="388">Infrastructure</text>
                  <text x="448" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="260" y="404">(e.g.,</text>
                  <text x="304" y="404">PKI</text>
                  <text x="336" y="404">CA)</text>
                  <text x="448" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="448" y="420">.</text>
                  <text x="288" y="436">.........................................</text>
                  <text x="260" y="452">Customer</text>
                  <text x="324" y="452">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------+-----------+
    :                    | M anufacturer |           |
    :                    | A uthorized   | Ownership |
    :                    | S igning      | Tracker   |
    :                    | A uthority    |           |
    :                    +---------------+-----------+
    :                                         ^
    :                                         | BRSKI-
    :                                         | MASA
    :          ...............................|.........
    V          .                              v        .
+--------+     .  +------------+        +-----------+  .
|        |     .  |            |        |           |  .
| Pledge | BRSKI- | Registrar- | BRSKI- | Domain    |  .
|        |  PRM   | Agent      |  PRM   | Registrar |  .
|        |<------>|            |<------>|           |  .
|        |     .  |   EE cert. |        |  EE cert. |  .
|        |     .  +------------+        +-----+-----+  .
| IDevID |     .                              |        .
|        |     .           +------------------+-----+  .
+--------+     .           | Key Infrastructure     |  .
               .           | (e.g., PKI CA)         |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t><xref target="uc2figure"/> shows the relations between the following main components:</t>
        <ul spacing="normal">
          <li>
            <t>Pledge: Is expected to respond with the necessary data objects for bootstrapping to a Registrar-Agent.
The protocol used between the pledge and the Registrar-Agent is assumed to be HTTP(S) in the context of this document.
Any other protocol can be used as long as it supports the exchange of the necessary artifacts.
This includes CoAP or protocols to be used over Bluetooth or NFC connections.
A pledge acting as server leads to the following differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>The pledge no longer initiates bootstrapping, but is discovered and triggered by a Registrar-Agent as defined in <xref target="discovery_uc2_ppa"/>.</t>
              </li>
              <li>
                <t>The pledge offers additional endpoints as defined in <xref target="pledge_component"/>, so that a Registrar-Agent can request data required for bootstrapping the pledge.</t>
              </li>
              <li>
                <t>The pledge includes additional data in the PVR, which is provided and signed by a Registrar-Agent as defined in <xref target="tpvr"/>.
This allows the registrar to identify with which Registrar-Agent the pledge was in contact (see <xref target="agt_prx"/>).</t>
              </li>
              <li>
                <t>The artifacts exchanged between the pledge and the registrar via the Registrar-Agent are authenticated self-contained objects (i.e., signature-wrapped artifacts).</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Registrar-Agent: Is a new component defined in <xref target="agent_component"/> that provides a store and forward communication path to exchange data objects between the pledge and a domain registrar.
This is for situations in which a domain registrar is not directly reachable by the pledge, which may be due to a different technology stacks or due to missing connectivity.
A Registrar-Agent acting as client leads to the following new aspects:  </t>
            <ul spacing="normal">
              <li>
                <t>The order of exchanges in the BRSKI-PRM call flow is different from that in BRSKI <xref target="RFC8995"/>, as the Registrar-Agent can trigger one or more pledges and collects the PVR and PER artifacts simultaneously as defined in <xref target="exchanges"/>.
This enables bulk bootstrapping of several devices.</t>
              </li>
              <li>
                <t>There is no trust assumption between the pledge and the Registrar-Agent as only authenticated self-contained objects are used, which are transported via the Registrar-Agent and provided either by the pledge or the domain registrar.</t>
              </li>
              <li>
                <t>The trust assumption between the Registrar-Agent and the domain registrar may be based on EE certificates that are both signed by the domain owner.</t>
              </li>
              <li>
                <t>The Registrar-Agent may be realized as stand-alone component supporting nomadic activities of a service technician moving between different installation sites.</t>
              </li>
              <li>
                <t>Alternatively, the Registrar-Agent may also be realized as co-located functionality for a registrar, to support pledges in responder mode.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Join Proxy (not shown): Has the same functionality as described in <xref target="RFC8995"/> if needed.
Note that a Registrar-Agent may use a join proxy to facilitate the TLS connection to the registrar in the same way that a BRSKI pledge would use a join proxy. This is useful in cases where the Registrar-Agent does not have full IP connectivity via the domain network or cases where it has no other means to locate the registrar on the network.</t>
          </li>
          <li>
            <t>Domain registrar: In general fulfills the same functionality regarding the bootstrapping of the pledge in a customer domain by facilitating the communication of the pledge with the MASA service and the domain key infrastructure (PKI).
However, there are also differences compared to BRSKI <xref target="RFC8995"/>:  </t>
            <ul spacing="normal">
              <li>
                <t>A BRSKI-PRM domain registrar does not interact with a pledge directly, but through the Registrar-Agent as defined in <xref target="exchanges"/>.</t>
              </li>
              <li>
                <t>A BRSKI-PRM domain registrar offers additional endpoints as defined in <xref target="registrar_component"/> to support the signature-wrapped artifacts used by BRSKI-PRM.</t>
              </li>
            </ul>
          </li>
          <li>
            <t>Vendor services: Encompass MASA and Ownership Tracker and are used as defined in <xref target="RFC8995"/>.
A MASA responsible for pledges that implement BRSKI-PRM is expected to support BRSKI-PRM extensions:  </t>
            <ul spacing="normal">
              <li>
                <t>The default format for voucher artifacts (incl. voucher-request) is JWS-signed JSON as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
              </li>
              <li>
                <t>The Agent Proximity Assertion (see <xref target="agt_prx"/>) requires additional validation steps as defined in <xref target="masa_interaction"/>.</t>
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <section anchor="arch_nomadic">
        <name>Nomadic Connectivity</name>
        <t>In one example instance of the PRM architecture as shown in <xref target="uc3figure"/>, there is no connectivity between the location in which the pledge is installed and the location of the domain registrar.
This is often the case in the building automation use case mentioned in (<xref target="building-automation"/>).</t>
        <figure anchor="uc3figure">
          <name>Registrar-Agent nomadic connectivity example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="496" width="464" viewBox="0 0 464 496" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 24,128 L 24,176" fill="none" stroke="black"/>
                <path d="M 96,128 L 96,176" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,64" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,448" fill="none" stroke="black"/>
                <path d="M 336,320 L 336,368" fill="none" stroke="black"/>
                <path d="M 384,72 L 384,312" fill="none" stroke="black"/>
                <path d="M 384,368 L 384,400" fill="none" stroke="black"/>
                <path d="M 432,32 L 432,64" fill="none" stroke="black"/>
                <path d="M 432,320 L 432,368" fill="none" stroke="black"/>
                <path d="M 432,400 L 432,448" fill="none" stroke="black"/>
                <path d="M 208,32 L 432,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 432,64" fill="none" stroke="black"/>
                <path d="M 24,128 L 96,128" fill="none" stroke="black"/>
                <path d="M 104,160 L 184,160" fill="none" stroke="black"/>
                <path d="M 24,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 336,320 L 432,320" fill="none" stroke="black"/>
                <path d="M 272,352 L 328,352" fill="none" stroke="black"/>
                <path d="M 336,368 L 432,368" fill="none" stroke="black"/>
                <path d="M 224,400 L 432,400" fill="none" stroke="black"/>
                <path d="M 224,448 L 432,448" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="392,312 380,306.4 380,317.6" fill="black" transform="rotate(90,384,312)"/>
                <polygon class="arrowhead" points="392,72 380,66.4 380,77.6" fill="black" transform="rotate(270,384,72)"/>
                <polygon class="arrowhead" points="336,352 324,346.4 324,357.6" fill="black" transform="rotate(0,328,352)"/>
                <polygon class="arrowhead" points="280,352 268,346.4 268,357.6" fill="black" transform="rotate(180,272,352)"/>
                <polygon class="arrowhead" points="192,160 180,154.4 180,165.6" fill="black" transform="rotate(0,184,160)"/>
                <polygon class="arrowhead" points="112,160 100,154.4 100,165.6" fill="black" transform="rotate(180,104,160)"/>
                <g class="text">
                  <text x="56" y="52">.....</text>
                  <text x="100" y="52">Drop</text>
                  <text x="140" y="52">Ship</text>
                  <text x="184" y="52">.....</text>
                  <text x="244" y="52">Vendor</text>
                  <text x="308" y="52">Services</text>
                  <text x="40" y="68">:</text>
                  <text x="40" y="84">:</text>
                  <text x="164" y="100">........................................</text>
                  <text x="8" y="116">.</text>
                  <text x="40" y="116">v</text>
                  <text x="320" y="116">.</text>
                  <text x="8" y="132">.</text>
                  <text x="248" y="132">.-.-.-.-.-.-.-.</text>
                  <text x="320" y="132">.</text>
                  <text x="8" y="148">.</text>
                  <text x="144" y="148">BRSKI-PRM</text>
                  <text x="192" y="148">:</text>
                  <text x="244" y="148">Registrar-</text>
                  <text x="304" y="148">:</text>
                  <text x="320" y="148">.</text>
                  <text x="8" y="164">.</text>
                  <text x="60" y="164">Pledge</text>
                  <text x="192" y="164">:</text>
                  <text x="224" y="164">Agent</text>
                  <text x="304" y="164">:</text>
                  <text x="320" y="164">.</text>
                  <text x="8" y="180">.</text>
                  <text x="116" y="180">L2</text>
                  <text x="140" y="180">or</text>
                  <text x="164" y="180">L3</text>
                  <text x="248" y="180">:-.-.-.-.-.-.-:</text>
                  <text x="320" y="180">.</text>
                  <text x="420" y="180">BRSKI-</text>
                  <text x="8" y="196">.</text>
                  <text x="140" y="196">connectivity</text>
                  <text x="216" y="196">^</text>
                  <text x="320" y="196">.</text>
                  <text x="412" y="196">MASA</text>
                  <text x="164" y="212">..........................!.............</text>
                  <text x="52" y="228">Pledge</text>
                  <text x="132" y="228">Installation</text>
                  <text x="216" y="228">!</text>
                  <text x="60" y="244">Location</text>
                  <text x="216" y="244">!</text>
                  <text x="256" y="244">Nomadic</text>
                  <text x="216" y="260">!</text>
                  <text x="276" y="260">connectivity</text>
                  <text x="216" y="276">!</text>
                  <text x="252" y="292">...........!....................</text>
                  <text x="424" y="292">.........</text>
                  <text x="128" y="308">.</text>
                  <text x="216" y="308">v</text>
                  <text x="456" y="308">.</text>
                  <text x="128" y="324">.</text>
                  <text x="208" y="324">.-.-.-.-.-.-.-.</text>
                  <text x="300" y="324">BRSKI-</text>
                  <text x="456" y="324">.</text>
                  <text x="128" y="340">.</text>
                  <text x="152" y="340">:</text>
                  <text x="204" y="340">Registrar-</text>
                  <text x="264" y="340">:</text>
                  <text x="296" y="340">PRM</text>
                  <text x="372" y="340">Domain</text>
                  <text x="456" y="340">.</text>
                  <text x="128" y="356">.</text>
                  <text x="152" y="356">:</text>
                  <text x="184" y="356">Agent</text>
                  <text x="264" y="356">:</text>
                  <text x="384" y="356">Registrar</text>
                  <text x="456" y="356">.</text>
                  <text x="128" y="372">.</text>
                  <text x="208" y="372">:-.-.-.-.-.-.-:</text>
                  <text x="456" y="372">.</text>
                  <text x="128" y="388">.</text>
                  <text x="456" y="388">.</text>
                  <text x="128" y="404">.</text>
                  <text x="456" y="404">.</text>
                  <text x="128" y="420">.</text>
                  <text x="248" y="420">Key</text>
                  <text x="324" y="420">Infrastructure</text>
                  <text x="456" y="420">.</text>
                  <text x="128" y="436">.</text>
                  <text x="260" y="436">(e.g.,</text>
                  <text x="304" y="436">PKI</text>
                  <text x="336" y="436">CA)</text>
                  <text x="456" y="436">.</text>
                  <text x="128" y="452">.</text>
                  <text x="456" y="452">.</text>
                  <text x="292" y="468">..........................................</text>
                  <text x="260" y="484">Customer</text>
                  <text x="324" y="484">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Services           |
    :                    +---------------------------+
    :                                          ^
........................................       |
.   v                                  .       |
. +--------+           .-.-.-.-.-.-.-. .       |
. |        | BRSKI-PRM : Registrar-  : .       |
. | Pledge |<--------->: Agent       : .       |
. +--------+ L2 or L3  :-.-.-.-.-.-.-: .       | BRSKI-
.          connectivity   ^            .       | MASA
..........................!.............       |
   Pledge Installation    !                    |
   Location               ! Nomadic            |
                          ! connectivity       |
                          !                    |
               ...........!....................|.........
               .          v                    v        .
               .  .-.-.-.-.-.-.-. BRSKI- +-----------+  .
               .  : Registrar-  :  PRM   | Domain    |  .
               .  : Agent       :<------>| Registrar |  .
               .  :-.-.-.-.-.-.-:        +-----+-----+  .
               .                               |        .
               .           +-------------------+-----+  .
               .           | Key Infrastructure      |  .
               .           | (e.g., PKI CA)          |  .
               .           +-------------------------+  .
               ..........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>BRSKI-PRM enables support of this case through nomadic connectivity of the Registrar-Agent.
To perform enrollment in this setup, multiple round trips of the Registrar-Agent between the pledge installation location and the domain registrar are required.</t>
        <ol spacing="normal" type="1"><li>
            <t>Connectivity to domain registrar: preparation tasks for pledge bootstrapping not part of the BRSKI-PRM protocol definition, like retrieval of list of pledges to enroll.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location: retrieve information about available pledges (IDevID), collect request objects (i.e., Pledge Voucher-Requests and Pledge Enroll-Requests using the BRSKI-PRM approach described in <xref target="tpvr"/> and <xref target="tper"/>).</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit collected request information of pledges, retrieve response objects (i.e., Voucher and Enroll-Response) using the BRSKI-PRM approach described in <xref target="pvr"/> and <xref target="per"/>.</t>
          </li>
          <li>
            <t>Connectivity to pledge installation location, provide retrieved objects to the pledges to enroll pledges and collect status using the BRSKI-PRM approach described in <xref target="voucher"/>, <xref target="cacerts"/>, and <xref target="enroll_response"/>.</t>
          </li>
          <li>
            <t>Connectivity to domain registrar, submit Voucher Status and Enrollment Status using the BRSKI-PRM approach described in <xref target="vstatus"/> and <xref target="estatus"/>.</t>
          </li>
        </ol>
        <t>Variations of this setup include cases where the Registrar-Agent uses for example, WiFi to connect to the pledge installation network, and mobile network connectivity to connect to the domain registrar.
Both connections may also be possible in a single location at the same time, based on installation building conditions.</t>
      </section>
      <section anchor="colo-regagt">
        <name>Co-located Registrar-Agent and Domain Registrar</name>
        <t>Compared to <xref target="RFC8995"/> BRSKI, pledges supporting BRSKI-PRM can be completely passive and only need to react when being requested to react by a Registrar-Agent.
In <xref target="RFC8995"/>, pledges instead need to continuously interact with a domain registrar during onboarding, through discovery, voucher exchange, and enrollment. 
This may increase the load on the domain registrar, specifically, if a larger number of pledges onboards simultaneously.</t>
        <figure anchor="uc4figure">
          <name>Registrar-Agent integrated into Domain Registrar example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="352" width="464" viewBox="0 0 464 352" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,160 L 8,208" fill="none" stroke="black"/>
                <path d="M 80,160 L 80,208" fill="none" stroke="black"/>
                <path d="M 200,32 L 200,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 216,288" fill="none" stroke="black"/>
                <path d="M 368,72 L 368,136" fill="none" stroke="black"/>
                <path d="M 368,224 L 368,256" fill="none" stroke="black"/>
                <path d="M 416,144 L 416,224" fill="none" stroke="black"/>
                <path d="M 416,256 L 416,288" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,64" fill="none" stroke="black"/>
                <path d="M 200,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 200,64 L 424,64" fill="none" stroke="black"/>
                <path d="M 208,144 L 416,144" fill="none" stroke="black"/>
                <path d="M 8,160 L 80,160" fill="none" stroke="black"/>
                <path d="M 88,192 L 200,192" fill="none" stroke="black"/>
                <path d="M 8,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 208,224 L 416,224" fill="none" stroke="black"/>
                <path d="M 216,256 L 416,256" fill="none" stroke="black"/>
                <path d="M 216,288 L 416,288" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="376,136 364,130.4 364,141.6" fill="black" transform="rotate(90,368,136)"/>
                <polygon class="arrowhead" points="376,72 364,66.4 364,77.6" fill="black" transform="rotate(270,368,72)"/>
                <polygon class="arrowhead" points="208,192 196,186.4 196,197.6" fill="black" transform="rotate(0,200,192)"/>
                <polygon class="arrowhead" points="96,192 84,186.4 84,197.6" fill="black" transform="rotate(180,88,192)"/>
                <g class="text">
                  <text x="48" y="52">.....</text>
                  <text x="92" y="52">Drop</text>
                  <text x="132" y="52">Ship</text>
                  <text x="176" y="52">.....</text>
                  <text x="236" y="52">Vendor</text>
                  <text x="296" y="52">Service</text>
                  <text x="32" y="68">:</text>
                  <text x="32" y="84">:</text>
                  <text x="32" y="100">:</text>
                  <text x="420" y="100">BRSKI-MASA</text>
                  <text x="32" y="116">:</text>
                  <text x="240" y="116">...............................</text>
                  <text x="408" y="116">.........</text>
                  <text x="32" y="132">:</text>
                  <text x="120" y="132">.</text>
                  <text x="440" y="132">.</text>
                  <text x="32" y="148">v</text>
                  <text x="120" y="148">.</text>
                  <text x="440" y="148">.</text>
                  <text x="120" y="164">.</text>
                  <text x="156" y="164">BRSKI-</text>
                  <text x="268" y="164">..............</text>
                  <text x="440" y="164">.</text>
                  <text x="120" y="180">.</text>
                  <text x="152" y="180">PRM</text>
                  <text x="216" y="180">.</text>
                  <text x="268" y="180">Registrar-</text>
                  <text x="320" y="180">.</text>
                  <text x="356" y="180">Domain</text>
                  <text x="440" y="180">.</text>
                  <text x="44" y="196">Pledge</text>
                  <text x="216" y="196">.</text>
                  <text x="248" y="196">Agent</text>
                  <text x="320" y="196">.</text>
                  <text x="368" y="196">Registrar</text>
                  <text x="440" y="196">.</text>
                  <text x="100" y="212">L2</text>
                  <text x="124" y="212">or</text>
                  <text x="148" y="212">L3</text>
                  <text x="268" y="212">..............</text>
                  <text x="440" y="212">.</text>
                  <text x="140" y="228">connectivity</text>
                  <text x="440" y="228">.</text>
                  <text x="120" y="244">.</text>
                  <text x="440" y="244">.</text>
                  <text x="120" y="260">.</text>
                  <text x="440" y="260">.</text>
                  <text x="120" y="276">.</text>
                  <text x="240" y="276">Key</text>
                  <text x="316" y="276">Infrastructure</text>
                  <text x="440" y="276">.</text>
                  <text x="120" y="292">.</text>
                  <text x="440" y="292">.</text>
                  <text x="280" y="308">.........................................</text>
                  <text x="252" y="324">Customer</text>
                  <text x="316" y="324">Domain</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                         +---------------------------+
    ..... Drop Ship .....| Vendor Service            |
    :                    +---------------------------+
    :                                         ^
    :                                         | BRSKI-MASA
    :          ...............................|.........
    :          .                              v        .
    v          .          +-------------------------+  .
 +--------+    . BRSKI-   |..............           |  .
 |        |    .  PRM     |. Registrar- . Domain    |  .
 | Pledge |<------------->|. Agent      . Registrar |  .
 +--------+ L2 or L3      |..............           |  .
            connectivity  +-------------------+-----+  .
               .                              |        .
               .           +------------------+-----+  .
               .           | Key Infrastructure     |  .
               .           +------------------------+  .
               .........................................
                            Customer Domain
]]></artwork>
          </artset>
        </figure>
        <t>The benefits of BRSKI-PRM can be achieved even without the operational complexity of stand-alone Registrar-Agents by integrating the necessary functionality of the Registrar-Agent as a module into the domain registrar as shown in <xref target="uc4figure"/> so that it can support the BRSKI-PRM communications to the pledge.</t>
      </section>
      <section anchor="agt_prx">
        <name>Agent Proximity Assertion</name>
        <t>"Agent proximity" is a statement in the PVR and the voucher that the registrar communicates via a Registrar-Agent as defined in <xref target="exchanges"/> and not directly to the pledge.
It is therefore a different assertion than "network proximity", which is defined in <xref section="3" sectionFormat="of" target="RFC8995"/>.
Hence, <xref target="I-D.ietf-anima-rfc8366bis"/> defines the additional assertion type <tt>agent-proximity</tt>.
This assertion type can be verified by the registrar and MASA during BRSKI-PRM voucher-request processing.</t>
        <t>In BRSKI, the pledge verifies POP of the registrar end-entity (EE) credentials via the TLS handshake and pins that public key as the <tt>proximity-registrar-cert</tt> into the voucher request.
This allows the MASA to verify the proximity of the pledge and registrar, facilitating a decision to assign the pledge to that domain owner.
In BRSKI, the TLS session is considered provisional until the pledge receives the voucher to verify POI.</t>
        <t>In contrast, in BRSKI-PRM the pledge has no direct connection to the registrar and <bcp14>MUST</bcp14> accept the supplied registrar EE certificate provisionally until it receives the voucher as described in <xref target="voucher"/> to verify both POP and POI.
The provisional registrar EE certificate is used for the object security along the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar available in BRSKI <xref target="RFC8995"/>.
See also <xref section="5" sectionFormat="of" target="RFC8995"/> on "provisional state".</t>
        <t>For the Agent Proximity Assertion, the Registrar-Agent EE certificate and registrar EE certificate must be signed by the same domain owner, i.e., <bcp14>MUST</bcp14> possess a common domain trust anchor in their certificate chain.
Akin to the Network Proximity Assertion in BRSKI <xref target="RFC8995"/>, the Agent Proximity Assertion provides pledge proximity evidence to the MASA.
But additionally, the Agent Proximity Assertion allows the domain registrar to be sure that the PVR supplied by the Registrar-Agent was in fact collected by the Registrar-Agent to which the registrar is connected by utilizing an agent-signed data object.</t>
      </section>
    </section>
    <section anchor="system-components">
      <name>System Components</name>
      <section anchor="agent_component">
        <name>Registrar-Agent</name>
        <t>The Registrar-Agent uses its own EE certificate and corresponding credentials (i.e., private key) for TLS client authentication and for signing agent-signed data objects.</t>
        <t>The Registrar-Agent EE certificate <bcp14>MUST</bcp14> include a SubjectKeyIdentifier as defined in <xref section="4.2.1.2" sectionFormat="of" target="RFC5280"/>, which is used as a reference within agent-signed data objects as defined in <xref target="jws-asd"/>.
Note that this is an additional requirement for issuing the Registrar-Agent EE certificate.
<xref target="RFC8995"/> has a similar requirement for the registrar EE certificate.</t>
        <t>The SubjectKeyIdentifier is used in favor of providing the complete Registrar-Agent EE certificate in agent-signed data objects to accommodate also constrained environments and reduce bandwidth needed for communication with the pledge.
In addition, it follows the recommendation from BRSKI to use SubjectKeyIdentifier in favor of a certificate fingerprint to avoid additional computations.</t>
        <t>The provisioning of the Registrar-Agent EE certificate is out of scope for this document, but may be done using its own BRSKI run or by other means such as configuration.
It is <bcp14>RECOMMENDED</bcp14> to use short-lived Registrar-Agent EE certificates in the range of days or weeks. 
This is to address the assumed nature of stand-alone Registrar-Agents as nomadic devices (see <xref target="arch_nomadic"/>) and to avoid potential misuse as outlined in <xref target="sec_cons_reg-agt"/>.</t>
        <t>Further, the Registrar-Agent requires the registrar EE certificate to provide it to the pledge.
It <bcp14>MAY</bcp14> use the certificate verified during server authentication within an initial TLS session with the registrar;
in this case, the Registrar-Agent <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., CA certificate) for the registrar EE certificate to verify the certificate chain.
Alternatively, the registrar EE certificate <bcp14>MAY</bcp14> be provided via configuration or a repository.
The registrar IP address or hostname is provided either by configuration or by using the discovery mechanism defined in <xref target="RFC8995"/> (see <xref target="discovery_uc2_reg"/>).</t>
        <t>In addition to the certificates, the Registrar-Agent is provided with the product-serial-number(s) of the pledge(s) to be bootstrapped.
This is necessary to allow for the discovery of pledges by the Registrar-Agent using DNS-SD with mDNS (see <xref target="discovery_uc2_ppa"/>).
The list may be provided by prior administrative means or the Registrar-Agent may get the information via an (out-of-band) interaction with the pledge.
For instance, <xref target="RFC9238"/> describes scanning of a QR code, where the product-serial-number would be initialized from the 12N B005 Product Serial Number data record.</t>
        <t>In summary, the following information <bcp14>MUST</bcp14> be available at the Registrar-Agent before the interaction with a pledge:</t>
        <ul spacing="normal">
          <li>
            <t>Registrar-Agent EE certificate and corresponding private key: own operational credentials to authenticate and sign agent-signed data</t>
          </li>
          <li>
            <t>Registrar EE certificate: certificate of the domain registrar to be provided to the pledge</t>
          </li>
          <li>
            <t>Serial number(s): product-serial-number(s) of pledge(s) to be bootstrapped; used for discovery</t>
          </li>
        </ul>
        <t>Further, the Registrar-Agent <bcp14>SHOULD</bcp14> have synchronized time.</t>
        <t>Finally, the Registrar-Agent <bcp14>MAY</bcp14> possess the IDevID (root or issuing) CA certificate of the pledge manufacturer/vendor to validate the IDevID certificate on returned PVR or in case of optional TLS usage for pledge communication (see <xref target="pledgehttps"/>).
The distribution of IDevID CA certificates to the Registrar-Agent is out of scope of this document and may be done by a manual configuration.</t>
        <section anchor="discovery_uc2_reg">
          <name>Discovery of the Registrar</name>
          <t>While the Registrar-Agent requires an IP address of a domain registrar to initiate a TLS session, a separate discovery of the registrar is likely not needed and a configuration of the domain registrar IP address or hostname is assumed.
Registrar-Agent and registrar are domain components that already have a trust relation, as a Registrar-Agent acts as representative of the domain registrar towards the pledge or may even be collocated with the domain registrar.
Further, other communication (not part of this document) between the Registrar-Agent and the registrar is assumed, e.g., to exchange information about product-serial-number(s) of pledges to be discovered as outlined in <xref target="arch_nomadic"/>.</t>
          <t>Moreover, the discovery described in <xref section="4" sectionFormat="of" target="RFC8995"/> and <xref section="A.2" sectionFormat="of" target="RFC8995"/> does not support identification of registrars with an enhanced feature set (like the support of BRSKI-PRM), and hence that discovery is not applicable.</t>
          <t>As a more general solution, the BRSKI discovery mechanism can be extended to provide upfront information on the capabilities of registrars, such as the mode of operation (pledge-responder-mode or registrar-responder-mode).
Defining discovery extensions is out of scope of this document.
For further discussion, see <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
        </section>
        <section anchor="discovery_uc2_ppa">
          <name>Discovery of the Pledge</name>
          <t>The discovery of the pledge by the Registrar-Agent in the context of this document describes the minimum discovery approach that <bcp14>MUST</bcp14> be supported.
A more general discovery mechanism, also supporting GRASP besides DNS-SD with mDNS, is discussed in <xref target="I-D.ietf-anima-brski-discovery"/>.</t>
          <t>Discovery in BRSKI-PRM uses DNS-based Service Discovery <xref target="RFC6763"/> over Multicast DNS <xref target="RFC6762"/> to discover the pledge.
Note that <xref section="9" sectionFormat="of" target="RFC6762"/> provides support for conflict resolution in situations when a DNS-SD with mDNS responder receives an mDNS response with inconsistent data.
Note that <xref target="RFC8990"/> does not support conflict resolution of mDNS, which may be a limitation for its application.</t>
          <t>The pledge constructs a Service Instance Name based on device local information (manufacturer/vendor name and serial number), which results in <tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>.
The product-serial-number composition is manufacturer-dependent and may contain information regarding the manufacturer, the product type, and further information specific to the product instance.
To allow distinction of pledges, the product-serial-number therefore needs to be sufficiently unique.</t>
          <t>Note that this goes against the naming recommendation of <xref target="RFC6763"/>.
The <tt>_brski-pledge._tcp</tt> service, however, targets machine-to-machine discovery.</t>
          <t>In the absence of a more general discovery as defined in <xref target="I-D.ietf-anima-brski-discovery"/> the Registrar-Agent <bcp14>MUST</bcp14> use</t>
          <ul spacing="normal">
            <li>
              <t><tt>&lt;product-serial-number&gt;._brski-pledge._tcp.local</tt>, to discover a specific pledge, e.g., when connected to a local network.</t>
            </li>
            <li>
              <t><tt>_brski-pledge._tcp.local</tt> to get a list of pledges to be bootstrapped.</t>
            </li>
          </ul>
          <t>When supporting different options for discovery, as outlined in <xref target="I-D.ietf-anima-brski-discovery"/>, a manufacturer may support configuration of preferred options.</t>
          <t>A manufacturer may allow the pledge to react on DNS-SD with mDNS discovery without its product-serial-number contained.
This allows a commissioning tool to discover pledges to be bootstrapped in the domain.
The manufacturer supports this functionality as outlined in <xref target="sec_cons_mDNS"/>.</t>
          <t>Establishing network connectivity of the pledge is out of scope of this document but necessary to apply DNS-SD with mDNS.
For Ethernet, it is provided by simply connecting the network cable.
For WiFi networks, connectivity can be provided by using a pre-agreed SSID for bootstrapping, e.g., as proposed in <xref target="I-D.draft-ietf-emu-eap-arpa"/>. 
The same approach can be used by 6LoWPAN/mesh using a pre-agreed PAN ID.
How to gain network connectivity is out of scope of this document.</t>
        </section>
      </section>
      <section anchor="pledge_component">
        <name>Pledge in Responder Mode</name>
        <t>In BRSKI-PRM, the pledge is triggered by a Registrar-Agent to create the PVR and PER.
It is also triggered for processing of the responses and the generation of status information once the Registrar-Agent has received the responses from the registrar later in the process.</t>
        <t>To enable interaction as responder with a Registrar-Agent, pledges in responder mode <bcp14>MUST</bcp14> act as servers and <bcp14>MUST</bcp14> provide the endpoints "tpvr", "tper", "svr", "scac", and "ser" defined in <xref target="pledge_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> URI path. 
The optional endpoint "qps" <bcp14>SHOULD</bcp14> be supported.
The endpoints are defined with short names to also accommodate for resource-constrained devices.</t>
        <table anchor="pledge_ep_table">
          <name>Well-Known Endpoints on a Pledge in Responder Mode</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">
                <xref target="tpvr"/></td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">
                <xref target="tper"/></td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply Voucher to Pledge</td>
              <td align="left">
                <xref target="voucher"/></td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA Certificates to Pledge</td>
              <td align="left">
                <xref target="cacerts"/></td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to Pledge</td>
              <td align="left">
                <xref target="enroll_response"/></td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query Pledge Status</td>
              <td align="left">
                <xref target="query"/></td>
            </tr>
          </tbody>
        </table>
        <t>HTTP(S) uses the Host header field (or :authority in HTTP/2) to allow for name-based virtual hosting as explained in <xref section="7.2" sectionFormat="of" target="RFC9110"/>.
This header field is mandatory, and so a compliant HTTP(S) client is going to insert it, which may be just an IP address.
In the absence of a security policy the pledge <bcp14>MUST</bcp14> respond to all requests regardless of the Host header field provided by the client (i.e., ignore it). 
A security policy  may include a rate limiting for a requests to avoid susceptibility of the pledge to overload.
Note that there is no requirement for the pledge to operate its BRSKI-PRM service on port numbers 80 or 443, so there is no reason for name-based virtual hosting.</t>
        <t>For instance, when the Registrar-Agent reaches out to the "tpvr" endpoint on a pledge in responder mode with the full URI <tt>http://pledge.example.com/.well-known/brski/tpvr</tt>, it sets the Host header field to <tt>pledge.example.com</tt> and the absolute path <tt>/.well-known/brski/tpbr</tt>.
In practice, however, the pledge is usually known by a <tt>.local</tt> hostname or only its IP address as returned by a discovery protocol, which will be included in the Host header field.</t>
        <t>As BRSKI-PRM uses authenticated self-contained objects between the pledge and the domain registrar, the binding of the pledge identity to the voucher-requests is provided by the wrapping signature employing the pledge IDevID credential.
Hence, pledges <bcp14>MUST</bcp14> have an Initial Device Identifier (IDevID) installed in them at the factory.</t>
        <section anchor="pledge-with-combined-functionality">
          <name>Pledge with Combined Functionality</name>
          <t>Pledges <bcp14>MAY</bcp14> support both initiator and responder mode.</t>
          <t>A pledge in initiator mode should listen for announcement messages as described in <xref section="4.1" sectionFormat="of" target="RFC8995"/>.
Upon discovery of a potential registrar, it initiates the bootstrapping to that registrar.
At the same time (so as to avoid the Slowloris-like attack described in <xref target="RFC8995"/>), it <bcp14>SHOULD</bcp14> also respond to the triggers for responder mode described in this document.</t>
          <t>Once a pledge with combined functionality has been bootstrapped, it <bcp14>MAY</bcp14> act as client for enrollment of further certificates needed, e.g., using the enrollment protocol of choice.
If it still acts as server, the defined BRSKI-PRM endpoints to trigger a Pledge Enroll-Request (PER) or to provide an Enroll-Response can be used for further certificates.</t>
        </section>
      </section>
      <section anchor="registrar_component">
        <name>Domain Registrar</name>
        <t>The domain registrar provides the endpoints already specified in <xref target="RFC8995"/> (derived from EST <xref target="RFC7030"/>) where suitable.
In addition, it <bcp14>MUST</bcp14> provide the endpoints defined in <xref target="registrar_ep_table"/> within the BRSKI-defined <tt>/.well-known/brski/</tt> Well-Known URI path.
These endpoints accommodate for the authenticated self-contained objects used by BRSKI-PRM to provide Pledge Enroll-Request (PER) artifacts and signature-wrapped CA certificates via the Registrar-Agent.</t>
        <table anchor="registrar_ep_table">
          <name>Additional Well-Known Endpoints on a BRSKI-PRM Registrar</name>
          <thead>
            <tr>
              <th align="left">Endpoint</th>
              <th align="left">Operation</th>
              <th align="left">Exchange and Artifacts</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to Registrar</td>
              <td align="left">
                <xref target="per"/></td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain CA Certificates</td>
              <td align="left">
                <xref target="obtain_cacerts"/></td>
            </tr>
          </tbody>
        </table>
        <t>The registrar possesses its own EE certificate and corresponding private key for authenticating and signing.
It <bcp14>MUST</bcp14> use the same certificate/credentials for authentication in the TLS session with a Registrar-Agent and for signing artifacts for that Registrar-Agent and its pledges (see <xref target="rcv_artifact"/>).</t>
        <t>According to <xref section="5.3" sectionFormat="of" target="RFC8995"/>, a domain registrar performs the pledge authorization for bootstrapping within its domain based on the Pledge Voucher-Request.
For this, it <bcp14>MUST</bcp14> possess the IDevID trust anchor(s) (i.e., root or issuing CA certificate(s)) of the pledge vendor(s)/manufacturer(s).
This behavior is retained in BRSKI-PRM.</t>
        <t>In its role as EST server <xref target="RFC7030"/>, the domain registrar <bcp14>MUST</bcp14> also possess the domain CA certificates as defined in <xref section="5.9" sectionFormat="of" target="RFC8995"/>.</t>
        <t>Finally, the domain registrar <bcp14>MUST</bcp14> possess the Registrar-Agent EE certificate(s) to validate agent-signed data and to provide it to the MASA.
The registrar <bcp14>MAY</bcp14> use the certificate verified during client authentication within the TLS sessions with the Registrar-Agent;
in this case, the registrar <bcp14>MUST</bcp14> possess the domain trust anchor (i.e., domain CA certificate) for the Registrar-Agent EE certificate to verify the certificate chain.
Alternatively, the Registrar-Agent EE certificate(s) <bcp14>MAY</bcp14> be provided via configuration or a repository.</t>
        <section anchor="domain-registrar-with-combined-functionality">
          <name>Domain Registrar with Combined Functionality</name>
          <t>A registrar with combined BRSKI and BRSKI-PRM functionality <bcp14>MAY</bcp14> detect if the bootstrapping is performed by the pledge directly (BRSKI case) or by a Registrar-Agent (BRSKI-PRM case) based on the utilized credentials for client authentication during the TLS session establishment and switch the operational mode from BRSKI to BRSKI-PRM.</t>
          <t>This may be supported by a specific naming in the SAN (subject alternative name) component of the Registrar-Agent EE certificate, which allows the domain registrar to explicitly detect already in the TLS session establishment that the connecting client is a Registrar-Agent.</t>
          <t>The registrar <bcp14>MAY</bcp14> be restricted by configuration, if it accepts every Registrar-Agent, which can authenticate with a domain issued certificate or only explicitly authorized ones.</t>
          <t>Note that using an EE certificate for TLS client authentication of the Registrar-Agent is a deviation from <xref target="RFC8995"/>, in which the pledge IDevID certificate is used to perform TLS client authentication.</t>
        </section>
      </section>
      <section anchor="masa">
        <name>MASA</name>
        <t>The Manufacturer Authorized Signing Authority (MASA) is a vendor service that generates and signs voucher artifacts for pledges by the same vendor.
When these pledges support BRSKI-PRM, the MASA needs to implement the following functionality in addition to BRSKI <xref target="RFC8995"/>.</t>
        <t>A MASA for pledges in responder mode <bcp14>MUST</bcp14> support the voucher format defined in <xref target="I-D.ietf-anima-jws-voucher"/> to parse and process JWS-signed voucher-request artifacts and generate JWS-signed voucher artifacts.</t>
        <t>Further, a MASA for pledges in responder mode <bcp14>MUST</bcp14> support the Agent Proximity Assertion (<xref target="agt_prx"/>) through the validation steps defined in <xref target="masa_interaction"/> based on the Pledge Voucher-Request (PVR) and Registrar Voucher-Request (RVR) artifact fields defined in <xref target="pvr_artifact"/> and <xref target="rvr_artifact"/>, respectively.</t>
      </section>
    </section>
    <section anchor="exchanges">
      <name>Exchanges and Artifacts</name>
      <t>The interaction of the pledge with the Registrar-Agent may be accomplished using different transports (i.e., protocols and/or network technologies).
This specification utilizes HTTP(S) as default transport.
Other specifications may define alternative transports such as CoAP, Bluetooth Low Energy (BLE), or Near Field Communication (NFC).
These transports may differ from and are independent of the ones used between the Registrar-Agent and the registrar.</t>
      <t>Transport independence is realized through authenticated self-contained objects that are not bound to a specific transport security and stay the same along the communication path from the pledge via the Registrar-Agent to the registrar.
<xref target="I-D.ietf-anima-rfc8366bis"/> defines CMS-signed JSON structures as format for artifacts representing authenticated self-contained objects.
This specification utilizes JWS-signed JSON structures as default format for BRSKI-PRM.
Other specifications may define alternative formats for representing authenticated self-contained objects such as COSE-signed CBOR structures.</t>
      <t><xref target="exchangesfig_uc2_all"/> provides an overview of the exchanges detailed in the following subsections.</t>
      <figure anchor="exchangesfig_uc2_all">
        <name>Overview pledge-responder-mode exchanges</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1904" width="576" viewBox="0 0 576 1904" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
              <path d="M 16,88 L 16,192" fill="none" stroke="black"/>
              <path d="M 16,256 L 16,320" fill="none" stroke="black"/>
              <path d="M 16,384 L 16,448" fill="none" stroke="black"/>
              <path d="M 16,512 L 16,800" fill="none" stroke="black"/>
              <path d="M 16,864 L 16,960" fill="none" stroke="black"/>
              <path d="M 16,1024 L 16,1072" fill="none" stroke="black"/>
              <path d="M 16,1136 L 16,1200" fill="none" stroke="black"/>
              <path d="M 16,1264 L 16,1312" fill="none" stroke="black"/>
              <path d="M 16,1376 L 16,1440" fill="none" stroke="black"/>
              <path d="M 16,1504 L 16,1632" fill="none" stroke="black"/>
              <path d="M 16,1696 L 16,1744" fill="none" stroke="black"/>
              <path d="M 16,1808 L 16,1872" fill="none" stroke="black"/>
              <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
              <path d="M 168,88 L 168,192" fill="none" stroke="black"/>
              <path d="M 168,256 L 168,320" fill="none" stroke="black"/>
              <path d="M 168,384 L 168,448" fill="none" stroke="black"/>
              <path d="M 168,512 L 168,800" fill="none" stroke="black"/>
              <path d="M 168,864 L 168,960" fill="none" stroke="black"/>
              <path d="M 168,1024 L 168,1072" fill="none" stroke="black"/>
              <path d="M 168,1136 L 168,1200" fill="none" stroke="black"/>
              <path d="M 168,1264 L 168,1312" fill="none" stroke="black"/>
              <path d="M 168,1376 L 168,1440" fill="none" stroke="black"/>
              <path d="M 168,1504 L 168,1632" fill="none" stroke="black"/>
              <path d="M 168,1696 L 168,1744" fill="none" stroke="black"/>
              <path d="M 168,1808 L 168,1872" fill="none" stroke="black"/>
              <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
              <path d="M 312,88 L 312,192" fill="none" stroke="black"/>
              <path d="M 312,256 L 312,320" fill="none" stroke="black"/>
              <path d="M 312,384 L 312,448" fill="none" stroke="black"/>
              <path d="M 312,512 L 312,544" fill="none" stroke="black"/>
              <path d="M 312,592 L 312,624" fill="none" stroke="black"/>
              <path d="M 312,656 L 312,800" fill="none" stroke="black"/>
              <path d="M 312,864 L 312,960" fill="none" stroke="black"/>
              <path d="M 312,1024 L 312,1072" fill="none" stroke="black"/>
              <path d="M 312,1136 L 312,1200" fill="none" stroke="black"/>
              <path d="M 312,1264 L 312,1312" fill="none" stroke="black"/>
              <path d="M 312,1376 L 312,1440" fill="none" stroke="black"/>
              <path d="M 312,1504 L 312,1600" fill="none" stroke="black"/>
              <path d="M 312,1696 L 312,1744" fill="none" stroke="black"/>
              <path d="M 312,1808 L 312,1872" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
              <path d="M 456,88 L 456,192" fill="none" stroke="black"/>
              <path d="M 456,256 L 456,320" fill="none" stroke="black"/>
              <path d="M 456,384 L 456,448" fill="none" stroke="black"/>
              <path d="M 456,512 L 456,664" fill="none" stroke="black"/>
              <path d="M 456,784 L 456,800" fill="none" stroke="black"/>
              <path d="M 456,864 L 456,960" fill="none" stroke="black"/>
              <path d="M 456,1024 L 456,1072" fill="none" stroke="black"/>
              <path d="M 456,1136 L 456,1200" fill="none" stroke="black"/>
              <path d="M 456,1264 L 456,1312" fill="none" stroke="black"/>
              <path d="M 456,1376 L 456,1440" fill="none" stroke="black"/>
              <path d="M 456,1504 L 456,1544" fill="none" stroke="black"/>
              <path d="M 456,1600 L 456,1632" fill="none" stroke="black"/>
              <path d="M 456,1696 L 456,1744" fill="none" stroke="black"/>
              <path d="M 456,1808 L 456,1872" fill="none" stroke="black"/>
              <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
              <path d="M 560,88 L 560,192" fill="none" stroke="black"/>
              <path d="M 560,256 L 560,320" fill="none" stroke="black"/>
              <path d="M 560,384 L 560,448" fill="none" stroke="black"/>
              <path d="M 560,512 L 560,704" fill="none" stroke="black"/>
              <path d="M 560,752 L 560,800" fill="none" stroke="black"/>
              <path d="M 560,864 L 560,960" fill="none" stroke="black"/>
              <path d="M 560,1024 L 560,1072" fill="none" stroke="black"/>
              <path d="M 560,1136 L 560,1200" fill="none" stroke="black"/>
              <path d="M 560,1264 L 560,1312" fill="none" stroke="black"/>
              <path d="M 560,1376 L 560,1440" fill="none" stroke="black"/>
              <path d="M 560,1504 L 560,1632" fill="none" stroke="black"/>
              <path d="M 560,1696 L 560,1744" fill="none" stroke="black"/>
              <path d="M 560,1808 L 560,1872" fill="none" stroke="black"/>
              <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
              <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
              <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
              <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
              <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
              <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
              <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
              <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
              <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
              <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
              <path d="M 24,160 L 160,160" fill="none" stroke="black"/>
              <path d="M 24,176 L 160,176" fill="none" stroke="black"/>
              <path d="M 24,272 L 56,272" fill="none" stroke="black"/>
              <path d="M 128,272 L 160,272" fill="none" stroke="black"/>
              <path d="M 24,288 L 72,288" fill="none" stroke="black"/>
              <path d="M 112,288 L 160,288" fill="none" stroke="black"/>
              <path d="M 24,304 L 80,304" fill="none" stroke="black"/>
              <path d="M 112,304 L 160,304" fill="none" stroke="black"/>
              <path d="M 24,400 L 56,400" fill="none" stroke="black"/>
              <path d="M 128,400 L 160,400" fill="none" stroke="black"/>
              <path d="M 24,416 L 72,416" fill="none" stroke="black"/>
              <path d="M 112,416 L 160,416" fill="none" stroke="black"/>
              <path d="M 24,432 L 80,432" fill="none" stroke="black"/>
              <path d="M 112,432 L 160,432" fill="none" stroke="black"/>
              <path d="M 176,528 L 216,528" fill="none" stroke="black"/>
              <path d="M 256,528 L 304,528" fill="none" stroke="black"/>
              <path d="M 176,608 L 224,608" fill="none" stroke="black"/>
              <path d="M 256,608 L 304,608" fill="none" stroke="black"/>
              <path d="M 320,672 L 416,672" fill="none" stroke="black"/>
              <path d="M 456,672 L 552,672" fill="none" stroke="black"/>
              <path d="M 320,688 L 424,688" fill="none" stroke="black"/>
              <path d="M 456,688 L 552,688" fill="none" stroke="black"/>
              <path d="M 320,768 L 408,768" fill="none" stroke="black"/>
              <path d="M 472,768 L 552,768" fill="none" stroke="black"/>
              <path d="M 176,784 L 208,784" fill="none" stroke="black"/>
              <path d="M 280,784 L 304,784" fill="none" stroke="black"/>
              <path d="M 176,880 L 216,880" fill="none" stroke="black"/>
              <path d="M 256,880 L 304,880" fill="none" stroke="black"/>
              <path d="M 176,896 L 224,896" fill="none" stroke="black"/>
              <path d="M 256,896 L 304,896" fill="none" stroke="black"/>
              <path d="M 320,912 L 344,912" fill="none" stroke="black"/>
              <path d="M 424,912 L 448,912" fill="none" stroke="black"/>
              <path d="M 320,928 L 336,928" fill="none" stroke="black"/>
              <path d="M 176,944 L 192,944" fill="none" stroke="black"/>
              <path d="M 288,944 L 304,944" fill="none" stroke="black"/>
              <path d="M 176,1040 L 216,1040" fill="none" stroke="black"/>
              <path d="M 256,1040 L 304,1040" fill="none" stroke="black"/>
              <path d="M 176,1056 L 208,1056" fill="none" stroke="black"/>
              <path d="M 272,1056 L 304,1056" fill="none" stroke="black"/>
              <path d="M 24,1152 L 56,1152" fill="none" stroke="black"/>
              <path d="M 128,1152 L 160,1152" fill="none" stroke="black"/>
              <path d="M 24,1168 L 64,1168" fill="none" stroke="black"/>
              <path d="M 136,1168 L 160,1168" fill="none" stroke="black"/>
              <path d="M 24,1184 L 64,1184" fill="none" stroke="black"/>
              <path d="M 128,1184 L 160,1184" fill="none" stroke="black"/>
              <path d="M 24,1280 L 56,1280" fill="none" stroke="black"/>
              <path d="M 128,1280 L 160,1280" fill="none" stroke="black"/>
              <path d="M 24,1296 L 64,1296" fill="none" stroke="black"/>
              <path d="M 128,1296 L 160,1296" fill="none" stroke="black"/>
              <path d="M 24,1392 L 56,1392" fill="none" stroke="black"/>
              <path d="M 128,1392 L 160,1392" fill="none" stroke="black"/>
              <path d="M 24,1408 L 48,1408" fill="none" stroke="black"/>
              <path d="M 144,1408 L 160,1408" fill="none" stroke="black"/>
              <path d="M 24,1424 L 56,1424" fill="none" stroke="black"/>
              <path d="M 120,1424 L 160,1424" fill="none" stroke="black"/>
              <path d="M 176,1520 L 216,1520" fill="none" stroke="black"/>
              <path d="M 256,1520 L 304,1520" fill="none" stroke="black"/>
              <path d="M 176,1536 L 208,1536" fill="none" stroke="black"/>
              <path d="M 272,1536 L 304,1536" fill="none" stroke="black"/>
              <path d="M 320,1552 L 416,1552" fill="none" stroke="black"/>
              <path d="M 456,1552 L 552,1552" fill="none" stroke="black"/>
              <path d="M 320,1568 L 352,1568" fill="none" stroke="black"/>
              <path d="M 520,1568 L 552,1568" fill="none" stroke="black"/>
              <path d="M 320,1584 L 368,1584" fill="none" stroke="black"/>
              <path d="M 504,1584 L 552,1584" fill="none" stroke="black"/>
              <path d="M 176,1712 L 216,1712" fill="none" stroke="black"/>
              <path d="M 256,1712 L 304,1712" fill="none" stroke="black"/>
              <path d="M 176,1728 L 208,1728" fill="none" stroke="black"/>
              <path d="M 272,1728 L 304,1728" fill="none" stroke="black"/>
              <path d="M 24,1824 L 56,1824" fill="none" stroke="black"/>
              <path d="M 128,1824 L 160,1824" fill="none" stroke="black"/>
              <path d="M 24,1840 L 64,1840" fill="none" stroke="black"/>
              <path d="M 128,1840 L 160,1840" fill="none" stroke="black"/>
              <path d="M 24,1856 L 64,1856" fill="none" stroke="black"/>
              <path d="M 128,1856 L 160,1856" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="560,1568 548,1562.4 548,1573.6" fill="black" transform="rotate(0,552,1568)"/>
              <polygon class="arrowhead" points="560,1552 548,1546.4 548,1557.6" fill="black" transform="rotate(0,552,1552)"/>
              <polygon class="arrowhead" points="560,688 548,682.4 548,693.6" fill="black" transform="rotate(0,552,688)"/>
              <polygon class="arrowhead" points="560,672 548,666.4 548,677.6" fill="black" transform="rotate(0,552,672)"/>
              <polygon class="arrowhead" points="456,912 444,906.4 444,917.6" fill="black" transform="rotate(0,448,912)"/>
              <polygon class="arrowhead" points="328,1584 316,1578.4 316,1589.6" fill="black" transform="rotate(180,320,1584)"/>
              <polygon class="arrowhead" points="328,1552 316,1546.4 316,1557.6" fill="black" transform="rotate(180,320,1552)"/>
              <polygon class="arrowhead" points="328,928 316,922.4 316,933.6" fill="black" transform="rotate(180,320,928)"/>
              <polygon class="arrowhead" points="328,768 316,762.4 316,773.6" fill="black" transform="rotate(180,320,768)"/>
              <polygon class="arrowhead" points="328,672 316,666.4 316,677.6" fill="black" transform="rotate(180,320,672)"/>
              <polygon class="arrowhead" points="312,1728 300,1722.4 300,1733.6" fill="black" transform="rotate(0,304,1728)"/>
              <polygon class="arrowhead" points="312,1712 300,1706.4 300,1717.6" fill="black" transform="rotate(0,304,1712)"/>
              <polygon class="arrowhead" points="312,1536 300,1530.4 300,1541.6" fill="black" transform="rotate(0,304,1536)"/>
              <polygon class="arrowhead" points="312,1520 300,1514.4 300,1525.6" fill="black" transform="rotate(0,304,1520)"/>
              <polygon class="arrowhead" points="312,1040 300,1034.4 300,1045.6" fill="black" transform="rotate(0,304,1040)"/>
              <polygon class="arrowhead" points="312,896 300,890.4 300,901.6" fill="black" transform="rotate(0,304,896)"/>
              <polygon class="arrowhead" points="312,880 300,874.4 300,885.6" fill="black" transform="rotate(0,304,880)"/>
              <polygon class="arrowhead" points="312,608 300,602.4 300,613.6" fill="black" transform="rotate(0,304,608)"/>
              <polygon class="arrowhead" points="312,528 300,522.4 300,533.6" fill="black" transform="rotate(0,304,528)"/>
              <polygon class="arrowhead" points="184,1712 172,1706.4 172,1717.6" fill="black" transform="rotate(180,176,1712)"/>
              <polygon class="arrowhead" points="184,1520 172,1514.4 172,1525.6" fill="black" transform="rotate(180,176,1520)"/>
              <polygon class="arrowhead" points="184,1056 172,1050.4 172,1061.6" fill="black" transform="rotate(180,176,1056)"/>
              <polygon class="arrowhead" points="184,1040 172,1034.4 172,1045.6" fill="black" transform="rotate(180,176,1040)"/>
              <polygon class="arrowhead" points="184,944 172,938.4 172,949.6" fill="black" transform="rotate(180,176,944)"/>
              <polygon class="arrowhead" points="184,880 172,874.4 172,885.6" fill="black" transform="rotate(180,176,880)"/>
              <polygon class="arrowhead" points="184,784 172,778.4 172,789.6" fill="black" transform="rotate(180,176,784)"/>
              <polygon class="arrowhead" points="184,528 172,522.4 172,533.6" fill="black" transform="rotate(180,176,528)"/>
              <polygon class="arrowhead" points="168,1856 156,1850.4 156,1861.6" fill="black" transform="rotate(0,160,1856)"/>
              <polygon class="arrowhead" points="168,1824 156,1818.4 156,1829.6" fill="black" transform="rotate(0,160,1824)"/>
              <polygon class="arrowhead" points="168,1424 156,1418.4 156,1429.6" fill="black" transform="rotate(0,160,1424)"/>
              <polygon class="arrowhead" points="168,1392 156,1386.4 156,1397.6" fill="black" transform="rotate(0,160,1392)"/>
              <polygon class="arrowhead" points="168,1280 156,1274.4 156,1285.6" fill="black" transform="rotate(0,160,1280)"/>
              <polygon class="arrowhead" points="168,1184 156,1178.4 156,1189.6" fill="black" transform="rotate(0,160,1184)"/>
              <polygon class="arrowhead" points="168,1152 156,1146.4 156,1157.6" fill="black" transform="rotate(0,160,1152)"/>
              <polygon class="arrowhead" points="168,432 156,426.4 156,437.6" fill="black" transform="rotate(0,160,432)"/>
              <polygon class="arrowhead" points="168,400 156,394.4 156,405.6" fill="black" transform="rotate(0,160,400)"/>
              <polygon class="arrowhead" points="168,304 156,298.4 156,309.6" fill="black" transform="rotate(0,160,304)"/>
              <polygon class="arrowhead" points="168,272 156,266.4 156,277.6" fill="black" transform="rotate(0,160,272)"/>
              <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
              <polygon class="arrowhead" points="32,1840 20,1834.4 20,1845.6" fill="black" transform="rotate(180,24,1840)"/>
              <polygon class="arrowhead" points="32,1824 20,1818.4 20,1829.6" fill="black" transform="rotate(180,24,1824)"/>
              <polygon class="arrowhead" points="32,1408 20,1402.4 20,1413.6" fill="black" transform="rotate(180,24,1408)"/>
              <polygon class="arrowhead" points="32,1392 20,1386.4 20,1397.6" fill="black" transform="rotate(180,24,1392)"/>
              <polygon class="arrowhead" points="32,1296 20,1290.4 20,1301.6" fill="black" transform="rotate(180,24,1296)"/>
              <polygon class="arrowhead" points="32,1280 20,1274.4 20,1285.6" fill="black" transform="rotate(180,24,1280)"/>
              <polygon class="arrowhead" points="32,1168 20,1162.4 20,1173.6" fill="black" transform="rotate(180,24,1168)"/>
              <polygon class="arrowhead" points="32,1152 20,1146.4 20,1157.6" fill="black" transform="rotate(180,24,1152)"/>
              <polygon class="arrowhead" points="32,416 20,410.4 20,421.6" fill="black" transform="rotate(180,24,416)"/>
              <polygon class="arrowhead" points="32,400 20,394.4 20,405.6" fill="black" transform="rotate(180,24,400)"/>
              <polygon class="arrowhead" points="32,288 20,282.4 20,293.6" fill="black" transform="rotate(180,24,288)"/>
              <polygon class="arrowhead" points="32,272 20,266.4 20,277.6" fill="black" transform="rotate(180,24,272)"/>
              <polygon class="arrowhead" points="32,160 20,154.4 20,165.6" fill="black" transform="rotate(180,24,160)"/>
              <g class="text">
                <text x="44" y="52">Pledge</text>
                <text x="172" y="52">Registrar-</text>
                <text x="308" y="52">Domain</text>
                <text x="432" y="52">Key</text>
                <text x="540" y="52">MASA</text>
                <text x="168" y="68">Agent</text>
                <text x="312" y="68">Registrar</text>
                <text x="436" y="68">Infra.</text>
                <text x="516" y="100">Internet</text>
                <text x="92" y="116">discover</text>
                <text x="92" y="132">pledge</text>
                <text x="68" y="148">mDNS</text>
                <text x="112" y="148">query</text>
                <text x="16" y="212">~</text>
                <text x="168" y="212">~</text>
                <text x="312" y="212">~</text>
                <text x="456" y="212">~</text>
                <text x="560" y="212">~</text>
                <text x="16" y="228">(1)</text>
                <text x="64" y="228">Trigger</text>
                <text x="124" y="228">Pledge</text>
                <text x="216" y="228">Voucher-Request</text>
                <text x="16" y="244">~</text>
                <text x="168" y="244">~</text>
                <text x="312" y="244">~</text>
                <text x="456" y="244">~</text>
                <text x="560" y="244">~</text>
                <text x="76" y="276">opt.</text>
                <text x="112" y="276">TLS</text>
                <text x="92" y="292">tPVR</text>
                <text x="96" y="308">PVR</text>
                <text x="16" y="340">~</text>
                <text x="168" y="340">~</text>
                <text x="312" y="340">~</text>
                <text x="456" y="340">~</text>
                <text x="560" y="340">~</text>
                <text x="16" y="356">(2)</text>
                <text x="64" y="356">Trigger</text>
                <text x="124" y="356">Pledge</text>
                <text x="212" y="356">Enroll-Request</text>
                <text x="16" y="372">~</text>
                <text x="168" y="372">~</text>
                <text x="312" y="372">~</text>
                <text x="456" y="372">~</text>
                <text x="560" y="372">~</text>
                <text x="76" y="404">opt.</text>
                <text x="112" y="404">TLS</text>
                <text x="92" y="420">tPER</text>
                <text x="96" y="436">PER</text>
                <text x="16" y="468">~</text>
                <text x="168" y="468">~</text>
                <text x="312" y="468">~</text>
                <text x="456" y="468">~</text>
                <text x="560" y="468">~</text>
                <text x="16" y="484">(3)</text>
                <text x="60" y="484">Supply</text>
                <text x="104" y="484">PVR</text>
                <text x="132" y="484">to</text>
                <text x="184" y="484">Registrar</text>
                <text x="268" y="484">(including</text>
                <text x="332" y="484">MASA</text>
                <text x="404" y="484">interaction)</text>
                <text x="16" y="500">~</text>
                <text x="168" y="500">~</text>
                <text x="312" y="500">~</text>
                <text x="456" y="500">~</text>
                <text x="560" y="500">~</text>
                <text x="236" y="532">mTLS</text>
                <text x="308" y="564">[Registrar-Agent</text>
                <text x="308" y="580">authenticated&amp;authorized?]</text>
                <text x="240" y="612">PVR</text>
                <text x="280" y="644">[accept</text>
                <text x="348" y="644">device?]</text>
                <text x="436" y="676">mTLS</text>
                <text x="440" y="692">RVR</text>
                <text x="456" y="708">~</text>
                <text x="460" y="724">[extract</text>
                <text x="536" y="724">DomainID]</text>
                <text x="456" y="740">[update</text>
                <text x="532" y="740">audit-log]</text>
                <text x="456" y="756">~</text>
                <text x="440" y="772">Voucher</text>
                <text x="244" y="788">Voucher'</text>
                <text x="16" y="820">~</text>
                <text x="168" y="820">~</text>
                <text x="312" y="820">~</text>
                <text x="456" y="820">~</text>
                <text x="560" y="820">~</text>
                <text x="16" y="836">(4)</text>
                <text x="60" y="836">Supply</text>
                <text x="104" y="836">PER</text>
                <text x="132" y="836">to</text>
                <text x="184" y="836">Registrar</text>
                <text x="268" y="836">(including</text>
                <text x="328" y="836">Key</text>
                <text x="404" y="836">Infrastructure</text>
                <text x="516" y="836">interaction)</text>
                <text x="16" y="852">~</text>
                <text x="168" y="852">~</text>
                <text x="312" y="852">~</text>
                <text x="456" y="852">~</text>
                <text x="560" y="852">~</text>
                <text x="236" y="884">mTLS</text>
                <text x="240" y="900">PER</text>
                <text x="384" y="916">[Request]</text>
                <text x="396" y="932">[Certificate]-</text>
                <text x="240" y="948">Enroll-Resp</text>
                <text x="16" y="980">~</text>
                <text x="168" y="980">~</text>
                <text x="312" y="980">~</text>
                <text x="456" y="980">~</text>
                <text x="560" y="980">~</text>
                <text x="16" y="996">(5)</text>
                <text x="60" y="996">Obtain</text>
                <text x="100" y="996">CA</text>
                <text x="164" y="996">Certificates</text>
                <text x="16" y="1012">~</text>
                <text x="168" y="1012">~</text>
                <text x="312" y="1012">~</text>
                <text x="456" y="1012">~</text>
                <text x="560" y="1012">~</text>
                <text x="236" y="1044">mTLS</text>
                <text x="240" y="1060">caCerts</text>
                <text x="16" y="1092">~</text>
                <text x="168" y="1092">~</text>
                <text x="312" y="1092">~</text>
                <text x="456" y="1092">~</text>
                <text x="560" y="1092">~</text>
                <text x="16" y="1108">(6)</text>
                <text x="60" y="1108">Supply</text>
                <text x="120" y="1108">Voucher</text>
                <text x="164" y="1108">to</text>
                <text x="204" y="1108">Pledge</text>
                <text x="16" y="1124">~</text>
                <text x="168" y="1124">~</text>
                <text x="312" y="1124">~</text>
                <text x="456" y="1124">~</text>
                <text x="560" y="1124">~</text>
                <text x="76" y="1156">opt.</text>
                <text x="112" y="1156">TLS</text>
                <text x="100" y="1172">Voucher'</text>
                <text x="96" y="1188">vStatus</text>
                <text x="16" y="1220">~</text>
                <text x="168" y="1220">~</text>
                <text x="312" y="1220">~</text>
                <text x="456" y="1220">~</text>
                <text x="560" y="1220">~</text>
                <text x="16" y="1236">(7)</text>
                <text x="60" y="1236">Supply</text>
                <text x="100" y="1236">CA</text>
                <text x="164" y="1236">Certificates</text>
                <text x="228" y="1236">to</text>
                <text x="268" y="1236">Pledge</text>
                <text x="16" y="1252">~</text>
                <text x="168" y="1252">~</text>
                <text x="312" y="1252">~</text>
                <text x="456" y="1252">~</text>
                <text x="560" y="1252">~</text>
                <text x="76" y="1284">opt.</text>
                <text x="112" y="1284">TLS</text>
                <text x="96" y="1300">caCerts</text>
                <text x="16" y="1332">~</text>
                <text x="168" y="1332">~</text>
                <text x="312" y="1332">~</text>
                <text x="456" y="1332">~</text>
                <text x="560" y="1332">~</text>
                <text x="16" y="1348">(8)</text>
                <text x="60" y="1348">Supply</text>
                <text x="152" y="1348">Enroll-Response</text>
                <text x="228" y="1348">to</text>
                <text x="268" y="1348">Pledge</text>
                <text x="16" y="1364">~</text>
                <text x="168" y="1364">~</text>
                <text x="312" y="1364">~</text>
                <text x="456" y="1364">~</text>
                <text x="560" y="1364">~</text>
                <text x="76" y="1396">opt.</text>
                <text x="112" y="1396">TLS</text>
                <text x="96" y="1412">Enroll-Resp</text>
                <text x="88" y="1428">eStatus</text>
                <text x="16" y="1460">~</text>
                <text x="168" y="1460">~</text>
                <text x="312" y="1460">~</text>
                <text x="456" y="1460">~</text>
                <text x="560" y="1460">~</text>
                <text x="16" y="1476">(9)</text>
                <text x="64" y="1476">Voucher</text>
                <text x="124" y="1476">Status</text>
                <text x="192" y="1476">Telemetry</text>
                <text x="276" y="1476">(including</text>
                <text x="352" y="1476">backend</text>
                <text x="436" y="1476">interaction)</text>
                <text x="16" y="1492">~</text>
                <text x="168" y="1492">~</text>
                <text x="312" y="1492">~</text>
                <text x="456" y="1492">~</text>
                <text x="560" y="1492">~</text>
                <text x="236" y="1524">mTLS</text>
                <text x="240" y="1540">vStatus</text>
                <text x="436" y="1556">mTLS</text>
                <text x="368" y="1572">req</text>
                <text x="412" y="1572">device</text>
                <text x="480" y="1572">audit-log</text>
                <text x="396" y="1588">device</text>
                <text x="464" y="1588">audit-log</text>
                <text x="264" y="1620">[verify</text>
                <text x="340" y="1620">audit-log]</text>
                <text x="312" y="1636">|</text>
                <text x="16" y="1652">~</text>
                <text x="168" y="1652">~</text>
                <text x="312" y="1652">~</text>
                <text x="456" y="1652">~</text>
                <text x="560" y="1652">~</text>
                <text x="20" y="1668">(10)</text>
                <text x="68" y="1668">Enroll</text>
                <text x="124" y="1668">Status</text>
                <text x="192" y="1668">Telemetry</text>
                <text x="16" y="1684">~</text>
                <text x="168" y="1684">~</text>
                <text x="312" y="1684">~</text>
                <text x="456" y="1684">~</text>
                <text x="560" y="1684">~</text>
                <text x="236" y="1716">mTLS</text>
                <text x="240" y="1732">eStatus</text>
                <text x="16" y="1764">~</text>
                <text x="168" y="1764">~</text>
                <text x="312" y="1764">~</text>
                <text x="456" y="1764">~</text>
                <text x="560" y="1764">~</text>
                <text x="20" y="1780">(11)</text>
                <text x="64" y="1780">Query</text>
                <text x="116" y="1780">Pledge</text>
                <text x="172" y="1780">Status</text>
                <text x="16" y="1796">~</text>
                <text x="168" y="1796">~</text>
                <text x="312" y="1796">~</text>
                <text x="456" y="1796">~</text>
                <text x="560" y="1796">~</text>
                <text x="76" y="1828">opt.</text>
                <text x="112" y="1828">TLS</text>
                <text x="96" y="1844">tStatus</text>
                <text x="96" y="1860">pStatus</text>
                <text x="16" y="1892">~</text>
                <text x="168" y="1892">~</text>
                <text x="312" y="1892">~</text>
                <text x="456" y="1892">~</text>
                <text x="560" y="1892">~</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 |     discover     |                 |                 |            |
 |      pledge      |                 |                 |            |
 |    mDNS query    |                 |                 |            |
 |<-----------------|                 |                 |            |
 |----------------->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including MASA interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<-----------(mTLS)----------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
        </artset>
      </figure>
      <t>The following subsections split the interactions shown in <xref target="exchangesfig_uc2_all"/> between the different components into:</t>
      <ol spacing="normal" type="1"><li>
          <t><xref target="tpvr"/> describes the acquisition exchange for the Pledge Voucher-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="tper"/> describes the acquisition exchange for the Pledge Enroll-Request initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="pvr"/> describes the issuing exchange for the Voucher initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA using the RVR <xref target="rvr_artifact"/>, as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="per"/> describes the enroll exchange initiated by the Registrar-Agent to the registrar including the interaction of the registrar with the CA using the PER as well as the artifact processing by these entities.</t>
        </li>
        <li>
          <t><xref target="obtain_cacerts"/> describes the retrieval exchange for the optional CA certificate provisioning to the pledge initiated by the Registrar-Agent to the CA.</t>
        </li>
        <li>
          <t><xref target="voucher"/> describes the Voucher exchange initiated by the Registrar-Agent to the pledge and the returned status information.</t>
        </li>
        <li>
          <t><xref target="cacerts"/> describes the CA certificate exchange initiated by the Registrar-Agent to the pledge.</t>
        </li>
        <li>
          <t><xref target="enroll_response"/> describes the Enroll-Response exchange initiated by the Registrar-Agent to the pledge (containing a new pledge EE certificate) and the returned status information.</t>
        </li>
        <li>
          <t><xref target="vstatus"/> describes the Voucher Status telemetry exchange initiated by the Registrar-Agent to the registrar, including the interaction of the registrar with the MASA.</t>
        </li>
        <li>
          <t><xref target="estatus"/> describes the Enroll Status telemetry exchange initiated by the Registrar-Agent to the registrar.</t>
        </li>
        <li>
          <t><xref target="query"/> describes the Pledge Status exchange about the general bootstrapping state initiated by the Registrar-Agent to the pledge.</t>
        </li>
      </ol>
      <section anchor="tpvr">
        <name>Trigger Pledge Voucher-Request</name>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> begin the sequence of exchanges by sending the Pledge Voucher-Request Trigger (tPVR).
This assumes that the Registrar-Agent has already discovered the pledge, for instance as described in <xref target="discovery_uc2_ppa"/> based on DNS-SD or similar.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide transport security, e.g., privacy and peer authentication, for the exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_1"/> shows the acquisition of the Pledge Voucher-Request (PVR) and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_1">
          <name>PVR acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(1)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="216" y="132">Voucher-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPVR</text>
                  <text x="96" y="212">PVR</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(1) Trigger Pledge Voucher-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPVR-------|                 |                 |            |
 |--------PVR------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create a PVR via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tpvr</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Voucher-Request Trigger (tPVR) artifact as defined in <xref target="tpvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a valid tPVR, the pledge <bcp14>MUST</bcp14> reply with the PVR artifact as defined in <xref target="pvr_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PVR, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Note that the pledge provisionally accepts the registrar EE certificate contained in the tPVR until it receives the voucher (see <xref target="agt_prx"/>).
The pledge will take the last received tPVR for the provisional accept of the received registrar EE certificate, if it does not have the capability to store more that one registrar EE certificate.</t>
        <t>If the pledge is unable to create the PVR, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request, e.g., missing field, wrong data types, etc. or if the request is not valid JSON even though the Content-Type request header field was set to <tt>application/json</tt>.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/voucher-jws+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tpvr_artifact">
          <name>Request Artifact: Pledge Voucher-Request Trigger (tPVR)</name>
          <t>The Pledge Voucher-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing the necessary parameters for generating the Pledge Voucher-Request (PVR) artifact such that the Agent Proximity Assertion can be verified by registrar and MASA:
the registrar EE certificate and an agent-signed data object containing the product-serial-number and a timestamp.
The artifact is unsigned because at the time of receiving the tPVR, the pledge could not verify any signature.</t>
          <t>For the JSON-based format used by this specification, the tPVR artifact <bcp14>SHALL</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tpvr_CDDL_def"/>:</t>
          <figure anchor="tpvr_CDDL_def">
            <name>CDDL for Pledge Voucher-Request Trigger (pledgevoucherrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
  pledgevoucherrequesttrigger = {
    "agent-provided-proximity-registrar-cert": bytes,
    "agent-signed-data": bytes
  }
]]></artwork>
          </figure>
          <t>The <tt>agent-provided-proximity-registrar-cert</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate in X.509 v3 (DER) format.
The <tt>agent-signed-data</tt> member <bcp14>SHALL</bcp14> contain the base64-encoded JWS Agent-Signed Data as defined in <xref target="jws-asd"/>.
<xref target="tpvr_example"/> summarizes the serialization the JSON tPVR artifact:</t>
          <figure anchor="tpvr_example">
            <name>tPVR Representation in JSON</name>
            <artwork align="left"><![CDATA[
{
  "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
  "agent-signed-data": BASE64(UTF8(JWS Agent-Signed Data))
}
]]></artwork>
          </figure>
          <section anchor="jws-asd">
            <name>JWS Agent-Signed Data</name>
            <t>To enable alternative formats, the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the leaf <tt>agent-signed-data</tt> as binary.
For the JWS-signed JSON format used by this specification, the <tt>agent-signed-data</tt> leaf <bcp14>SHALL</bcp14> be a UTF-8 encoded JWS structure in "General JWS JSON Serialization Syntax" as defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/> signing the JSON Agent-Signed Data defined in <xref target="prm-asd"/>.
<xref target="asd_representation"/> summarizes this JWS structure for the <tt>agent-signed-data</tt> member of the tPVR artifact:</t>
            <figure anchor="asd_representation">
              <name>JWS Agent-Signed Data in General JWS JSON Serialization Syntax</name>
              <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Agent-Signed Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
            </figure>
            <t>The JSON Agent-Signed Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
            <section anchor="prm-asd">
              <name>JSON Agent-Signed Data</name>
              <t>The JSON Agent-Signed Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="prmasd_CDDL_def"/>:</t>
              <figure anchor="prmasd_CDDL_def">
                <name>CDDL for JSON Agent-Signed Data (prmasd)</name>
                <artwork type="cddl" align="left"><![CDATA[
  prmasd = {
    "created-on": tdate,
    "serial-number": text
  }
]]></artwork>
              </figure>
              <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tPVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>.</t>
              <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge with which the Registrar-Agent assumes to communicate as string.
The format <bcp14>MUST</bcp14> correspond to the X520SerialNumber field of IDevID certificates.</t>
              <t><xref target="prmasd_payload"/> below shows an example for the JSON Agent-Signed Data:</t>
              <figure anchor="prmasd_payload">
                <name>JSON Agent-Signed Data Example</name>
                <artwork type="json" align="left"><![CDATA[
{
  "created-on": "2021-04-16T00:00:01.000Z",
  "serial-number": "vendor-pledge4711"
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-protected-header">
              <name>JWS Protected Header</name>
              <t>The JWS Protected Header of the <tt>agent-signed-data</tt> member <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
              <ul spacing="normal">
                <li>
                  <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
                </li>
                <li>
                  <t><tt>kid</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded OCTET STRING value of the SubjectKeyIdentifier of the Registrar-Agent EE certificate as described in <xref target="agent_component"/>.</t>
                </li>
              </ul>
              <t><xref target="asd_header"/> shows an example for this JWS Protected Header:</t>
              <figure anchor="asd_header">
                <name>JWS Protected Header Example for</name>
                <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "kid": "base64encodedvalue=="
}
]]></artwork>
              </figure>
            </section>
            <section anchor="jws-signature">
              <name>JWS Signature</name>
              <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the <tt>agent-signed-data</tt> member using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            </section>
          </section>
        </section>
        <section anchor="pvr_artifact">
          <name>Response Artifact: Pledge Voucher-Request (PVR)</name>
          <t>The Pledge Voucher-Request (PVR) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing an extended Voucher-Request artifact based on <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the PVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON PVR Data defined in <xref target="pvr_data"/> in the JWS Payload.
<xref target="pvr_representation"/> summarizes the serialization of the JWS-signed JSON PVR artifact:</t>
          <figure anchor="pvr_representation">
            <name>PVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON PVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="pvr_data">
            <name>JSON PVR Data</name>
            <t>The JSON PVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaf data nodes in the YANG definition mandatory for the PVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PVR creation time.</t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a cryptographically strong pseudo-random number.</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number in the X520SerialNumber field of the pledge IDevID certificate as string as defined in <xref section="2.3.1" sectionFormat="of" target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the assertion type <tt>agent-proximity</tt> to indicate the pledge request (different from BRSKI <xref target="RFC8995"/>).</t>
              </li>
              <li>
                <t><tt>agent-provided-proximity-registrar-cert</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate provided in the tPVR by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion.</t>
              </li>
              <li>
                <t><tt>agent-signed-data</tt>: <bcp14>SHALL</bcp14> contain the same value as the <tt>agent-signed-data</tt> member in the tPVR provided by the Registrar-Agent;
enables the registrar and MASA to verify the Agent Proximity Assertion;
also enables the registrar to log which Registrar-Agent was in contact with the pledge.</t>
              </li>
            </ul>
            <t><xref target="pvr_data_example"/> shows an example for the JSON PVR Data:</t>
            <figure anchor="pvr_data_example">
              <name>JSON PVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2021-04-16T00:00:02.000Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "assertion": "agent-proximity",
     "agent-provided-proximity-registrar-cert": "base64encodedvalue==",
     "agent-signed-data": "base64encodedvalue=="
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-1">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-1">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PVR artifact using its IDevID credential following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="tper">
        <name>Trigger Pledge Enroll-Request</name>
        <t>Once the Registrar-Agent has received the PVR it can trigger the pledge to generate a Pledge Enroll-Request (PER).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_2"/> shows the acquisition of the PER and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_2">
          <name>PER acquisition exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 72,192" fill="none" stroke="black"/>
                <path d="M 112,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 112,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(2)</text>
                  <text x="64" y="132">Trigger</text>
                  <text x="124" y="132">Pledge</text>
                  <text x="212" y="132">Enroll-Request</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="92" y="196">tPER</text>
                  <text x="96" y="212">PER</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(2) Trigger Pledge Enroll-Request
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<------tPER-------|                 |                 |            |
 |--------PER------>|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> trigger the pledge to create the PER via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/tper</tt>.
The request body <bcp14>MUST</bcp14> contain the JSON-based Pledge Enroll-Request Trigger (tPER) artifact as defined in <xref target="tper_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a valid tPER, the pledge <bcp14>MUST</bcp14> reply with the PER artifact as defined in <xref target="per_artifact"/> in the body of an HTTP 200 OK response.
If the Accept header was not provided in the PER, the pledge assumes that the accepted response format is <tt>application/voucher-jws+json</tt> and proceeds processing.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the PER, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.
While BRSKI-PRM does not specify which content may be provided in the response body, it is recommended to provided it as JSON encoded information as other BRSKI-PRM exchanges also utilize this encoding.</t>
        <section anchor="tper_artifact">
          <name>Request Artifact: Pledge Enroll-Request Trigger (tPER)</name>
          <t>The Pledge Enroll-Request Trigger (tPVR) artifact <bcp14>SHALL</bcp14> be an unsigned data object, providing enrollment parameters.
This document specifies only the basic parameter for a generic, device-related LDevID certificate with no CSR attributes provided to the pledge.
If specific attributes in the certificate are required, they have to be inserted by the issuing Key Infrastructure.</t>
          <t>The Pledge Enroll-Request Trigger (tPER) artifact <bcp14>MAY</bcp14> be used to provide additional enrollment parameters such as CSR attributes.
How to provide and use such additional data is out of scope for this specification.</t>
          <t>For the JSON-based format used by this specification, the tPER artifact <bcp14>MUST</bcp14> be a UTF-8 encoded JSON document <xref target="RFC8259"/> that conforms with the CDDL <xref target="RFC8610"/> data model defined in <xref target="tper_CDDL_def"/>:</t>
          <figure anchor="tper_CDDL_def">
            <name>CDDL for Pledge Enroll-Request Trigger (pledgeenrollrequesttrigger)</name>
            <artwork type="cddl" align="left"><![CDATA[
pledgeenrollrequesttrigger = {
        "enroll-type": $enroll-type
}

$enroll-type /= "enroll-generic-cert"
]]></artwork>
          </figure>
          <t>The <tt>enroll-type</tt> member allows for specifying which type of certificate is to be enrolled.
As shown in <xref target="tper_CDDL_def"/>, BRSKI-PRM only defines the enumeration value <tt>enroll-generic-cert</tt> for the enrollment of the generic, device-related LDevID certificate.
Other specifications using this artifact may define further enum values, e.g., to bootstrap application-related EE certificates with additional CSR attributes.</t>
        </section>
        <section anchor="per_artifact">
          <name>Response Artifact: Pledge Enroll-Request (PER)</name>
          <t>The Pledge Enroll-Request (PER) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing a PKCS#10 Certificate Signing Request (CSR) <xref target="RFC2986"/>.
The CSR already assures POP of the private key corresponding to the contained public key.
In addition, based on the PER signature using the IDevID of the pledge, POI is provided.</t>
          <t>For the JWS-signed JSON format used by this specification, the PER artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CSR Data defined in <xref target="per_data"/> in the JWS Payload.
<xref target="per_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="per_representation">
            <name>PER Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CSR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CSR Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="per_data">
            <name>JSON CSR Data</name>
            <t>The JSON CSR Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the data model described by the <tt>csr-grouping</tt> of the <tt>ietf-ztp-types</tt> YANG module defined in <xref section="3.2" sectionFormat="of" target="RFC9646"/> and <bcp14>MUST</bcp14> be encoded using the rules defined in <xref target="RFC7951"/>.
Note that <xref target="RFC9646"/> also allows for inclusion of CSRs in different formats used by CMP and CMC.
For PKCS#10 CSRs as used in BRSKI and BRSKI-PRM, the <tt>p10-csr</tt> case of the <tt>csr-grouping</tt> <bcp14>MUST</bcp14> be used.</t>
            <t><xref target="csr_example"/> below shows an example for the JSON CSR Data:</t>
            <figure anchor="csr_example">
              <name>JSON CSR Data Example</name>
              <artwork align="left"><![CDATA[
{
  "ietf-ztp-types": {
     "p10-csr": "base64encodedvalue=="
   }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-2">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the PER artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification.</t>
              </li>
              <li>
                <t><tt>crit</tt>: <bcp14>SHALL</bcp14> indicate the extension Header Parameter <tt>created-on</tt> to ensure that it must be understood and validated by the receiver as defined in <xref section="4.1.11" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
            </ul>
            <t>In addition, the JWS Protected Header of the PER artifact <bcp14>MUST</bcp14> contain the following extension Header Parameter:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at PER creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
if the pledge does not have synchronized time, it <bcp14>SHALL</bcp14> use the <tt>created-on</tt> value from the JSON Agent-Signed Data received with the tPVR artifact and <bcp14>SHOULD</bcp14> advance that value based on its local clock to reflect the PER creation time.</t>
              </li>
            </ul>
            <t>The new protected Header Parameter <tt>created-on</tt> is introduced to reflect freshness of the PER.
It allows the registrar to verify the timely correlation between the PER artifact and previous exchanges, i.e., <tt>created-on</tt> of PER &gt;= <tt>created-on</tt> of PVR &gt;= <tt>created-on</tt> of PVR trigger.
The registrar <bcp14>MAY</bcp14> consider ignoring any but the newest PER artifact from the same pledge in case the registrar has at any point in time more than one pending PER from the pledge.</t>
            <t><xref target="per_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="per_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ],
  "crit": ["created-on"],
  "created-on": "2022-09-13T00:00:02.000Z"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-2">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the PER artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
            <t>While BRSKI-PRM targets the initial enrollment, re-enrollment can be supported similarly.
In this case, the pledge <bcp14>MAY</bcp14> use its current, potentially application-related EE credential instead of its IDevID credential to sign the PER artifact.
The issuing CA can associate the re-enrollment request with the pledge based on the previously issued and still valid EE certificate.
Note that a pledge that does not have synchronized time needs to advance the last known current date and time based on its local clock over a longer period, which also requires persisting the local clock advancements across reboots.</t>
          </section>
        </section>
      </section>
      <section anchor="pvr">
        <name>Supply PVR to Registrar (including MASA interaction)</name>
        <t>Once the Registrar-Agent has acquired one or more PVR and PER object pairs, it starts the interaction with the domain registrar.
Collecting multiple pairs allows bulk bootstrapping of several pledges using the same session with the registrar.</t>
        <t>The Registrar-Agent <bcp14>MUST</bcp14> establish a TLS session to the registrar with mutual authentication.
In contrast to BRSKI <xref target="RFC8995"/>, the TLS client authentication uses the Registrar-Agent EE certificate instead of the pledge IDevID certificate.
Consequently, the domain registrar can distinguish BRSKI (pledge-initiator-mode) from BRSKI-PRM (pledge-responder-mode).</t>
        <t>The registrar <bcp14>SHOULD</bcp14> verify the TLS client authentication of the Registrar-Agent, in particular if the TLS session is used to obtain the Registrar-Agent EE certificate (see <xref target="registrar_component"/>).
Note that authentication and authorization of the pledge verified during the TLS session based on the signatures inside the PVR artifact.</t>
        <t>As already stated in <xref target="RFC8995"/>, and required by <xref target="I-D.ietf-uta-require-tls13"/>, the use of TLS 1.3 (or newer) is encouraged.
TLS 1.2 or newer is <bcp14>REQUIRED</bcp14> on the Registrar-Agent side.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the registrar, but TLS 1.2 <bcp14>MAY</bcp14> be used.
TLS 1.3 (or newer) <bcp14>SHOULD</bcp14> be available on the MASA, but TLS 1.2 <bcp14>MAY</bcp14> be used.</t>
        <t><xref target="exchangesfig_uc2_3"/> shows the voucher-request processing and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_3">
          <name>Voucher issuing exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="480" width="576" viewBox="0 0 576 480" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,448" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,448" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,192" fill="none" stroke="black"/>
                <path d="M 312,240 L 312,272" fill="none" stroke="black"/>
                <path d="M 312,304 L 312,448" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,312" fill="none" stroke="black"/>
                <path d="M 456,432 L 456,448" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,352" fill="none" stroke="black"/>
                <path d="M 560,400 L 560,448" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,256 L 224,256" fill="none" stroke="black"/>
                <path d="M 256,256 L 304,256" fill="none" stroke="black"/>
                <path d="M 320,320 L 416,320" fill="none" stroke="black"/>
                <path d="M 456,320 L 552,320" fill="none" stroke="black"/>
                <path d="M 320,336 L 424,336" fill="none" stroke="black"/>
                <path d="M 456,336 L 552,336" fill="none" stroke="black"/>
                <path d="M 320,416 L 408,416" fill="none" stroke="black"/>
                <path d="M 472,416 L 552,416" fill="none" stroke="black"/>
                <path d="M 176,432 L 208,432" fill="none" stroke="black"/>
                <path d="M 280,432 L 304,432" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,336 548,330.4 548,341.6" fill="black" transform="rotate(0,552,336)"/>
                <polygon class="arrowhead" points="560,320 548,314.4 548,325.6" fill="black" transform="rotate(0,552,320)"/>
                <polygon class="arrowhead" points="328,416 316,410.4 316,421.6" fill="black" transform="rotate(180,320,416)"/>
                <polygon class="arrowhead" points="328,320 316,314.4 316,325.6" fill="black" transform="rotate(180,320,320)"/>
                <polygon class="arrowhead" points="312,256 300,250.4 300,261.6" fill="black" transform="rotate(0,304,256)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,432 172,426.4 172,437.6" fill="black" transform="rotate(180,176,432)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(3)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PVR</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="344" y="132">backend</text>
                  <text x="428" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="308" y="212">[Registrar-Agent</text>
                  <text x="308" y="228">authenticated&amp;authorized?]</text>
                  <text x="240" y="260">PVR</text>
                  <text x="280" y="292">[accept</text>
                  <text x="348" y="292">device?]</text>
                  <text x="436" y="324">mTLS</text>
                  <text x="440" y="340">RVR</text>
                  <text x="456" y="356">~</text>
                  <text x="460" y="372">[extract</text>
                  <text x="536" y="372">DomainID]</text>
                  <text x="456" y="388">[update</text>
                  <text x="532" y="388">audit-log]</text>
                  <text x="456" y="404">~</text>
                  <text x="440" y="420">Voucher</text>
                  <text x="244" y="436">Voucher'</text>
                  <text x="16" y="468">~</text>
                  <text x="168" y="468">~</text>
                  <text x="312" y="468">~</text>
                  <text x="456" y="468">~</text>
                  <text x="560" y="468">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(3) Supply PVR to Registrar (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<-----mTLS------>|                 |            |
 |                  |                 |                 |            |
 |                  |         [Registrar-Agent          |            |
 |                  |    authenticated&authorized?]     |            |
 |                  |                 |                 |            |
 |                  |-------PVR------>|                 |            |
 |                  |                 |                 |            |
 |                  |          [accept device?]         |            |
 |                  |                 |                 |            |
 |                  |                 |<------------mTLS------------>|
 |                  |                 |--------------RVR------------>|
 |                  |                 |                 ~            |
 |                  |                 |              [extract DomainID]
 |                  |                 |              [update audit-log]
 |                  |                 |                 ~            |
 |                  |                 |<-----------Voucher-----------|
 |                  |<----Voucher''---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a first step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PVR artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
Note that this is the same endpoint as for BRSKI described in <xref section="5.2" sectionFormat="of" target="RFC8995"/>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PVR artifact as defined in <xref target="pvr_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        <t>Upon receiving a PVR artifact, the registrar accepts or declines the request to join the domain.
For this, it <bcp14>MUST</bcp14> perform pledge authorization as defined in <xref section="5.3" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> verify in addition that</t>
        <ul spacing="normal">
          <li>
            <t>the <tt>agent-provided-proximity-registrar-cert</tt> field of the PVR contains a registrar EE certificate signed by the same domain owner as the registrar EE certificate used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal between exchanges with the Registrar-Agent (see <xref target="arch_nomadic"/>);
in many installations with a single registrar the contained certificate is identical to the signing certificate.</t>
          </li>
          <li>
            <t>the <tt>agent-signed-data</tt> field of the PVR is signed with the private key corresponding to the Registrar-Agent EE certificate as known by the registrar (see <xref target="registrar_component"/>);
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header of the <tt>agent-signed-data</tt> field.</t>
          </li>
          <li>
            <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of the PVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
          </li>
          <li>
            <t>the Registrar-Agent EE certificate is still valid;
this is necessary to avoid that a rogue Registrar-Agent generates <tt>agent-signed-data</tt> objects to onboard arbitrary pledges at a later point in time, see also <xref target="sec_cons_reg-agt"/>.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PVR, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>403 Forbidden: if the registrar detected that one or more security related fields are not valid or if the pledge-provided information could not be used with automated allowance.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar converts the PVR artifact to a Registrar Voucher-Request (RVR) artifact (see <xref target="rvr_artifact"/>) and starts the backend interaction with the MASA.</t>
        <t>The domain registrar can respond with an HTTP 202 Accepted response status code to the Registrar-Agent at this point following <xref section="5.6" sectionFormat="of" target="RFC8995"/>, while the rules defined for the pledge also apply to the Registrar-Agent;
in this case, the registrar still continues with the MASA interaction to provide the Voucher artifact to the retry request.</t>
        <t>The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="masa_interaction">
          <name>MASA Interaction</name>
          <t>The domain registrar <bcp14>MUST</bcp14> establish a TLS session with mutual authentication to the MASA of the pledge according to <xref section="5.4" sectionFormat="of" target="RFC8995"/>.
It requests the voucher from the MASA according to <xref section="5.5" sectionFormat="of" target="RFC8995"/> via HTTP-over-TLS POST to the MASA endpoint at <tt>/.well-known/brski/requestvoucher</tt>.
The request body <bcp14>MUST</bcp14> contain the RVR artifact as defined in <xref target="rvr_artifact"/>.
In the request header, the Content-Type field and the Accept field <bcp14>MUST</bcp14> be set to the same media type as the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>The assumption is that a pledge typically supports a single artifact format and creates the PVR in the supported format;
to ensure that the pledge is able to process the voucher, the registrar requests this format via the HTTP Accept header field when requesting the voucher.
Further, the RVR artifact and the PVR artifact inside should also use the same format to limit the number of required format encoders.
Note that BRSKI-PRM allows for alternative formats such as CMS-signed JSON as used in BRSKI <xref target="RFC8995"/> or COSE-signed CBOR for constrained environments, when defined by other specifications.
Overall, a MASA responsible for BRSKI-PRM capable pledges <bcp14>MUST</bcp14> support the same formats as supported by those pledges.</t>
          <t>Once the MASA receives the RVR artifact, it <bcp14>MUST</bcp14> perform the verification as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
Depending on policy, the MASA <bcp14>MAY</bcp14> choose the type of assertion to perform.
For the Agent Proximity Assertion of BRSKI-PRM (see <xref target="agt_prx"/>), the MASA <bcp14>MUST</bcp14> skip the verification described in <xref section="5.5.5" sectionFormat="of" target="RFC8995"/> and instead <bcp14>MUST</bcp14> verify for the PVR contained in the <tt>prior-signed-voucher-request</tt> field of the RVR that</t>
          <ul spacing="normal">
            <li>
              <t>the <tt>agent-provided-proximity-registrar-cert</tt> field contains an EE certificate that is signed by the same domain owner as the EE certificate/credentials used to sign the RVR;
note that this check allows for installations with multiple domain registrars and for registrar EE certificate renewal while PVRs are collected by the Registrar-Agent.</t>
            </li>
            <li>
              <t>the registrar EE certificate in the <tt>agent-provided-proximity-registrar-cert</tt> field and the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR are signed by the same domain owner.</t>
            </li>
            <li>
              <t>the <tt>agent-signed-data</tt> field is signed with the credentials corresponding to the Registrar-Agent EE certificate in the <tt>agent-sign-cert</tt> field of the RVR;
this is done via the SubjectKeyIdentifier of the certificate in the <tt>kid</tt> Header Parameter of the JWS Protected Header in the <tt>agent-signed-data</tt> field.</t>
            </li>
            <li>
              <t>the product-serial-number inside the <tt>agent-signed-data</tt> is equal to the <tt>serial-number</tt> field of PVR and the <tt>serial-number</tt> field of the RVR as well as the X520SerialNumber field of the pledge IDevID certificate, which is contained in the JWS Protected Header of the PVR.</t>
            </li>
          </ul>
          <t>If the <tt>agent-sign-cert</tt> field in the RVR is not set, the MASA <bcp14>MAY</bcp14> state a lower level assertion value instead of failing the verification, e.g., "logged" or "verified".</t>
          <t>If the verification fails, the MASA responds with an HTTP client error status code to the registrar.
The client error status codes are kept the same as defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>:</t>
          <ul spacing="normal">
            <li>
              <t>403 Forbidden: if the voucher-request is not signed correctly or is stale or if the pledge has another outstanding voucher that cannot be overridden.</t>
            </li>
            <li>
              <t>404 Not Found: if the request is for a device that is not known to the MASA.</t>
            </li>
            <li>
              <t>406 Not Acceptable: if a voucher of the desired type or that uses the desired algorithms (as indicated by the "Accept" header fields and algorithms used in the signature) cannot be issued as such because the MASA knows the pledge cannot process that type.</t>
            </li>
            <li>
              <t>415 Unsupported Media Type: if the request uses an artifact format or Accept header value that is not supported by the MASA.</t>
            </li>
          </ul>
          <t>Otherwise, the MASA creates a Voucher artifact as defined in <xref target="voucher_artifact"/> and updates the audit-log as described in <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The Voucher is then supplied to the registrar within the body of an HTTP 200 OK response according to <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming RVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
        </section>
        <section anchor="supply-voucher-to-registrar-agent">
          <name>Supply Voucher to Registrar-Agent</name>
          <t>After receiving the Voucher from the MASA, the registrar <bcp14>SHOULD</bcp14> evaluate it for transparency and logging purposes as outlined in <xref section="5.6" sectionFormat="of" target="RFC8995"/>.
It then countersigns the Voucher for delivery to the pledge via the Registrar-Agent.</t>
          <t>The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Registrar-Countersigned Voucher artifact (Voucher') as defined in <xref target="rcv_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to the media type of the incoming PVR artifact.
For the default format used in this specification, this is <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.</t>
          <t>If the domain registrar is unable to return the Voucher, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
          <ul spacing="normal">
            <li>
              <t>500 Internal Server Error: if both Registrar-Agent request and MASA response are valid, but the registrar still failed to return the Voucher, e.g., due to missing configuration or a program failure.</t>
            </li>
            <li>
              <t>502 Bad Gateway: if the registrar received an invalid response from the MASA.</t>
            </li>
            <li>
              <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response;
this error response <bcp14>SHOULD</bcp14> include the <tt>Retry-After</tt> response header field with an appropriate value.</t>
            </li>
            <li>
              <t>504 Gateway Timeout: if the backend request to the MASA timed out.</t>
            </li>
          </ul>
        </section>
        <section anchor="request-artifact-pledge-voucher-request-pvr">
          <name>Request Artifact: Pledge Voucher-Request (PVR)</name>
          <t>Identical to the PVR artifact received from the pledge as defined in <xref target="pvr_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PVRs.</t>
        </section>
        <section anchor="rvr_artifact">
          <name>Backend Request Artifact: Registrar Voucher-Request (RVR)</name>
          <t>The Registrar Voucher-Request (RVR) artifact <bcp14>SHALL</bcp14> be an extended Voucher-Request artifact based on <xref section="5.5" sectionFormat="of" target="RFC8995"/>.
The BRSKI-PRM related enhancements of the <tt>ietf-voucher-request</tt> YANG module are defined in <xref target="I-D.ietf-anima-rfc8366bis"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the RVR artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>, which <bcp14>MUST</bcp14> contain the JSON RVR Data defined in <xref target="rvr_data"/> in the JWS Payload.
<xref target="rvr_representation"/> summarizes the serialization of the JWS-signed JSON RVR artifact:</t>
          <figure anchor="rvr_representation">
            <name>RVR Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON RVR Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <section anchor="rvr_data">
            <name>JSON RVR Data</name>
            <t>The JSON RVR Data <bcp14>MUST</bcp14> contain the following fields of the <tt>ietf-voucher-request</tt> YANG module as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>;
note that this makes optional leaves in the YANG definition mandatory for the RVR artifact:</t>
            <ul spacing="normal">
              <li>
                <t><tt>created-on</tt>: <bcp14>SHALL</bcp14> contain the current date and time at RVR creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/></t>
              </li>
              <li>
                <t><tt>nonce</tt>: <bcp14>SHALL</bcp14> contain a copy of the <tt>nonce</tt> field from the JSON PVR Data
the registrar provides this information to assure successful verification of Registrar-Agent proximity based on the agent-signed-data</t>
              </li>
              <li>
                <t><tt>serial-number</tt>: <bcp14>SHALL</bcp14> contain the product-serial-number of the pledge;
note the required verification by the registrar defined in <xref target="pvr"/></t>
              </li>
              <li>
                <t><tt>idevid-issuer</tt>: <bcp14>SHALL</bcp14> contain the issuer value from the pledge IDevID certificate obtained from the PVR JWS Protected Header <tt>x5c</tt> field</t>
              </li>
              <li>
                <t><tt>prior-signed-voucher-request</tt>: <bcp14>SHALL</bcp14> contain the PVR artifact as received from the Registrar-Agent, see <xref target="tpvr"/></t>
              </li>
            </ul>
            <t>As BRSKI-PRM uses the Agent Proximity Assertion (see <xref target="agt_prx"/>), the JSON RVR Data <bcp14>MUST</bcp14> also contain the following fields:</t>
            <ul spacing="normal">
              <li>
                <t><tt>assertion</tt>: <bcp14>SHALL</bcp14> contain the value <tt>agent-proximity</tt> to indicate successful verification of the Agent Proximity Assertion (see <xref target="agt_prx"/>) by the registrar.</t>
              </li>
              <li>
                <t><tt>agent-sign-cert</tt>: <bcp14>SHALL</bcp14> be a JSON array that contains the base64-encoded Registrar-Agent EE certificate as possessed by the registrar (see <xref target="registrar_component"/>) as the first item;
subsequent items <bcp14>MUST</bcp14> contain the corresponding certificate chain for verification at the MASA;
the field is used for verification of the <tt>agent-signed-data</tt> field of the contained PVR.</t>
              </li>
            </ul>
            <t>Note that the <tt>ietf-voucher-request</tt> YANG module defines the leaf <tt>agent-sign-cert</tt> as binary;
this specification refines it as a JSON array structure similar to the <tt>x5c</tt> Header Parameter defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
            <t><xref target="rvr_data_example"/> shows an example for the JSON RVR Data:</t>
            <figure anchor="rvr_data_example">
              <name>JSON RVR Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher-request:voucher": {
     "created-on": "2022-01-04T02:37:39.235Z",
     "nonce": "eDs++/FuDHGUnRxN3E14CQ==",
     "serial-number": "vendor-pledge4711",
     "idevid-issuer": "base64encodedvalue==",
     "prior-signed-voucher-request": "base64encodedvalue==",
     "assertion": "agent-proximity",
     "agent-sign-cert": [
       "base64encodedvalue==",
       "base64encodedvalue==",
       "..."
     ]
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-3">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header <bcp14>MUST</bcp14> follow the definitions of <xref section="3.2" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
          <section anchor="jws-signature-3">
            <name>JWS Signature</name>
            <t>The domain registrar <bcp14>MUST</bcp14> sign the RVR artifact using its EE credentials following the definitions of <xref section="3.3" sectionFormat="of" target="I-D.ietf-anima-jws-voucher"/>.</t>
          </section>
        </section>
        <section anchor="voucher_artifact">
          <name>Backend Response Artifact: Voucher</name>
          <t>The Voucher artifact is defined in <xref section="5.6" sectionFormat="of" target="RFC8995"/> (cf. "voucher response").
The only difference for BRSKI-PRM is that the <tt>assertion</tt> field <bcp14>MAY</bcp14> contain the value <tt>agent-proximity</tt> as defined in <xref target="I-D.ietf-anima-rfc8366bis"/>, when the Agent-Proximity Assertion (see <xref target="agt_prx"/>) is performed by the MASA.</t>
          <t>For the JWS-signed JSON format used by this specification, the Voucher artifact <bcp14>MUST</bcp14> be a JWS Voucher structure as defined in <xref target="I-D.ietf-anima-jws-voucher"/>.
It contains JSON Voucher Data in the JWS Payload, for which an example is given in <xref target="voucher_data_example"/>:</t>
          <figure anchor="voucher_data_example">
            <name>JSON RVR Data Example</name>
            <artwork type="json" align="left"><![CDATA[
{
  "ietf-voucher:voucher": {
    "created-on": "2022-01-04T00:00:02.000Z",
    "nonce": "base64encodedvalue==",
    "assertion": "agent-proximity",
    "pinned-domain-cert": "base64encodedvalue==",
    "serial-number": "vendor-pledge4711"
  }
}
]]></artwork>
          </figure>
        </section>
        <section anchor="rcv_artifact">
          <name>Response Artifact: Registrar-Countersigned Voucher</name>
          <t>The Registrar-Countersigned Voucher (Voucher') artifact <bcp14>SHALL</bcp14> be an extended Voucher artifact based on <xref section="5.6" sectionFormat="of" target="RFC8995"/> using the format defined in <xref target="voucher_artifact"/>.</t>
          <t>For BRSKI-PRM, the domain registrar <bcp14>MUST</bcp14> add an JWS Protected Header and JWS Signature to the MASA-provided Voucher.
<xref target="rcv_representation"/> summarizes the serialization of the JWS-signed JSON Voucher' artifact:</t>
          <figure anchor="rcv_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(JSON Voucher Data),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (MASA))),
      "signature": BASE64URL(JWS Signature (MASA))
    },
    {
      "protected": BASE64URL(UTF8(JWS Protected Header (Registrar))),
      "signature": BASE64URL(JWS Signature (Registrar))
    }
  ]
}
]]></artwork>
          </figure>
          <t>In BRSKI <xref target="RFC8995"/>, the registrar proves possession of its credential through the server authentication within the TLS session with the pledge.
While the pledge cannot verify the registrar certificate at the time of TLS session establishment, it can verify the TLS server certificate through the certificate in the <tt>pinned-domain-cert</tt> field upon receiving the Voucher artifact (see <xref section="5.6.2" sectionFormat="of" target="RFC8995"/>).</t>
          <t>In BRSKI-PRM with the Registrar-Agent mediating all communication, this second signature provides verification and POP of the private key for the registrar EE certificate provided in the initial tPVR artifact from the Registrar-Agent (see <xref target="tpvr_artifact"/>).</t>
          <t>Depending on the security policy of the operator, this signature can also be interpreted as explicit authorization of the registrar to install the contained trust anchor (i.e., pinned domain certificate).</t>
          <section anchor="json-voucher-data">
            <name>JSON Voucher Data</name>
            <t>As provided by the MASA inside the JWS Payload.
The domain registrar <bcp14>MUST NOT</bcp14> modify the JWS Payload.</t>
          </section>
          <section anchor="jws-protected-header-registrar">
            <name>JWS Protected Header (Registrar)</name>
            <t>The registrar-added JWS Protected Header (Registrar) <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the voucher as well as the certificate chain up to (but not including) the pinned domain certificate (the initial domain trust anchor);
the pinned domain certificate is already contained in the JSON Voucher Data.</t>
              </li>
            </ul>
            <t>Note that for many installations with a single registrar credential, the registrar EE certificate is pinned.</t>
          </section>
          <section anchor="jws-signature-registrar">
            <name>JWS Signature (Registrar)</name>
            <t>The signature is created by signing the registrar-added JWS Protected Header (Registrar) and the original JWS Payload produced by the MASA as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.
The registrar <bcp14>MUST</bcp14> use its EE credentials to sign.</t>
            <t>Note that the credentials need to be the same as used for server authentication in the TLS session with the Registrar-Agent receiving this artifact (see <xref target="registrar_component"/>).</t>
          </section>
        </section>
      </section>
      <section anchor="per">
        <name>Supply PER to Registrar (including Key Infrastructure interaction; requestenroll)</name>
        <t>After receiving the Voucher artifact, the Registrar-Agent sends the PER to the domain registrar within the same TLS session.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The registrar is able to correlate the PVR and PER artifacts based on the signatures and the contained product-serial-number.
Note that this also addresses situations in which a nonceless voucher is used and may be pre-provisioned to the pledge.</t>
        <t><xref target="exchangesfig_uc2_4"/> depicts exchanges for the PER-request handling and the following subsections describe the corresponding artifacts.
Note that "Request" and "Certificate" do not denote BRSKI-PRM defined artifacts, but are data objects depending on the certificate management protocol used by the domain Key Infrastructure.</t>
        <figure anchor="exchangesfig_uc2_4">
          <name>Enroll exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="576" viewBox="0 0 576 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,256" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,256" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,256" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,256" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 224,192" fill="none" stroke="black"/>
                <path d="M 256,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 344,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 448,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 336,224" fill="none" stroke="black"/>
                <path d="M 176,240 L 192,240" fill="none" stroke="black"/>
                <path d="M 288,240 L 304,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,208 444,202.4 444,213.6" fill="black" transform="rotate(0,448,208)"/>
                <polygon class="arrowhead" points="328,224 316,218.4 316,229.6" fill="black" transform="rotate(180,320,224)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,240 172,234.4 172,245.6" fill="black" transform="rotate(180,176,240)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(4)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="104" y="132">PER</text>
                  <text x="132" y="132">to</text>
                  <text x="184" y="132">Registrar</text>
                  <text x="268" y="132">(including</text>
                  <text x="328" y="132">Key</text>
                  <text x="404" y="132">Infrastructure</text>
                  <text x="516" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">PER</text>
                  <text x="384" y="212">[Request]</text>
                  <text x="396" y="228">[Certificate]-</text>
                  <text x="240" y="244">Enroll-Resp</text>
                  <text x="16" y="276">~</text>
                  <text x="168" y="276">~</text>
                  <text x="312" y="276">~</text>
                  <text x="456" y="276">~</text>
                  <text x="560" y="276">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(4) Supply PER to Registrar (including Key Infrastructure interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |-------PER------>|                 |            |
 |                  |                 |----[Request]--->|            |
 |                  |                 |<--[Certificate]-|            |
 |                  |<--Enroll-Resp---|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a second step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> supply the PER artifact(s) to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/requestenroll</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired PER artifact as defined in <xref target="per_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Note that this is different from the EST <xref target="RFC7030"/> endpoint used in BRSKI, as the PER artifact is signature-wrapped.
Hence, upon receiving a PER artifact, the registrar <bcp14>MUST</bcp14> verify that</t>
        <ul spacing="normal">
          <li>
            <t>the PER was signed with the private key corresponding to the pledge EE certificate, which is contained in the JWS Protected Header of the PER.</t>
          </li>
          <li>
            <t>the pledge identified by its EE certificate is accepted to join the domain after successful validation of the corresponding PVR.</t>
          </li>
        </ul>
        <t>If the registrar is unable to process the request or validate the PER, it responds with an HTTP client error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the registrar detects an error in the format of the request.</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the PER cannot be verified.</t>
          </li>
          <li>
            <t>404 Not Found: if the PER is for a device that is not known to the registrar.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the PER uses an artifact format that is not supported by the registrar, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, the registrar extracts the PKCS#10 Certificate Signing Request (CSR) inside the PER (see <xref target="per_artifact"/>) and uses the CSR to request a new pledge EE certificate from the domain Key Infrastructure.
The exact interaction and exchanged data objects depends on the certificate management protocol used by the Key Infrastructure, and is out of scope for this document.</t>
        <t>A successful interaction with the Key Infrastructure will result in a pledge EE certificate signed by the domain owner (e.g., LDevID certificate).
The registrar <bcp14>MUST</bcp14> reply to the Registrar-Agent with the Enroll-Response (Enroll-Resp) as defined in <xref target="er_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt>.</t>
        <t>If the domain registrar is unable to return the Enroll-Resp, it responds with an HTTP server error status code to the Registrar-Agent.
The following server error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>500 Internal Server Error: if the Key Infrastructure response is valid, but the registrar still failed to return the Enroll-Resp, e.g., due to missing configuration or a program failure.</t>
          </li>
          <li>
            <t>502 Bad Gateway: if the registrar received an invalid response from the Key Infrastructure.</t>
          </li>
          <li>
            <t>503 Service Unavailable: if a simple retry of the Registrar-Agent request might lead to a successful response; this error response <bcp14>SHOULD</bcp14> include the Retry-After response header field with an appropriate value.</t>
          </li>
          <li>
            <t>504 Gateway Timeout: if the backend request to the Key Infrastructure timed out.</t>
          </li>
        </ul>
        <t>Note that while BRSKI-PRM targets the initial enrollment, re-enrollment may be supported similarly with the exception that the current, potentially application-related pledge EE certificate is used instead of the IDevID certificate to sign the PER artifact (see also <xref target="tper"/>).
Hence, there is no verification whether the pledge is accepted to join the domain, as the still valid EE certificate signed by the domain owner identifies the pledge as already accepted component of the domain.</t>
        <section anchor="request-artifact-pledge-enroll-request-per">
          <name>Request Artifact: Pledge Enroll-Request (PER)</name>
          <t>Identical to the PER artifact defined in <xref target="per_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify PERs received from pledges.</t>
        </section>
        <section anchor="er_artifact">
          <name>Response Artifact: Registrar Enroll-Response (Enroll-Resp)</name>
          <t>The Enroll-Response (Enroll-Resp) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the domain owner, containing a pledge EE certificate.</t>
          <t>For this specification, the Enroll-Resp artifact <bcp14>MUST</bcp14> be a certs-only CMC Simple PKI Response (PKCS#7) as defined in <xref section="4.1" sectionFormat="of" target="RFC5272"/> (following EST <xref target="RFC7030"/>).
Note that it only contains the pledge EE certificate, but not the certificate chain.
The chain is provided with the CA certificates.</t>
        </section>
      </section>
      <section anchor="obtain_cacerts">
        <name>Obtain CA Certificates (wrappedcacerts)</name>
        <t>The pinned domain certificate in the voucher is only the initial trust anchor for only the domain registrar.
To fully trust the domain and also to verify its own EE certificate, the pledge also needs the corresponding domain CA certificate(s).
A bag of CA certificates signed by the registrar will allow the pledge to verify the authorization to install the received CA certificate(s) through the pinned domain certificate in the voucher.</t>
        <t>Note that this is a deviation from EST <xref target="RFC7030"/> used in BRSKI <xref target="RFC8995"/>.</t>
        <t>The Registrar-Agent obtains this artifact within the same TLS session.
In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.
The CA certificates do not need to be correlated to a specific voucher or Enroll-Response; they only need to be fresh.</t>
        <t><xref target="exchangesfig_uc2_5"/> shows the acquisition of the CA certificate(s) and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_5">
          <name>CA certificates retrieval exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,192 172,186.4 172,197.6" fill="black" transform="rotate(180,176,192)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(5)</text>
                  <text x="60" y="132">Obtain</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(5) Obtain CA Certificates
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<----(mTLS)----->|                 |            |
 |                  |<----caCerts-----|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>As a third step of the interaction with the domain registrar, the Registrar-Agent <bcp14>SHALL</bcp14> obtain the CA-Certificates artifact from the registrar via HTTP-over-TLS GET to the registrar endpoint at <tt>/.well-known/brski/wrappedcacerts</tt>.
In the request header, the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a GET request at <tt>/.well-known/brski/wrappedcacerts</tt>, the domain registrar <bcp14>MUST</bcp14> reply with the CA-Certificates artifact as defined in <xref target="cacerts_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <section anchor="request-no-artifact">
          <name>Request (no artifact)</name>
          <t>In this exchange, the request is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the registrar.</t>
        </section>
        <section anchor="cacerts_artifact">
          <name>Response Artifact: CA-Certificates (caCerts)</name>
          <t>The CA-Certificates (caCerts) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the registrar, containing the domain trust anchors and the certificate chain for the pledge domain EE certificate, i.e., the root CA certificate(s) and possibly intermediate certificate(s) as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the caCerts artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON CA Data defined in <xref target="cacerts_data"/> in the JWS Payload.</t>
          <t><xref target="cacerts_representation"/> summarizes the serialization of the JWS-signed JSON caCerts artifact:</t>
          <figure anchor="cacerts_representation">
            <name>Voucher' Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON CA Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON CA Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="cacerts_data">
            <name>JSON CA Data</name>
            <t>The JSON CA Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="cacerts_CDDL_def"/>:</t>
            <figure anchor="cacerts_CDDL_def">
              <name>CDDL for JSON CA Data (cacerts)</name>
              <artwork type="cddl" align="left"><![CDATA[
cacerts = {
        "x5bag": bytes / [2* bytes]
}
]]></artwork>
            </figure>
            <t>The <tt>x5bag</tt> member <bcp14>MUST</bcp14> follow the definition of the <tt>x5bag</tt> COSE Header Parameter in <xref section="2" sectionFormat="of" target="RFC9360"/>.
It is either a single X.509 v3 certificate or an array of at least two X.509 v3 certificates in DER format.
For JSON syntax, the octet-based certificates <bcp14>MUST</bcp14> be base64-encoded.
It <bcp14>SHALL</bcp14> contain one or more domain CA (root or issuing) certificates.</t>
            <t>Note that as per <xref target="RFC8995"/>, the domain registrar acts as EST server, and hence is expected to possess the CA certificates applicable for the domain and can thus deliver them to the pledge (see <xref target="registrar_component"/>).</t>
            <t><xref target="cacerts_data_example"/> below shows an example for the JSON CA Data:</t>
            <figure anchor="cacerts_data_example">
              <name>JSON CA Data Example</name>
              <artwork align="left"><![CDATA[
{
  "x5bag": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-4">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the caCerts artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded registrar EE certificate used to sign the caCerts artifact as well as the certificate chain up to (but not including) the pinned domain certificate</t>
              </li>
            </ul>
            <t><xref target="cacerts_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="cacerts_header">
              <name>JWS Protected Header Example within PER</name>
              <artwork align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-4">
            <name>JWS Signature</name>
            <t>The registrar <bcp14>MUST</bcp14> sign the caCerts artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="voucher">
        <name>Supply Voucher to Pledge (svr)</name>
        <t>Once the Registrar-Agent has acquired the following three bootstrapping artifacts, it can supply them to the pledge starting with the Voucher':</t>
        <ul spacing="normal">
          <li>
            <t>Voucher': voucher countersigned by the registrar (from MASA via Registrar)</t>
          </li>
          <li>
            <t>Enroll-Resp: pledge EE certificate signed by the domain owner (from Key Infrastructure via registrar)</t>
          </li>
          <li>
            <t>caCerts: domain trust anchors (from Key Infrastructure via Registrar)</t>
          </li>
        </ul>
        <t>Reconnecting to the pledge might require to re-discover the pledge as described in <xref target="discovery_uc2_ppa"/>.
The Registrar-Agent <bcp14>MAY</bcp14> store information from the first connection with the pledge to optimize.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_6"/> shows the provisioning of the voucher to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_6">
          <name>Voucher exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 136,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(6)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="120" y="132">Voucher</text>
                  <text x="164" y="132">to</text>
                  <text x="204" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="100" y="196">Voucher'</text>
                  <text x="96" y="212">vStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(6) Supply Voucher to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----Voucher''---|                 |                 |            |
 |------vStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher to the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/svr</tt>.
The request body <bcp14>MUST</bcp14> contain the Registrar-Countersigned Voucher (Voucher') artifact previously acquired from the domain registrar as defined in <xref target="rcv_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/voucher-jws+json</tt> as defined in <xref target="I-D.ietf-anima-jws-voucher"/> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving the voucher, the pledge <bcp14>SHALL</bcp14> perform the signature verification in the following order:</t>
        <ol spacing="normal" type="1"><li>
            <t>Verify the MASA signature as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/> against the pre-installed manufacturer trust anchor (e.g., IDevID).</t>
          </li>
          <li>
            <t>Provisionally install the initial domain trust anchor contained in the <tt>pinned-domain-cert</tt> field of the voucher.</t>
          </li>
          <li>
            <t>Validate the registrar EE certificate received in the <tt>agent-provided-proximity-registrar-cert</tt> field of the previously received tPVR artifact using the pinned domain certificate;
this terminates the "provisional state" for the object security within the authenticated self-contained objects that in BRSKI-PRM replace the direct TLS connection to the registrar in BRSKI <xref target="RFC8995"/> (see <xref target="agt_prx"/>).</t>
          </li>
          <li>
            <t>Verify registrar signature of the Voucher' artifact similar as described in <xref section="5.6.1" sectionFormat="of" target="RFC8995"/>, but using the pinned domain certificate instead of the MASA certificate for the verification.</t>
          </li>
        </ol>
        <t>If all steps above complete successfully, the pledge <bcp14>SHALL</bcp14> terminate the "provisional state" for the initial domain trust anchor (i.e., the pinned domain certificate).</t>
        <t>A nonceless voucher <bcp14>MAY</bcp14> be accepted as in <xref target="RFC8995"/> if allowed by the pledge implementation of the manufacturer.
A manufacturer may opt to provide the acceptance of nonceless voucher  as configurable item.</t>
        <t>After voucher validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Voucher Status (vStatus) artifact as defined in <xref target="vstatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the voucher, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Voucher Status.</t>
        <t>If the pledge did not provide voucher status telemetry information after processing the voucher, the Registrar-Agent <bcp14>MAY</bcp14> query the pledge status explicitly as described in <xref target="query"/>.
It <bcp14>MAY</bcp14> resend the voucher depending on the Pledge status following the same procedure.</t>
        <section anchor="request-artifact-registrar-countersigned-voucher">
          <name>Request Artifact: Registrar-Countersigned Voucher</name>
          <t>Identical to the Registrar-Countersigned Voucher (Voucher') artifact received from the registrar as defined in <xref target="rcv_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify countersigned vouchers.</t>
        </section>
        <section anchor="vstatus_artifact">
          <name>Response Artifact: Voucher Status (vStatus)</name>
          <t>The Voucher Status (vStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the vStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Voucher Status Data defined in <xref target="vstatus_data"/> in the JWS Payload.
<xref target="vstatus_representation"/> summarizes the serialization of the JWS-signed JSON vStatus artifact:</t>
          <figure anchor="vstatus_representation">
            <name>vStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Voucher Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="vstatus_data">
            <name>JSON Voucher Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>voucherstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>version</tt>: contains a version number for the format and semantics of the other fields;
this specification assumes version <tt>1</tt> just like BRSKI <xref target="RFC8995"/>.</t>
              </li>
              <li>
                <t><tt>status</tt>: contains the boolean value <tt>true</tt> in case of success and <tt>false</tt> in case of failure.</t>
              </li>
              <li>
                <t><tt>reason</tt>: contains a human-readable message;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker.</t>
              </li>
              <li>
                <t><tt>reason-context</tt>: contains a JSON object that provides additional information specific to a failure;
in contrast to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, <bcp14>MUST</bcp14> be provided;
<bcp14>SHOULD NOT</bcp14> provide information beneficial to an attacker.</t>
              </li>
            </ul>
            <t>BRSKI-PRM implementations utilize the <tt>reason-context</tt> field to provide a distinguishable token, which enables the registrar to detect status artifacts provided to the wrong endpoint.
For vStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pvs-details</tt>.</t>
            <t><xref target="vstatus_data_example_success"/> shows an example for the JSON Voucher Status Data in case of success and <xref target="vstatus_data_example_error"/> in case of failure:</t>
            <figure anchor="vstatus_data_example_success">
              <name>JSON Voucher Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Voucher successfully processed.",
  "reason-context": {
    "pvs-details": "Current date 5/23/2024"
  }
}
]]></artwork>
            </figure>
            <figure anchor="vstatus_data_example_error">
              <name>JSON Voucher Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Failed to authenticate MASA certificate.",
  "reason-context": {
    "pvs-details": "Current date 1/1/1970 < valid from 1/1/2023"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-5">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the vStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge IDevID certificate used to sign the vStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification.</t>
              </li>
            </ul>
            <t><xref target="vstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="vstatus_header">
              <name>JWS Protected Header Example within vStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-5">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the vStatus artifact using its IDevID credential.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="cacerts">
        <name>Supply CA Certificates to Pledge (scac)</name>
        <t>Before supplying the pledge EE certificate, the Registrar-Agent supplies the domain CA certificates to the pledge, so the pledge can verify its EE certificate in the next exchange.
As the CA certificate provisioning is crucial from a security perspective, this exchange <bcp14>SHOULD</bcp14> only be done, if supplying the voucher in the previous exchange (<xref target="voucher"/>) has been successfully processed by the pledge as reflected in the vStatus artifact.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_7"/> shows the provisioning of the CA certificates to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_7">
          <name>Certificate provisioning exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(7)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="100" y="132">CA</text>
                  <text x="164" y="132">Certificates</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">caCerts</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(7) Supply CA Certificates to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----caCerts-----|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> provide the bag of CA certificates requested from and signed by the registrar to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/scac</tt>.
The request body <bcp14>MUST</bcp14> contain the caCerts artifact as defined in <xref target="cacerts_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving valid caCerts artifact, the pledge <bcp14>MUST</bcp14> first verify the signature of the registrar using the initial trust anchor (pinned domain certificate).
In the case of success, the pledge <bcp14>MUST</bcp14> install the contained CA certificates as trust anchors as described in <xref section="4.1.3" sectionFormat="of" target="RFC7030"/>.
This includes the verification of all intermediate CA certificates (i.e., not self-signed CA certificates).</t>
        <t>If the pledge is unable to process the caCerts, it responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the registrar cannot be verified against the installed initial trust anchor (pinned domain certificate).</t>
          </li>
          <li>
            <t>403 Forbidden: if one of the intermediate CA certificates cannot be verified against the available trust anchors (e.g., self-signed CA certificates).</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>Otherwise, if processing completes successfully, the pledge <bcp14>SHOULD</bcp14> reply with HTTP 200 OK without a response body.
The pledge <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="request-artifact-ca-certificates-cacerts">
          <name>Request Artifact: CA-Certificates (caCerts)</name>
          <t>Identical to the CA-Certificates (caCerts) artifact received from the registrar as defined in <xref target="cacerts_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify CA-Certificates artifacts.</t>
        </section>
        <section anchor="response-no-artifact">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="enroll_response">
        <name>Supply Enroll-Response to Pledge (ser)</name>
        <t>After supplying the CA certificates, the Registrar-Agent supplies the pledge EE certificate to the pledge.</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_8"/> shows the provisioning of the domain-owner signed EE certificate to the pledge and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_8">
          <name>Enroll-Response exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 48,192" fill="none" stroke="black"/>
                <path d="M 144,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 56,208" fill="none" stroke="black"/>
                <path d="M 120,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(8)</text>
                  <text x="60" y="132">Supply</text>
                  <text x="152" y="132">Enroll-Response</text>
                  <text x="228" y="132">to</text>
                  <text x="268" y="132">Pledge</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">Enroll-Resp</text>
                  <text x="88" y="212">eStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(8) Supply Enroll-Response to Pledge
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<---Enroll-Resp---|                 |                 |            |
 |-----eStatus----->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> send the domain-owner signed EE certificate to the pledge by HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/ser</tt>.
The request body <bcp14>MUST</bcp14> contain the Enroll-Response (Enroll-Resp) artifact previously acquired from the domain registrar as defined in <xref target="er_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/pkcs7-mime</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon reception, the pledge <bcp14>SHALL</bcp14> verify the received EE certificate using the installed trust anchors.
After Enroll-Resp validation and verification, the pledge needs to reply with a status telemetry message as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The pledge <bcp14>MUST</bcp14> generate the Enroll Status (eStatus) artifact as defined in <xref target="estatus_artifact"/> and <bcp14>MUST</bcp14> provide it to the Registrar-Agent in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to validate or verify the Enroll-Response, it <bcp14>MUST</bcp14> report the reason in the corresponding field of the Enroll Status.</t>
        <section anchor="request-artifact-enroll-response-enroll-resp">
          <name>Request Artifact: Enroll-Response (Enroll-Resp)</name>
          <t>Identical to the Enroll-Response (Enroll-Resp) artifact received from the registrar as defined in <xref target="er_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify Enroll-Response artifacts.</t>
        </section>
        <section anchor="estatus_artifact">
          <name>Response Artifact: Enroll Status (eStatus)</name>
          <t>The Enroll Status (eStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry as defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
          <t>For the JWS-signed JSON format used by this specification, the eStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Enroll Status Data defined in <xref target="estatus_data"/> in the JWS Payload.
<xref target="estatus_representation"/> summarizes the serialization of the JWS-signed JSON eStatus artifact:</t>
          <figure anchor="estatus_representation">
            <name>eStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Enroll Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Enroll Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="estatus_data">
            <name>JSON Enroll Status Data</name>
            <t>The JSON Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the <tt>enrollstatus-post</tt> CDDL <xref target="RFC8610"/> data model defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
The members are the same as for the JSON Voucher Status Data and follow the same definitions as given in <xref target="vstatus_data"/> (incl. making <tt>reason-context</tt> mandatory).</t>
            <t>BRSKI-PRM implementations again utilize the <tt>reason-context</tt> field to provide a distinguishable token.
For eStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain the member <tt>pes-details</tt>.</t>
            <t><xref target="estatus_data_example_success"/> below shows an example for the JSON Enroll Status Data in case of success and <xref target="estatus_data_example_error"/> in case of failure:</t>
            <figure anchor="estatus_data_example_success">
              <name>JSON Enroll Status Data Success Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Enroll-Response successfully processed.",
  "reason-context": {
    "pes-details": "Success"
  }
}
]]></artwork>
            </figure>
            <figure anchor="estatus_data_example_error">
              <name>JSON Enroll Status Data Failure Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": false,
  "reason": "Enroll-Response could not be verified.",
  "reason-context": {
    "pes-details": "No matching trust anchor"
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-6">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the eStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the eStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the <tt>x5c</tt> Header Parameter, it <bcp14>MUST</bcp14> be available at the domain registrar for verification</t>
              </li>
            </ul>
            <t><xref target="estatus_header"/> below shows an example for this JWS Protected Header:</t>
            <figure anchor="estatus_header">
              <name>JWS Protected Header Example within eStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-6">
            <name>JWS Signature</name>
            <t>If the pledge verified the received EE certificate successfully, it <bcp14>MUST</bcp14> sign the eStatus artifact using its new EE credentials.
In failure case, the pledge <bcp14>MUST</bcp14> sign it using its IDevID credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="vstatus">
        <name>Voucher Status Telemetry (including MASA interaction)</name>
        <t>Once the Registrar-Agent has collected both status artifacts from one or more pledges, it <bcp14>SHALL</bcp14> provide the status information to the domain registrar for further processing, beginning with the voucher status telemetry.</t>
        <t>In case the TLS session to the registrar is closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_9"/> shows the provisioning of the voucher status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact and MASA interaction.</t>
        <figure anchor="exchangesfig_uc2_9">
          <name>Voucher Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="576" viewBox="0 0 576 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,288" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,288" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,256" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,200" fill="none" stroke="black"/>
                <path d="M 456,256 L 456,288" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,288" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 320,208 L 416,208" fill="none" stroke="black"/>
                <path d="M 456,208 L 552,208" fill="none" stroke="black"/>
                <path d="M 320,224 L 352,224" fill="none" stroke="black"/>
                <path d="M 520,224 L 552,224" fill="none" stroke="black"/>
                <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                <path d="M 504,240 L 552,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="560,224 548,218.4 548,229.6" fill="black" transform="rotate(0,552,224)"/>
                <polygon class="arrowhead" points="560,208 548,202.4 548,213.6" fill="black" transform="rotate(0,552,208)"/>
                <polygon class="arrowhead" points="328,240 316,234.4 316,245.6" fill="black" transform="rotate(180,320,240)"/>
                <polygon class="arrowhead" points="328,208 316,202.4 316,213.6" fill="black" transform="rotate(180,320,208)"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="16" y="132">(9)</text>
                  <text x="64" y="132">Voucher</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="276" y="132">(including</text>
                  <text x="352" y="132">backend</text>
                  <text x="436" y="132">interaction)</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">vStatus</text>
                  <text x="436" y="212">mTLS</text>
                  <text x="368" y="228">req</text>
                  <text x="412" y="228">device</text>
                  <text x="480" y="228">audit-log</text>
                  <text x="396" y="244">device</text>
                  <text x="464" y="244">audit-log</text>
                  <text x="264" y="276">[verify</text>
                  <text x="340" y="276">audit-log]</text>
                  <text x="312" y="292">|</text>
                  <text x="16" y="308">~</text>
                  <text x="168" y="308">~</text>
                  <text x="312" y="308">~</text>
                  <text x="456" y="308">~</text>
                  <text x="560" y="308">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(9) Voucher Status Telemetry (including backend interaction)
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----vStatus---->|                 |            |
 |                  |                 |<----------((mTLS))---------->|
 |                  |                 |-----req device audit-log---->|
 |                  |                 |<------device audit-log-------|
 |                  |                 |                 |            |
 |                  |        [verify audit-log]         |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>First, the Registrar-Agent <bcp14>SHALL</bcp14> supply the voucher status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/voucher_status</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired vStatus artifact as defined in <xref target="vstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving a vStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.7" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, the registrar <bcp14>MUST</bcp14> in addition verify the signature of the vStatus and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the IDevID certificate contained in the JWS Protected Header of the vStatus.</t>
        <t>According to <xref section="5.7" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK without a response body in the success case or fail with an HTTP error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>The registrar <bcp14>SHOULD</bcp14> proceed with the audit-log request to the MASA as in BRSKI described in <xref section="5.8" sectionFormat="of" target="RFC8995"/>.</t>
        <section anchor="request-artifact-voucher-status-vstatus">
          <name>Request Artifact: Voucher Status (vStatus)</name>
          <t>Identical to the Voucher Status (vStatus) artifact received from the pledge as defined in <xref target="vstatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify vStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-1">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="estatus">
        <name>Enroll Status Telemetry</name>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> complete the sequence of exchanges for bootstrapping with providing the enroll status telemetry to the domain registrar.
This status indicates whether the pledge could process the Enroll-Response (pledge EE certificate signed by the domain owner) and holds the corresponding private key.</t>
        <t>In case the TLS session to the registrar is already closed, the Registrar-Agent establishes a new session as described in <xref target="pvr"/>.</t>
        <t><xref target="exchangesfig_uc2_10"/> shows the provisioning of the enroll status information from the pledge(s) to the registrar and the following subsections describe the corresponding artifact.</t>
        <figure anchor="exchangesfig_uc2_10">
          <name>Enroll Status telemetry exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="576" viewBox="0 0 576 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,208" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,208" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,208" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,208" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,208" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 176,176 L 216,176" fill="none" stroke="black"/>
                <path d="M 256,176 L 304,176" fill="none" stroke="black"/>
                <path d="M 176,192 L 208,192" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="312,192 300,186.4 300,197.6" fill="black" transform="rotate(0,304,192)"/>
                <polygon class="arrowhead" points="312,176 300,170.4 300,181.6" fill="black" transform="rotate(0,304,176)"/>
                <polygon class="arrowhead" points="184,176 172,170.4 172,181.6" fill="black" transform="rotate(180,176,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(10)</text>
                  <text x="68" y="132">Enroll</text>
                  <text x="124" y="132">Status</text>
                  <text x="192" y="132">Telemetry</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="236" y="180">mTLS</text>
                  <text x="240" y="196">eStatus</text>
                  <text x="16" y="228">~</text>
                  <text x="168" y="228">~</text>
                  <text x="312" y="228">~</text>
                  <text x="456" y="228">~</text>
                  <text x="560" y="228">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(10) Enroll Status Telemetry
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |                  |<---((mTLS))---->|                 |            |
 |                  |-----eStatus---->|                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> supply the enroll status telemetry to the registrar via HTTP-over-TLS POST to the registrar endpoint at <tt>/.well-known/brski/enrollstatus</tt>.
The request body <bcp14>MUST</bcp14> contain one previously acquired eStatus artifact as defined in <xref target="estatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>Upon receiving an eStatus artifact, the registrar <bcp14>MUST</bcp14> process it as described in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.
Due to the Registrar-Agent in the middle, instead of the BRSKI TLS session with the pledge, the registrar <bcp14>MUST</bcp14> verify the signature of the eStatus artifact and that it belongs to an accepted device of the domain based on the <tt>serial-number</tt> field of the EE certificate contained in the JWS Protected Header of the eStatus.
Note that if the Enroll Status indicates success, the eStatus artifact is signed with the new pledge EE credentials;
if it indicates failure, the pledge was unable to process the supplied EE certificate and therefore signed with its IDevID credentials.</t>
        <t>According to <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>, the registrar responds with an HTTP 200 OK in the success case or can fail with an HTTP 404 client error status code.
The registrar <bcp14>MAY</bcp14> use the response body to signal success/failure details to the service technician operating the Registrar-Agent.</t>
        <t>If the eStatus indicates failure, the registrar <bcp14>MAY</bcp14> decide that for security reasons the pledge is not allowed to reside in the domain.
In this case, the registrar <bcp14>MUST</bcp14> revoke the pledge EE certificate.
An example case for the registrar revoking the issued certificate is when the pledge was not able to verify the received EE certificate and therefore did not accept it for installation.</t>
        <section anchor="request-artifact-enroll-status-estatus">
          <name>Request Artifact: Enroll Status (eStatus)</name>
          <t>Identical to the Enroll Status (eStatus) artifact received from the pledge as defined in <xref target="estatus_artifact"/>.
The Registrar-Agent <bcp14>MUST NOT</bcp14> modify eStatus artifacts.</t>
        </section>
        <section anchor="response-no-artifact-2">
          <name>Response (no artifact)</name>
          <t>In this exchange, the response is a result of the HTTP(S) default transport for this specification.
There is no artifact provided to the Registrar-Agent.</t>
        </section>
      </section>
      <section anchor="query">
        <name>Query Pledge Status (qps)</name>
        <t>The following assumes that a Registrar-Agent may need to query the overall status of a pledge.
This information can be useful to solve errors, when the pledge was not able to connect to the target domain during bootstrapping.
A pledge <bcp14>MAY</bcp14> omit the dedicated endpoint for the Query Pledge Status operation (see <xref target="pledge_component"/>).</t>
        <t>TLS <bcp14>MAY</bcp14> be used to provide privacy for this exchange between the Registrar-Agent and the pledge (see <xref target="pledgehttps"/>).</t>
        <t><xref target="exchangesfig_uc2_11"/> shows the query and response for the overall pledge status and the following subsections describe the corresponding artifacts.</t>
        <figure anchor="exchangesfig_uc2_11">
          <name>Pledge Status exchange</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="256" width="576" viewBox="0 0 576 256" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,80" fill="none" stroke="black"/>
                <path d="M 16,160 L 16,224" fill="none" stroke="black"/>
                <path d="M 80,32 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,80" fill="none" stroke="black"/>
                <path d="M 168,160 L 168,224" fill="none" stroke="black"/>
                <path d="M 224,32 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,32 L 264,80" fill="none" stroke="black"/>
                <path d="M 312,160 L 312,224" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,32 L 400,80" fill="none" stroke="black"/>
                <path d="M 456,160 L 456,224" fill="none" stroke="black"/>
                <path d="M 472,32 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,32 L 512,80" fill="none" stroke="black"/>
                <path d="M 560,160 L 560,224" fill="none" stroke="black"/>
                <path d="M 568,32 L 568,80" fill="none" stroke="black"/>
                <path d="M 8,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 120,32 L 224,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 400,32 L 472,32" fill="none" stroke="black"/>
                <path d="M 512,32 L 568,32" fill="none" stroke="black"/>
                <path d="M 8,80 L 80,80" fill="none" stroke="black"/>
                <path d="M 120,80 L 224,80" fill="none" stroke="black"/>
                <path d="M 264,80 L 360,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 472,80" fill="none" stroke="black"/>
                <path d="M 512,80 L 568,80" fill="none" stroke="black"/>
                <path d="M 24,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 160,176" fill="none" stroke="black"/>
                <path d="M 24,192 L 64,192" fill="none" stroke="black"/>
                <path d="M 128,192 L 160,192" fill="none" stroke="black"/>
                <path d="M 24,208 L 64,208" fill="none" stroke="black"/>
                <path d="M 128,208 L 160,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="168,208 156,202.4 156,213.6" fill="black" transform="rotate(0,160,208)"/>
                <polygon class="arrowhead" points="168,176 156,170.4 156,181.6" fill="black" transform="rotate(0,160,176)"/>
                <polygon class="arrowhead" points="32,192 20,186.4 20,197.6" fill="black" transform="rotate(180,24,192)"/>
                <polygon class="arrowhead" points="32,176 20,170.4 20,181.6" fill="black" transform="rotate(180,24,176)"/>
                <g class="text">
                  <text x="44" y="52">Pledge</text>
                  <text x="172" y="52">Registrar-</text>
                  <text x="308" y="52">Domain</text>
                  <text x="432" y="52">Key</text>
                  <text x="540" y="52">MASA</text>
                  <text x="168" y="68">Agent</text>
                  <text x="312" y="68">Registrar</text>
                  <text x="436" y="68">Infra.</text>
                  <text x="16" y="100">|</text>
                  <text x="168" y="100">|</text>
                  <text x="312" y="100">|</text>
                  <text x="456" y="100">|</text>
                  <text x="516" y="100">Internet</text>
                  <text x="560" y="100">|</text>
                  <text x="16" y="116">~</text>
                  <text x="168" y="116">~</text>
                  <text x="312" y="116">~</text>
                  <text x="456" y="116">~</text>
                  <text x="560" y="116">~</text>
                  <text x="20" y="132">(11)</text>
                  <text x="64" y="132">Query</text>
                  <text x="116" y="132">Pledge</text>
                  <text x="172" y="132">Status</text>
                  <text x="16" y="148">~</text>
                  <text x="168" y="148">~</text>
                  <text x="312" y="148">~</text>
                  <text x="456" y="148">~</text>
                  <text x="560" y="148">~</text>
                  <text x="76" y="180">opt.</text>
                  <text x="112" y="180">TLS</text>
                  <text x="96" y="196">tStatus</text>
                  <text x="96" y="212">pStatus</text>
                  <text x="16" y="244">~</text>
                  <text x="168" y="244">~</text>
                  <text x="312" y="244">~</text>
                  <text x="456" y="244">~</text>
                  <text x="560" y="244">~</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
+--------+    +------------+    +-----------+    +--------+    +------+
| Pledge |    | Registrar- |    |  Domain   |    |  Key   |    | MASA |
|        |    |   Agent    |    | Registrar |    | Infra. |    |      |
+--------+    +------------+    +-----------+    +--------+    +------+
 |                  |                 |                 |   Internet |
 ~                  ~                 ~                 ~            ~
(11) Query Pledge Status
 ~                  ~                 ~                 ~            ~
 |                  |                 |                 |            |
 |<----opt. TLS---->|                 |                 |            |
 |<-----tStatus-----|                 |                 |            |
 |------pStatus---->|                 |                 |            |
 |                  |                 |                 |            |
 ~                  ~                 ~                 ~            ~
]]></artwork>
          </artset>
        </figure>
        <t>The Registrar-Agent <bcp14>SHALL</bcp14> query the pledge via HTTP(S) POST to the pledge endpoint at <tt>/.well-known/brski/qps</tt>.
The request body <bcp14>MUST</bcp14> contain the Status Trigger (tStatus) artifact as defined in <xref target="tstatus_artifact"/>.
In the request header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt> and the Accept field <bcp14>SHOULD</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge implements the Query Pledge Status endpoint, it <bcp14>MUST</bcp14> first verify the signature of the tStatus artifact using its trust anchors.
If the pledge does not possess any domain trust anchor yet, it <bcp14>MAY</bcp14> skip the signature verification and choose to reply without it.
In the case of success, it <bcp14>MUST</bcp14> reply with the Pledge Status (pStatus) artifact as defined in <xref target="pstatus_artifact"/> in the body of an HTTP 200 OK response.
In the response header, the Content-Type field <bcp14>MUST</bcp14> be set to <tt>application/jose+json</tt>.</t>
        <t>If the pledge is unable to create the pStatus artifact, the pledge responds with an HTTP error status code to the Registrar-Agent.
The following client error status codes can be used:</t>
        <ul spacing="normal">
          <li>
            <t>400 Bad Request: if the pledge detects an error in the format of the request.</t>
          </li>
          <li>
            <t>401 Unauthorized: if the signature of the Registrar-Agent cannot be verified using the installed trust anchors.</t>
          </li>
          <li>
            <t>406 Not Acceptable: if the Accept request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
          <li>
            <t>415 Unsupported Media Type: if the Content-Type request header field indicates a type that is unknown or unsupported, e.g., a type other than <tt>application/jose+json</tt>.</t>
          </li>
        </ul>
        <t>The pledge <bcp14>MAY</bcp14> use the response body to signal failure details to the service technician operating the Registrar-Agent.</t>
        <section anchor="tstatus_artifact">
          <name>Request Artifact: Status Trigger (tStatus)</name>
          <t>The Status Query (tStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, providing status query parameters.</t>
          <t>For the JWS-signed JSON format used by this specification, the tStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Status Trigger Data defined in <xref target="tstatus_data"/> in the JWS Payload.
<xref target="tstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="tstatus_representation">
            <name>tStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Status Trigger Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Status Trigger Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="tstatus_data">
            <name>JSON Status Trigger Data</name>
            <t>The JSON Status Trigger Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_req_def"/>:</t>
            <figure anchor="stat_req_def">
              <name>CDDL for JSON Status Trigger Data (statustrigger)</name>
              <artwork type="cddl" align="left"><![CDATA[
  statustrigger = {
      "version": uint,
      "serial-number": text,
      "created-on": tdate,
      "status-type": $status-type
  }

  $status-type /= "bootstrap"
  $status-type /= "operation"
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member is included to permit significant changes to the pledge status artifacts in the future.
The format and semantics in this document follow the status telemetry definitions of <xref target="RFC8995"/>.
Hence, the <tt>version</tt> <bcp14>SHALL</bcp14> be set to <tt>1</tt>.
A pledge (or Registrar-Agent) that receives a version larger than it knows about <bcp14>SHOULD</bcp14> log the contents and emit an operational notification.</t>
            <t>The <tt>serial-number</tt> member <bcp14>SHALL</bcp14> contain the product-serial-number corresponding to the X520SerialNumber field of the pledge IDevID certificate;
it can be correlated with the product-serial-number in the signing certificate contained in the JWS Protected Header of the Pledge Status response artifact.</t>
            <t>The <tt>created-on</tt> member <bcp14>SHALL</bcp14> contain the current date and time at tStatus creation as standard date/time string as defined in <xref section="5.6" sectionFormat="of" target="RFC3339"/>;
it can be used as reference time for the corresponding Pledge Status response artifact after correlating via the product-serial-number;
note that pledges may not have synchronized time to provide the created-on date and time on their own.</t>
            <t>The <tt>status-type</tt> allows for specifying which status information is to be returned.
As shown in <xref target="stat_req_def"/>, BRSKI-PRM defines two enumeration values:</t>
            <ul spacing="normal">
              <li>
                <t><tt>bootstrap</tt> to query current status information regarding the bootstrapping status (e.g., voucher processing and enrollment of the pledge into a domain).</t>
              </li>
              <li>
                <t><tt>operation</tt> to query current status information regarding the operational status (e.g., utilization of the bootstrapped EE credentials in communication with other peers).</t>
              </li>
            </ul>
            <t>Other specifications using this artifact may define further enumeration values, e.g., to query application-related status.</t>
            <t><xref target="stat_req_data"/> shows an example for the JSON Status Trigger Data using the status type <tt>bootstrap</tt>:</t>
            <figure anchor="stat_req_data">
              <name>JSON Status Trigger Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "created-on": "2022-08-12T02:37:39.235Z",
  "serial-number": "vendor-pledge4711",
  "status-type": "bootstrap"
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-7">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the tStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/></t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded Registrar-Agent EE certificate used to sign the tStatus artifact as well as the certificate chain</t>
              </li>
            </ul>
            <t><xref target="tstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="tstatus_header">
              <name>JWS Protected Header Example within tStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-7">
            <name>JWS Signature</name>
            <t>The Registrar-Agent <bcp14>MUST</bcp14> sign the tStatus artifact using its EE credentials.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
        <section anchor="pstatus_artifact">
          <name>Response Artifact: Pledge Status (pStatus)</name>
          <t>The Pledge Status (pStatus) artifact <bcp14>SHALL</bcp14> be an authenticated self-contained object signed by the pledge, containing status telemetry information.
The exact content depends on the Status Trigger parameter <tt>status-type</tt>.</t>
          <t>For the JWS-signed JSON format used by this specification, the pStatus artifact <bcp14>MUST</bcp14> use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>, which <bcp14>MUST</bcp14> contain the JSON Pledge Status Data defined in <xref target="pstatus_data"/> in the JWS Payload.
<xref target="pstatus_representation"/> summarizes the serialization of the JWS-signed JSON PER artifact:</t>
          <figure anchor="pstatus_representation">
            <name>pStatus Representation in General JWS JSON Serialization Syntax</name>
            <artwork align="left"><![CDATA[
{
  "payload": BASE64URL(UTF8(JSON Pledge Status Data)),
  "signatures": [
    {
      "protected": BASE64URL(UTF8(JWS Protected Header)),
      "signature": BASE64URL(JWS Signature)
    }
  ]
}
]]></artwork>
          </figure>
          <t>The JSON Pledge Status Data <bcp14>MUST</bcp14> be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the <tt>payload</tt> member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the <tt>protected</tt> member.
The generated JWS Signature is base64url-encoded to become the string value of the <tt>signature</tt> member.</t>
          <section anchor="pstatus_data">
            <name>JSON Pledge Status Data</name>
            <t>The JSON Pledge Status Data <bcp14>SHALL</bcp14> be a JSON document <xref target="RFC8259"/> that <bcp14>MUST</bcp14> conform with the CDDL <xref target="RFC8610"/> data model defined in <xref target="stat_res_def"/>, which has the same members as the <tt>voucherstatus-post</tt> CDDL defined in <xref section="5.7" sectionFormat="of" target="RFC8995"/> and the <tt>enrollstatus-post</tt> CDDL defined in <xref section="5.9.4" sectionFormat="of" target="RFC8995"/>.</t>
            <figure anchor="stat_res_def">
              <name>CDDL for JSON Pledge Status Data (pledgestatus)</name>
              <artwork type="cddl" align="left"><![CDATA[
  pledgestatus = {
    "version": uint,
    "status": bool,
    ?"reason" : text,
    "reason-context": { * $$arbitrary-map }
  }
]]></artwork>
            </figure>
            <t>The <tt>version</tt> member follows the definition in <xref target="tstatus_data"/> (same as in JSON Status Query Data).</t>
            <t>The <tt>reason</tt> and <tt>reason-context</tt> members follow the definitions in <xref target="vstatus_data"/>, i.e., in contrast to <xref target="RFC8995"/>, <tt>reason-context</tt> <bcp14>MUST</bcp14> be provided.</t>
            <t>The new pStatus artifact also utilizes the <tt>reason-context</tt> field to provide a distinguishable token.
For pStatus artifacts, the JSON object in the <tt>reason-context</tt> field <bcp14>MUST</bcp14> contain either the</t>
            <ul spacing="normal">
              <li>
                <t><tt>pbs-details</tt> member for status information corresponding to the status-type <tt>bootstrap</tt>, or the</t>
              </li>
              <li>
                <t><tt>pos-details</tt> member for status information corresponding to the status-type <tt>operation</tt> (see <xref target="tstatus_data"/>)</t>
              </li>
            </ul>
            <t>Other documents may add additional <tt>reason-context</tt> members correlating to other <tt>statustrigger</tt> status-types or to include further status information.</t>
            <t>For the <tt>pbs-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>factory-default</tt>: Pledge has not been bootstrapped.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-success</tt>: Pledge processed the voucher exchange successfully.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>voucher-error</tt>: Pledge voucher processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-success</tt>: Pledge processed the enrollment exchange successfully.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>enroll-error</tt>: Pledge enrollment-response processing terminated with error.
Additional information may be provided in the <tt>reason</tt> or <tt>reason-context</tt> members.
The pledge signs the response message using its IDevID certificate/credentials.</t>
              </li>
            </ul>
            <t>The <tt>pbs-details</tt> values <bcp14>SHALL</bcp14> be cumulative in the sense that <tt>enroll-success</tt> and <tt>enroll-error</tt> imply <tt>voucher-success</tt>.
<xref target="stat_example_bootstrap"/> below provides an example for bootstrap status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_bootstrap">
              <name>status-bootstrap JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": true,
  "reason": "Pledge processed enrollment exchange successfully.",
  "reason-context": {
    "pbs-details": "Pledge processed enrollment exchange successfully."
  }
}
]]></artwork>
            </figure>
            <t>For the <tt>pos-details</tt> member, the following values with the given semantics are defined, while additional information <bcp14>MAY</bcp14> be provided in the top-level <tt>reason</tt> member:</t>
            <ul spacing="normal">
              <li>
                <t><tt>connect-success</tt>: Pledge could successfully establish a connection to another peer.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
              <li>
                <t><tt>connect-error</tt>: Pledge connection establishment terminated with error.
The pledge signs the response message using its domain-owner signed EE certificate/credentials.</t>
              </li>
            </ul>
            <t><xref target="stat_example_operation"/> provides an example for operational status information in the JSON Pledge Status Data:</t>
            <figure anchor="stat_example_operation">
              <name>status-operation JSON Pledge Status Data Example</name>
              <artwork type="json" align="left"><![CDATA[
{
  "version": 1,
  "status": "connect-error",
  "reason": "TLS certificate could not be verified.",
  "reason-context": {
    "connect-error" : "Connection establishment terminated with error."
  }
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-protected-header-8">
            <name>JWS Protected Header</name>
            <t>The JWS Protected Header of the pStatus artifact <bcp14>MUST</bcp14> contain the following standard Header Parameters as defined in <xref target="RFC7515"/>:</t>
            <ul spacing="normal">
              <li>
                <t><tt>alg</tt>: <bcp14>SHALL</bcp14> contain the algorithm type used to create the signature, e.g., <tt>ES256</tt>, as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.</t>
              </li>
              <li>
                <t><tt>x5c</tt>: <bcp14>SHALL</bcp14> contain the base64-encoded pledge EE certificate used to sign the pStatus artifact;
it <bcp14>SHOULD</bcp14> also contain the certificate chain for this certificate;
if the certificate chain is not included in the x5c Header Parameter, it <bcp14>MUST</bcp14> be available at the Registrar-Agent for verification.</t>
              </li>
            </ul>
            <t><xref target="pstatus_header"/> shows an example for this JWS Protected Header:</t>
            <figure anchor="pstatus_header">
              <name>JWS Protected Header Example within pStatus</name>
              <artwork type="json" align="left"><![CDATA[
{
  "alg": "ES256",
  "x5c": [
    "base64encodedvalue==",
    "base64encodedvalue=="
  ]
}
]]></artwork>
            </figure>
          </section>
          <section anchor="jws-signature-8">
            <name>JWS Signature</name>
            <t>The pledge <bcp14>MUST</bcp14> sign the tStatus artifact using its IDevID or domain-owner signed EE credentials according to its bootstrapping status as defined in <xref target="pstatus_data"/>.
The JWS Signature is generated over the JWS Protected Header and the JWS Payload as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="log_hints">
      <name>Logging Considerations</name>
      <t>The registrar <bcp14>SHOULD</bcp14> log certain events to provide an audit trail for the onboarding of pledges into its domain.
This audit trail may support the root cause analysis in case of device or system failures.
Recommend key events for logging comprise:</t>
      <ul spacing="normal">
        <li>
          <t>Communication attempts between the pledge, Registrar-Agent, and registrar.</t>
        </li>
        <li>
          <t>Protocol handshakes and onboarding steps.</t>
        </li>
        <li>
          <t>Voucher requests and responses.</t>
        </li>
        <li>
          <t>Authentication successes or failures.</t>
        </li>
      </ul>
      <t>The logging <bcp14>SHOULD</bcp14> include the identity of the pledge, the identity of the Registrar-Agent that was interacting with the pledge, and relevant artifact fields, in particular telemetry information:</t>
      <ul spacing="normal">
        <li>
          <t>PVR received from Registrar-Agent</t>
        </li>
        <li>
          <t>Acceptance of a pledge into the domain</t>
        </li>
        <li>
          <t>Voucher provided to Registrar-Agent</t>
        </li>
        <li>
          <t>PER received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate requested</t>
        </li>
        <li>
          <t>Pledge EE certificate received from Domain CA</t>
        </li>
        <li>
          <t>Pledge EE certificate provided to Registrar-Agent</t>
        </li>
        <li>
          <t>CA Certificates provided to Registrar-Agent</t>
        </li>
        <li>
          <t>Voucher Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Enroll Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge Status received from Registrar-Agent</t>
        </li>
        <li>
          <t>Pledge EE certificate revoked</t>
        </li>
      </ul>
      <t>Furthermore, it is recommended to:</t>
      <ul spacing="normal">
        <li>
          <t>support adjustable logging levels (severity) to cater to different operational needs or failure situations.</t>
        </li>
        <li>
          <t>include meta information to distinguish logs that relate to different BRSKI approaches (e.g., BRSKI, BRSKI-AE, BRSKI-PRM, constraint BRSKI) that are likely supported in the same domain in parallel.</t>
        </li>
        <li>
          <t>include detailed error codes and diagnostics information as defined throughout the document or stemming from other used components or libraries also in the logging information.</t>
        </li>
        <li>
          <t>support synchronized time (e.g., via NTP) to include timestamps in logging to enable sequencing and  correlation of events.</t>
        </li>
        <li>
          <t>utilize standard logging formats (e.g., syslog) to allow for easy integration into log analysis tools and SIEM systems.</t>
        </li>
        <li>
          <t>utilize secure transmission of logs to centralized log servers, particularly in cloud or distributed environments (e.g., in case of syslog, <xref target="RFC9662"/> updates the utilized cipher suites for TLS and DTLS).</t>
        </li>
        <li>
          <t>allow for definition of key operational thresholds (e.g., high latency, failed onboarding attempts) to trigger alerts for proactive issue resolution.</t>
        </li>
        <li>
          <t>avoid inclusion of sensitive information (see also <xref target="priv_cons"/>)</t>
        </li>
      </ul>
      <t>For log analysis the following may be considered:</t>
      <ul spacing="normal">
        <li>
          <t>The registrar knows which Registrar-Agent collected which PVR from the included agent-signed-data object.</t>
        </li>
        <li>
          <t>The registrar always knows the connecting Registrar-Agent from the TLS client authentication using the Registrar-Agent EE certificate and can log it accordingly.</t>
        </li>
        <li>
          <t>The telemetry information from the pledge can be correlated to the voucher through the product-serial-number in the EE certificate contained in the JWS Protected Header of the status artifacts and the product-serial-number contained in the voucher. By this it can also be related to the PER.</t>
        </li>
      </ul>
      <t>With this, it can for instance be analyzed if multiple Registrar-Agents are involved in bootstrapping devices.
In addition, within the domain it can be analyzed, if the onboarding involved different Registrar-Agents or if different registrars have been used.</t>
      <t>In order to protect the registrar from overload attacks, a rate-limiting may be used by logging events from the same type just once.</t>
    </section>
    <section anchor="op_cons">
      <name>Operational Considerations</name>
      <t>As outlined in <xref target="architecture"/>, BRSKI-PRM introduces an additional component with the Registrar-Agent in the BRSKI architecture in addition to new modes of interaction to facilitate the communication between the pledge and the registrar. 
As outlined in <xref target="colo-regagt"/> the functional support of BRSKI-PRM can also be achieved using a Registrar-Agent co-located with the Registrar instead of a stand-alone Registrar-Agent, which may reduce operational complexity.</t>
      <t>This has an influence on the configuration and operation not only of the Registrar-Agent, but also for the registrar and the pledge.</t>
      <t>As outlined in <xref target="system-components"/>, there are additional configuration items dues to the introduction of the Registrar-Agent. This may increase operational complexity and potential misconfigurations in deploying and managing this entity:</t>
      <ul spacing="normal">
        <li>
          <t>A Registrar-Agent needs to be provided with a Registrar-Agent EE certificate, the domain registrar EE certificate and the list of pledges. BRSKI-PRM is open regarding the selected provisioning method, which may be automated or by configuration.</t>
        </li>
        <li>
          <t>Pledges may support either BRSKI-PRM only or combined with other modes of operation.</t>
        </li>
        <li>
          <t>Registrars may support either BRSKI-PRM only or combined with other BRSKI modes of operation. The distinction of BRSKI and BRSKI-PRM is done based on the provided endpoints of the registrar. An operator deploying pledges with a mixed set of operation need to ensure that the domain registrar supports all necessary options to ensure bootstrapping of pledges depending of the supported operational mode.</t>
        </li>
        <li>
          <t>In addition, registrars may  support a co-located Registrar-Agent, if nomadic operation of the Registrar-Agent is not required. This facilitates situations in which an operator wants to deploy BRSKI pledges acting as clients and BSKI pledges acting as servers.</t>
        </li>
      </ul>
      <t>With the Registrar-Agent enhancement a new component is introduced in the communication path between the pledge and the registrar. 
This likely increases the latency of the communication between the pledge and the registrar.
The increase in latency due to this additional component may be neglected given that the Registrar-Agent operates with nomadic connectivity as outlined in <xref target="arch_nomadic"/>.</t>
      <t>BRSKI-PRM requires pledges to possess an IDevID to enable onboarding in new domains. 
IDevID (and corresponding trust anchors) are expected to have a rather long lifetime. 
This may allow for a longer period between device acquisition and initial onboarding. 
Contrary, if devices that have been provided with an LDevID (and corresponding trust anchors) and temporarily taken out of service, immediate connectivity when bringing them back to operation may not be given, as the LDevIDs typically have a much shorter validity period compared to IDevIDs. 
It is therefore recommended to onboard them as new devices to ensure they possess valid LDevIDs.</t>
      <t>The key infrastructure as part of the customer domain discussed in <xref target="architecture"/> may be operated locally by the operator of that domain or may be provided as a third party service.</t>
      <t>Requirements to the utilized credentials authenticating and artifact signatures on the registrar as outlined in <xref target="registrar_component"/> may have operational implications when the registrar is part of a scalable framework as described in <xref section="1.3.1" sectionFormat="of" target="I-D.richardson-anima-registrar-considerations"/>.</t>
      <t>Besides the above, also consider the existing documents on operational modes for</t>
      <ul spacing="normal">
        <li>
          <t>BRSKI registrars in <xref target="I-D.richardson-anima-registrar-considerations"/></t>
        </li>
        <li>
          <t>BRSKI MASA in <xref target="I-D.richardson-anima-masa-considerations"/></t>
        </li>
      </ul>
    </section>
    <section anchor="iana_con">
      <name>IANA Considerations</name>
      <t>This document requires the following IANA actions.</t>
      <section anchor="brski-well-known-uris">
        <name>BRSKI Well-Known URIs</name>
        <t>IANA is requested to enhance the Registry entitled: "BRSKI Well-Known URIs" with the following endpoints:</t>
        <table anchor="iana_table_uri">
          <name>BRSKI Well-Known URIs Additions</name>
          <thead>
            <tr>
              <th align="left">Path Segment</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">requestenroll</td>
              <td align="left">Supply PER to registrar</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">wrappedcacerts</td>
              <td align="left">Obtain wrapped CA certificates</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tpvr</td>
              <td align="left">Trigger Pledge Voucher-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">tper</td>
              <td align="left">Trigger Pledge Enroll-Request</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">svr</td>
              <td align="left">Supply voucher to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">scac</td>
              <td align="left">Supply CA certificates to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">ser</td>
              <td align="left">Supply Enroll-Response to pledge</td>
              <td align="left">[THISRFC]</td>
            </tr>
            <tr>
              <td align="left">qps</td>
              <td align="left">Query pledge status</td>
              <td align="left">[THISRFC]</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sn_reg">
        <name>Service Name and Transport Protocol Port Number Registry</name>
        <t>IANA has registered the following service names:</t>
        <t><strong>Service Name:</strong> brski-pledge<br/>
          <strong>Transport Protocol(s):</strong> tcp<br/>
          <strong>Assignee:</strong> IESG <eref target="mailto:iesg@ietf.org">iesg@ietf.org</eref><br/>
          <strong>Contact:</strong> IETF Chair <eref target="mailto:chair@ietf.org">chair@ietf.org</eref><br/>
          <strong>Description:</strong> The Bootstrapping Remote Secure Key Infrastructure Pledge<br/>
          <strong>Reference:</strong> [THISRFC]</t>
      </section>
    </section>
    <section anchor="priv_cons">
      <name>Privacy Considerations</name>
      <t>In general, the privacy considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further privacy aspects need to be considered for:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>potentially no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <t><xref target="tpvr"/> describes to optionally apply TLS to protect the communication between the Registrar-Agent and the pledge.
The following is therefore applicable to the communication without the TLS protection.</t>
      <t>The credentials used by the Registrar-Agent to sign the data for the pledge <bcp14>SHOULD NOT</bcp14> contain any personal information.
Therefore, it is recommended to use an EE certificate associated with the commissioning device instead of an EE certificate associated with the service technician operating the device.
This avoids revealing potentially included personal information to Registrar and MASA.</t>
      <t>As logging is recommended to better handle failure situations, it is necessary to avoid capturing  sensitive or personal data.
Privacy-preserving measures in logs <bcp14>SHOULD</bcp14> be applied, such as:
* Avoid logging personally identifiable information unless unavoidable.
* Anonymize or pseudonymize data where possible.</t>
      <t>The communication between the pledge and the Registrar-Agent is performed over plain HTTP.
Therefore, it is subject to disclosure by a Dolev-Yao attacker (an "oppressive observer")<xref target="onpath"/>.
Depending on the requests and responses, the following information is disclosed.</t>
      <ul spacing="normal">
        <li>
          <t>the Pledge product-serial-number is contained in the trigger message for the PVR and in all responses from the pledge.
This information reveals the identity of the devices being bootstrapped and allows deduction of which products an operator is using in their environment.
As the communication between the pledge and the Registrar-Agent may be realized over wireless link, this information could easily be eavesdropped, if the wireless network is not encrypted.
Even if the wireless network is encrypted, if it uses a network-wide key, then layer-2 attacks (ARP/ND spoofing) could insert an on-path observer into the path.</t>
        </li>
        <li>
          <t>the Timestamp data could reveal the activation time of the device.</t>
        </li>
        <li>
          <t>the Status data of the device could reveal information about the current state of the device in the domain network.</t>
        </li>
      </ul>
    </section>
    <section anchor="sec_cons">
      <name>Security Considerations</name>
      <t>In general, the security considerations of <xref target="RFC8995"/> apply for BRSKI-PRM also.
Further security aspects are considered here related to:</t>
      <ul spacing="normal">
        <li>
          <t>the introduction of the additional component Registrar-Agent</t>
        </li>
        <li>
          <t>the reversal of the pledge communication direction (push mode, compared to BRSKI)</t>
        </li>
        <li>
          <t>no transport layer security between Registrar-Agent and pledge</t>
        </li>
      </ul>
      <section anchor="sec_cons-dos">
        <name>Denial of Service (DoS) Attack on Pledge</name>
        <t>Disrupting the pledge behavior by a DoS attack may prevent the bootstrapping of the pledge to a new domain.
Because in BRSKI-PRM the pledge responds to requests from real or illicit Registrar-Agents, pledges are more subject to DoS-attacks from Registrar-Agents in BRSKI-PRM than they are from illicit registrars in <xref target="RFC8995"/>, where pledges do initiate the connections.</t>
        <t>A DoS attack with a faked Registrar-Agent may block the bootstrapping of the pledge due changing state on the pledge (the pledge may produce a voucher-request, and refuse to produce another one).
One mitigation may be that the pledge does not limit the number of voucher-requests it creates until at least one has finished.
An alternative may be that the onboarding state may expire after a certain time, if no further interaction has happened.</t>
        <t>In addition, the pledge may assume that repeated triggering for PVR are the result of a communication error with the Registrar-Agent.
In that case the pledge <bcp14>MAY</bcp14> simply resend the PVR previously sent.
Note that in case of re-sending, a contained nonce and also the contained agent-signed-data in the PVR would consequently be reused.</t>
      </section>
      <section anchor="misuse-of-acquired-pvr-and-per-by-registrar-agent">
        <name>Misuse of acquired PVR and PER by Registrar-Agent</name>
        <t>A Registrar-Agent that uses previously requested PVR and PER for domain-A, may attempt to onboard the device into domain-B.  This can be detected by the domain registrar while PVR processing.
The domain registrar needs to verify that the <tt>proximity-registrar-cert</tt> field in the PVR matches its own registrar EE certificate.
In addition, the domain registrar needs to verify the association of the pledge to its domain based on the product-serial-number contained in the PVR and in the pledge IDevID certificate. (This is just part of the supply chain integration).
Moreover, the domain registrar verifies if the Registrar-Agent is authorized to interact with the pledge for voucher-requests and enroll-requests, based on the Registrar-Agent EE certificate data contained in the PVR.</t>
        <t>Mis-binding of a pledge by a faked domain registrar is countered as described in BRSKI security considerations <xref section="11.4" sectionFormat="of" target="RFC8995"/>.</t>
      </section>
      <section anchor="sec_cons_reg-agt">
        <name>Misuse of Registrar-Agent</name>
        <t>Concerns of misuse of a Registrar-Agent with a valid Registrar-Agent EE certificate may be addressed by utilizing short-lived certificates (e.g., valid for a day) to authenticate the Registrar-Agent against the domain registrar.
The Registrar-Agent EE certificate may have been acquired by a prior BRSKI run for the Registrar-Agent, if an IDevID is available on Registrar-Agent.
Alternatively, the Registrar-Agent EE certificate may be acquired by a service technician from the domain PKI system in an authenticated way.</t>
        <t>In addition, it is required that the Registrar-Agent EE certificate is valid for the complete bootstrapping phase.
This avoids that a Registrar-Agent could be misused to create arbitrary "agent-signed-data" objects to perform an authorized bootstrapping of a rogue pledge at a later point in time.
In this misuse "agent-signed-data" could be dated after the validity time of the Registrar-Agent EE certificate, due to missing trusted timestamp in the Registrar-Agents signature.
To address this, the registrar <bcp14>SHOULD</bcp14> verify the certificate used to create the signature on "agent-signed-data".</t>
        <t>Furthermore, the registrar also verifies the Registrar-Agent EE certificate used in the TLS handshake with the Registrar-Agent. 
If both certificates are verified successfully, the Registrar-Agent's signature can be considered as valid.
If the registrar detects a mismatch in the utilized certificates, it may conclude the usage of either an outdated "agent-signed-data" component in the PVR or a man-in-the-middle attack by a potentially unauthorized Registrar-Agent.</t>
      </section>
      <section anchor="sec_cons_mDNS">
        <name>Misuse of DNS-SD with mDNS to obtain list of pledges</name>
        <t>To discover a specific pledge a Registrar-Agent may query the Service Type in combination with the product-serial-number of a specific pledge, e.g., in the Service Instance Name or Service Subtype.
The pledge reacts on this if its product-serial-number is part of the query message.</t>
        <t>If the Registrar-Agent performs DNS-based Service Discovery without a specific product-serial-number, all pledges in the domain react if the functionality is supported.
This functionality enumerates and reveals the information of devices available in the domain.
The information about this is provided here as a feature to support the commissioning of devices.
A manufacturer may decide to support this feature only for devices not possessing an LDevID or to not support this feature at all, to avoid an enumeration in an operative domain.</t>
      </section>
      <section anchor="yang-module-security-considerations">
        <name>YANG Module Security Considerations</name>
        <t>The enhanced voucher-request described in <xref target="I-D.ietf-anima-rfc8366bis"/> is based on <xref target="RFC8995"/>, but uses a different encoding based on <xref target="I-D.ietf-anima-jws-voucher"/>.
The security considerations as described in <xref section="11.7" sectionFormat="of" target="RFC8995"/> (Security Considerations) apply.</t>
        <t>The YANG module specified in <xref target="I-D.ietf-anima-rfc8366bis"/> defines the schema for data that is subsequently encapsulated by a JOSE signed-data Content-type as described in <xref target="I-D.ietf-anima-jws-voucher"/>.
As such, all of the YANG-modeled data is protected against modification.</t>
        <t>Documents that define exclusively modules following the extension in <xref target="RFC8971"/> are not required to include the security template in Section 3.7.1.  Likewise, following the template is not required for modules that define YANG extensions such as <xref target="RFC7952"/>.</t>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers, in particular Brian E. Carpenter, Charlie Kaufman (Early SECDIR review), Martin BjÃ¶rklund (Early YANGDOCTORS review), Marco Tiloca (Early IOTDIR review), Oskar Camenzind, Hendrik Brockhaus, and Ingo Wenda for their input and discussion on use cases and call flows.
Further review input was provided by Jesser Bouzid, Dominik Tacke, Christian Spindler, and Julian Krieger.
Special thanks to Esko Dijk for the in deep review and the improving proposals.
Another special thanks for the detailed Shepherad review and connected discussions to Matthias Kovatsch.
Support in PoC implementations and comments resulting from the implementation was provided by Hong Rui Li and He Peng Jia.
Review comments in the context of a formal analysis of BRSKI-PRM have been provided by Marco Calipari.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC5272">
          <front>
            <title>Certificate Management over CMS (CMC)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="M. Myers" initials="M." surname="Myers"/>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS). This protocol addresses two immediate needs within the Internet Public Key Infrastructure (PKI) community:</t>
              <t>1. The need for an interface to public key certification products and services based on CMS and PKCS #10 (Public Key Cryptography Standard), and</t>
              <t>2. The need for a PKI enrollment protocol for encryption only keys due to algorithm or hardware design.</t>
              <t>CMC also requires the use of the transport document and the requirements usage document along with this document for a full definition. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5272"/>
          <seriesInfo name="DOI" value="10.17487/RFC5272"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
            <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
            <date month="February" year="2013"/>
            <abstract>
              <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
            <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
            <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
            <date month="October" year="2013"/>
            <abstract>
              <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8615">
          <front>
            <title>Well-Known Uniform Resource Identifiers (URIs)</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
            <date month="May" year="2019"/>
            <abstract>
              <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
              <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8615"/>
          <seriesInfo name="DOI" value="10.17487/RFC8615"/>
        </reference>
        <reference anchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="RFC9360">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="February" year="2023"/>
            <abstract>
              <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9360"/>
          <seriesInfo name="DOI" value="10.17487/RFC9360"/>
        </reference>
        <reference anchor="RFC9646">
          <front>
            <title>Conveying a Certificate Signing Request (CSR) in a Secure Zero-Touch Provisioning (SZTP) Bootstrapping Request</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>This document extends the input to the "get-bootstrapping-data" RPC defined in RFC 8572 to include an optional certificate signing request (CSR), enabling a bootstrapping device to additionally obtain an identity certificate (e.g., a Local Device Identifier (LDevID) from IEEE 802.1AR) as part of the "onboarding information" response provided in the RPC-reply.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9646"/>
          <seriesInfo name="DOI" value="10.17487/RFC9646"/>
        </reference>
        <reference anchor="I-D.ietf-anima-jws-voucher">
          <front>
            <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="15" month="January" year="2025"/>
            <abstract>
              <t>   This document introduces a variant of the RFC8366 voucher artifact in
   which CMS is replaced by the JSON Object Signing and Encryption
   (JOSE) mechanism described in RFC7515.  This supports deployments in
   which JOSE is preferred over CMS.  In addition to specifying the
   format, the "application/voucher-jws+json" media type is registered
   and examples are provided.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-16"/>
        </reference>
        <reference anchor="I-D.ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="1" month="April" year="2025"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a Pledge to an
   owner using an artifact signed, directly or indirectly, by the
   Pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the Pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, includes a number of desired
   extensions into the YANG.  The voucher request defined in RFC8995 is
   also now included in this document, as well as other YANG extensions
   needed for variants of BRSKI/RFC8995.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-14"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <author fullname="G. Klyne" initials="G." surname="Klyne"/>
            <author fullname="C. Newman" initials="C." surname="Newman"/>
            <date month="July" year="2002"/>
            <abstract>
              <t>This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3339"/>
          <seriesInfo name="DOI" value="10.17487/RFC3339"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC9525">
          <front>
            <title>Service Identity in TLS</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="R. Salz" initials="R." surname="Salz"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>Many application technologies enable secure communication between two entities by means of Transport Layer Security (TLS) with Internet Public Key Infrastructure using X.509 (PKIX) certificates. This document specifies procedures for representing and verifying the identity of application services in such interactions.</t>
              <t>This document obsoletes RFC 6125.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9525"/>
          <seriesInfo name="DOI" value="10.17487/RFC9525"/>
        </reference>
        <reference anchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
            <author fullname="K. Hartke" initials="K." surname="Hartke"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8407">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <date month="October" year="2018"/>
            <abstract>
              <t>This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="216"/>
          <seriesInfo name="RFC" value="8407"/>
          <seriesInfo name="DOI" value="10.17487/RFC8407"/>
        </reference>
        <reference anchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
            <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9110">
          <front>
            <title>HTTP Semantics</title>
            <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
            <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
            <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
            <date month="June" year="2022"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
              <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="97"/>
          <seriesInfo name="RFC" value="9110"/>
          <seriesInfo name="DOI" value="10.17487/RFC9110"/>
        </reference>
        <reference anchor="RFC9238">
          <front>
            <title>Loading Manufacturer Usage Description (MUD) URLs from QR Codes</title>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="J. Latour" initials="J." surname="Latour"/>
            <author fullname="H. Habibi Gharakheili" initials="H." surname="Habibi Gharakheili"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This informational document details a protocol to load Manufacturer Usage Description (MUD) definitions from RFC 8520 for devices that do not have them integrated.</t>
              <t>This document is published to inform the Internet community of this mechanism to allow interoperability and to serve as a basis of other standards work if there is interest.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9238"/>
          <seriesInfo name="DOI" value="10.17487/RFC9238"/>
        </reference>
        <reference anchor="RFC9662">
          <front>
            <title>Updates to the Cipher Suites in Secure Syslog</title>
            <author fullname="C. Lonvick" initials="C." surname="Lonvick"/>
            <author fullname="S. Turner" initials="S." surname="Turner"/>
            <author fullname="J. Salowey" initials="J." surname="Salowey"/>
            <date month="October" year="2024"/>
            <abstract>
              <t>RFCs 5425 and 6012 describe using TLS and DTLS to securely transport syslog messages. This document updates the cipher suites required by RFC 5245 (TLS Transport Mapping for Syslog) and RFC 6012 (DTLS Transport Mapping for Syslog). It also updates the protocol recommended by RFC 6012 for secure datagram transport.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9662"/>
          <seriesInfo name="DOI" value="10.17487/RFC9662"/>
        </reference>
        <reference anchor="RFC9733">
          <front>
            <title>BRSKI with Alternative Enrollment (BRSKI-AE)</title>
            <author fullname="D. von Oheimb" initials="D." role="editor" surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <date month="March" year="2025"/>
            <abstract>
              <t>This document defines enhancements to the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol, known as BRSKI with Alternative Enrollment (BRSKI-AE). BRSKI-AE extends BRSKI to support certificate enrollment mechanisms instead of the originally specified use of Enrollment over Secure Transport (EST). It supports certificate enrollment protocols such as the Certificate Management Protocol (CMP) that use authenticated self-contained signed objects for certification messages, allowing for flexibility in network device onboarding scenarios. The enhancements address use cases where the existing enrollment mechanism may not be feasible or optimal, providing a framework for integrating suitable alternative enrollment protocols. This document also updates the BRSKI reference architecture to accommodate these alternative methods, ensuring secure and scalable deployment across a range of network environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9733"/>
          <seriesInfo name="DOI" value="10.17487/RFC9733"/>
        </reference>
        <reference anchor="I-D.ietf-uta-require-tls13">
          <front>
            <title>New Protocols Must Require TLS 1.3</title>
            <author fullname="Rich Salz" initials="R." surname="Salz">
              <organization>Akamai Technologies</organization>
            </author>
            <author fullname="Nimrod Aviram" initials="N." surname="Aviram">
         </author>
            <date day="27" month="March" year="2025"/>
            <abstract>
              <t>   TLS 1.2 is in use and can be configured such that it provides good
   security properties.  TLS 1.3 use is increasing, and fixes some known
   deficiencies with TLS 1.2.  Examples of this include removing error-
   prone cryptographic primitives and encrypting more of the traffic so
   that it is not readable by outsiders.  For these reasons, new
   protocols that use TLS must require and assume the existence of TLS
   1.3.  As DTLS 1.3 is not widely available or deployed, this
   prescription does not pertain to DTLS (in any DTLS version); it
   pertains to TLS only.

   This document updates RFC9325 and discusses post-quantum cryptography
   and fixed weaknesses in TLS 1.2 as a rationale for that update.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-uta-require-tls13-10"/>
        </reference>
        <reference anchor="I-D.draft-ietf-emu-eap-arpa">
          <front>
            <title>The eap.arpa domain and EAP provisioning</title>
            <author fullname="Alan DeKok" initials="A." surname="DeKok">
              <organization>InkBridge Networks</organization>
            </author>
            <date day="29" month="January" year="2025"/>
            <abstract>
              <t>   This document defines the eap.arpa domain as a way for Extensible
   Authentication Protocol (EAP) peers to signal to EAP servers that
   they wish to obtain limited, and unauthenticated, network access.
   EAP peers signal which kind of access is required via certain pre-
   defined identifiers which use the Network Access Identifier (NAI)
   format of RFC 7542.  A table of identifiers and meanings is defined,
   which includes entries for RFC 9140.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-emu-eap-arpa-06"/>
        </reference>
        <reference anchor="I-D.richardson-anima-masa-considerations">
          <front>
            <title>Operational Considerations for Voucher infrastructure for BRSKI MASA</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Manufacturer Authorized Signing Authority (MASA) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the MASA is
   deployed into.  This document does not change any protocol
   mechanisms.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-masa-considerations-09"/>
        </reference>
        <reference anchor="I-D.richardson-anima-registrar-considerations">
          <front>
            <title>Operational Considerations for BRSKI Registrar</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Wei Pan" initials="W." surname="Pan">
              <organization>Huawei Technologies</organization>
            </author>
            <date day="22" month="January" year="2025"/>
            <abstract>
              <t>   This document describes a number of operational modes that a BRSKI
   Registration Authority (Registrar) may take on.

   Each mode is defined, and then each mode is given a relevance within
   an over applicability of what kind of organization the Registrar is
   deployed into.  This document does not change any protocol
   mechanisms.

   This document includes operational advice about avoiding unwanted
   consequences.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-richardson-anima-registrar-considerations-09"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-discovery">
          <front>
            <title>BRSKI discovery and variations</title>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei USA</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   This document specifies how BRSKI entities, such as registrars,
   proxies, pledges or others that are acting as responders, can be
   discovered and selected by BRSKI entities acting as initiators,
   especially in the face of variations in the protocols that can
   introduce non-interoperability when not equally supported by both
   responder and initiator.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-discovery-05"/>
        </reference>
        <reference anchor="IEEE-802.1AR">
          <front>
            <title>IEEE 802.1AR Secure Device Identifier</title>
            <author>
              <organization>Institute of Electrical and Electronics Engineers</organization>
            </author>
            <date year="2018" month="June"/>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="BRSKI-PRM-abstract" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-anima-update-on-brski-with-pledge-in-responder-mode-brski-prm-00">
          <front>
            <title>Abstract BRSKI-PRM Protocol Overview</title>
            <author>
              <organization/>
            </author>
            <date year="2022" month="March"/>
          </front>
        </reference>
        <reference anchor="onpath" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="androidnsd" target="https://developer.android.com/training/connect-devices-wirelessly">
          <front>
            <title>Android Developer: Connect devices wirelessly</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230000000000*/https://developer.android.com/training/connect-devices-wirelessly"/>
        </reference>
        <reference anchor="androidtrustfail" target="https://developer.android.com/training/articles/security-ssl">
          <front>
            <title>Security with Network Protocols</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="archived at" value="https://web.archive.org/web/20230326153937/https://developer.android.com/training/articles/security-ssl"/>
        </reference>
        <reference anchor="RFC9483">
          <front>
            <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
            <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
            <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
            <author fullname="S. Fries" initials="S." surname="Fries"/>
            <date month="November" year="2023"/>
            <abstract>
              <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9483"/>
          <seriesInfo name="DOI" value="10.17487/RFC9483"/>
        </reference>
        <reference anchor="RFC4648">
          <front>
            <title>The Base16, Base32, and Base64 Data Encodings</title>
            <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
            <date month="October" year="2006"/>
            <abstract>
              <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4648"/>
          <seriesInfo name="DOI" value="10.17487/RFC4648"/>
        </reference>
        <reference anchor="RFC8971">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for Virtual eXtensible Local Area Network (VXLAN)</title>
            <author fullname="S. Pallagatti" initials="S." role="editor" surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." role="editor" surname="Mirsky"/>
            <author fullname="S. Paragiri" initials="S." surname="Paragiri"/>
            <author fullname="V. Govindan" initials="V." surname="Govindan"/>
            <author fullname="M. Mudigonda" initials="M." surname="Mudigonda"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol in point-to-point Virtual eXtensible Local Area Network (VXLAN) tunnels used to form an overlay network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8971"/>
          <seriesInfo name="DOI" value="10.17487/RFC8971"/>
        </reference>
        <reference anchor="RFC7952">
          <front>
            <title>Defining and Using Metadata with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines a YANG extension that allows for defining metadata annotations in YANG modules. The document also specifies XML and JSON encoding of annotations and other rules for annotating instances of YANG data nodes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7952"/>
          <seriesInfo name="DOI" value="10.17487/RFC7952"/>
        </reference>
        <reference anchor="I-D.irtf-t2trg-taxonomy-manufacturer-anchors">
          <front>
            <title>A Taxonomy of operational security considerations for manufacturer installed keys and Trust Anchors</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="29" month="March" year="2025"/>
            <abstract>
              <t>   This document provides a taxonomy of methods used by manufacturers of
   silicon and devices to secure private keys and public trust anchors.
   This deals with two related activities: how trust anchors and private
   keys are installed into devices during manufacturing, and how the
   related manufacturer held private keys are secured against
   disclosure.

   This document does not evaluate the different mechanisms, but rather
   just serves to name them in a consistent manner in order to aid in
   communication.

   RFCEDITOR: please remove this paragraph.  This work is occurring in
   https://github.com/mcr/idevid-security-considerations

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-t2trg-taxonomy-manufacturer-anchors-07"/>
        </reference>
      </references>
    </references>
    <?line 2829?>

<section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar-agent">
        <name>Example Pledge Voucher-Request (PVR) - from Pledge to Registrar-Agent</name>
        <t>The following is an example request sent from a Pledge to the Registrar-Agent, in "General JWS JSON Serialization".
The message size of this PVR is: 2973 bytes</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge-Voucher-Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsIm5vbmNlIjoia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbi\
I6IjIwMjQtMDYtMjRUMDk6MDE6MjQuNTU2WiIsImFnZW50LXByb3ZpZGVkLXByb3hpbW\
l0eS1yZWdpc3RyYXItY2VydCI6Ik1JSUI0akNDQVlpZ0F3SUJBZ0lHQVhZNzJiYlpNQW\
9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bGMzTXhEVEFMQm\
dOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MHlNREV5TURjd0\
5qRTRNVEphRncwek1ERXlNRGN3TmpFNE1USmFNRDR4RXpBUkJnTlZCQW9NQ2sxNVFuVn\
phVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4R0RBV0JnTlZCQU1NRDBSdmJXRnBibE\
psWjJsemRISmhjakJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQmsxNk\
svaTc5b1JrSzVZYmVQZzhVU1I4L3VzMWRQVWlaSE10b2tTZHFLVzVmbldzQmQrcVJMN1\
dSZmZlV2t5Z2Vib0pmSWxsdXJjaTI1d25oaU9WQ0dqZXpCNU1CMEdBMVVkSlFRV01CUU\
dDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RIREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdTQV\
lEVlIwUkJFRXdQNElkY21WbmFYTjBjbUZ5TFhSbGMzUXVjMmxsYldWdWN5MWlkQzV1Wl\
hTQ0huSmxaMmx6ZEhKaGNpMTBaWE4wTmk1emFXVnRaVzV6TFdKMExtNWxkREFLQmdncW\
hrak9QUVFEQWdOSUFEQkZBaUJ4bGRCaFpxMEV2NUpMMlByV0N0eVM2aERZVzF5Q08vUm\
F1YnBDN01hSURnSWhBTFNKYmdMbmdoYmJBZzBkY1dGVVZvL2dHTjAvand6SlowU2wyaD\
R4SVhrMSIsImFnZW50LXNpZ25lZC1kYXRhIjoiZXlKd1lYbHNiMkZrSWpvaVpYbEtjRn\
BZVW0xTVdGcDJaRmRPYjFwWVNYUmpiVlo0WkZkV2VtUkRNWGRqYlRBMldWZGtiR0p1VV\
hSak1teHVZbTFXYTB4WFVtaGtSMFZwVDI1emFWa3pTbXhaV0ZKc1drTXhkbUpwU1RaSm\
FrbDNUV3BKZEUxRWEzUk5ha3BWVFVSVk5rNUVUVFpPVkVGMVRWUkpNVmRwU1hOSmJrNX\
NZMjFzYUdKRE1YVmtWekZwV2xoSmFVOXBTWGROVkVsNlRrUlZNazU2WnpWSmJqRTVJaX\
dpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWlhsS2NtRlhVV2xQYV\
VwVlZFZE5NMWRZYUV4V2JGWldaVzVLTTFKVVRsSlhWRlpEV2xaa2IyTXlNVVZOTW1NNV\
NXbDNhVmxYZUc1SmFtOXBVbFpOZVU1VVdXbG1VU0lzSW5OcFoyNWhkSFZ5WlNJNklrd3\
lZVEJsY3pWZkxXZHNZVjkwTjFVME1VbFJXRmxJU1RSQlMxVldVRkZmTTFSbGQxUTFiMF\
ZWWVVOdFVIQktaMmRyU0c1d09WTk1aVFZ1YWkxbldGbFRiMk5sT1RoeFFXSnROa0YwZF\
MxRlIxUkxZMDVSSW4xZGZRMEsifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNV\
NU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
Q0FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3\
Q1FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZ\
RFZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRt\
bGpaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpj\
RUVYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2\
TXgyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcx\
aGMyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1C\
YUFGRlFMak56UC9TL2tvdWpRd2pnNUU1ZnZ3Y1liTUJNR0ExVWRKUVFNTUFvR0NDc0dB\
UVVGQndNQ01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBREJF\
QWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWENt\
SkxUekVsdkQycG9LNmR4NmwxL3V5bVRuYlFERGZKbGF0dVgyUm9PRT0iXSwidHlwIjoi\
dm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In0",
      "signature": "ntAgC7GT7xIDYcHBXoYej8uIUI6WR2Iv-7T1CaR-J6-xS60D\
iWS1-vfc5Uu5INZS1dyWZ4vVH6uaoPceRxNc8g"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Parboiled Registrar Voucher-Request (RVR) - from Registrar to MASA</name>
        <t>The term parboiled refers to food which is partially cooked.  In <xref target="RFC8995"/>, the term refers to a pledge-voucher-request (PVR) which has
been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>
        <t>The following is an example registrar-voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".
The message size of this RVR is: 7533 bytes</t>
        <figure anchor="ExampleRegistrarVoucherRequestfigure">
          <name>Example Registrar-Voucher-Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdC1wcm06dm91Y2hlciI6eyJhc3\
NlcnRpb24iOiJhZ2VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Nj\
c4OSIsImlkZXZpZC1pc3N1ZXIiOiJCQmd3Rm9BVVZBdU0zTS85TCtTaTZORENPRGtUbC\
svQnhocz0iLCJub25jZSI6ImtoTnlLcE10aGNjaWExclh3NDQvdlE9PSIsInByaW9yLX\
NpZ25lZC12b3VjaGVyLXJlcXVlc3QiOiJleUp3WVhsc2IyRmtJam9pWlhsS2NGcFlVbT\
FNV0ZwMlpGZE9iMXBZU1hSamJWWjRaRmRXZW1SRE1YZGpiVEEyWkcwNU1Wa3lhR3hqYV\
VrMlpYbEthR016VG14amJsSndZakkwYVU5cFNtaGFNbFoxWkVNeGQyTnRPVFJoVnpGd1\
pFaHJhVXhEU25wYVdFcHdXVmQzZEdKdVZuUlpiVlo1U1dwdmFVMUVSWGxOZWxFeFRtcG\
pORTlUU1hOSmJUVjJZbTFPYkVscWIybGhNbWhQWlZWMGQxUllVbTlaTWs1d1dWUkdlVm\
RJWXpCT1F6a3lWVlF3T1VscGQybFpNMHBzV1ZoU2JGcERNWFppYVVrMlNXcEpkMDFxVV\
hSTlJGbDBUV3BTVlUxRWF6Wk5SRVUyVFdwUmRVNVVWVEpYYVVselNXMUdibHBYTlRCTV\
dFSjVZak5hY0ZwSFZtdE1XRUo1WWpOb2NHSlhiREJsVXpGNVdsZGtjR016VW5sWldFbD\
BXVEpXZVdSRFNUWkphekZLVTFWSk1HRnJUa1JSVm14d1dqQkdNMU5WU2tKYU1HeElVVl\
pvV2s1NlNtbFpiSEJPVVZjNVNGRXdUbmhTTVU1T1RrUnNRMUZWTVVSVVZWSldaVVZXTm\
xGV1NrTmFNRFZYVVd0R2RsUlZUbkpOVkZaU1lteGFObGxXWXpGaVIwMTZWRmhvUlZaRl\
JrMVJiV1JQVm10S1Fsa3dNVU5TYXpWM1drVmtWbVZGVWpaUlZUVkRXakExVjFGclJrNV\
VWVXB6VlcxNGFrMHhTa1ZWVmxKQ1dsVmFNMDFJYkU1U1JWWTFWRlZTYW1Rd05YRlNWRk\
pPVmtWd2FGSnVZM2RsYXpGRlVsaHNUbEpIVGpOVWJYQkdUa1V4VlZOdFJrNVNSRkkwVW\
xod1FsVnJTbTVVYkZwRFVWYzVUbEV5YzNoT1ZrWjFWbTV3YUZaNlZuTlplazVPWlVWU1\
ZWRlZlRU5hTURWWFVXdEdhbFJWU2tkVWJrSnJVakZXTkZJd1VrSldNRXB1Vkd4YVExRl\
ZNVTVTUkVKVFpHMUtXRkp1UW1saVJYQnpWMnBLYzJWdFVrbFRiV2hxWVd0S1lWUlZTaz\
VTTUVvMVkxVmtWRlJVVVRWUlYyUkdVakJPUkdOVlpGUlVWRkUxVVZoa1JsTkZSWGRUVl\
VaRFVXMXplRTVyYzNaaFZHTTFZakZLY2xONlZscFpiVlpSV25wb1ZsVXhTVFJNTTFaNl\
RWZFNVVlpYYkdGVFJURXdZakowVkZwSVJreFdlbFp0WW14a2VsRnRVWEpqVmtwTlRqRm\
tVMXB0V214V01uUTFXakpXYVdJd2NHMVRWM2h6WkZoS2FtRlVTVEZrTWpWdllWVTVWMU\
V3WkhGYVdIQkRUbFV4UTAxRlpFSk5WbFpyVTJ4R1VsWXdNVU5WVldSRVVUTk9TRkZXUm\
xaU2Ewb3pWRlZLUTFveVpIbFJiV1JHVW10S1Vsa3dVa2xTUlVaUVVXMWtUMVpyYUZKUF\
JVcENXbXBvUmxGclJrNVJNRWt3VVZoa1ZGRldiRVZXYkVsM1ZXdEtSbEpZWkZGT1JXeH\
JXVEl4VjJKdFJsbFVha0pxWWxWYU5WUkdhRk5pUjAxNlZWaFdhazF0ZUhOWmJHUlhaRm\
RPTlUxWGJHdFJlbFl4VjJ4b1ZGRXdhSFZUYlhoaFRXMTRObHBGYUV0aFIwNXdUVlJDWV\
ZkRk5IZFViV3N4WlcxR1dGWnVVbUZXZWxZMlZFWmtTMDFGZUhST1YzaHJVa1ZHVEZGdF\
pHNWpWMmh5WVdzNVVWVldSa1ZSVjJSUFUxVkdSVkZyV2tKaFZVbzBZa2RTUTJGR2NIaE\
5SVll5VGxWd1RVMXNRbmxXTUU0d1pWWk5NbUZGVWxwV2VrWTFVVEE0ZGxWdFJqRlpia0\
pFVGpBeGFGTlZVbTVUVjJoQ1ZFWk9TMWx0WkUxaWJXUnZXVzFLUWxwNlFtdFpNV1JIVm\
xaYWRrd3laRWhVYWtGMllXNWtObE5zYjNkVk1uZDVZVVJTTkZOV2FISk5VMGx6U1cxR2\
JscFhOVEJNV0U1d1dqSTFiRnBETVd0WldGSm9TV3B2YVZwWWJFdGtNV3haWWtoT2FVMX\
JXbkpUVjNCMllWWndXV0pGZEdwU2JrSmFWbGN3ZUZSV1pFZGpSRXBoVW0xU1VGbHFSbm\
RYVms1WlZXMXdhVlpzYnpCWGExcHJWakpXZEZWclVrNVhSMUp4V1d4U1FrMXNaRmRhUj\
NScFVqQndNVlpXYUZOaGF6RjBaVWhXV21KVVJsaFpWRUkwVjBaV2RHRkhkRk5OUmxwM1\
ZrUkpNV1Z0UmxkaE0zQlVZbGhvWVZZd1drdGpNV1J5VkZob2EySlZjSGRWTVZKaFUyMU\
djbUpFVGxWV00wSkxXa1ZWZUZKWFJYcFZhelZvWVROQ1YxWkdWbE5XYXpWeVRsVldWVl\
pHY0ZCV2ExWkhUVlpTVjFWcmNFNVdiVkozVlRGb1QxTnRTbkpPV0U1YVRXcEdlbGxWWk\
V0U1JURlpWbTEwVjJWclduZFdNbmh2VTIxR1ZrOVlRbFJYUjFKUFZtdFdjMDVzVW5KVm\
JGcE9ZWHBWTWxkdWNGZFRiVXB4VWxSV1NtRllaSEJaZWtwelltMUtkRkpxUW10WFJYQn\
pXVE5zU2s1c1kzcGpNbXhxVTBWd01scEZaRmRoYlZKSVZtMTBTbUZ0T1hCWGJHaHpVek\
pPZEZKc2FGWldNbmhSV1ZaV2QxWnNXa1phUlRWT1RWZFNXbGxWVmpSV01rcEhWMnhrWV\
ZaNlZreFVWRVpMVmxaU2MxTnNhRmRTYkhCRlZqSjRZV0V5U1hsVVdHeE9WbFphVDFSWE\
1VNU9WazVZWWtST2FGWnRlRmxhVldNeFUyMUdkRTlZUWxaaVJuQlBXbFpWTVZaV1pGaG\
lSekZXVlRCc2VsTlhOVTlqUm05NVRsZG9hMU5HV2pWWGJFNUtUbXRzY21RemJGcFdSVX\
B6V1ROd1YxcHJlRmhhU0U1YVZtcHJkMVJxUmxaTlJURldZa1pLV0ZKdGVFcFZNVkpUVV\
d4TmVGWnNaRlpTYTFwdFZGUkdVMkpIVVhoVlZFWnBUVVphVjFkV1ZrOWtSbFpKVVd0MF\
lVMXRVbmxWTUdNeFpEQTVWMVJyTVdGV1Jsb3hXVmRyZUdKc1pFZGlSbEpwVFdzMWMxUX\
hVbTlsUmtaWVUyNVNUMkV3V1hkYVJrMTRVbXhKZUZWcmVGcE5SRlpUVTFjMGVGcEhXbE\
pOUlhOcFpsZ3dJaXdpYzJsbmJtRjBkWEpsY3lJNlczc2ljSEp2ZEdWamRHVmtJam9pWl\
hsS05FNVhUV2xQYkhOcFZGVnNTbEZwZEZWUk1FNUNXVlZPYmxGWVpFcFJhMFp1VTFWa1\
FsZEhOVmRoYms1V1RsVXhRbUl3WkVSUk0wWklWVEF3TUU5VlNrSlVWVTVPVWtSQ05GRX\
pjRUpUYTBwdVZHeGFRMUZXYkZWUlYzUkhWV3N4VTFaWVpFWmtNV3hGVm14R1VsTXdVa0\
psUlhSb1ZucFdkVlV5TVhOa1ZtOTNWRzVhYW1KclJqUlNibkJDVm10S2JsUnNXa05SVl\
RGT1VrZDBkMk5IU25SYVJYUm9WbnBXZFZaclpGZGxiVkpHVkd0S1RsRXdSbGxTUmxKS1\
pVVXhSVmRZWkU5U1JVVjRWR3RTV21WRk5VZGlNV3hGWlcxek1WUXhVbkpsUlRGeFZGaG\
9UbUZyTUhoVU1WSldUbFprY1ZGc1RrNVZXRTR6VVRGR1dsSkdXbEpWVldSR1pEQndRMV\
pXVWtaV2F6RkRWRlZrUWsxV1ZrWlJNbVF6VkZaT2RHSklWbUZOU0VKM1dXMHhhMUpIU1\
hwVGJtUk9WV3N4TTFKV1JscFNSbHBTVlZWYVJtUXlPVE5VVmxKS1pXczFSVlpVU2s5bG\
JXTXhWRlpLYW1Rd1dsSlhWVkpYVlZaR1JWSkZSVEZUTWtaWVRsYzFWR0pYZURGWGFrSl\
RZa2RTZEdKSGNHRldSVXBoVkZWS1RsSXdTalZqVldSVVZGUlJOVkZYWkVaU01FNUVZMV\
ZrVkZSVVVUVlJXR1JHVTBWRmQxTlZSa05SZW1NMVlrZHNhRlZ0VGtOaGJIQnFVbFZXV1\
dSNlpIbFdWMVpvWkc1U1NGTnJSakZUUkZKM1lYcFNTazVFU2pKWlZVcE9ZekZWZUUxWG\
JFMVNSVTVFVkVkMFYyRklVbFpXYWtsNFlsaGFhRk13VGpKVVdHZDVWMU4wVkZSWFpGSl\
BSMXB0WkRCM2VVMHpiM3BXUld4WFVXeGtjVnBHVWtObGF6RkVZekJrUkZFelRraFJWa1\
pXVW10S00xSlhaRU5SYW1oWVUwWmplR0ZIVFhsU1dGSnJVakZhTmxwRlRURmxiVVpZVm\
01U1lWWjZWalpVUm1STFRVVjRkRTVYZUd0U1J6Z3hWR3RTVW1Wck1VTlBSV1JDVFZaV2\
ExTllaRkpYVlRGRFdWVkdSMUpzUmsxaGF6VTJWVU01VkV3eWRIWmtWM0JTWkRKd2JrNV\
ZWVEZhYmxveldURnNhVlJWU2s1U01FVjRWbGRTUzFWV1JrNVVWVVoyVWpCT1JHTXdaRU\
pWVmxaSFVXNWtUbEV3TVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRWxhTU\
ZKQ1V6QktibG96Um05aE1uQlFWVVpHVWxKRlJtNVVhMmhDVWtWS1JsRlhiRU5rVkU0el\
ZXdEtUV013Y0U1VlJGWjZWRlJCTTAxRlozSldWVnA1WlZVMVZrNXRaRXhsYTNoUVZXMU\
9SMlZXU2xOVU1uaDRZMVZvY0Zvd2JHNVhSVTUwVTJ0NFZXVnJWbk5rYTFGNVkwYzVURT\
V0VWpST2JYZDRURE5XTldKV1VuVlpiRVpGVWtkYVMySkhSakJrVm1kNVZXMDVVRkpVTU\
dsWVUzZHBaRWhzZDBscWIybGtiVGt4V1RKb2JHTnBNWEZrTTAxeVlXNU9kbUpwU1hOSm\
JVWnpXbmxKTmtsclZsUk5hbFV5U1c0d0lpd2ljMmxuYm1GMGRYSmxJam9pYm5SQlowTT\
NSMVEzZUVsRVdXTklRbGh2V1dWcU9IVkpWVWsyVjFJeVNYWXROMVF4UTJGU0xVbzJMWG\
hUTmpCRWFWZFRNUzEyWm1NMVZYVTFTVTVhVXpGa2VWZGFOSFpXU0RaMVlXOVFZMlZTZU\
U1ak9HY2lmVjE5IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMjRUMDk6MDI6MTUuNTczWi\
IsImFnZW50LXNpZ24tY2VydCI6WyJNSUlCOWpDQ0FaMmdBd0lCQWdJRVl4WHM3VEFLQm\
dncWhrak9QUVFEQWpBK01STXdFUVlEVlFRS0RBcE5lVUoxYzJsdVpYTnpNUTB3Q3dZRF\
ZRUUhEQVJUYVhSbE1SZ3dGZ1lEVlFRRERBOVVaWE4wVUhWemFFMXZaR1ZzUTBFd0hoY0\
5Nakl3T1RBMU1USXpORFV6V2hjTk1qVXdPVEExTVRJek5EVXpXakJnTVFzd0NRWURWUV\
FHRXdKQlVURVNNQkFHQTFVRUNnd0pUWGxEYjIxd1lXNTVNUlV3RXdZRFZRUUxEQXhOZV\
ZOMVluTnBaR2xoY25reEpqQWtCZ05WQkFNTUhVMTVVMmwwWlZCMWMyaE5iMlJsYkZKbF\
oybHpkSEpoY2tGblpXNTBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQU\
V4aHZuYWtDSmVpZ3pqWkFVYU5adVAwMWUrUWxVY1E5UjJMSWs2UkI2dmtjdFdMS3BaWC\
85TGthNEdxckFWWmhhM3ZKcmhGc0l4OEdUQkhqWnZLMVd1Nk5uTUdVd0RnWURWUjBQQV\
FIL0JBUURBZ09JTUI4R0ExVWRJd1FZTUJhQUZHK2hQVzUxN1ovb3NSQ0ZUc2NlUDY4bj\
kzc2pNQjBHQTFVZERnUVdCQlJNdHp0akVwVlJUT3ZBVGRCamtGNWFHeVlQZURBVEJnTl\
ZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmJoRG\
pwbDJ2cWNONnBSVjRuZVU0dFFsWWFOTit4ZjNnSnUrMHBKblNBL1FJZ0ljcXpsZmhYaU\
Qxc0g3VTVQdUtwVVpzSWpkRjRSenhzQTZxSnRFTEQyUHM9Il19fQ",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJ\
Rk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVN\
VEV3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJs\
emRISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJn\
Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNr\
YVB5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPLzBDREVqSWtCUW9idzhZS3Fq\
dHhKSFZTR1RqOUtPb3ljd0pUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RIREFPQmdO\
VkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdZcjJMZnFvYUNL\
REY0UkFjTW1KaStOQ1pxZFNpdVZ1Z0lTQTdPaEtScTNZQ0lEeG5QTU1ucFhBTVRyUEp1\
UFd5Y2VFUjExUHhIT24rMENwU0hpMnFncFdYIl0sInR5cCI6InZvdWNoZXItandzK2pz\
b24iLCJhbGciOiJFUzI1NiJ9",
      "signature": "_mcsO5vo0g2rFmBvTb-UsOWkEmhYNfQ5XmbuKHKH0ZLjea-7\
911BilAMdFORmT4vCzWKBSH6HSqtpIRcSSxx7Q"
    }
  ]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher - from MASA to Pledge, via Registrar and Registrar-Agent</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization". The message size of this Voucher is: 1916 bytes</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher-Response from MASA</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload":"eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2V\
udC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjo\
iTDNJSjZocHRIQ0lRb054YWFiOUhXQT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDQtMjZ\
UMDU6MTY6MjguNzI2WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F\
3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTV\
RblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1J\
EUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXp\
BUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJ\
nTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUF\
CT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2N\
ZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXd\
FQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0J\
CVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkd\
BaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUUR\
HMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures":[{
    "protected":"eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU1\
Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeEt\
hVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQjR\
YRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQTF\
VRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRUF\
3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQVR\
CZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOFI\
wWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0d\
CSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSXp\
qMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU5\
FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2F\
FS2JzVkRpVT0iXSwiYWxnIjoiRVMyNTYifQ",
    "signature":"0TB5lr-cs1jqka2vNbQm3bBYWfLJd8zdVKIoV53eo2YgSITnKKY\
TvHMUw0wx9wdyuNVjNoAgLysNIgEvlcltBw"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-masa-issued-voucher-with-additional-registrar-signature-from-masa-to-pledge-via-registrar-and-registrar-agent">
        <name>Example Voucher, MASA issued Voucher with additional Registrar signature (from MASA to Pledge, via Registrar and Registrar-Agent)</name>
        <t>The following is an example voucher-response from MASA to Pledge via Registrar and Registrar-Agent, in "General JWS JSON Serialization".
The message size of this Voucher is: 2994 bytes</t>
        <figure anchor="ExampleVoucherResponseWithRegSignfigure">
          <name>Example Voucher-Response from MASA, with additional Registrar signature</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJhZ2\
VudC1wcm94aW1pdHkiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIj\
oia2hOeUtwTXRoY2NpYTFyWHc0NC92UT09IiwiY3JlYXRlZC1vbiI6IjIwMjQtMDYtMj\
RUMDk6MDI6MTYuMjQ0WiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0\
F3SUJBZ0lHQVcwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMT\
VRblZ6YVc1bGMzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1\
JEUVRBZUZ3MHhPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RX\
pBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTk\
JnTlZCQU1NQmxSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSU\
FCT2t2a1RIdThRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2\
NZNVBKaWJ2Z0hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRX\
dFQi93UUlNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0\
JCVG9aSU16UWRzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQk\
dBaUVBdHhRMytJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUU\
RHMnVSQ0hsVnEzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [
    {
      "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNr\
WU1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RB\
eEthVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJN\
QjRYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtH\
QTFVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFV\
RUF3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dU\
QVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJz\
OFIwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZP\
S0dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29a\
SXpqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4L3R6VW9RL1NzeWRMMzBEUUlO\
RXRjTjltQ1RYUEFpRUF2SWIzbytGTzNCVG5jTEZzYUpaUkFrZDd6T3Vzbi8vWktPYUVL\
YnNWRGlVPSJdLCJ0eXAiOiJ2b3VjaGVyLWp3cytqc29uIiwiYWxnIjoiRVMyNTYifQ",
      "signature": "SFtc2xqK8xN2KVqkYKJl7EUU8UJAai3VvCuK8LIfH8HZFvrr\
hqGiY8vK5cbQHQCjVcroFLn7IyhH708XAdstAQ"
    },
    {
      "protected": "eyJ4NWMiOlsiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJi\
Wk1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERU\
QUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlN\
RGN3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1\
UW5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldG\
cGJsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJC\
azE2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtx\
Ukw3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFX\
TUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRB\
d1NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRD\
NXVaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtC\
Z2dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlD\
Ty9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBT\
bDJoNHhJWGsxIl0sInR5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9\
",
      "signature": "0Q7_a7L4ahn2vmfSxxkKg1xsOMMc8_D7B_Ilzqv5DKzCMkc7\
8YeeezDsuh4Z5JNVQUYHPp7LsK_AS_WH8TdVzA"
    }
  ]
}

]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="pledgehttps">
      <name>HTTP-over-TLS operations between Registrar-Agent and Pledge</name>
      <t>The use of HTTP-over-TLS between Registrar-Agent and pledge has been identified as an optional mechanism.</t>
      <t>Provided that the key-agreement in the underlying TLS protocol connection can be properly authenticated, the use of TLS provides privacy for the voucher and enrollment operations between the pledge and the Registrar-Agent.
The authenticity of the onboarding and enrollment is not dependent upon the security of the TLS connection.</t>
      <t>The use of HTTP-over-TLS is not mandated by this document for two main reasons:</t>
      <ol spacing="normal" type="1"><li>
          <t>A certificate is generally required in order to do TLS.  While there are other modes of authentication including PSK, various EAP methods, and raw public key, they do not help as there is no previous relationship between the Registrar-Agent and the pledge.</t>
        </li>
        <li>
          <t>The pledge can use its IDevID certificate to authenticate itself, but <xref target="RFC9525"/> DNS-ID methods do not apply, as the pledge does not have a FQDN, and hence cannot be identified by DNS name.  Instead a new mechanism is required, which authenticates the X520SerialNumber DN attribute that must be present in every IDevID.</t>
        </li>
      </ol>
      <t>If the Registrar-Agent has a pre-configured list of which product-serial-number(s), from which manufacturers it expects to see, then it can attempt to match this pledge against a list of potential devices.</t>
      <t>In many cases only the list of manufacturers is known ahead of time, so at most the Registrar-Agent can show the X520SerialNumber to the (human) operator who may then attempt to confirm that they are standing in front of a device with that product-serial-number.
The use of scannable QR codes may help automate this in some cases.</t>
      <t>The CA used to sign the IDevID will be a manufacturer private PKI as described in <xref section="4.1" sectionFormat="of" target="I-D.irtf-t2trg-taxonomy-manufacturer-anchors"/>.
The anchors for this PKI will never be part of the public WebPKI anchors which are distributed with most smartphone operating systems.
A Registrar-Agent application will need to use different APIs in order to initiate an HTTPS connection without performing WebPKI verification.
The application will then have to do its own certificate chain verification against a store of manufacturer trust anchors.
In the Android ecosystem this involves use of a customer TrustManager: many application developers do not create these correctly, and there is significant push to remove this option as it has repeatedly resulted in security failures (see <xref target="androidtrustfail"/>).</t>
      <t>Also note that an Extended Key Usage (EKU) for TLS WWW Server authentication cannot be expected in the pledge IDevID certificate.
IDevID certificates are intended to be widely usable and EKU does not support that use.</t>
    </section>
    <section anchor="app_history">
      <name>History of Changes [RFC Editor: please delete]</name>
      <t>Proof of Concept Code available</t>
      <t>From IETF draft 18 -&gt; IETF draft 19:</t>
      <ul spacing="normal">
        <li>
          <t>addressed DISCUSS received during telechat preparation:
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 136: included hint for reaction on HTTP requests to avoid DoS (rate limiting) in <xref target="pledge_component"/></t>
            </li>
            <li>
              <t>issue 137: HTTP error handling BCP RFC 9205: removed normative language for HTTP status codes</t>
            </li>
            <li>
              <t>issue 139: usage of TLS 1.3 emphasized by also referencing UTA draft in <xref target="pvr"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>addressed COMMENT, NITS, received during telechat preparation, specifically
          </t>
          <ul spacing="normal">
            <li>
              <t>issue 140: synchronized time</t>
            </li>
            <li>
              <t>issue 141: config options for discovery and nonceless vouchers in <xref target="voucher"/> and <xref target="agent_component"/></t>
            </li>
            <li>
              <t>issue 142: addressed TTL of provisional accept state by utilizing the last received tPVR for the binding in</t>
            </li>
          </ul>
        </li>
        <li>
          <t>updated reference of BRSKI-AE (now RFC 9733).</t>
        </li>
      </ul>
      <t>From IETF draft 17 -&gt; IETF draft 18:</t>
      <ul spacing="normal">
        <li>
          <t>addressed nits received from the GenART review</t>
        </li>
        <li>
          <t>addressed comment from IANA to update contact for service name registration from IESG to IETF Chair in <xref target="sn_reg"/></t>
        </li>
        <li>
          <t>SECDIR review: included reasoning for short lived certificates in <xref target="agent_component"/></t>
        </li>
        <li>
          <t>SECDIR review: enhanced reasoning for optional TLS usage in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for handling if the accept header is not used in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint for response body encoding in <xref target="tpvr"/> and <xref target="tper"/></t>
        </li>
        <li>
          <t>SECDIR review: added hint regarding IDevID and LDevID validity in <xref target="op_cons"/></t>
        </li>
        <li>
          <t>DNSDIR review: renamed <xref target="sn_reg"/> to Service Name and Transport Protocol Port Number Registry</t>
        </li>
        <li>
          <t>from IANA expert review: included registered service names in headings</t>
        </li>
      </ul>
      <t>From IETF draft 16 -&gt; IETF draft 17:</t>
      <ul spacing="normal">
        <li>
          <t>updated formatting of key events in <xref target="log_hints"/></t>
        </li>
        <li>
          <t>updated reference to corresponding sections for JWS Header and Signature in <xref target="I-D.ietf-anima-jws-voucher"/> in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
        <li>
          <t>simplified description for JWS Protected Header aligning with the update in draft-ietf-anima-jws-voucher-15 to always include the certificate chain in <xref target="pvr_data"/> and <xref target="rvr_data"/></t>
        </li>
      </ul>
      <t>From IETF draft 15 -&gt; IETF draft 16:</t>
      <ul spacing="normal">
        <li>
          <t>issue #135: corrections from IOTDIR review (clarification regarding minimum supported discovery in <xref target="discovery_uc2_ppa"/>, clarification regarding CDDl notation in <xref target="cacerts_CDDL_def"/> and editorial nits.</t>
        </li>
        <li>
          <t>updated references (draft-ietf-netconf-sztp-csr became RFC 9646, included RFC 9662, operational considerations drafts for registrar and MASA)</t>
        </li>
        <li>
          <t>AD review: included term Registrar-Agent in Terminology section</t>
        </li>
        <li>
          <t>AD review: enhanced interaction information in <xref target="uc2figure"/> and <xref target="uc3figure"/></t>
        </li>
        <li>
          <t>AD review: included new section on <xref target="op_cons"/> to outline operational considerations</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="log_hints"/> with more detailed recommendations on logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="priv_cons"/> with enhanced recommendations concerning logging</t>
        </li>
        <li>
          <t>AD review: enhanced <xref target="sec_cons_reg-agt"/> with more information about misuse of the Registrar-Agent</t>
        </li>
        <li>
          <t>IOTDIR/OPSDIR/AD review: addressed various nits received throughout the draft</t>
        </li>
      </ul>
      <t>From IETF draft 14 -&gt; IETF draft 15:</t>
      <ul spacing="normal">
        <li>
          <t>issue #134: editorial clarifications on references to <xref target="I-D.ietf-anima-brski-discovery"/> in <xref target="discovery_uc2_reg"/> and  <xref target="discovery_uc2_ppa"/></t>
        </li>
      </ul>
      <t>From IETF draft 13 -&gt; IETF draft 14:</t>
      <ul spacing="normal">
        <li>
          <t>Update of the examples in <xref target="examples"/> to align with the defined prototypes</t>
        </li>
        <li>
          <t>Changes incorporated based on Shepherd review PR #133:
          </t>
          <ul spacing="normal">
            <li>
              <t>Terminology alignment and clarification throughout the document to use terms more consistently</t>
            </li>
            <li>
              <t>Restructuring of <xref target="exchanges"/> for protocol steps to align to the general approach: Overview, data description, CDDL description (if necessary), JWS Header an Signature. This lead to some movement of text between existing and new subsections.</t>
            </li>
            <li>
              <t>Inclusion of new section on logging hints <xref target="log_hints"/> to give recommendations on which events to be logged for auditing</t>
            </li>
            <li>
              <t>Alignment of pledge status response data across <xref target="vstatus_data"/>, <xref target="estatus_data"/>, and <xref target="pstatus_data"/>.</t>
            </li>
            <li>
              <t>Included MASA component in description of affected components in <xref target="system-components"/></t>
            </li>
            <li>
              <t>Moved host header field handling from <xref target="pledgehttps"/> to <xref target="pledge_component"/> as generally applicable</t>
            </li>
            <li>
              <t>Updated status artifacts (vStatus, eStatus, pStatus) to align with BRSKI CDDL definition, but made reason-context mandatory  to have distinguishable objects for the registrar-agent</t>
            </li>
            <li>
              <t>Correction of terminology of local host name vs. service instance name in <xref target="discovery_uc2_ppa"/></t>
            </li>
          </ul>
        </li>
        <li>
          <t>Update of informative references and nits</t>
        </li>
      </ul>
      <t>From IETF draft 12 -&gt; IETF draft 13:</t>
      <ul spacing="normal">
        <li>
          <t>Deleted figure in Section "Request Artifact: Pledge Voucher-Request Trigger (tPVR)" for JSON representation of tPVR, as it has been replaced by CDDL</t>
        </li>
        <li>
          <t>Updated reason-content description in status response messages (enroll-status, voucher-status, and status-response).</t>
        </li>
        <li>
          <t>Updated CDDL source code integration to allow for automatic verification</t>
        </li>
        <li>
          <t>Reordered description in <xref target="pvr"/> in <xref target="tper"/> to better match the order of communication and artifact processing.</t>
        </li>
        <li>
          <t>Updated CDDL for the request-enroll trigger in <xref target="tper_CDDL_def"/> according to the outcome of the interim ANIMA WG meeting discussions on April 19, 2024</t>
        </li>
        <li>
          <t>Included statement in <xref target="per_artifact"/> for using the advanced created-on time from the agent-signed-data also for the PER, when the pledge has no synchronized clock</t>
        </li>
      </ul>
      <t>From IETF draft 11 -&gt; IETF draft 12:</t>
      <ul spacing="normal">
        <li>
          <t>Updated acknowledgments to reflect early reviews</t>
        </li>
        <li>
          <t>Addressed Shepherd review part 2 (Pull Request #132); containing: terminology alignment, structural improvements of the document; deletion of leftovers from previous draft versions; change of definitions to CDDL, when no YANG is available</t>
        </li>
      </ul>
      <t>From IETF draft 10 -&gt; IETF draft 11:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified that BRSKI discovery in the context of BRSKI-PRM is not needed in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #103, removed step 6 in verification handling for the wrapped CA certificate provisioning as only applicable after enrollment <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #128: included notation of nomadic operation of the Registrar-Agent in <xref target="architecture"/>, including proposed text from PR #131</t>
        </li>
        <li>
          <t>issue #130, introduced DNS service discovery name for brski_pledge to enable discovery by the Registrar-Agent in <xref target="iana_con"/></t>
        </li>
        <li>
          <t>removed unused reference RFC 5280</t>
        </li>
        <li>
          <t>removed site terminology</t>
        </li>
        <li>
          <t>deleted duplicated text in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>clarified registrar discovery and relation to BRSKI-Discovery in <xref target="discovery_uc2_reg"/></t>
        </li>
        <li>
          <t>clarified discovery of pledges by the Registrar-Agent in <xref target="discovery_uc2_ppa"/>, deleted reference to GRASP as handled in BRSKI-Discovery</t>
        </li>
        <li>
          <t>addressed comments from SECDIR early review</t>
        </li>
      </ul>
      <t>From IETF draft 09 -&gt; IETF draft 10:</t>
      <ul spacing="normal">
        <li>
          <t>issue #79, clarified discovery in the context of BRSKI-PRM and included information about future discovery enhancements in a separate draft in <xref target="discovery_uc2_reg"/>.</t>
        </li>
        <li>
          <t>issue #93, included information about conflict resolution in mDNS and GRASP in <xref target="discovery_uc2_ppa"/></t>
        </li>
        <li>
          <t>issue #103, included verification handling for the wrapped CA certificate provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #106, included additional text to elaborate more the registrar status handling in <xref target="vstatus"/> and <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #116, enhanced DoS description in <xref target="sec_cons-dos"/></t>
        </li>
        <li>
          <t>issue #120, included statement regarding pledge host header processing in <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>issue #122, availability of product-serial-number information on registrar agent clarified in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #123, Clarified usage of alternative voucher formats in  <xref target="rvr_artifact"/></t>
        </li>
        <li>
          <t>issue #124, determination of pinned domain certificate done as in RFC 8995 included in <xref target="voucher_artifact"/></t>
        </li>
        <li>
          <t>issue #125, remove strength comparison of voucher assertions in <xref target="agt_prx"/> and <xref target="exchanges"/></t>
        </li>
        <li>
          <t>issue #130, aligned the usage of site and domain throughout the document</t>
        </li>
        <li>
          <t>changed naming of registrar certificate from LDevID(RegAgt) to Registrar-Agent EE certificate throughout the document</t>
        </li>
        <li>
          <t>change x5b to x5bag according to <xref target="RFC9360"/></t>
        </li>
        <li>
          <t>updated JSON examples -&gt; "signature": BASE64URL(JWS Signature)</t>
        </li>
      </ul>
      <t>From IETF draft 08 -&gt; IETF draft 09:</t>
      <ul spacing="normal">
        <li>
          <t>issue #80, enhanced <xref target="discovery_uc2_ppa"/> with clarification on the product-serial-number and the inclusion of GRASP</t>
        </li>
        <li>
          <t>issue #81, enhanced introduction with motivation for agent_signed_data</t>
        </li>
        <li>
          <t>issue #82, included optional TLS protection of the communication link between Registrar-Agent and pledge in the introduction <xref target="req-sol"/>, and <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #83, enhanced <xref target="tper"/> and <xref target="pvr"/> with note to re-enrollment</t>
        </li>
        <li>
          <t>issue #87, clarified available information at the Registrar-Agent in <xref target="tpvr"/></t>
        </li>
        <li>
          <t>issue #88, clarified, that the PVR in <xref target="tpvr"/> and PER in <xref target="tper"/> may contain the certificate chain. If not contained it <bcp14>MUST</bcp14> be available at the registrar.</t>
        </li>
        <li>
          <t>issue #91, clarified that a separate HTTP connection may also be used to provide the PER in <xref target="per"/></t>
        </li>
        <li>
          <t>resolved remaining editorial issues discovered after WGLC (responded to on the mailing list in Reply 1 and Reply 2) resulting in more consistent descriptions</t>
        </li>
        <li>
          <t>issue #92: kept separate endpoint for wrapped CSR on registrar <xref target="obtain_cacerts"/></t>
        </li>
        <li>
          <t>issue #94: clarified terminology (possess vs. obtained)</t>
        </li>
        <li>
          <t>issue #95: clarified optional IDevID CA certificates on Registrar-Agent</t>
        </li>
        <li>
          <t>issue #96: updated exchangesfig_uc2_3 to correct to just one CA certificate provisioning</t>
        </li>
        <li>
          <t>issue #97: deleted format explanation in exchanges_uc2_3 as it may be misleading</t>
        </li>
        <li>
          <t>issue #99: motivated verification of second signature on voucher in <xref target="voucher"/></t>
        </li>
        <li>
          <t>issue #100: included negative example in <xref target="vstatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #101: included handling if <xref target="voucher"/> voucher telemetry information has not been received by the Registrar-Agent</t>
        </li>
        <li>
          <t>issue #102: relaxed requirements for CA certs provisioning in <xref target="cacerts"/></t>
        </li>
        <li>
          <t>issue #105: included negative example in <xref target="estatus_data_example_error"/></t>
        </li>
        <li>
          <t>issue #107: included example for certificate revocation in <xref target="estatus"/></t>
        </li>
        <li>
          <t>issue #108: renamed heading to Pledge-Status Request of <xref target="query"/></t>
        </li>
        <li>
          <t>issue #111: included pledge-status response processing for authenticated requests in <xref target="query"/></t>
        </li>
        <li>
          <t>issue #112: added "Example key word in pledge-status response in <xref target="stat_example_bootstrap"/></t>
        </li>
        <li>
          <t>issue #113: enhanced description of status reply for "factory-default" in  <xref target="query"/></t>
        </li>
        <li>
          <t>issue #114: Consideration of optional TLS usage in Privacy Considerations</t>
        </li>
        <li>
          <t>issue #115: Consideration of optional TLS usage in Privacy Considerations to protect potentially privacy related information in the bootstrapping like status information, etc.</t>
        </li>
        <li>
          <t>issue #116: Enhanced DoS description and mitigation options in security consideration section</t>
        </li>
        <li>
          <t>updated references</t>
        </li>
      </ul>
      <t>From IETF draft 07 -&gt; IETF draft 08:</t>
      <ul spacing="normal">
        <li>
          <t>resolved editorial issues discovered after WGLC (still open issues remaining)</t>
        </li>
        <li>
          <t>resolved first comments from the Shepherd review as discussed in PR #85 on the ANIMA github</t>
        </li>
      </ul>
      <t>From IETF draft 06 -&gt; IETF draft 07:</t>
      <ul spacing="normal">
        <li>
          <t>WGLC resulted in a removal of the voucher enhancements completely from this document to RFC 8366bis, containing all enhancements and augmentations of the voucher, including the voucher-request as well as the tree diagrams</t>
        </li>
        <li>
          <t>smaller editorial corrections</t>
        </li>
      </ul>
      <t>From IETF draft 05 -&gt; IETF draft 06:</t>
      <ul spacing="normal">
        <li>
          <t>Update of list of reviewers</t>
        </li>
        <li>
          <t>Issue #67, shortened the pledge endpoints to prepare for constraint deployments</t>
        </li>
        <li>
          <t>Included table for new endpoints on the registrar in the overview of the Registrar-Agent</t>
        </li>
        <li>
          <t>addressed review comments from SECDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
        <li>
          <t>addressed review comments from IOTDIR early review (terminology clarifications, editorial improvements)</t>
        </li>
      </ul>
      <t>From IETF draft 04 -&gt; IETF draft 05:</t>
      <ul spacing="normal">
        <li>
          <t>Restructured document to have a distinct section for the object flow and handling and shortened introduction, issue #72</t>
        </li>
        <li>
          <t>Added security considerations for using mDNS without a specific product-serial-number, issue #75</t>
        </li>
        <li>
          <t>Clarified pledge-status responses are cumulative, issue #73</t>
        </li>
        <li>
          <t>Removed agent-sign-cert from trigger data to save bandwidth and remove complexity through options, issue #70</t>
        </li>
        <li>
          <t>Changed terminology for LDevID(Reg) certificate to registrar LDevID certificate, as it does not need to be an LDevID, issue #66</t>
        </li>
        <li>
          <t>Added new protected header parameter (created-on) in PER to support freshness validation, issue #63</t>
        </li>
        <li>
          <t>Removed reference to CAB Forum as not needed for BRSKI-PRM specifically, issue #65</t>
        </li>
        <li>
          <t>Enhanced error codes in section 5.5.1, issue #39, #64</t>
        </li>
        <li>
          <t>Enhanced security considerations and privacy considerations, issue #59</t>
        </li>
        <li>
          <t>Issue #50 addressed by referring to the utilized enrollment protocol</t>
        </li>
        <li>
          <t>Issue #47 MASA verification of LDevID(RegAgt) to the same registrar LDevID certificate domain CA</t>
        </li>
        <li>
          <t>Reworked terminology of "enrollment object", "certification object", "enrollment request object", etc., issue #27</t>
        </li>
        <li>
          <t>Reworked all message representations to align with encoding</t>
        </li>
        <li>
          <t>Added explanation of MASA requiring domain CA cert in section 5.5.1 and section 5.5.2, issue #36</t>
        </li>
        <li>
          <t>Defined new endpoint for pledge bootstrapping status inquiry, issue #35 in section <xref target="query"/>, IANA considerations and section <xref target="pledge_component"/></t>
        </li>
        <li>
          <t>Included examples for several objects in section <xref target="examples"/> including message example sizes, issue #33</t>
        </li>
        <li>
          <t>PoP for private key to registrar certificate included as mandatory, issues #32 and #49</t>
        </li>
        <li>
          <t>Issue #31, clarified that combined pledge may act as client/server for further (re)enrollment</t>
        </li>
        <li>
          <t>Issue #42, clarified that Registrar needs to verify the status responses with and ensure that they match the audit log response from the MASA, otherwise it needs drop the pledge and revoke the certificate</t>
        </li>
        <li>
          <t>Issue #43, clarified that the pledge shall use the create time from the trigger message if the time has not been synchronized, yet.</t>
        </li>
        <li>
          <t>Several editorial changes and enhancements to increasing readability.</t>
        </li>
      </ul>
      <t>From IETF draft 03 -&gt; IETF draft 04:</t>
      <ul spacing="normal">
        <li>
          <t>In deep Review by Esko Dijk lead to issues #22-#61, which are bein stepwise integrated</t>
        </li>
        <li>
          <t>Simplified YANG definition by augmenting the voucher-request from RFC 8995 instead of redefining it.</t>
        </li>
        <li>
          <t>Added explanation for terminology "endpoint" used in this document, issue #16</t>
        </li>
        <li>
          <t>Added clarification that Registrar-Agent may collect PVR or PER or both in one run, issue #17</t>
        </li>
        <li>
          <t>Added a statement that nonceless voucher may be accepted, issue #18</t>
        </li>
        <li>
          <t>Simplified structure in section <xref target="sup-env"/>, issue #19</t>
        </li>
        <li>
          <t>Removed join proxy in <xref target="uc2figure"/> and added explanatory text, issue #20</t>
        </li>
        <li>
          <t>Added description of pledge-CAcerts endpoint plus further handling of providing a wrapped CA certs response to the pledge in section <xref target="cacerts"/>; also added new required registrar endpoint (section <xref target="pvr"/> and IANA considerations) for the registrar to provide a wrapped CA certs response, issue #21</t>
        </li>
        <li>
          <t>utilized defined abbreviations in the document consistently, issue #22</t>
        </li>
        <li>
          <t>Reworked text on discovery according to issue #23 to clarify scope and handling</t>
        </li>
        <li>
          <t>Added several clarifications based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Updated examples to state "base64encodedvalue==" for x5c occurrences</t>
        </li>
        <li>
          <t>Include link to SVG graphic as general overview</t>
        </li>
        <li>
          <t>Restructuring of section 5 to flatten hierarchy</t>
        </li>
        <li>
          <t>Enhanced requirements and motivation in <xref target="req-sol"/></t>
        </li>
        <li>
          <t>Several editorial improvements based on review comments</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 included additional signature on voucher from registrar in section <xref target="pvr"/> and section <xref target="agt_prx"/>
The verification of multiple signatures is described in section <xref target="voucher"/></t>
        </li>
        <li>
          <t>Included representation for General JWS JSON Serialization for examples</t>
        </li>
        <li>
          <t>Included error responses from pledge if it is not able to create a Pledge-Voucher-Request or an enrollment request in section <xref target="tpvr"/></t>
        </li>
        <li>
          <t>Removed open issue regarding handling of multiple CSRs and Enroll-Responses during the bootstrapping as the initial target it the provisioning of a generic LDevID certificate. The defined endpoint on the pledge may also be used for management of further certificates.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Issue #15 lead to the inclusion of an option for an additional signature of the registrar on the voucher received from the MASA before forwarding to the Registrar-Agent to support verification of POP of the registrars private key in section <xref target="pvr"/> and exchanges_uc2_3.</t>
        </li>
        <li>
          <t>Based on issue #11, a new endpoint was defined for the registrar to enable delivery of the wrapped enrollment request from the pledge (in contrast to plain PKCS#10 in simple enroll).</t>
        </li>
        <li>
          <t>Decision on issue #8 to not provide an additional signature on the enrollment-response object by the registrar. As the Enroll-Response will only contain the generic LDevID certificate. This credential builds the base for further configuration outside the initial enrollment.</t>
        </li>
        <li>
          <t>Decision on issue #7 to not support multiple CSRs during the bootstrapping, as based on the generic LDevID certificate the pledge may enroll for further certificates.</t>
        </li>
        <li>
          <t>Closed open issue #5 regarding verification of ietf-ztp-types usage as verified
via a proof-of-concept in section <xref target="tpvr"/>.</t>
        </li>
        <li>
          <t>Housekeeping: Removed already addressed open issues stated in the draft directly.</t>
        </li>
        <li>
          <t>Reworked text in from introduction to section pledge-responder-mode</t>
        </li>
        <li>
          <t>Fixed "serial-number" encoding in PVR/RVR</t>
        </li>
        <li>
          <t>Added prior-signed-voucher-request in the parameter description of the
registrar-voucher-request in <xref target="pvr"/>.</t>
        </li>
        <li>
          <t>Note added in <xref target="pvr"/> if sub-CAs are used, that the
corresponding information is to be provided to the MASA.</t>
        </li>
        <li>
          <t>Inclusion of limitation section (pledge sleeps and needs to be waked
up. Pledge is awake but Registrar-Agent is not available) (Issue #10).</t>
        </li>
        <li>
          <t>Assertion-type aligned with voucher in RFC8366bis, deleted related
open issues. (Issue #4)</t>
        </li>
        <li>
          <t>Included table for endpoints in <xref target="pledge_component"/> for better readability.</t>
        </li>
        <li>
          <t>Included registrar authorization check for Registrar-Agent during
TLS handshake  in section <xref target="pvr"/>. Also enhanced figure
<xref target="exchangesfig_uc2_all"/> with the authorization step on TLS level.</t>
        </li>
        <li>
          <t>Enhanced description of registrar authorization check for Registrar-Agent
based on the agent-signed-data in section <xref target="pvr"/>. Also
enhanced figure <xref target="exchangesfig_uc2_all"/> with the authorization step
on Pledge-Voucher-Request level.</t>
        </li>
        <li>
          <t>Changed agent-signed-cert to an array to allow for providing further
certificate information like the issuing CA cert for the LDevID(RegAgt)
certificate in case the registrar and the Registrar-Agent have different
issuing CAs in <xref target="exchangesfig_uc2_all"/> (issue #12).
This also required changes in the YANG module in <xref target="I-D.ietf-anima-rfc8366bis"/></t>
        </li>
        <li>
          <t>Addressed YANG warning (issue #1)</t>
        </li>
        <li>
          <t>Inclusion of examples for a trigger to create a Pledge-Voucher-Request
and a Pledge Enroll-Request.</t>
        </li>
      </ul>
      <t>From IETF draft-ietf-anima-brski-async-enroll-03 -&gt; IETF anima-brski-prm-00:</t>
      <ul spacing="normal">
        <li>
          <t>Moved UC2 related parts defining the Pledge in Responder Mode from
draft-ietf-anima-brski-async-enroll-03 to this document
This required changes and adaptations in several sections to remove
the description and references to UC1.</t>
        </li>
        <li>
          <t>Addressed feedback for voucher-request enhancements from YANG doctor
early review, meanwhile moved to <xref target="I-D.ietf-anima-rfc8366bis"/> as well as in the security considerations (formerly named ietf-async-voucher-request).</t>
        </li>
        <li>
          <t>Renamed ietf-async-voucher-request to IETF-voucher-request-prm to
to allow better listing of voucher related extensions; aligned with
constraint voucher (#20)</t>
        </li>
        <li>
          <t>Utilized ietf-voucher-request-async instead of ietf-voucher-request
in voucher exchanges to utilize the enhanced voucher-request.</t>
        </li>
        <li>
          <t>Included changes from draft-ietf-netconf-sztp-csr-06 regarding the
YANG definition of csr-types into the enrollment request exchange.</t>
        </li>
      </ul>
      <t>From IETF draft 02 -&gt; IETF draft 03:</t>
      <ul spacing="normal">
        <li>
          <t>Housekeeping, deleted open issue regarding YANG voucher-request
in <xref target="tpvr"/> as voucher-request was
enhanced with additional leaf.</t>
        </li>
        <li>
          <t>Included open issues in YANG model in <xref target="architecture"/> regarding assertion
value agent-proximity and csr encapsulation using SZTP sub module).</t>
        </li>
      </ul>
      <t>From IETF draft 01 -&gt; IETF draft 02:</t>
      <ul spacing="normal">
        <li>
          <t>Defined call flow and objects for interactions in UC2. Object format
based on draft for JOSE signed voucher artifacts and aligned the
remaining objects with this approach in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Terminology change: issue #2 pledge-agent -&gt; Registrar-Agent to
better underline Registrar-Agent relation.</t>
        </li>
        <li>
          <t>Terminology change: issue #3 PULL/PUSH -&gt; pledge-initiator-mode
and pledge-responder-mode to better address the pledge operation.</t>
        </li>
        <li>
          <t>Communication approach between pledge and Registrar-Agent
changed by removing TLS-PSK (former section TLS establishment)
and associated references to other drafts in favor of relying on
higher layer exchange of signed data objects. These data objects
are included also in the Pledge-Voucher-Request and lead to an
extension of the YANG module for the voucher-request (issue #12).</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
registrar (issue #4, #5, #9) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Recommendation regarding short-lived certificates for
Registrar-Agent authentication towards registrar (issue #7) in
the security considerations.</t>
        </li>
        <li>
          <t>Introduction of reference to Registrar-Agent signing certificate using
SubjectKeyIdentifier in Registrar-Agent signed data (issue #37).</t>
        </li>
        <li>
          <t>Enhanced objects in exchanges between pledge and Registrar-Agent
to allow the registrar to verify agent-proximity to the pledge
(issue #1) in <xref target="exchanges"/>.</t>
        </li>
        <li>
          <t>Details on trust relationship between Registrar-Agent and
pledge (issue #5) included in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Split of use case 2 call flow into sub sections in <xref target="exchanges"/>.</t>
        </li>
      </ul>
      <t>From IETF draft 00 -&gt; IETF draft 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of scope in <xref target="sup-env"/> to include in
which the pledge acts as a server. This is one main motivation
for use case 2.</t>
        </li>
        <li>
          <t>Rework of use case 2 in <xref target="architecture"/> to consider the
transport between the pledge and the pledge-agent. Addressed is
the TLS channel establishment between the pledge-agent and the
pledge as well as the endpoint definition on the pledge.</t>
        </li>
        <li>
          <t>First description of exchanged object types (needs more work)</t>
        </li>
        <li>
          <t>Clarification in discovery options for enrollment endpoints at
the domain registrar based on well-known endpoints do not
result in additional /.well-known URIs. Update of the illustrative example.
Note that the change to /brski for the voucher related endpoints
has been taken over in the BRSKI main document.</t>
        </li>
        <li>
          <t>Updated references.</t>
        </li>
        <li>
          <t>Included Thomas Werner as additional author for the document.</t>
        </li>
      </ul>
      <t>From individual version 03 -&gt; IETF draft 00:</t>
      <ul spacing="normal">
        <li>
          <t>Inclusion of discovery options of enrollment endpoints at
the domain registrar based on well-known endpoints in
new section as replacement of section 5.1.3
in the individual draft. This is intended to support both use
cases in the document. An illustrative example is provided.</t>
        </li>
        <li>
          <t>Missing details provided for the description and call flow in
pledge-agent use case <xref target="architecture"/>, e.g. to
accommodate distribution of CA certificates.</t>
        </li>
        <li>
          <t>Updated CMP example in to use lightweight CMP instead of CMP, as the
draft already provides the necessary /.well-known endpoints.</t>
        </li>
        <li>
          <t>Requirements discussion moved to separate section in
<xref target="req-sol"/>. Shortened description of proof
of identity binding and mapping to existing protocols.</t>
        </li>
        <li>
          <t>Removal of copied call flows for voucher exchange and registrar
discovery flow from <xref target="RFC8995"/> in UC1 to avoid doubling or text or
inconsistencies.</t>
        </li>
        <li>
          <t>Reworked abstract and introduction to be more crisp regarding
the targeted solution. Several structural changes in the document
to have a better distinction between requirements, use case
description, and solution description as separate sections.
History moved to appendix.</t>
        </li>
      </ul>
      <t>From individual version 02 -&gt; 03:</t>
      <ul spacing="normal">
        <li>
          <t>Update of terminology from self-contained to authenticated
self-contained object to be consistent in the wording and to
underline the protection of the object with an existing
credential. Note that the naming of this object may be discussed.
An alternative name may be attestation object.</t>
        </li>
        <li>
          <t>Simplification of the architecture approach for the initial use
case having an offsite PKI.</t>
        </li>
        <li>
          <t>Introduction of a new use case utilizing authenticated
self-contain objects to onboard a pledge using a commissioning
tool containing a pledge-agent. This requires additional changes
in the BRSKI call flow sequence and led to changes in the
introduction, the application example,and also in the
related BRSKI-PRM call flow.</t>
        </li>
      </ul>
      <t>From individual version 01 -&gt; 02:</t>
      <ul spacing="normal">
        <li>
          <t>Update of introduction text to clearly relate to the usage of
IDevID and LDevID.</t>
        </li>
        <li>
          <t>Update of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhanced consideration of existing enrollment protocols in the
context of mapping the requirements to existing solutions in
<xref target="req-sol"/>.</t>
        </li>
      </ul>
      <t>From individual version 00 -&gt; 01:</t>
      <ul spacing="normal">
        <li>
          <t>Update of examples, specifically for building automation as
well as two new application use cases in <xref target="sup-env"/>.</t>
        </li>
        <li>
          <t>Deletion of asynchronous interaction with MASA to not
complicate the use case. Note that the voucher exchange can
already be handled in an asynchronous manner and is therefore
not considered further. This resulted in removal of the
alternative path the MASA in Figure 1 and the associated
description in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Enhancement of description of architecture elements and
changes to BRSKI in <xref target="architecture"/>.</t>
        </li>
        <li>
          <t>Consideration of existing enrollment protocols in the context
of mapping the requirements to existing solutions in <xref target="req-sol"/>.</t>
        </li>
        <li>
          <t>New section starting with the
mapping to existing enrollment protocols by collecting
boundary conditions.</t>
        </li>
      </ul>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization>IoTconsultancy.nl</organization>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei</organization>
        <address>
          <email>tte@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
        <organization>Siemens Schweiz AG</organization>
        <address>
          <email>ietf@kovatsch.net</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+y9+3Ycx5E3+D/P0TuUwe+sAKu7iQvvtuyBSMjimBI5ACTN
rNYfUeguAGU2utpd1aBgSt+z7LPsk21cMyOzsrobIChRF3rOiASqsjIjIyPj
8ouIfr//0a2mbMbF4+yz/YO/P8velM1Z9nJcjE6LrJxk+0U9rSajYpZ9WY2K
bJ0e6r/c/3Ljo1v58fGsuJAX8Wcf3RpVw0l+DoONZvlJ0y+L5qSfT8rzvH88
q1+X/ensvL/1CF6dFfnj7MW0mOVNWU3qLJ+Msi/zSX5anBeT5qNbb04fZ7tf
PftyN/v2bzBs3sCY25vb9z66VTfw7Kt8XE3gR81sXnx0q5zO6K91s725+Whz
Gx6aH5+XdQ1DH15O4blne4efx4MuncMwbx5ndTP66Na0fPzRrSxrquHj7OPL
ov4Y/zWszqf5sDE/qS/PZ8VJbX9SzZroRzDZSdWUJ2Uxgp9OKn6umZVmqHze
nFUz+GYf9gBePhhkn8/KosZHmb4HTXFyUkz8j6sZLO6gxKnX2e7f8Ee6P/JT
+U5RwHdeNE3V/yI/m/T3y8lpdp/WUzaXj7Mv55NyeMbrG8GHPn649WDnkSx4
Pmlm8Mzfitl5PrnEnxXneTlGKtF0Bic4nf+o+YMDoBA+M5+Vj7OzppnWj+/c
efPmzcD8/o5b4+Eg+7aYTYqZX+ThWXWe1+bHP+8iG5pO/w1N53qL3Btkz4vc
LHFvXFaN+xmt70lZD6vs4BJoeh6sZx/m3JTwr7yui+yBX863+Xhc1sV4XEz8
mp580X+4s3k3WNMBnO5/F7MxcDr+fHpGh2jtk7tb2d272cMHD7NHcILWzJrH
MLP/GOKMeKGyji8HNJt8NqqriV/Nl/izYpw9iX/NGwefLcZA1OygOmnewPnL
vq1mr2vzufPh7BMUGv9R67ODYR6QV6lrfg/kHVawwPJ43thTA8R+Wv7ztSF2
/bpyP6IpPasO4dV6PgahMrwcTMZmLgU8PRjB0/8BWxQ/1VcWrYCcRV1ne8PX
xaxxA38+b+az4k1RWv5piv8Y1oOTfD4YFZaUf68u8qZmhhRC5k1zVgLv218F
3H8wPIPR/y2nQL5ApHstrwwmBcznopjMC5Jep7NqPhUBSCcH5XLGL76lf/wH
vj+Az/xIz8NNMD9+zM/135zeiQT5R7cmFRyRprzg8fc/f3Jv+8G2//vDTf37
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
2PxSQi1h2bgPQTiFRJcDq7xdhaF5CPUEX3ER/gy8ONjT+T757MW+me+AWyc6
GQK6EcHQQa+zKGZQSeKW774l1QjtXB97MJchqJu1bX1tqxeGle/avT0/6fyB
/dcnQUPULGhe2tef+BJ4+gMs4ub+RZfTD3H3T/x/rhpePLT+gArBDfwLHLG/
saWFTWHN5Fb4yTO8BEAeU+VGfsRBD68yjv+Hn8/UgD2uPw5BLQn1cP1xwgqG
5Pq81jitYf7yLvS5wlvpcf5Pe5z2j5b85P98dGt9a2MJ6OjmvnVja+c9rabN
AM2Md9gL4Y0G1Lcb4Q03zq+DN7ZbvBFGSn4TrLF3Q6yx96tijZ0NFyv6JooV
rTN6A293ujeNrbHxIXJMYhze/HPhoOV7dpM7tHCc72Id+erjBHrh/+W9TX/9
x0+/rquKzZ+Mztl3UjSR0cNCm59xPvqTQJvxDKrkW3mcUJXZd/ffVcdp/SQ4
p9cd57vi+4ZKtbNa/uzpP6470HzKkSWQR01/XJ1ed6Ds2iuzO6aqlf+zUALJ
4x9/vPz2+RDviLsbnXgCc0ckqmX/Qm+M9XU8kBsb7yLJrqotXO3EfyeK2z9a
I1+Jn78zMI5/9Felj4FT/TL5+d5GB5LlF8SjfebRd+ItGmeYIwXqVTTjD3Ev
7290Zqh8iLt5s1bNFe6VjnFYOF1wosqvx6p5sLE0pejXzx1XONkd47Qe+Xl3
9eHG0hyuX/uuXunu7RiHGKLwR/5XcuYfbcQdzw4LjNs3s0urph5j7+zJ6Jeq
m97EvX9VmX89G8lM9MrWKD0/K/6lNWKc2XfFcWQ+qVEW2GxX/cmycb4TVJ83
Xq83zlXmc2Nhhc0NkbatU/VbPDXF+zg1y8e5sd3c2khlKH+IO3mzulBjrrt3
0ZSnvzJN2TcJS+ECNCvjhQIC0pX53KtL+4Ml8QJZPR2XWg/ZXcpBz60O0IJF
2XjwkinIie2JHktfYldvISyOlw//NS+lvJcrSamA7Q6YmOYWLmrx4XExhIfY
HvhaDFefQJTYdI3v7wxcw9zw85oQ0fq0KlOrfsymXzptq0lj1CKQuMNc+kzC
/W/2E5i5vM4w80xrRzoQnqkqw5OknLOGik/S8u8OXNZTuHxJmTLFSK+42mst
9oldKjpVr72we4NU5lW4Rt8Pu7XJrrRLVFs5aB8Rt91djUJPdmmC9wdBfZBw
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
kxuxFCLr/ePq/LZw/5UuFluxlFrXtf3mQKnjcpLPLjH039K1sAYLjcAlpYP9
9eqVVGdw8YZk+aPukkFO5Jv6EV6lWrkdlJ64G24Htd3fxI5Qh5vbj3cePN55
NNjeuff+20EFsnh5O6dF0nKFZlBX6D3lWMerjNmSWi2r/H4wGKzJv/6R6jgV
c0NQk83J2l9Hx6k0Gs2GtFNVYMKGwO+h8VRoAbfK/KrV9fZ2ywuvC2v5FctV
Q1HZ+vBkAAdGBlAvxtqGls2k+sxS4XAYQ1gUPcVi192w6lrk6ktLL9kraOkC
w3H3bX+1+7asFWOSCI28o73cov2N2szs3XaXPU1Mh6ST2baKe7RJUhDGi3Qs
UwRq2yQM6IQXwXIJ35bsCwR7qs+fl+sLq1CtIjnXpuWErng61iv151vlqkhJ
yRS5rispO+t5L4sagOlsYwLtUjPp12yMYRW31xJ3VyxAfG0cOTBLAofuzEWV
TtPCOR+Rn7izmlZYiss4SX2uwTcO5chBlRtxFilNr+Yxah3f9+EvytZx/RtX
dBvpW+I96r3zJBxbXn0m5tVFzqzWXuqJFAr/Px+/B5fWsxScNA57Iu8VzsoS
NqLqaabg2dmsmp+eKctRVa8Q825i3S2UvHcPuE44bSiCqYJkMjOsJchXNzmQ
pC6PfsVh9LmMnDSwjOoqybxDyKFfVgrT1ZbZqi7Mwwzf5N0qV7uRRnGC9cbA
7hJpKZ35nRToJDR0Tukb5+fzSRiorIshZrD4ZgDOrxUaq1iyLN2RQC2plZso
axG/sJ5ol69FKdKEYRimQoDMZT6TtC2G6ep8Oe+jmumi3Wqp1B56WI4lsx9O
U8OgmOJ7DN+WTbo0VVA0VCCgke0N+hBFL4fwdrbOlUCZOfQqMFTaiKqZWxkq
Dqa4Y7Ok3jhAXxg36DYHTJSq/doCO8eKrRZ4oA/3WDFa+t4N1aP+w4dRkDrw
PKxeknr1THK1WiIEZdu7NJ/ie+sYDfdlpYGoG3xcu7guW7cHUn5v+XbDuaa6
xyh9KbU2MDPm5cgbhcLjCmnm/naJL6R2ii9PeJA2mFO87KVCWQuD0FnTbPXm
OvyuIFlgwtNyIteyVkadaslie6KvVC41OIO+kUrCqhe2SngD7VNYylOaHdHZ
ENSnc0em7/FFd3gbq+DvP9t+aFn1wKhg5153RbB2xzKboPgnBRxwQVVpJPTj
MhBYWIijVZivQHANxRJ4Ykl936g7RFhDL73TXQXmhdUz7YkbV7W0c2vNymk4
BIHEgto6YpvHKJLRYiiTt6VlsE09RSlj6srudRZi1ENg+hSl4lPtsjSctjoa
zdCVj/d2MxcJAZMWB0BG9vYYEakqLtWBjt91XRElORvX73GXQYnqVgGhu9hq
rZiWuDZfTcNlxuztOwwz/Go0vrHihZ4Ka4LQWKOB10x3qTXgL5L1cHbxcdMm
Uu4sNyKjpAhm4bsd4mQi5ckKUBDK+WlxLqHJphpWY+Mocszd0R3w99qLv/Da
i3c33l3S/qLKMK5jlbsNqUt3vXFka1fuXX61MnrfiST4R2vkKxWJ+86IkH/0
V6WPa6dXT39tReLuapE4XuMVasOp6fy+isOZq/WnKA7H+tDyDP3O+m2r9y6/
0fptvrX0DTRvb5fFM82v1EOxB5MRG3RzB9uxOgoH+dg9NdcCylj3Q/8NlmQn
I+ULDD71YhdRHry7qHpamGGLb2GH9ysXyUp2S7p25t2eL8mkhQA0LZIUCTVT
ImNSi6e0i9hlOanoFqjCxYyMZyZcV5T99y6Vkhb2iP/lV0raQvC5q9PrBvVW
semy5JPING1xQVodvrBySl2IGPqF97DHlXcluy3MajN3xdWntqC6khS8FbG0
cstaW0gfliSmeijTN7QBNw+Oze6ayudwcD+nZC82J1cX2RR4WorvuTSHv2Px
k3phj1LWTX0d26Y9AW4G0NlEXBtIcmcBK56SCkFCbX6DOSsgWTDHiACqaVKF
efNBhYN1ZpR2D+iNtJtotTwvo/hRLHfd/KCd0RXmT/5ECV3BQZi+HtYP+ufl
eXF0raQps7xfROJUBzs5UsI6r5MoFZDhQ0iWSsqEnzp1Klsxb8qkTf1UWVMJ
HghzqLxi++ad+muJOy3RX8sLDZDIxdTV8WXxu2pTrbTcK106e9CxJ4Eb7+qy
xZeWVNNs0ONLXmVRu/G+LPg2DuOeb84KuXKDWlbdGqpT+rs7bS2S4k4/DhLv
c+/vdZ927nFXW0DLPC9NmHOnW/Pl9rry5SwBF9tzh4mz1cqJ29uPwfW2vNNy
2NCS6+jt7RR0cMkVlgIMBc0rQFqPT/re8JGuXd2b2FMriS24JEcbXF4adGcm
mQLe4VB1n7CLT758AmobSbqXf3/m6bdO+t2D9i1twpgaxLy3/WAboZL+iopt
3LCBU9kwbjLA6HfYjhqTTAYutQiJ9sR1MW4nTLAfnn/Lc0r2ghtTwe+NAltn
62JTD3OiEXIF55K8kp84xlgQ0Qyjr6j3TcQr48ALNriPiqB7ItGk7bDK4CLB
39Nb1p6dSHU533oUjWK0UWI6WnmAb0jXvZbFKyOHdFuvcQN34fqg9m8RUSNm
thErDDo78LJWEAzapIbwiAgN4U57azqZxdGsuhUdPho2K6VKDoqVloemu1Ce
q4MQSy/mmjoKUy6O4X0oEbx4fyVUZKK7Lpyn+o6IIF+xpiVtUf8BNYMY3YxE
PXa7Imj3gqZf5CusS+utafPFO0fQfo9A/RoiUPc2OiT8byyqROMM8yd04fd/
bdGXexp9iSUWGm0lVtW5QkAGJPPshuMxpvvlk91+oGi0kYuLQjN/27tGZCZU
ZY4Wh02uH/RodZ7ByTrP3UpTW4RwZ0+TUeg66BjrqTL2z+1SiogV2lbrYDDq
/DYEw8NeAuHaXrBfJTeiITefsCguYP1gw1UY4spRWCH3JGke8A3vrFVHPac5
JxzpnZZVvBfrImhQa26RXxWl7pduyJgyJ9NYUobBrPJt0EXJnFujt8rbsWLN
yFz6cAVKUlojQaR7eYzNtFGkMK66aD3YCd1DyOiOg4ySTnoTqVlC+chC1Cp+
ayulAqylrcMHg+0Y5Lq4vAnQrV3dRJloUYUTVBz1uRtJXYmpcsVaJ7KQD73U
SZpkP0WGyGG85So+Ydn9h5nCnMk8GFbnzIwVUKHpM0LQYmADdomhrfZBDCFy
EXfBU89n4376W1IqhNMxNWleNv0oOy+oGEb3YZVU3HgytAJXnIXXGhF/UeVe
xN9db+I6kk5d5qO9h+IcsbK+3nccP5rv2JQE3W1/NbSL3OgzcV0HjZBJG/ft
e4/gbJMNr8KECrV7JeHp0+dqpt/fQguegnvYFH2cljD4xiv4jc3xHI5G449u
yRPZp/7Ywun7/t5xfgon7/gS77A72Xfbf+S/d50z/YCeMJoi3jDBwtfV77Tk
/BzR9x0zdqeJu+2RF7Cof7tCQsC/LmHo0c79Tc2wRZ2kpNPjcPX/Pbi3+Si7
2AkLr8w4Wo11GlDFoqAIOq3eVMkXCIr7dG9friypmUg0qUmQ9FrHP3hbZUeY
I8FzDjMpbHsm7+Rap0u7cs09N9ruQtN4ntKkE5ltLc2VouTwOHqSOFzHMeAz
ShInBW8qraMqTYNL+Ss1yHFsak4Y3x/G+5qzea3FO/H35xEYZzkyPrxnTdmL
4wIZanHxC+Hc1iWpB0SuvMVZx8lfLrq1OvOM9SCtmGZ8jZIMihNK6k7vnJr0
YWQmuVm8n7ykFu3eV4JSyN1sxS3jazicqX1vMThsAObHE02ZkYHnh++N4yUA
rLye4kzheXUyv9zbX6UeSasKSFf5j9audZUAMdpXoFZ4jaMSWdWdtx7p+VdL
a4rTfUzx5pcqFC9mG75iyI9Bf5jYl0PF4hWnGp7s5mxWoEOhavCF6TRIxXBZ
wR6WGwtnaiaHLznVRRPn5fy7fzrP+jAoYtAuT0X+JPIUoxvJ5qn90brkH18D
I0RDJ7AC+KFZ8CHhlcdpk3vhQGFm3T6ipCe41S2UKWMupPIcI1D6o7IeOuay
BVkD1tGnLsmJOJ3m3TFoattQUWaCL9HnXHZc5ktn2M49p9ad06Y8BwuUI0XP
D2jMYy8Vtd0dgWuHl14KqQ/IdeRN8aaelfCy53+dNc209ulvifjK/SC+4hKc
KKkn6LYQkf5G0pR+j7L84qMs9zc6ReyHGGehYAicxwFGV1eJqiwap6+i+ePl
UZWOcXhjLw4IwvcO82k98qHGa+5rvEbZZaXoTEowt/Jd0oJKIynoIrfpLfLr
ZREU0BJW7Dl5jRpDqSyYGMxsLMqF7Q9uNCVmWbeB77oLcv3jBpJovm7XOQk6
PcreMQfYHn0+1yAA4bXMsWqm+vzWIPvGQ1FI8PtBFqmc971zWxvhnSLcQ9pW
giYiMJYCU4gnc9wlGHMWVfVgu4xxiHhNbw9QG+ZLmDCOFgyzoM5CqsVeZx2Z
8GaHr+4AFWyqyoLmcgLH0Y9csRmcK//iGN+NGFZz8TWzOk07qizBihJGVMqJ
a7SzNvUk5J5ba85loQEjrfNi8DgrBJqkml85CarXT8e5GA6jEntPEXTH6IRt
9E6y42arKh/szF3HnwZ3HWfUtEptubKoV+JghtqtQPkYRsu9kmxGhhDbnkKF
0yMzY4gdKwOACk441HERVA8eXybOudvjpVu86Jis+2DdklI6u4m6AKK4Owwt
NdcKN7E8Ybybt6AU9ovLPI89/VY0EMAukBUIlq6mTdwTm7+PrRJwmPY0cV4O
X4+OQyw5PPAVKvQ5k/uGQjtsMWemLkjBykbic807aApcFiLkz2EOeaL/hWe5
B8lGEPIVupDUQ2D5OmP1KFsXPWmjO+R/wZOKu3BxM1ehYOlA77FK8QGgA54F
TeqCLBOXTKhVnQO1xzethU3S/rizIq/9/RcaYoFADimdmMmoHGXSu42IqCzU
YgJrJXOypeRGJm/ylLUN2sssODnyDa2nhdpSS6zRSxqqwFEoqjYKFMNWvYqX
wfhh2VoCZ9LUR1qUogsVv0T1SyLjr6MutsvKX0E5TPo2Inx96FgSsi3B1nee
0be3W4cxLsbbfa7fDf/BfBOAP1p8ehUh9c4wC1nge4VZrIiyiGjfRlzori3u
KaNP3QjeIibPFfEWiSV96NiLNPnUt6/0eI/IC7v9v6Mvfgvoi9TB9zK6jcSw
z70rGuNI7xL2c00r7BaxOkSjUzZriPQCLy1qXOJbvWfyw0x616h1ICIb1cK6
AG0bLhbHFZwez21RfKO7sC0FtuY55/KmNPzR1lH2T7QwxuXrIp0fgh13aOV2
gqxpVuMi187PR2CpwO6VkgOCaeJsEtFkj07ycR3+2ibKHrGuF5LgbA4L7GOa
CCmRoqDTysQhg7e/U4yN6nYM3AlLLlljwVu4aTBzdGY/Rvdw8X0TfpQ4RO5l
4glXETYfjUrpFWW/5VJHKJFEFkWTxLXCwLOcE1UXcELPSTH1RbzrKj+6Zar4
B7YbKOVNCTJXmhxGtBDF2phscMGC2gUndl7WZ6LNvy4mek8XpOHXkUIH73MR
DlVdfJW8GKn7ZlaBNFBPpgBo4ju1Ng2CZHPUh5NeQEt9EMF7NL2o+zA1bCZ+
JOgRK0UUlPFKmHdp85SUYOo4Ax1fooxq1lWio5Eu1y9HF67uLVETaFD4N55A
/hETBeP7rj+B8U+oUVOMBmv2eSWiKf5vyIWjPbEdzO7d2d65s725fTddUn8B
VQPIS4qCB/LcchjMFchDIiimz+euAIDV1FtOoXci1NYd+N+jB5vZnyUjmkwg
/ClQb2d16nHu/TLafc7M8956uqj/NWkV/MZrG3d3dGsXN47ox1dGo0K/1fis
C9+PZakit7IUS2i/IQV3pFqD94Mn+055nwyqTlpcQmvKtwI8cbuuSLg68NI1
YUvBGf+JsEvh3K+CXZLNvRZ+yToUO7nFgJeU2RyA6YPDL8VJ6hbHNMyHJt2G
SPNZcVLNCgmOOnd+Or0+5YajF7WGRDIfvA7jqL2sDsKqphNCqkYb78gE5L+L
/w4oB48cqGEsIcCkUGHtOSlsdAPkpmA/yEJE1JYXRS+Cz4hAoMTjY1zQBLN2
TiL6uGx97YDJMSo/zLpr1oLVqhATdoygnLReEHn/qSvkyZi5pExz5M+MD0qg
gx4sRQct5IrfUULR0L9VlNCDjaWC7NePFrpCDnbHOK1HPlSUzwOXld0lyN8R
9mOjoR0lSbQqrdgKuTSpSSFmQ6EFv34XwBDcw6shhlIY+CX5y++p7m0KdMNm
VjzHICzMOUcEgDXxyBY6wdPZQwuSVXDWF0bknynVArdAe0LpXjqtrJo6TgK+
YurtIXftJjOgboEdKHw8HofJvvEcBItABTwxqiXsGT22sSwubGvPyn4tKD34
sxaY1WDye6wua3q9tGrMBhAtD8+6BjPijHayz6vZcTkCm4GmQ+llpmxE17Yv
mZe3EyPIPBvgSzhlpbKygaD4uQrgBlVmYWIGJqCQoHoRJohUegNIsVAN/AFW
Ws09RANlcIQ3AS1bQ7DBY+pkQGQRf/+OuBMz8U/pmamldCSw89kE/cgT6RSm
cq59qLpABJ1FEZLwgRVKKFwFLZC8aVZBDHTV4kiCBlaudeFrj/5UxS5S+xRa
4HEVQGuBF5RJxEUuX+n0TUeg0M6MTu0KFng6T6fdgeaDsh0fLrUdBZnKqUUi
0hat8XdzMhr6t2pOPtxYeip/7ebklRqqdIxD+1v43JNfffLJw7BVi2ebd01C
UaThlSXaO9qaxYrJKSuWsH23fJT316HFFGW/yeySaQvozNsZNAUWJaqV0O4t
WTUjAnV9oHe/rcP7k+OtHw3uXg1xLT2MFJhZLAVcF789wHV0mN4NeB0QfCHK
eOEZThoJK576qxgK16naHU9joY0Qr7fNiqBod+GKl3LvzwkrTp3FdwYWFx8O
sDgkfhtXXBg8RjeuWJ+6EVxxTJ0r4orbK/rQYcVp6mnYXcnxHmHFCSb4HV38
W0AXJzbeC+r3DC5mx8s7Y4u7lCVeb017RPSRntZLQYyoCJmSbPSer8tGIYdT
uHgnybwL6pI6yM7z17gZLYzmOcLBmmp2ubEEqkqu5ZsBrAqyNJaqN4gsLVrI
UstCCWTpKvXJEqzZCS9Nfu79wktj9ei6MNMiQE8K/DOJjFxE0wAbmaDcTwcr
jekyrOZjzkG0XQOvSJavKjg5zfCMrDdjr61OpzaCNEGlnwhAmtb+fn0A0mvg
R5cVoItJ92vDjobS82bq3v0cANJwBVcBkBbXBJCGDgEXol3kDQqjlLpvnbxm
kKfYkaVVOu/ZRO8Xum/aEAcauVyIYP2ASvBFqtGhs5VNI3gKftjW7z41bXll
viEIOZ77cQU6YStfhvwatvirNA3r8YGP8UTyvs0TEodK8tSp3eHj1z04Zqfl
ZBJU9etKmB9IIHTltj833e4nGbx7tHJZuAS1nB+J6ZzsPf7OoTx2M0Zs83t4
79cQ3nu0sZLM0E6WVmx8iGG/xDgYwVvn3j4bqwTeusahLbxC9bjVw3V/9sxj
J9qXOOHK49Dzs+Jf2rc7h71r+uPq9IrjyHxSo2D88z3vl/7lOwkDuO//43rj
XGU+7z8s+iiuyXcQe7VXio9+jkjQRb2QErX6Wv7z1kXR7oRkA6Wrt0KSL76S
ROylYVPUF1Lx0FYa0fISRD8hajdvzS/u4K6RObLiy2ahTteuhPJ03oUXVWvm
vByNxq2+8YLMdRngCwHDbgmkI3C3UDRcJqe1pmlrAS6RBwGgKGM/stT4OeJI
QZ+rAER16BJZhq06eitkcHJprSEoKiMpUrwwUz0kTRqmuxjIqHNTpw27pWZk
NiyB+zrGd1vzM8Egw1mI3U2MWZjurU7Sxg2rSZ/i+mtcc6GTix8mwm7pEGtX
XaJkdHV5EaN2YNXWo14mMlYJrbaS/H89sMvQq+YVQBdVWILJcWUFmUFhq6Vc
nrv+aO5h4XZiO56ksi4HFzovqlSzXiKHmkWKo040AmePpoXvtyL2V63Qzr3G
zqpxsrMvgUDh/dfF1c3O99VtNml+UsRmsf0Z7stPbn7+bmn+GizNrc2NLkHz
W7Qki/dhSS4f5/1bOFubIfLzmhZO921jTJslF8bNWzY2/H19u6blpF6O9Psp
7ZpJa4LvYtikQv2rmzZR9WNWP+39GfUASc50kQHU3ov3bglFGsaVrKDCWUG+
UVqZgDcabSjI3mwtF/UnVnEcJVGZMMqQj3P86aNb8K2yMYOLlRLETd7kXSmT
kmnTCuqIijCTUhpmPp0BlwVGYIvjrmQGdph7mHjZNvnubt7tTNb8YKy/ZyGn
d2xeOM8RWBgj4S/U3V3pD47+B7lSEmvVUtyEpa65/Js5IANvDPlIW6v79EX1
urBjh4yCSG8fSaWtUfiJ3V0YxEHG63pejMKKKGQgTGKOpSUoGnk5Kj1kWS3Z
zCICj8gJpdoSXt0XGFqMN26BaRcgjRcAb1c2hZO3zCqmcAuV9Osxhf+LCmKL
VaA0/teUsNBc91qVE2/OaJVK7lrZoh4WlscsA/y6r7eNikjudRdE5Pv0Qkl4
93aWT/s+mRMn1NX4omCZU/eW8rP0R9D1N/nsFNQCubhGc8IgBtY5lcc3ubvV
eSlgiGIkKG6nKukJTJFOhBOsIMhnbHfF/KDSKbe2ApOYNw0HdMzqOlzILobV
03/Pncx+N3nR5N3aSJ2KD9HcvdnyO41JdHyHfMn+dHUjuWOc1iMfrNm8pWZz
KEHf0VhuNXh4xx5dcBWulgapPp5ZeXqKPRaapeltzU9l9N5AXmOUyaY48Lrz
IlS6esja8mI+TTeWLc5/jBqIVAXf/9rrOp9cJjv0XBYyIWy8+bqcRvMIquxQ
B+yzqqqLMFsSQ2Zls6BokEnZ0wRLfC7SsaZL+WPaTn/8sHMaDTR3mnSoyEu/
zeJBsbxKlOpZJfMXP3k/+wre5NOMxHcflQP+c5Xd+SUVCDr0u76Kn+Im/RNd
VnHnFfL2duuu0CXIOyyCE5fOzWSl+rClnC++ZqcO538T+aYt8f/z5ZtGO9FO
ONX9WJxwqk/dSMLpyz3fwvCKyaaJ5Xzo2aZp0ilGX1nl/TexCVjg93TT30K6
aWrnvQTuzDcNnn/XvNPVc0xxWnBK/vUKfipJVeRHGY5GYzxYPO1GJvepOdw+
Z26Oiro/uTaUg4mFxffmt6zkjfr0YoMlLMybbL3iNQy//F/mn5ICh/+xP87u
fJqtOUfcWvLXzqW2ZuWDXbYrCItEQ09V57asB9TYaNmYoRxwrX/0KPmqnOyw
w66hfGXSVYZKncB/QiOzlTWiauW84RY7h2cdvYNK8SE7/rE5v3EU2Ob/ArNH
jYK+QJAS37R+YY5PVfPfOrKu0HUgZqTBbDDbitPd9kIao5dVNC8gC6pq1Id1
7jLfEGrHTkBSAdlxWCANvd5EHXxAMQ47FRwmYoyyKe2sPRAko/mw6QfPR55H
2aD/vre9yTfEV9LJKWgl3NUvAgODjZoXNPCYBJQPzianoKE2ZBg0XK4bFA1N
yVlc/MRTzB/WBeQa2mYo5CoozzkZUD5AowjSyqV64tN36EkRst3VSe5rdHJn
ZwfkXkA8Ugq5gH0xIxgdjan+5nDTlqxbeoLqfpDkB+ujcz9gIhMXVJa8LY5e
VJj8dQFLuwS7a1ZN0LLjiUXdcj2BI/JxXLycIXTOcLCXbUccP2SkIGvDVMWR
1dIE9Kys+XKDdYPUADJzVwN0209SV0HPtJHmjYEB3lSgtoAkkSAFXYy1ZuI6
QXzkQzfKHIkJzYrTfOawjCHYsdZoHVlmisg3ZVjp5FNkj8RaeODgOsJuXezB
4cqzR048XGdyVraEU+PiBYFW41ciUVAfh+emYefn84l6iejEs8k5LUAQbvjq
s6GNUzvrvjQmDnIbb45T+tr7owauW7cxa/sqemqPFrecwPbJ4iIGqZvSuyL0
msH72LDIiuUJAnVhbXvz/2fvzZsb15I70f8d4e/AVz3xXNUhyQApqkplezwi
RXCRCIlYDkh4Jq5BAhJAAASKAMWl3d/9ZZ4FC0lV1e172+6ZeTc6oksSedZc
frmczGbzUvpyKTcNqfm19flr6/aq2Wrb/JHvMfKA4VZusr5kZHH9WZY/VF/3
C6BRQxB/Po8ScE8cJry7Z/7I9zuo4De9qD9v3/7mF/V/Gw/q/6L39McusR89
rD85QVgWeuxpxXX/zLN4xg0Cuv/v2OSovvZf80Y9/wvfqL+bEPH+NZR++pP3
5oIp/uveib9TAu49d/yf/nDidxen8kMP/l+/BFxFxfHDBRKGkTii5m3IM5GW
dyTlCn9dHYn8Hs67Y4f/f6Hzrn5Np747cb/f992JT/1X++5Od/O37ro7f3JC
dAlC+Su67s4QwP/vufu/wXN35uJLcX7quDvz8f90v10mjDUm0XyOZGg9t6I4
XMa9Nu81uv65htaFOn23qN2vqi5a8zJy65mdZOFkPO9iLGtzYYtq/st/FdW5
GjWH45niW40/Nv7bf3PW8wDxyf4ydlImhs4B/6ziHvyHunvwzOV/rO7i0w8k
zYlzkIF33taw8MSdDRd9FGX+4I9Va4RF8aiML30GvPc269N9UqqPk0jFLVj1
Ap4p/nfRYJ2BguP219X08ZN5jhtgF8ujufMnsBwrXPGygJx2f2NdwOMpfltd
QC/gMWKPm0zpvCwOWN7n2QI0Z92IVZ91xUa+aCR8Fpwj+R3nqHhDeKZnncQ+
lV4IIcKYa8tx3Wqr9HcJqupEgwUwD8e/19zn/15dUka3mgj/eKEIT3dXQ5vn
Tv7iyBZmTpBSxrK6lqWP3Fl7QnJRMYqVzM43g+cJt0V6NCeZPEkvI+/Ni0pm
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

-->

</rfc>
